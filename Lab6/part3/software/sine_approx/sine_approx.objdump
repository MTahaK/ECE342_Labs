
sine_approx.elf:     file format elf32-littlenios2
sine_approx.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00011248 memsz 0x00011248 flags r-x
    LOAD off    0x00012268 vaddr 0x00051268 paddr 0x00052df4 align 2**12
         filesz 0x00001b8c memsz 0x00001b8c flags rw-
    LOAD off    0x00014980 vaddr 0x00054980 paddr 0x00054980 align 2**12
         filesz 0x00000000 memsz 0x00000170 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010cd4  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000350  00050f18  00050f18  00011f18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b8c  00051268  00052df4  00012268  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000170  00054980  00054980  00014980  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00054af0  00054af0  00013df4  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013df4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f50  00000000  00000000  00013e18  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023ce5  00000000  00000000  00014d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009538  00000000  00000000  00038a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000bc2a  00000000  00000000  00041f85  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000232c  00000000  00000000  0004dbb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003ba6  00000000  00000000  0004fedc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001a1cd  00000000  00000000  00053a82  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  0006dc50  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001cd0  00000000  00000000  0006dc80  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00072c69  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00072c6c  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00072c78  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00072c79  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  00072c7a  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  00072c85  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  00072c90  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  00072c9b  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004f  00000000  00000000  00072ca6  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     000393cd  00000000  00000000  00072cf5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
00050f18 l    d  .rodata	00000000 .rodata
00051268 l    d  .rwdata	00000000 .rwdata
00054980 l    d  .bss	00000000 .bss
00054af0 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/mtaha/Desktop/Uni/Year_3_2021_2022/ECE342_Labs/Lab6/part3/software/sine_approx_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 sine_approx.c
000402d8 l     F .text	00000048 FLOAT_TO_FIXED
00040320 l     F .text	00000050 FIXED_TO_FLOAT
00040370 l     F .text	00000038 FIXED_MULT
0005498c l     O .bss	00000004 context
00040530 l     F .text	00000060 pre_measurement
00040590 l     F .text	00000040 post_measurement
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
000510ae l     O .rodata	00000010 zeroes.4404
000452e8 l     F .text	000000bc __sbprintf
000510be l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000454f8 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00047028 l     F .text	00000008 __fp_unlock
0004703c l     F .text	0000019c __sinit.part.1
000471d8 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00051308 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0005174c l     O .rwdata	00000020 lc_ctype_charset
0005172c l     O .rwdata	00000020 lc_message_charset
0005176c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000510f0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00049af0 l     F .text	000000fc __sprint_r.part.0
00051224 l     O .rodata	00000010 blanks.4348
00051214 l     O .rodata	00000010 zeroes.4349
0004b07c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004e6d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004e7e4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004e810 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004e8fc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004e9dc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004eac8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004ec9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00052de4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0004eee8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004f01c l     F .text	00000034 alt_dev_reg
00051d54 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004f304 l     F .text	0000020c altera_avalon_jtag_uart_irq
0004f510 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004fe4c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000502c0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00050400 l     F .text	0000003c alt_get_errno
0005043c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000549c4 g     O .bss	00000004 alt_instruction_exception_handler
00049600 g     F .text	00000074 _mprec_log10
000496ec g     F .text	0000008c __any_on
0004bad4 g     F .text	00000054 _isatty_r
000510fc g     O .rodata	00000028 __mprec_tinytens
0004ebd8 g     F .text	0000007c alt_main
000549f0 g     O .bss	00000100 alt_irq
0004bb28 g     F .text	00000060 _lseek_r
00052df4 g       *ABS*	00000000 __flash_rwdata_start
0004d980 g     F .text	00000088 .hidden __eqdf2
00054af0 g       *ABS*	00000000 __alt_heap_start
00043098 g     F .text	0000003c printf
0004c400 g     F .text	0000009c _wcrtomb_r
00049918 g     F .text	0000005c __sseek
00047378 g     F .text	00000010 __sinit
0004fcb4 g     F .text	00000024 alt_get_cpu_freq
0004c2a8 g     F .text	00000140 __swbuf_r
00047984 g     F .text	0000007c _setlocale_r
000471e0 g     F .text	00000068 __sfmoreglue
0004ec78 g     F .text	00000024 __malloc_unlock
00041068 g     F .text	00000440 .hidden __divsf3
0004bb88 g     F .text	0000015c memmove
00047360 g     F .text	00000018 _cleanup
0004877c g     F .text	000000a8 _Balloc
00054980 g     O .bss	00000004 Q_M
0004da08 g     F .text	000000dc .hidden __gtdf2
000507f8 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004b5bc g     F .text	0000005c _fstat_r
000549a8 g     O .bss	00000004 errno
00049894 g     F .text	00000008 __seofread
000549b0 g     O .bss	00000004 alt_argv
0005adb4 g       *ABS*	00000000 _gp
000418a4 g     F .text	000004e4 .hidden __subsf3
00051bd4 g     O .rwdata	00000180 alt_fd_list
0005081c g     F .text	00000090 alt_find_dev
0004850c g     F .text	00000148 memcpy
00047030 g     F .text	0000000c _cleanup_r
0004e554 g     F .text	000000dc .hidden __floatsidf
00050384 g     F .text	0000007c alt_io_redirect
0004dae4 g     F .text	000000f4 .hidden __ltdf2
00040290 g     F .text	00000048 SET_Q_FORMAT
00050f18 g       *ABS*	00000000 __DTOR_END__
00050ae8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00049778 g     F .text	00000074 __fpclassifyd
0004955c g     F .text	000000a4 __ratio
0004b060 g     F .text	0000001c __vfiprintf_internal
0004f708 g     F .text	0000021c altera_avalon_jtag_uart_read
00043068 g     F .text	00000030 _printf_r
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00040ae4 g     F .text	00000064 .hidden __udivsi3
0004e938 g     F .text	000000a4 isatty
0005114c g     O .rodata	000000c8 __mprec_tens
00047a00 g     F .text	0000000c __locale_charset
00050a58 g     F .text	00000090 alt_icache_flush
000549a4 g     O .bss	00000004 __malloc_top_pad
0004fc50 g     F .text	00000040 perf_get_num_starts
00052dbc g     O .rwdata	00000004 __mb_cur_max
00047a30 g     F .text	0000000c _localeconv_r
0004b618 g     F .text	000004bc __sfvwrite_r
00048b88 g     F .text	0000003c __i2b
00054988 g     O .bss	00000004 F_ONE
000497ec g     F .text	00000054 _sbrk_r
0004bce4 g     F .text	00000060 _read_r
00052ddc g     O .rwdata	00000004 alt_max_fd
0004b2b0 g     F .text	000000f0 _fclose_r
00046ff8 g     F .text	00000030 fflush
000549a0 g     O .bss	00000004 __malloc_max_sbrked_mem
00042d4c g     F .text	00000110 .hidden __extendsfdf2
00041d88 g     F .text	000008ac .hidden __adddf3
00049304 g     F .text	0000010c __b2d
0004cb60 g     F .text	00000538 .hidden __umoddi3
0004eb04 g     F .text	000000d4 lseek
00052db4 g     O .rwdata	00000004 _global_impure_ptr
0004bd44 g     F .text	00000564 _realloc_r
00054af0 g       *ABS*	00000000 __bss_end
000501d0 g     F .text	000000f0 alt_iic_isr_register
000506f0 g     F .text	00000108 alt_tick
0004c5e8 g     F .text	00000578 .hidden __udivdi3
0004b518 g     F .text	00000024 _fputwc_r
00051124 g     O .rodata	00000028 __mprec_bigtens
0004896c g     F .text	00000104 __s2b
0004e630 g     F .text	000000a8 .hidden __floatunsidf
00049044 g     F .text	00000060 __mcmp
00047398 g     F .text	00000018 __fp_lock_all
00050184 g     F .text	0000004c alt_ic_irq_enabled
00050654 g     F .text	0000009c alt_alarm_stop
000549b8 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
00051bac g     O .rwdata	00000028 alt_dev_null
0004fe04 g     F .text	00000048 alt_dcache_flush_all
00048a70 g     F .text	00000068 __hi0bits
0004e4d4 g     F .text	00000080 .hidden __fixdfsi
00052df4 g       *ABS*	00000000 __ram_rwdata_end
00052dd4 g     O .rwdata	00000008 alt_dev_list
0004ef24 g     F .text	000000f8 write
00051268 g       *ABS*	00000000 __ram_rodata_end
0004e84c g     F .text	000000b0 fstat
00054984 g     O .bss	00000004 Q_N
0004dae4 g     F .text	000000f4 .hidden __ledf2
00048dbc g     F .text	00000140 __pow5mult
00049c04 g     F .text	0000145c ___vfiprintf_internal_r
00054998 g     O .bss	00000004 __nlocale_changed
00040b48 g     F .text	00000058 .hidden __umodsi3
00054af0 g       *ABS*	00000000 end
0004f244 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00050f18 g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
00043004 g     F .text	00000064 .hidden __clzsi2
0004f924 g     F .text	00000224 altera_avalon_jtag_uart_write
00047388 g     F .text	00000004 __sfp_lock_acquire
00048428 g     F .text	000000e4 memchr
000430d4 g     F .text	000021f8 ___vfprintf_internal_r
000474ec g     F .text	00000310 _free_r
00047a0c g     F .text	00000010 __locale_mb_cur_max
00050d64 g     F .text	00000180 __call_exitprocs
00054994 g     O .bss	00000004 __mlocale_changed
00052dc0 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
000549bc g     O .bss	00000004 _alt_tick_rate
00048efc g     F .text	00000148 __lshift
000549c0 g     O .bss	00000004 _alt_nticks
0004ecd8 g     F .text	000000fc read
0004f088 g     F .text	00000058 alt_sys_init
00050c4c g     F .text	00000118 __register_exitproc
00048bc4 g     F .text	000001f8 __multiply
0004f5b0 g     F .text	00000068 altera_avalon_jtag_uart_close
00051268 g       *ABS*	00000000 __ram_rwdata_start
00050f18 g       *ABS*	00000000 __ram_rodata_start
000549c8 g     O .bss	00000028 __malloc_current_mallinfo
00049410 g     F .text	0000014c __d2b
0004f0e0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000509b4 g     F .text	000000a4 alt_get_fd
0004b198 g     F .text	00000054 _close_r
0004fb48 g     F .text	000000bc perf_get_section_time
00050bd0 g     F .text	0000007c memcmp
0004f1a0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00054af0 g       *ABS*	00000000 __alt_stack_base
0004f1f0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000453a4 g     F .text	00000154 __swsetup_r
0004d098 g     F .text	000008e8 .hidden __divdf3
00047248 g     F .text	00000118 __sfp
00049674 g     F .text	00000078 __copybits
0004fc04 g     F .text	0000004c perf_get_total_time
000517a4 g     O .rwdata	00000408 __malloc_av_
00047394 g     F .text	00000004 __sinit_lock_release
00042634 g     F .text	00000718 .hidden __muldf3
00049840 g     F .text	00000054 __sread
000508ac g     F .text	00000108 alt_find_file
0004fe88 g     F .text	000000a4 alt_dev_llist_insert
0004ec54 g     F .text	00000024 __malloc_lock
0004ee38 g     F .text	000000b0 sbrk
00046f9c g     F .text	0000005c _fflush_r
0004b1ec g     F .text	000000c4 _calloc_r
00054980 g       *ABS*	00000000 __bss_start
00048654 g     F .text	00000128 memset
000405d0 g     F .text	0000041c main
000549b4 g     O .bss	00000004 alt_envp
0005499c g     O .bss	00000004 __malloc_max_total_mem
0004f140 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004c3e8 g     F .text	00000018 __swbuf
00049974 g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
0004b3a0 g     F .text	00000014 fclose
00042e5c g     F .text	000001a8 .hidden __truncdfsf2
000456f8 g     F .text	00001688 _dtoa_r
00047c1c g     F .text	0000080c _malloc_r
0004c55c g     F .text	00000030 __ascii_wctomb
00052de0 g     O .rwdata	00000004 alt_errno
000477fc g     F .text	000000c4 _fwalk
000409ec g     F .text	00000084 .hidden __divsi3
000473c8 g     F .text	00000124 _malloc_trim_r
00050f18 g       *ABS*	00000000 __CTOR_END__
000414a8 g     F .text	000003fc .hidden __mulsf3
0004997c g     F .text	000000dc strcmp
00050f18 g       *ABS*	00000000 __flash_rodata_start
00050f18 g       *ABS*	00000000 __DTOR_LIST__
0004d980 g     F .text	00000088 .hidden __nedf2
0004f050 g     F .text	00000038 alt_irq_init
0004edd4 g     F .text	00000064 alt_release_fd
00050f6a g     O .rodata	00000100 .hidden __clz_tab
00054990 g     O .bss	00000004 _PathLocale
00050b84 g     F .text	00000014 atexit
0004b138 g     F .text	00000060 _write_r
00047a3c g     F .text	00000018 setlocale
00052db8 g     O .rwdata	00000004 _impure_ptr
000549ac g     O .bss	00000004 alt_argc
00046d80 g     F .text	0000021c __sflush_r
0004ff8c g     F .text	00000060 _do_dtors
00047a28 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
000492a0 g     F .text	00000064 __ulp
000473b0 g     F .text	00000018 __fp_unlock_all
00052dcc g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00047a54 g     F .text	0000000c localeconv
00050020 g     F .text	00000050 alt_ic_isr_register
00052df4 g       *ABS*	00000000 _edata
000403a8 g     F .text	00000188 EMA_FLOAT
00054af0 g       *ABS*	00000000 _end
0004b3b4 g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
0004f618 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
000500f8 g     F .text	0000008c alt_ic_irq_disable
0004989c g     F .text	0000007c __swrite
00052dc4 g     O .rwdata	00000004 __malloc_trim_threshold
0004fc90 g     F .text	00000024 alt_get_performance_counter_base
00047a1c g     F .text	0000000c __locale_msgcharset
00051268 g     O .rwdata	000000a0 datasets
00050b98 g     F .text	00000038 exit
000478c0 g     F .text	000000c4 _fwalk_reent
000490a4 g     F .text	000001fc __mdiff
00040a70 g     F .text	00000074 .hidden __modsi3
00080000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004738c g     F .text	00000004 __sfp_lock_release
00050ee4 g     F .text	00000034 _exit
0004fcd8 g     F .text	0000012c alt_alarm_start
00047a60 g     F .text	000001bc __smakebuf_r
00049a58 g     F .text	00000098 strlen
00050500 g     F .text	00000154 open
0004da08 g     F .text	000000dc .hidden __gedf2
00052dc8 g     O .rwdata	00000004 __wctomb
00049bec g     F .text	00000018 __sprint_r
0004ffec g     F .text	00000034 alt_icache_flush_all
00052de8 g     O .rwdata	00000004 alt_priority_mask
00050070 g     F .text	00000088 alt_ic_irq_enable
000452cc g     F .text	0000001c __vfprintf_internal
0004c58c g     F .text	0000005c _wctomb_r
0004dbd8 g     F .text	000008fc .hidden __subdf3
00048ad8 g     F .text	000000b0 __lo0bits
00052dec g     O .rwdata	00000008 alt_alarm_list
0004ff2c g     F .text	00000060 _do_ctors
0004c49c g     F .text	000000c0 wcrtomb
0004e714 g     F .text	000000d0 close
00040ba0 g     F .text	000004c8 .hidden __addsf3
0004ea44 g     F .text	00000084 alt_load
0004b53c g     F .text	00000080 fputwc
00047390 g     F .text	00000004 __sinit_lock_acquire
0004884c g     F .text	00000120 __multadd
00048824 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffc0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	10927c04 	addi	r2,r2,18928
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	10927c04 	addi	r2,r2,18928
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffc012c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffc0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a70417 	ldw	r2,-25584(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a70417 	ldw	r2,-25584(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_data_end+0xfffc0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6ab6d14 	ori	gp,gp,44468
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	10926014 	ori	r2,r2,18816

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18d2bc14 	ori	r3,r3,19184

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_data_end+0xfffc0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	004ea440 	call	4ea44 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	004ebd80 	call	4ebd8 <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_data_end+0xfffc028c>

00040290 <SET_Q_FORMAT>:

int Q_M = 0;
int Q_N = 0;
int F_ONE = 0;

void SET_Q_FORMAT(int M, int N){
   40290:	defffd04 	addi	sp,sp,-12
   40294:	df000215 	stw	fp,8(sp)
   40298:	df000204 	addi	fp,sp,8
   4029c:	e13ffe15 	stw	r4,-8(fp)
   402a0:	e17fff15 	stw	r5,-4(fp)
	Q_M = M;
   402a4:	e0bffe17 	ldw	r2,-8(fp)
   402a8:	d0a6f315 	stw	r2,-25652(gp)
	Q_N = N;
   402ac:	e0bfff17 	ldw	r2,-4(fp)
   402b0:	d0a6f415 	stw	r2,-25648(gp)
	F_ONE = 1 << N;
   402b4:	00c00044 	movi	r3,1
   402b8:	e0bfff17 	ldw	r2,-4(fp)
   402bc:	1884983a 	sll	r2,r3,r2
   402c0:	d0a6f515 	stw	r2,-25644(gp)
}
   402c4:	0001883a 	nop
   402c8:	e037883a 	mov	sp,fp
   402cc:	df000017 	ldw	fp,0(sp)
   402d0:	dec00104 	addi	sp,sp,4
   402d4:	f800283a 	ret

000402d8 <FLOAT_TO_FIXED>:

static inline int FLOAT_TO_FIXED(float f){
   402d8:	defffd04 	addi	sp,sp,-12
   402dc:	dfc00215 	stw	ra,8(sp)
   402e0:	df000115 	stw	fp,4(sp)
   402e4:	df000104 	addi	fp,sp,4
   402e8:	e13fff15 	stw	r4,-4(fp)
	return (fixed)(f * F_ONE);
   402ec:	d0a6f517 	ldw	r2,-25644(gp)
   402f0:	1005feb2 	custom	250,r2,r2,zero
   402f4:	e17fff17 	ldw	r5,-4(fp)
   402f8:	1009883a 	mov	r4,r2
   402fc:	00414a80 	call	414a8 <__mulsf3>
   40300:	1007883a 	mov	r3,r2
   40304:	1805883a 	mov	r2,r3
   40308:	1005fe72 	custom	249,r2,r2,zero
}
   4030c:	e037883a 	mov	sp,fp
   40310:	dfc00117 	ldw	ra,4(sp)
   40314:	df000017 	ldw	fp,0(sp)
   40318:	dec00204 	addi	sp,sp,8
   4031c:	f800283a 	ret

00040320 <FIXED_TO_FLOAT>:

static inline float FIXED_TO_FLOAT(fixed f){
   40320:	defffd04 	addi	sp,sp,-12
   40324:	dfc00215 	stw	ra,8(sp)
   40328:	df000115 	stw	fp,4(sp)
   4032c:	df000104 	addi	fp,sp,4
   40330:	e13fff15 	stw	r4,-4(fp)
	return (float)(f)/F_ONE;
   40334:	e0bfff17 	ldw	r2,-4(fp)
   40338:	1007feb2 	custom	250,r3,r2,zero
   4033c:	d0a6f517 	ldw	r2,-25644(gp)
   40340:	1005feb2 	custom	250,r2,r2,zero
   40344:	100b883a 	mov	r5,r2
   40348:	1809883a 	mov	r4,r3
   4034c:	00410680 	call	41068 <__divsf3>
   40350:	1009883a 	mov	r4,r2
   40354:	2007883a 	mov	r3,r4
   40358:	1805883a 	mov	r2,r3
}
   4035c:	e037883a 	mov	sp,fp
   40360:	dfc00117 	ldw	ra,4(sp)
   40364:	df000017 	ldw	fp,0(sp)
   40368:	dec00204 	addi	sp,sp,8
   4036c:	f800283a 	ret

00040370 <FIXED_MULT>:

static inline fixed FIXED_MULT(fixed op1, fixed op2){
   40370:	defffd04 	addi	sp,sp,-12
   40374:	df000215 	stw	fp,8(sp)
   40378:	df000204 	addi	fp,sp,8
   4037c:	e13ffe15 	stw	r4,-8(fp)
   40380:	e17fff15 	stw	r5,-4(fp)
	return (op1 * op2) >> Q_N;
   40384:	e0fffe17 	ldw	r3,-8(fp)
   40388:	e0bfff17 	ldw	r2,-4(fp)
   4038c:	1887383a 	mul	r3,r3,r2
   40390:	d0a6f417 	ldw	r2,-25648(gp)
   40394:	1885d83a 	sra	r2,r3,r2
}
   40398:	e037883a 	mov	sp,fp
   4039c:	df000017 	ldw	fp,0(sp)
   403a0:	dec00104 	addi	sp,sp,4
   403a4:	f800283a 	ret

000403a8 <EMA_FLOAT>:
void EMA_FLOAT(float data[10], float out[10]){
   403a8:	defff804 	addi	sp,sp,-32
   403ac:	dfc00715 	stw	ra,28(sp)
   403b0:	df000615 	stw	fp,24(sp)
   403b4:	dc800515 	stw	r18,20(sp)
   403b8:	dc400415 	stw	r17,16(sp)
   403bc:	dc000315 	stw	r16,12(sp)
   403c0:	df000604 	addi	fp,sp,24
   403c4:	e13ffb15 	stw	r4,-20(fp)
   403c8:	e17ffc15 	stw	r5,-16(fp)
	out[0] = data[0];
   403cc:	e0bffb17 	ldw	r2,-20(fp)
   403d0:	10c00017 	ldw	r3,0(r2)
   403d4:	e0bffc17 	ldw	r2,-16(fp)
   403d8:	10c00015 	stw	r3,0(r2)
	for(int i = 1; i < 10; i++){
   403dc:	00800044 	movi	r2,1
   403e0:	e0bffa15 	stw	r2,-24(fp)
   403e4:	00004606 	br	40500 <EMA_FLOAT+0x158>
		out[i] = (0.1*data[i]) + (1-0.1)*data[i-1];
   403e8:	e0bffa17 	ldw	r2,-24(fp)
   403ec:	1085883a 	add	r2,r2,r2
   403f0:	1085883a 	add	r2,r2,r2
   403f4:	1007883a 	mov	r3,r2
   403f8:	e0bffc17 	ldw	r2,-16(fp)
   403fc:	10e5883a 	add	r18,r2,r3
   40400:	e0bffa17 	ldw	r2,-24(fp)
   40404:	1085883a 	add	r2,r2,r2
   40408:	1085883a 	add	r2,r2,r2
   4040c:	1007883a 	mov	r3,r2
   40410:	e0bffb17 	ldw	r2,-20(fp)
   40414:	10c5883a 	add	r2,r2,r3
   40418:	10c00017 	ldw	r3,0(r2)
   4041c:	1809883a 	mov	r4,r3
   40420:	0042d4c0 	call	42d4c <__extendsfdf2>
   40424:	1011883a 	mov	r8,r2
   40428:	1813883a 	mov	r9,r3
   4042c:	01a666b4 	movhi	r6,39322
   40430:	31a66684 	addi	r6,r6,-26214
   40434:	01cfeeb4 	movhi	r7,16314
   40438:	39e66644 	addi	r7,r7,-26215
   4043c:	4009883a 	mov	r4,r8
   40440:	480b883a 	mov	r5,r9
   40444:	00426340 	call	42634 <__muldf3>
   40448:	1009883a 	mov	r4,r2
   4044c:	180b883a 	mov	r5,r3
   40450:	2021883a 	mov	r16,r4
   40454:	2823883a 	mov	r17,r5
   40458:	e0fffa17 	ldw	r3,-24(fp)
   4045c:	00900034 	movhi	r2,16384
   40460:	10bfffc4 	addi	r2,r2,-1
   40464:	1885883a 	add	r2,r3,r2
   40468:	1085883a 	add	r2,r2,r2
   4046c:	1085883a 	add	r2,r2,r2
   40470:	1007883a 	mov	r3,r2
   40474:	e0bffb17 	ldw	r2,-20(fp)
   40478:	10c5883a 	add	r2,r2,r3
   4047c:	10c00017 	ldw	r3,0(r2)
   40480:	1809883a 	mov	r4,r3
   40484:	0042d4c0 	call	42d4c <__extendsfdf2>
   40488:	1011883a 	mov	r8,r2
   4048c:	1813883a 	mov	r9,r3
   40490:	01b33374 	movhi	r6,52429
   40494:	31b33344 	addi	r6,r6,-13107
   40498:	01cffb74 	movhi	r7,16365
   4049c:	39f33304 	addi	r7,r7,-13108
   404a0:	4009883a 	mov	r4,r8
   404a4:	480b883a 	mov	r5,r9
   404a8:	00426340 	call	42634 <__muldf3>
   404ac:	1009883a 	mov	r4,r2
   404b0:	180b883a 	mov	r5,r3
   404b4:	2005883a 	mov	r2,r4
   404b8:	2807883a 	mov	r3,r5
   404bc:	100d883a 	mov	r6,r2
   404c0:	180f883a 	mov	r7,r3
   404c4:	8009883a 	mov	r4,r16
   404c8:	880b883a 	mov	r5,r17
   404cc:	0041d880 	call	41d88 <__adddf3>
   404d0:	1009883a 	mov	r4,r2
   404d4:	180b883a 	mov	r5,r3
   404d8:	2005883a 	mov	r2,r4
   404dc:	2807883a 	mov	r3,r5
   404e0:	1009883a 	mov	r4,r2
   404e4:	180b883a 	mov	r5,r3
   404e8:	0042e5c0 	call	42e5c <__truncdfsf2>
   404ec:	1007883a 	mov	r3,r2
   404f0:	90c00015 	stw	r3,0(r18)
static inline fixed FIXED_MULT(fixed op1, fixed op2){
	return (op1 * op2) >> Q_N;
}
void EMA_FLOAT(float data[10], float out[10]){
	out[0] = data[0];
	for(int i = 1; i < 10; i++){
   404f4:	e0bffa17 	ldw	r2,-24(fp)
   404f8:	10800044 	addi	r2,r2,1
   404fc:	e0bffa15 	stw	r2,-24(fp)
   40500:	e0bffa17 	ldw	r2,-24(fp)
   40504:	10800290 	cmplti	r2,r2,10
   40508:	103fb71e 	bne	r2,zero,403e8 <__alt_data_end+0xfffc03e8>
		out[i] = (0.1*data[i]) + (1-0.1)*data[i-1];
	}
}
   4050c:	0001883a 	nop
   40510:	e6fffd04 	addi	sp,fp,-12
   40514:	dfc00417 	ldw	ra,16(sp)
   40518:	df000317 	ldw	fp,12(sp)
   4051c:	dc800217 	ldw	r18,8(sp)
   40520:	dc400117 	ldw	r17,4(sp)
   40524:	dc000017 	ldw	r16,0(sp)
   40528:	dec00504 	addi	sp,sp,20
   4052c:	f800283a 	ret

00040530 <pre_measurement>:
};


static alt_irq_context context; /* Use when disabling interrupts. */

static void pre_measurement(void){
   40530:	defffe04 	addi	sp,sp,-8
   40534:	df000115 	stw	fp,4(sp)
   40538:	df000104 	addi	fp,sp,4
  PERF_RESET (PERFORMANCE_COUNTER_0_BASE);
   4053c:	00c00044 	movi	r3,1
   40540:	00800234 	movhi	r2,8
   40544:	10841004 	addi	r2,r2,4160
   40548:	10c00035 	stwio	r3,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4054c:	0005303a 	rdctl	r2,status
   40550:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   40554:	e0ffff17 	ldw	r3,-4(fp)
   40558:	00bfff84 	movi	r2,-2
   4055c:	1884703a 	and	r2,r3,r2
   40560:	1001703a 	wrctl	status,r2
  
  return context;
   40564:	e0bfff17 	ldw	r2,-4(fp)
  context = alt_irq_disable_all();
   40568:	d0a6f615 	stw	r2,-25640(gp)
  PERF_START_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   4056c:	0007883a 	mov	r3,zero
   40570:	00800234 	movhi	r2,8
   40574:	10841104 	addi	r2,r2,4164
   40578:	10c00035 	stwio	r3,0(r2)
}
   4057c:	0001883a 	nop
   40580:	e037883a 	mov	sp,fp
   40584:	df000017 	ldw	fp,0(sp)
   40588:	dec00104 	addi	sp,sp,4
   4058c:	f800283a 	ret

00040590 <post_measurement>:

static void post_measurement(void){
   40590:	defffe04 	addi	sp,sp,-8
   40594:	df000115 	stw	fp,4(sp)
   40598:	df000104 	addi	fp,sp,4
	alt_irq_enable_all(context);
   4059c:	d0a6f617 	ldw	r2,-25640(gp)
   405a0:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   405a4:	e0bfff17 	ldw	r2,-4(fp)
   405a8:	1001703a 	wrctl	status,r2
	PERF_STOP_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   405ac:	0007883a 	mov	r3,zero
   405b0:	00800234 	movhi	r2,8
   405b4:	10841004 	addi	r2,r2,4160
   405b8:	10c00035 	stwio	r3,0(r2)
}
   405bc:	0001883a 	nop
   405c0:	e037883a 	mov	sp,fp
   405c4:	df000017 	ldw	fp,0(sp)
   405c8:	dec00104 	addi	sp,sp,4
   405cc:	f800283a 	ret

000405d0 <main>:
 #pragma GCC target("no-custom-fmuls")
 #pragma GCC target("no-custom-fdivs")

#define NUM_ITEMS 100

int main(void){
   405d0:	deffc604 	addi	sp,sp,-232
   405d4:	dfc03915 	stw	ra,228(sp)
   405d8:	df003815 	stw	fp,224(sp)
   405dc:	dc403715 	stw	r17,220(sp)
   405e0:	dc003615 	stw	r16,216(sp)
   405e4:	df003804 	addi	fp,sp,224

	SET_Q_FORMAT(24, 31-24);
   405e8:	014001c4 	movi	r5,7
   405ec:	01000604 	movi	r4,24
   405f0:	00402900 	call	40290 <SET_Q_FORMAT>
	float d1[10];
	for(int i = 0; i < 10; i++){
   405f4:	e03fc915 	stw	zero,-220(fp)
   405f8:	00001206 	br	40644 <main+0x74>
		d1[i] = datasets[2][i];
   405fc:	00800174 	movhi	r2,5
   40600:	10849a04 	addi	r2,r2,4712
   40604:	e0ffc917 	ldw	r3,-220(fp)
   40608:	18c00504 	addi	r3,r3,20
   4060c:	18c7883a 	add	r3,r3,r3
   40610:	18c7883a 	add	r3,r3,r3
   40614:	10c5883a 	add	r2,r2,r3
   40618:	10c00017 	ldw	r3,0(r2)
   4061c:	e0bfc917 	ldw	r2,-220(fp)
   40620:	1085883a 	add	r2,r2,r2
   40624:	1085883a 	add	r2,r2,r2
   40628:	e13fc904 	addi	r4,fp,-220
   4062c:	2085883a 	add	r2,r4,r2
   40630:	10800d04 	addi	r2,r2,52
   40634:	10c00015 	stw	r3,0(r2)

int main(void){

	SET_Q_FORMAT(24, 31-24);
	float d1[10];
	for(int i = 0; i < 10; i++){
   40638:	e0bfc917 	ldw	r2,-220(fp)
   4063c:	10800044 	addi	r2,r2,1
   40640:	e0bfc915 	stw	r2,-220(fp)
   40644:	e0bfc917 	ldw	r2,-220(fp)
   40648:	10800290 	cmplti	r2,r2,10
   4064c:	103feb1e 	bne	r2,zero,405fc <__alt_data_end+0xfffc05fc>
		d1[i] = datasets[2][i];
	}
	fixed d2[10];
	for(int i = 0; i < 10; i++){
   40650:	e03fca15 	stw	zero,-216(fp)
   40654:	00001506 	br	406ac <main+0xdc>
		d2[i] = FLOAT_TO_FIXED(datasets[2][i]);
   40658:	00800174 	movhi	r2,5
   4065c:	10849a04 	addi	r2,r2,4712
   40660:	e0ffca17 	ldw	r3,-216(fp)
   40664:	18c00504 	addi	r3,r3,20
   40668:	18c7883a 	add	r3,r3,r3
   4066c:	18c7883a 	add	r3,r3,r3
   40670:	10c5883a 	add	r2,r2,r3
   40674:	10c00017 	ldw	r3,0(r2)
   40678:	1809883a 	mov	r4,r3
   4067c:	00402d80 	call	402d8 <FLOAT_TO_FIXED>
   40680:	1007883a 	mov	r3,r2
   40684:	e0bfca17 	ldw	r2,-216(fp)
   40688:	1085883a 	add	r2,r2,r2
   4068c:	1085883a 	add	r2,r2,r2
   40690:	e13fc904 	addi	r4,fp,-220
   40694:	2085883a 	add	r2,r4,r2
   40698:	10801704 	addi	r2,r2,92
   4069c:	10c00015 	stw	r3,0(r2)
	float d1[10];
	for(int i = 0; i < 10; i++){
		d1[i] = datasets[2][i];
	}
	fixed d2[10];
	for(int i = 0; i < 10; i++){
   406a0:	e0bfca17 	ldw	r2,-216(fp)
   406a4:	10800044 	addi	r2,r2,1
   406a8:	e0bfca15 	stw	r2,-216(fp)
   406ac:	e0bfca17 	ldw	r2,-216(fp)
   406b0:	10800290 	cmplti	r2,r2,10
   406b4:	103fe81e 	bne	r2,zero,40658 <__alt_data_end+0xfffc0658>
		d2[i] = FLOAT_TO_FIXED(datasets[2][i]);
	}
	float ema1[10];
	fixed emafi[10];
	fixed alpha = FLOAT_TO_FIXED(0.1);
   406b8:	010f7374 	movhi	r4,15821
   406bc:	21333344 	addi	r4,r4,-13107
   406c0:	00402d80 	call	402d8 <FLOAT_TO_FIXED>
   406c4:	e0bfd115 	stw	r2,-188(fp)
	fixed diff = FLOAT_TO_FIXED(0.9);
   406c8:	010fd9b4 	movhi	r4,16230
   406cc:	21199984 	addi	r4,r4,26214
   406d0:	00402d80 	call	402d8 <FLOAT_TO_FIXED>
   406d4:	e0bfd215 	stw	r2,-184(fp)

	// FIXED POINT

	// pre_measurement();

	for (int j=0; j<NUM_ITEMS; j++){
   406d8:	e03fcb15 	stw	zero,-212(fp)
   406dc:	00002c06 	br	40790 <main+0x1c0>
		// PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);

		emafi[0] = d2[0];
   406e0:	e0bfe017 	ldw	r2,-128(fp)
   406e4:	e0bff415 	stw	r2,-48(fp)
		for(int i = 1; i < 10; i++){
   406e8:	00800044 	movi	r2,1
   406ec:	e0bfcc15 	stw	r2,-208(fp)
   406f0:	00002106 	br	40778 <main+0x1a8>
			emafi[i] = FIXED_MULT(alpha, d2[i]) + FIXED_MULT(diff, emafi[i-1]);
   406f4:	e0bfcc17 	ldw	r2,-208(fp)
   406f8:	1085883a 	add	r2,r2,r2
   406fc:	1085883a 	add	r2,r2,r2
   40700:	e0ffc904 	addi	r3,fp,-220
   40704:	1885883a 	add	r2,r3,r2
   40708:	10801704 	addi	r2,r2,92
   4070c:	10800017 	ldw	r2,0(r2)
   40710:	100b883a 	mov	r5,r2
   40714:	e13fd117 	ldw	r4,-188(fp)
   40718:	00403700 	call	40370 <FIXED_MULT>
   4071c:	1021883a 	mov	r16,r2
   40720:	e0bfcc17 	ldw	r2,-208(fp)
   40724:	10bfffc4 	addi	r2,r2,-1
   40728:	1085883a 	add	r2,r2,r2
   4072c:	1085883a 	add	r2,r2,r2
   40730:	e13fc904 	addi	r4,fp,-220
   40734:	2085883a 	add	r2,r4,r2
   40738:	10802b04 	addi	r2,r2,172
   4073c:	10800017 	ldw	r2,0(r2)
   40740:	100b883a 	mov	r5,r2
   40744:	e13fd217 	ldw	r4,-184(fp)
   40748:	00403700 	call	40370 <FIXED_MULT>
   4074c:	8087883a 	add	r3,r16,r2
   40750:	e0bfcc17 	ldw	r2,-208(fp)
   40754:	1085883a 	add	r2,r2,r2
   40758:	1085883a 	add	r2,r2,r2
   4075c:	e13fc904 	addi	r4,fp,-220
   40760:	2085883a 	add	r2,r4,r2
   40764:	10802b04 	addi	r2,r2,172
   40768:	10c00015 	stw	r3,0(r2)

	for (int j=0; j<NUM_ITEMS; j++){
		// PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);

		emafi[0] = d2[0];
		for(int i = 1; i < 10; i++){
   4076c:	e0bfcc17 	ldw	r2,-208(fp)
   40770:	10800044 	addi	r2,r2,1
   40774:	e0bfcc15 	stw	r2,-208(fp)
   40778:	e0bfcc17 	ldw	r2,-208(fp)
   4077c:	10800290 	cmplti	r2,r2,10
   40780:	103fdc1e 	bne	r2,zero,406f4 <__alt_data_end+0xfffc06f4>

	// FIXED POINT

	// pre_measurement();

	for (int j=0; j<NUM_ITEMS; j++){
   40784:	e0bfcb17 	ldw	r2,-212(fp)
   40788:	10800044 	addi	r2,r2,1
   4078c:	e0bfcb15 	stw	r2,-212(fp)
   40790:	e0bfcb17 	ldw	r2,-212(fp)
   40794:	10801910 	cmplti	r2,r2,100
   40798:	103fd11e 	bne	r2,zero,406e0 <__alt_data_end+0xfffc06e0>

	// post_measurement();

	// FLOATING POINT
//
	pre_measurement();
   4079c:	00405300 	call	40530 <pre_measurement>

	for (int j=0; j<NUM_ITEMS; j++){
   407a0:	e03fcd15 	stw	zero,-204(fp)
   407a4:	00003d06 	br	4089c <main+0x2cc>
		PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   407a8:	0007883a 	mov	r3,zero
   407ac:	00800234 	movhi	r2,8
   407b0:	10841504 	addi	r2,r2,4180
   407b4:	10c00035 	stwio	r3,0(r2)

		ema1[0] = d1[0];
   407b8:	e0bfd617 	ldw	r2,-168(fp)
   407bc:	e0bfea15 	stw	r2,-88(fp)
		for(int i = 1; i < 10; i++){
   407c0:	00800044 	movi	r2,1
   407c4:	e0bfce15 	stw	r2,-200(fp)
   407c8:	00002a06 	br	40874 <main+0x2a4>
			ema1[i] = (0.1f*d1[i]) + (0.9f)*ema1[i-1];
   407cc:	e0bfce17 	ldw	r2,-200(fp)
   407d0:	1085883a 	add	r2,r2,r2
   407d4:	1085883a 	add	r2,r2,r2
   407d8:	e0ffc904 	addi	r3,fp,-220
   407dc:	1885883a 	add	r2,r3,r2
   407e0:	10800d04 	addi	r2,r2,52
   407e4:	10c00017 	ldw	r3,0(r2)
   407e8:	014f7374 	movhi	r5,15821
   407ec:	29733344 	addi	r5,r5,-13107
   407f0:	1809883a 	mov	r4,r3
   407f4:	00414a80 	call	414a8 <__mulsf3>
   407f8:	1007883a 	mov	r3,r2
   407fc:	1821883a 	mov	r16,r3
   40800:	e0bfce17 	ldw	r2,-200(fp)
   40804:	10bfffc4 	addi	r2,r2,-1
   40808:	1085883a 	add	r2,r2,r2
   4080c:	1085883a 	add	r2,r2,r2
   40810:	e13fc904 	addi	r4,fp,-220
   40814:	2085883a 	add	r2,r4,r2
   40818:	10802104 	addi	r2,r2,132
   4081c:	10c00017 	ldw	r3,0(r2)
   40820:	014fd9b4 	movhi	r5,16230
   40824:	29599984 	addi	r5,r5,26214
   40828:	1809883a 	mov	r4,r3
   4082c:	00414a80 	call	414a8 <__mulsf3>
   40830:	1007883a 	mov	r3,r2
   40834:	1805883a 	mov	r2,r3
   40838:	100b883a 	mov	r5,r2
   4083c:	8009883a 	mov	r4,r16
   40840:	0040ba00 	call	40ba0 <__addsf3>
   40844:	1009883a 	mov	r4,r2
   40848:	2007883a 	mov	r3,r4
   4084c:	e0bfce17 	ldw	r2,-200(fp)
   40850:	1085883a 	add	r2,r2,r2
   40854:	1085883a 	add	r2,r2,r2
   40858:	e13fc904 	addi	r4,fp,-220
   4085c:	2085883a 	add	r2,r4,r2
   40860:	10802104 	addi	r2,r2,132
   40864:	10c00015 	stw	r3,0(r2)

	for (int j=0; j<NUM_ITEMS; j++){
		PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);

		ema1[0] = d1[0];
		for(int i = 1; i < 10; i++){
   40868:	e0bfce17 	ldw	r2,-200(fp)
   4086c:	10800044 	addi	r2,r2,1
   40870:	e0bfce15 	stw	r2,-200(fp)
   40874:	e0bfce17 	ldw	r2,-200(fp)
   40878:	10800290 	cmplti	r2,r2,10
   4087c:	103fd31e 	bne	r2,zero,407cc <__alt_data_end+0xfffc07cc>
			ema1[i] = (0.1f*d1[i]) + (0.9f)*ema1[i-1];
		}

		PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   40880:	0007883a 	mov	r3,zero
   40884:	00800234 	movhi	r2,8
   40888:	10841404 	addi	r2,r2,4176
   4088c:	10c00035 	stwio	r3,0(r2)

	// FLOATING POINT
//
	pre_measurement();

	for (int j=0; j<NUM_ITEMS; j++){
   40890:	e0bfcd17 	ldw	r2,-204(fp)
   40894:	10800044 	addi	r2,r2,1
   40898:	e0bfcd15 	stw	r2,-204(fp)
   4089c:	e0bfcd17 	ldw	r2,-204(fp)
   408a0:	10801910 	cmplti	r2,r2,100
   408a4:	103fc01e 	bne	r2,zero,407a8 <__alt_data_end+0xfffc07a8>

		PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
	}


	post_measurement();
   408a8:	00405900 	call	40590 <post_measurement>


	// double  time_taken = difftime(start, time(NULL));

	float error = 0;
   408ac:	e03fcf15 	stw	zero,-196(fp)
	for(int j = 0; j < 10; j++){
   408b0:	e03fd015 	stw	zero,-192(fp)
   408b4:	00002006 	br	40938 <main+0x368>
		float temp_err = fabs(ema1[j] - FIXED_TO_FLOAT(emafi[j]));
   408b8:	e0bfd017 	ldw	r2,-192(fp)
   408bc:	1085883a 	add	r2,r2,r2
   408c0:	1085883a 	add	r2,r2,r2
   408c4:	e0ffc904 	addi	r3,fp,-220
   408c8:	1885883a 	add	r2,r3,r2
   408cc:	10802104 	addi	r2,r2,132
   408d0:	14000017 	ldw	r16,0(r2)
   408d4:	e0bfd017 	ldw	r2,-192(fp)
   408d8:	1085883a 	add	r2,r2,r2
   408dc:	1085883a 	add	r2,r2,r2
   408e0:	e13fc904 	addi	r4,fp,-220
   408e4:	2085883a 	add	r2,r4,r2
   408e8:	10802b04 	addi	r2,r2,172
   408ec:	10800017 	ldw	r2,0(r2)
   408f0:	1009883a 	mov	r4,r2
   408f4:	00403200 	call	40320 <FIXED_TO_FLOAT>
   408f8:	1007883a 	mov	r3,r2
   408fc:	180b883a 	mov	r5,r3
   40900:	8009883a 	mov	r4,r16
   40904:	00418a40 	call	418a4 <__subsf3>
   40908:	1007883a 	mov	r3,r2
   4090c:	1805883a 	mov	r2,r3
   40910:	1005f832 	custom	224,r2,r2,zero
   40914:	e0bfd315 	stw	r2,-180(fp)
		// printf("Float Calc: %f, Fixed Calc: %f, err: %f\n", ema1[j], FIXED_TO_FLOAT(emafi[j]), temp_err);
		error += temp_err;
   40918:	e17fd317 	ldw	r5,-180(fp)
   4091c:	e13fcf17 	ldw	r4,-196(fp)
   40920:	0040ba00 	call	40ba0 <__addsf3>
   40924:	1007883a 	mov	r3,r2
   40928:	e0ffcf15 	stw	r3,-196(fp)


	// double  time_taken = difftime(start, time(NULL));

	float error = 0;
	for(int j = 0; j < 10; j++){
   4092c:	e0bfd017 	ldw	r2,-192(fp)
   40930:	10800044 	addi	r2,r2,1
   40934:	e0bfd015 	stw	r2,-192(fp)
   40938:	e0bfd017 	ldw	r2,-192(fp)
   4093c:	10800290 	cmplti	r2,r2,10
   40940:	103fdd1e 	bne	r2,zero,408b8 <__alt_data_end+0xfffc08b8>
		float temp_err = fabs(ema1[j] - FIXED_TO_FLOAT(emafi[j]));
		// printf("Float Calc: %f, Fixed Calc: %f, err: %f\n", ema1[j], FIXED_TO_FLOAT(emafi[j]), temp_err);
		error += temp_err;
	}
	error = error / 10;
   40944:	01504834 	movhi	r5,16672
   40948:	e13fcf17 	ldw	r4,-196(fp)
   4094c:	00410680 	call	41068 <__divsf3>
   40950:	1007883a 	mov	r3,r2
   40954:	e0ffcf15 	stw	r3,-196(fp)
	printf("Error in EMA calculations in Q%d.%d: %f\n", Q_M, Q_N, error);
   40958:	d426f317 	ldw	r16,-25652(gp)
   4095c:	d466f417 	ldw	r17,-25648(gp)
   40960:	e13fcf17 	ldw	r4,-196(fp)
   40964:	0042d4c0 	call	42d4c <__extendsfdf2>
   40968:	1009883a 	mov	r4,r2
   4096c:	180b883a 	mov	r5,r3
   40970:	d9400015 	stw	r5,0(sp)
   40974:	200f883a 	mov	r7,r4
   40978:	880d883a 	mov	r6,r17
   4097c:	800b883a 	mov	r5,r16
   40980:	01000174 	movhi	r4,5
   40984:	2103c604 	addi	r4,r4,3864
   40988:	00430980 	call	43098 <printf>


	int section_time = (int)perf_get_section_time ((void*)PERFORMANCE_COUNTER_0_BASE, 1);
   4098c:	01400044 	movi	r5,1
   40990:	01000234 	movhi	r4,8
   40994:	21041004 	addi	r4,r4,4160
   40998:	004fb480 	call	4fb48 <perf_get_section_time>
   4099c:	1009883a 	mov	r4,r2
   409a0:	180b883a 	mov	r5,r3
   409a4:	e13fd415 	stw	r4,-176(fp)

	float cycles = (float)((section_time-606)/NUM_ITEMS);
   409a8:	e0bfd417 	ldw	r2,-176(fp)
   409ac:	10bf6884 	addi	r2,r2,-606
   409b0:	01401904 	movi	r5,100
   409b4:	1009883a 	mov	r4,r2
   409b8:	00409ec0 	call	409ec <__divsi3>
   409bc:	1005feb2 	custom	250,r2,r2,zero
   409c0:	e0bfd515 	stw	r2,-172(fp)


	printf("Cycles (Software Floating Point): %f\n", cycles);
   409c4:	e13fd517 	ldw	r4,-172(fp)
   409c8:	0042d4c0 	call	42d4c <__extendsfdf2>
   409cc:	100d883a 	mov	r6,r2
   409d0:	180f883a 	mov	r7,r3
   409d4:	300b883a 	mov	r5,r6
   409d8:	380d883a 	mov	r6,r7
   409dc:	01000174 	movhi	r4,5
   409e0:	2103d104 	addi	r4,r4,3908
   409e4:	00430980 	call	43098 <printf>

	while(1);
   409e8:	003fff06 	br	409e8 <__alt_data_end+0xfffc09e8>

000409ec <__divsi3>:
   409ec:	20001b16 	blt	r4,zero,40a5c <__divsi3+0x70>
   409f0:	000f883a 	mov	r7,zero
   409f4:	28001616 	blt	r5,zero,40a50 <__divsi3+0x64>
   409f8:	200d883a 	mov	r6,r4
   409fc:	29001a2e 	bgeu	r5,r4,40a68 <__divsi3+0x7c>
   40a00:	00800804 	movi	r2,32
   40a04:	00c00044 	movi	r3,1
   40a08:	00000106 	br	40a10 <__divsi3+0x24>
   40a0c:	10000d26 	beq	r2,zero,40a44 <__divsi3+0x58>
   40a10:	294b883a 	add	r5,r5,r5
   40a14:	10bfffc4 	addi	r2,r2,-1
   40a18:	18c7883a 	add	r3,r3,r3
   40a1c:	293ffb36 	bltu	r5,r4,40a0c <__alt_data_end+0xfffc0a0c>
   40a20:	0005883a 	mov	r2,zero
   40a24:	18000726 	beq	r3,zero,40a44 <__divsi3+0x58>
   40a28:	0005883a 	mov	r2,zero
   40a2c:	31400236 	bltu	r6,r5,40a38 <__divsi3+0x4c>
   40a30:	314dc83a 	sub	r6,r6,r5
   40a34:	10c4b03a 	or	r2,r2,r3
   40a38:	1806d07a 	srli	r3,r3,1
   40a3c:	280ad07a 	srli	r5,r5,1
   40a40:	183ffa1e 	bne	r3,zero,40a2c <__alt_data_end+0xfffc0a2c>
   40a44:	38000126 	beq	r7,zero,40a4c <__divsi3+0x60>
   40a48:	0085c83a 	sub	r2,zero,r2
   40a4c:	f800283a 	ret
   40a50:	014bc83a 	sub	r5,zero,r5
   40a54:	39c0005c 	xori	r7,r7,1
   40a58:	003fe706 	br	409f8 <__alt_data_end+0xfffc09f8>
   40a5c:	0109c83a 	sub	r4,zero,r4
   40a60:	01c00044 	movi	r7,1
   40a64:	003fe306 	br	409f4 <__alt_data_end+0xfffc09f4>
   40a68:	00c00044 	movi	r3,1
   40a6c:	003fee06 	br	40a28 <__alt_data_end+0xfffc0a28>

00040a70 <__modsi3>:
   40a70:	20001716 	blt	r4,zero,40ad0 <__modsi3+0x60>
   40a74:	000f883a 	mov	r7,zero
   40a78:	2005883a 	mov	r2,r4
   40a7c:	28001216 	blt	r5,zero,40ac8 <__modsi3+0x58>
   40a80:	2900162e 	bgeu	r5,r4,40adc <__modsi3+0x6c>
   40a84:	01800804 	movi	r6,32
   40a88:	00c00044 	movi	r3,1
   40a8c:	00000106 	br	40a94 <__modsi3+0x24>
   40a90:	30000a26 	beq	r6,zero,40abc <__modsi3+0x4c>
   40a94:	294b883a 	add	r5,r5,r5
   40a98:	31bfffc4 	addi	r6,r6,-1
   40a9c:	18c7883a 	add	r3,r3,r3
   40aa0:	293ffb36 	bltu	r5,r4,40a90 <__alt_data_end+0xfffc0a90>
   40aa4:	18000526 	beq	r3,zero,40abc <__modsi3+0x4c>
   40aa8:	1806d07a 	srli	r3,r3,1
   40aac:	11400136 	bltu	r2,r5,40ab4 <__modsi3+0x44>
   40ab0:	1145c83a 	sub	r2,r2,r5
   40ab4:	280ad07a 	srli	r5,r5,1
   40ab8:	183ffb1e 	bne	r3,zero,40aa8 <__alt_data_end+0xfffc0aa8>
   40abc:	38000126 	beq	r7,zero,40ac4 <__modsi3+0x54>
   40ac0:	0085c83a 	sub	r2,zero,r2
   40ac4:	f800283a 	ret
   40ac8:	014bc83a 	sub	r5,zero,r5
   40acc:	003fec06 	br	40a80 <__alt_data_end+0xfffc0a80>
   40ad0:	0109c83a 	sub	r4,zero,r4
   40ad4:	01c00044 	movi	r7,1
   40ad8:	003fe706 	br	40a78 <__alt_data_end+0xfffc0a78>
   40adc:	00c00044 	movi	r3,1
   40ae0:	003ff106 	br	40aa8 <__alt_data_end+0xfffc0aa8>

00040ae4 <__udivsi3>:
   40ae4:	200d883a 	mov	r6,r4
   40ae8:	2900152e 	bgeu	r5,r4,40b40 <__udivsi3+0x5c>
   40aec:	28001416 	blt	r5,zero,40b40 <__udivsi3+0x5c>
   40af0:	00800804 	movi	r2,32
   40af4:	00c00044 	movi	r3,1
   40af8:	00000206 	br	40b04 <__udivsi3+0x20>
   40afc:	10000e26 	beq	r2,zero,40b38 <__udivsi3+0x54>
   40b00:	28000516 	blt	r5,zero,40b18 <__udivsi3+0x34>
   40b04:	294b883a 	add	r5,r5,r5
   40b08:	10bfffc4 	addi	r2,r2,-1
   40b0c:	18c7883a 	add	r3,r3,r3
   40b10:	293ffa36 	bltu	r5,r4,40afc <__alt_data_end+0xfffc0afc>
   40b14:	18000826 	beq	r3,zero,40b38 <__udivsi3+0x54>
   40b18:	0005883a 	mov	r2,zero
   40b1c:	31400236 	bltu	r6,r5,40b28 <__udivsi3+0x44>
   40b20:	314dc83a 	sub	r6,r6,r5
   40b24:	10c4b03a 	or	r2,r2,r3
   40b28:	1806d07a 	srli	r3,r3,1
   40b2c:	280ad07a 	srli	r5,r5,1
   40b30:	183ffa1e 	bne	r3,zero,40b1c <__alt_data_end+0xfffc0b1c>
   40b34:	f800283a 	ret
   40b38:	0005883a 	mov	r2,zero
   40b3c:	f800283a 	ret
   40b40:	00c00044 	movi	r3,1
   40b44:	003ff406 	br	40b18 <__alt_data_end+0xfffc0b18>

00040b48 <__umodsi3>:
   40b48:	2005883a 	mov	r2,r4
   40b4c:	2900122e 	bgeu	r5,r4,40b98 <__umodsi3+0x50>
   40b50:	28001116 	blt	r5,zero,40b98 <__umodsi3+0x50>
   40b54:	01800804 	movi	r6,32
   40b58:	00c00044 	movi	r3,1
   40b5c:	00000206 	br	40b68 <__umodsi3+0x20>
   40b60:	30000c26 	beq	r6,zero,40b94 <__umodsi3+0x4c>
   40b64:	28000516 	blt	r5,zero,40b7c <__umodsi3+0x34>
   40b68:	294b883a 	add	r5,r5,r5
   40b6c:	31bfffc4 	addi	r6,r6,-1
   40b70:	18c7883a 	add	r3,r3,r3
   40b74:	293ffa36 	bltu	r5,r4,40b60 <__alt_data_end+0xfffc0b60>
   40b78:	18000626 	beq	r3,zero,40b94 <__umodsi3+0x4c>
   40b7c:	1806d07a 	srli	r3,r3,1
   40b80:	11400136 	bltu	r2,r5,40b88 <__umodsi3+0x40>
   40b84:	1145c83a 	sub	r2,r2,r5
   40b88:	280ad07a 	srli	r5,r5,1
   40b8c:	183ffb1e 	bne	r3,zero,40b7c <__alt_data_end+0xfffc0b7c>
   40b90:	f800283a 	ret
   40b94:	f800283a 	ret
   40b98:	00c00044 	movi	r3,1
   40b9c:	003ff706 	br	40b7c <__alt_data_end+0xfffc0b7c>

00040ba0 <__addsf3>:
   40ba0:	defffc04 	addi	sp,sp,-16
   40ba4:	2004d7fa 	srli	r2,r4,31
   40ba8:	280cd5fa 	srli	r6,r5,23
   40bac:	dc000015 	stw	r16,0(sp)
   40bb0:	00c02034 	movhi	r3,128
   40bb4:	2020d5fa 	srli	r16,r4,23
   40bb8:	280ed7fa 	srli	r7,r5,31
   40bbc:	18ffffc4 	addi	r3,r3,-1
   40bc0:	dc400115 	stw	r17,4(sp)
   40bc4:	1908703a 	and	r4,r3,r4
   40bc8:	194a703a 	and	r5,r3,r5
   40bcc:	dfc00315 	stw	ra,12(sp)
   40bd0:	dc800215 	stw	r18,8(sp)
   40bd4:	14403fcc 	andi	r17,r2,255
   40bd8:	84003fcc 	andi	r16,r16,255
   40bdc:	200890fa 	slli	r4,r4,3
   40be0:	31803fcc 	andi	r6,r6,255
   40be4:	280a90fa 	slli	r5,r5,3
   40be8:	89c05026 	beq	r17,r7,40d2c <__addsf3+0x18c>
   40bec:	8185c83a 	sub	r2,r16,r6
   40bf0:	00807a0e 	bge	zero,r2,40ddc <__addsf3+0x23c>
   40bf4:	30001e1e 	bne	r6,zero,40c70 <__addsf3+0xd0>
   40bf8:	28006d1e 	bne	r5,zero,40db0 <__addsf3+0x210>
   40bfc:	208001cc 	andi	r2,r4,7
   40c00:	10000426 	beq	r2,zero,40c14 <__addsf3+0x74>
   40c04:	208003cc 	andi	r2,r4,15
   40c08:	00c00104 	movi	r3,4
   40c0c:	10c00126 	beq	r2,r3,40c14 <__addsf3+0x74>
   40c10:	20c9883a 	add	r4,r4,r3
   40c14:	2081002c 	andhi	r2,r4,1024
   40c18:	10003926 	beq	r2,zero,40d00 <__addsf3+0x160>
   40c1c:	84000044 	addi	r16,r16,1
   40c20:	00803fc4 	movi	r2,255
   40c24:	80807826 	beq	r16,r2,40e08 <__addsf3+0x268>
   40c28:	200891ba 	slli	r4,r4,6
   40c2c:	8805883a 	mov	r2,r17
   40c30:	2008d27a 	srli	r4,r4,9
   40c34:	84003fcc 	andi	r16,r16,255
   40c38:	800695fa 	slli	r3,r16,23
   40c3c:	10803fcc 	andi	r2,r2,255
   40c40:	04002034 	movhi	r16,128
   40c44:	843fffc4 	addi	r16,r16,-1
   40c48:	100497fa 	slli	r2,r2,31
   40c4c:	2408703a 	and	r4,r4,r16
   40c50:	20e0b03a 	or	r16,r4,r3
   40c54:	8084b03a 	or	r2,r16,r2
   40c58:	dfc00317 	ldw	ra,12(sp)
   40c5c:	dc800217 	ldw	r18,8(sp)
   40c60:	dc400117 	ldw	r17,4(sp)
   40c64:	dc000017 	ldw	r16,0(sp)
   40c68:	dec00404 	addi	sp,sp,16
   40c6c:	f800283a 	ret
   40c70:	00c03fc4 	movi	r3,255
   40c74:	80ffe126 	beq	r16,r3,40bfc <__alt_data_end+0xfffc0bfc>
   40c78:	29410034 	orhi	r5,r5,1024
   40c7c:	00c006c4 	movi	r3,27
   40c80:	18807516 	blt	r3,r2,40e58 <__addsf3+0x2b8>
   40c84:	00c00804 	movi	r3,32
   40c88:	1887c83a 	sub	r3,r3,r2
   40c8c:	28c6983a 	sll	r3,r5,r3
   40c90:	288ad83a 	srl	r5,r5,r2
   40c94:	1804c03a 	cmpne	r2,r3,zero
   40c98:	288ab03a 	or	r5,r5,r2
   40c9c:	2149c83a 	sub	r4,r4,r5
   40ca0:	2081002c 	andhi	r2,r4,1024
   40ca4:	10001426 	beq	r2,zero,40cf8 <__addsf3+0x158>
   40ca8:	04810034 	movhi	r18,1024
   40cac:	94bfffc4 	addi	r18,r18,-1
   40cb0:	24a4703a 	and	r18,r4,r18
   40cb4:	9009883a 	mov	r4,r18
   40cb8:	00430040 	call	43004 <__clzsi2>
   40cbc:	10bffec4 	addi	r2,r2,-5
   40cc0:	90a4983a 	sll	r18,r18,r2
   40cc4:	14005416 	blt	r2,r16,40e18 <__addsf3+0x278>
   40cc8:	1405c83a 	sub	r2,r2,r16
   40ccc:	11000044 	addi	r4,r2,1
   40cd0:	00800804 	movi	r2,32
   40cd4:	1105c83a 	sub	r2,r2,r4
   40cd8:	9084983a 	sll	r2,r18,r2
   40cdc:	9124d83a 	srl	r18,r18,r4
   40ce0:	0021883a 	mov	r16,zero
   40ce4:	1008c03a 	cmpne	r4,r2,zero
   40ce8:	9108b03a 	or	r4,r18,r4
   40cec:	003fc306 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40cf0:	1000db26 	beq	r2,zero,41060 <__addsf3+0x4c0>
   40cf4:	1009883a 	mov	r4,r2
   40cf8:	208001cc 	andi	r2,r4,7
   40cfc:	103fc11e 	bne	r2,zero,40c04 <__alt_data_end+0xfffc0c04>
   40d00:	2006d0fa 	srli	r3,r4,3
   40d04:	01003fc4 	movi	r4,255
   40d08:	8805883a 	mov	r2,r17
   40d0c:	8100241e 	bne	r16,r4,40da0 <__addsf3+0x200>
   40d10:	18006e26 	beq	r3,zero,40ecc <__addsf3+0x32c>
   40d14:	19001034 	orhi	r4,r3,64
   40d18:	00c02034 	movhi	r3,128
   40d1c:	18ffffc4 	addi	r3,r3,-1
   40d20:	043fffc4 	movi	r16,-1
   40d24:	20c8703a 	and	r4,r4,r3
   40d28:	003fc206 	br	40c34 <__alt_data_end+0xfffc0c34>
   40d2c:	8187c83a 	sub	r3,r16,r6
   40d30:	00c03e0e 	bge	zero,r3,40e2c <__addsf3+0x28c>
   40d34:	30002326 	beq	r6,zero,40dc4 <__addsf3+0x224>
   40d38:	01803fc4 	movi	r6,255
   40d3c:	81bfaf26 	beq	r16,r6,40bfc <__alt_data_end+0xfffc0bfc>
   40d40:	29410034 	orhi	r5,r5,1024
   40d44:	018006c4 	movi	r6,27
   40d48:	30c07416 	blt	r6,r3,40f1c <__addsf3+0x37c>
   40d4c:	01800804 	movi	r6,32
   40d50:	30cdc83a 	sub	r6,r6,r3
   40d54:	298c983a 	sll	r6,r5,r6
   40d58:	28cad83a 	srl	r5,r5,r3
   40d5c:	3006c03a 	cmpne	r3,r6,zero
   40d60:	28cab03a 	or	r5,r5,r3
   40d64:	2149883a 	add	r4,r4,r5
   40d68:	20c1002c 	andhi	r3,r4,1024
   40d6c:	183fe226 	beq	r3,zero,40cf8 <__alt_data_end+0xfffc0cf8>
   40d70:	84000044 	addi	r16,r16,1
   40d74:	00c03fc4 	movi	r3,255
   40d78:	80c05426 	beq	r16,r3,40ecc <__addsf3+0x32c>
   40d7c:	00bf0034 	movhi	r2,64512
   40d80:	10bfffc4 	addi	r2,r2,-1
   40d84:	20c0004c 	andi	r3,r4,1
   40d88:	2088703a 	and	r4,r4,r2
   40d8c:	2008d07a 	srli	r4,r4,1
   40d90:	20c8b03a 	or	r4,r4,r3
   40d94:	003f9906 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40d98:	0007883a 	mov	r3,zero
   40d9c:	0005883a 	mov	r2,zero
   40da0:	01002034 	movhi	r4,128
   40da4:	213fffc4 	addi	r4,r4,-1
   40da8:	1908703a 	and	r4,r3,r4
   40dac:	003fa106 	br	40c34 <__alt_data_end+0xfffc0c34>
   40db0:	10bfffc4 	addi	r2,r2,-1
   40db4:	103fb926 	beq	r2,zero,40c9c <__alt_data_end+0xfffc0c9c>
   40db8:	00c03fc4 	movi	r3,255
   40dbc:	80ffaf1e 	bne	r16,r3,40c7c <__alt_data_end+0xfffc0c7c>
   40dc0:	003f8e06 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40dc4:	283f8d26 	beq	r5,zero,40bfc <__alt_data_end+0xfffc0bfc>
   40dc8:	18ffffc4 	addi	r3,r3,-1
   40dcc:	183fe526 	beq	r3,zero,40d64 <__alt_data_end+0xfffc0d64>
   40dd0:	01803fc4 	movi	r6,255
   40dd4:	81bfdb1e 	bne	r16,r6,40d44 <__alt_data_end+0xfffc0d44>
   40dd8:	003f8806 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40ddc:	1000201e 	bne	r2,zero,40e60 <__addsf3+0x2c0>
   40de0:	80800044 	addi	r2,r16,1
   40de4:	10803fcc 	andi	r2,r2,255
   40de8:	01800044 	movi	r6,1
   40dec:	3080450e 	bge	r6,r2,40f04 <__addsf3+0x364>
   40df0:	2165c83a 	sub	r18,r4,r5
   40df4:	90c1002c 	andhi	r3,r18,1024
   40df8:	18002b26 	beq	r3,zero,40ea8 <__addsf3+0x308>
   40dfc:	2925c83a 	sub	r18,r5,r4
   40e00:	3823883a 	mov	r17,r7
   40e04:	003fab06 	br	40cb4 <__alt_data_end+0xfffc0cb4>
   40e08:	8805883a 	mov	r2,r17
   40e0c:	043fffc4 	movi	r16,-1
   40e10:	0009883a 	mov	r4,zero
   40e14:	003f8706 	br	40c34 <__alt_data_end+0xfffc0c34>
   40e18:	013f0034 	movhi	r4,64512
   40e1c:	213fffc4 	addi	r4,r4,-1
   40e20:	80a1c83a 	sub	r16,r16,r2
   40e24:	9108703a 	and	r4,r18,r4
   40e28:	003f7406 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40e2c:	1800411e 	bne	r3,zero,40f34 <__addsf3+0x394>
   40e30:	80c00044 	addi	r3,r16,1
   40e34:	19c03fcc 	andi	r7,r3,255
   40e38:	01800044 	movi	r6,1
   40e3c:	31c0260e 	bge	r6,r7,40ed8 <__addsf3+0x338>
   40e40:	01803fc4 	movi	r6,255
   40e44:	19802126 	beq	r3,r6,40ecc <__addsf3+0x32c>
   40e48:	2149883a 	add	r4,r4,r5
   40e4c:	2008d07a 	srli	r4,r4,1
   40e50:	1821883a 	mov	r16,r3
   40e54:	003f6906 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40e58:	01400044 	movi	r5,1
   40e5c:	003f8f06 	br	40c9c <__alt_data_end+0xfffc0c9c>
   40e60:	8000151e 	bne	r16,zero,40eb8 <__addsf3+0x318>
   40e64:	20002f26 	beq	r4,zero,40f24 <__addsf3+0x384>
   40e68:	0084303a 	nor	r2,zero,r2
   40e6c:	10000a26 	beq	r2,zero,40e98 <__addsf3+0x2f8>
   40e70:	00c03fc4 	movi	r3,255
   40e74:	30c02b26 	beq	r6,r3,40f24 <__addsf3+0x384>
   40e78:	00c006c4 	movi	r3,27
   40e7c:	18806d16 	blt	r3,r2,41034 <__addsf3+0x494>
   40e80:	00c00804 	movi	r3,32
   40e84:	1887c83a 	sub	r3,r3,r2
   40e88:	20c6983a 	sll	r3,r4,r3
   40e8c:	2084d83a 	srl	r2,r4,r2
   40e90:	1808c03a 	cmpne	r4,r3,zero
   40e94:	1108b03a 	or	r4,r2,r4
   40e98:	2909c83a 	sub	r4,r5,r4
   40e9c:	3021883a 	mov	r16,r6
   40ea0:	3823883a 	mov	r17,r7
   40ea4:	003f7e06 	br	40ca0 <__alt_data_end+0xfffc0ca0>
   40ea8:	903f821e 	bne	r18,zero,40cb4 <__alt_data_end+0xfffc0cb4>
   40eac:	0005883a 	mov	r2,zero
   40eb0:	0021883a 	mov	r16,zero
   40eb4:	003fba06 	br	40da0 <__alt_data_end+0xfffc0da0>
   40eb8:	00c03fc4 	movi	r3,255
   40ebc:	30c01926 	beq	r6,r3,40f24 <__addsf3+0x384>
   40ec0:	0085c83a 	sub	r2,zero,r2
   40ec4:	21010034 	orhi	r4,r4,1024
   40ec8:	003feb06 	br	40e78 <__alt_data_end+0xfffc0e78>
   40ecc:	043fffc4 	movi	r16,-1
   40ed0:	0009883a 	mov	r4,zero
   40ed4:	003f5706 	br	40c34 <__alt_data_end+0xfffc0c34>
   40ed8:	80004a1e 	bne	r16,zero,41004 <__addsf3+0x464>
   40edc:	20005926 	beq	r4,zero,41044 <__addsf3+0x4a4>
   40ee0:	283f4626 	beq	r5,zero,40bfc <__alt_data_end+0xfffc0bfc>
   40ee4:	2149883a 	add	r4,r4,r5
   40ee8:	2081002c 	andhi	r2,r4,1024
   40eec:	103f8226 	beq	r2,zero,40cf8 <__alt_data_end+0xfffc0cf8>
   40ef0:	00bf0034 	movhi	r2,64512
   40ef4:	10bfffc4 	addi	r2,r2,-1
   40ef8:	3021883a 	mov	r16,r6
   40efc:	2088703a 	and	r4,r4,r2
   40f00:	003f3e06 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40f04:	8000121e 	bne	r16,zero,40f50 <__addsf3+0x3b0>
   40f08:	2000261e 	bne	r4,zero,40fa4 <__addsf3+0x404>
   40f0c:	283fa226 	beq	r5,zero,40d98 <__alt_data_end+0xfffc0d98>
   40f10:	2809883a 	mov	r4,r5
   40f14:	3823883a 	mov	r17,r7
   40f18:	003f3806 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40f1c:	01400044 	movi	r5,1
   40f20:	003f9006 	br	40d64 <__alt_data_end+0xfffc0d64>
   40f24:	2809883a 	mov	r4,r5
   40f28:	3021883a 	mov	r16,r6
   40f2c:	3823883a 	mov	r17,r7
   40f30:	003f3206 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40f34:	80000c1e 	bne	r16,zero,40f68 <__addsf3+0x3c8>
   40f38:	20002f26 	beq	r4,zero,40ff8 <__addsf3+0x458>
   40f3c:	00c6303a 	nor	r3,zero,r3
   40f40:	18002b1e 	bne	r3,zero,40ff0 <__addsf3+0x450>
   40f44:	2149883a 	add	r4,r4,r5
   40f48:	3021883a 	mov	r16,r6
   40f4c:	003f8606 	br	40d68 <__alt_data_end+0xfffc0d68>
   40f50:	20001b1e 	bne	r4,zero,40fc0 <__addsf3+0x420>
   40f54:	28003926 	beq	r5,zero,4103c <__addsf3+0x49c>
   40f58:	2809883a 	mov	r4,r5
   40f5c:	3823883a 	mov	r17,r7
   40f60:	04003fc4 	movi	r16,255
   40f64:	003f2506 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40f68:	01c03fc4 	movi	r7,255
   40f6c:	31c02226 	beq	r6,r7,40ff8 <__addsf3+0x458>
   40f70:	00c7c83a 	sub	r3,zero,r3
   40f74:	21010034 	orhi	r4,r4,1024
   40f78:	01c006c4 	movi	r7,27
   40f7c:	38c03616 	blt	r7,r3,41058 <__addsf3+0x4b8>
   40f80:	01c00804 	movi	r7,32
   40f84:	38cfc83a 	sub	r7,r7,r3
   40f88:	21ce983a 	sll	r7,r4,r7
   40f8c:	20c6d83a 	srl	r3,r4,r3
   40f90:	3808c03a 	cmpne	r4,r7,zero
   40f94:	1906b03a 	or	r3,r3,r4
   40f98:	1949883a 	add	r4,r3,r5
   40f9c:	3021883a 	mov	r16,r6
   40fa0:	003f7106 	br	40d68 <__alt_data_end+0xfffc0d68>
   40fa4:	283f1526 	beq	r5,zero,40bfc <__alt_data_end+0xfffc0bfc>
   40fa8:	2145c83a 	sub	r2,r4,r5
   40fac:	10c1002c 	andhi	r3,r2,1024
   40fb0:	183f4f26 	beq	r3,zero,40cf0 <__alt_data_end+0xfffc0cf0>
   40fb4:	2909c83a 	sub	r4,r5,r4
   40fb8:	3823883a 	mov	r17,r7
   40fbc:	003f0f06 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40fc0:	28001a26 	beq	r5,zero,4102c <__addsf3+0x48c>
   40fc4:	2008d0fa 	srli	r4,r4,3
   40fc8:	2080102c 	andhi	r2,r4,64
   40fcc:	10000526 	beq	r2,zero,40fe4 <__addsf3+0x444>
   40fd0:	280ad0fa 	srli	r5,r5,3
   40fd4:	2880102c 	andhi	r2,r5,64
   40fd8:	1000021e 	bne	r2,zero,40fe4 <__addsf3+0x444>
   40fdc:	2809883a 	mov	r4,r5
   40fe0:	3823883a 	mov	r17,r7
   40fe4:	200890fa 	slli	r4,r4,3
   40fe8:	04003fc4 	movi	r16,255
   40fec:	003f0306 	br	40bfc <__alt_data_end+0xfffc0bfc>
   40ff0:	01c03fc4 	movi	r7,255
   40ff4:	31ffe01e 	bne	r6,r7,40f78 <__alt_data_end+0xfffc0f78>
   40ff8:	2809883a 	mov	r4,r5
   40ffc:	3021883a 	mov	r16,r6
   41000:	003efe06 	br	40bfc <__alt_data_end+0xfffc0bfc>
   41004:	20001126 	beq	r4,zero,4104c <__addsf3+0x4ac>
   41008:	28000826 	beq	r5,zero,4102c <__addsf3+0x48c>
   4100c:	2008d0fa 	srli	r4,r4,3
   41010:	2080102c 	andhi	r2,r4,64
   41014:	103ff326 	beq	r2,zero,40fe4 <__alt_data_end+0xfffc0fe4>
   41018:	280ad0fa 	srli	r5,r5,3
   4101c:	2880102c 	andhi	r2,r5,64
   41020:	103ff01e 	bne	r2,zero,40fe4 <__alt_data_end+0xfffc0fe4>
   41024:	2809883a 	mov	r4,r5
   41028:	003fee06 	br	40fe4 <__alt_data_end+0xfffc0fe4>
   4102c:	04003fc4 	movi	r16,255
   41030:	003ef206 	br	40bfc <__alt_data_end+0xfffc0bfc>
   41034:	01000044 	movi	r4,1
   41038:	003f9706 	br	40e98 <__alt_data_end+0xfffc0e98>
   4103c:	0005883a 	mov	r2,zero
   41040:	003f3406 	br	40d14 <__alt_data_end+0xfffc0d14>
   41044:	2809883a 	mov	r4,r5
   41048:	003eec06 	br	40bfc <__alt_data_end+0xfffc0bfc>
   4104c:	2809883a 	mov	r4,r5
   41050:	04003fc4 	movi	r16,255
   41054:	003ee906 	br	40bfc <__alt_data_end+0xfffc0bfc>
   41058:	00c00044 	movi	r3,1
   4105c:	003fce06 	br	40f98 <__alt_data_end+0xfffc0f98>
   41060:	0005883a 	mov	r2,zero
   41064:	003f4e06 	br	40da0 <__alt_data_end+0xfffc0da0>

00041068 <__divsf3>:
   41068:	defff504 	addi	sp,sp,-44
   4106c:	200cd5fa 	srli	r6,r4,23
   41070:	dcc00415 	stw	r19,16(sp)
   41074:	2026d7fa 	srli	r19,r4,31
   41078:	00c02034 	movhi	r3,128
   4107c:	dd800715 	stw	r22,28(sp)
   41080:	dd000515 	stw	r20,20(sp)
   41084:	dc800315 	stw	r18,12(sp)
   41088:	18ffffc4 	addi	r3,r3,-1
   4108c:	dfc00a15 	stw	ra,40(sp)
   41090:	df000915 	stw	fp,36(sp)
   41094:	ddc00815 	stw	r23,32(sp)
   41098:	dd400615 	stw	r21,24(sp)
   4109c:	dc400215 	stw	r17,8(sp)
   410a0:	dc000115 	stw	r16,4(sp)
   410a4:	35003fcc 	andi	r20,r6,255
   410a8:	1924703a 	and	r18,r3,r4
   410ac:	9d803fcc 	andi	r22,r19,255
   410b0:	a0005226 	beq	r20,zero,411fc <__divsf3+0x194>
   410b4:	00803fc4 	movi	r2,255
   410b8:	a0802e26 	beq	r20,r2,41174 <__divsf3+0x10c>
   410bc:	91002034 	orhi	r4,r18,128
   410c0:	202490fa 	slli	r18,r4,3
   410c4:	a53fe044 	addi	r20,r20,-127
   410c8:	0021883a 	mov	r16,zero
   410cc:	002f883a 	mov	r23,zero
   410d0:	280cd5fa 	srli	r6,r5,23
   410d4:	282ad7fa 	srli	r21,r5,31
   410d8:	00c02034 	movhi	r3,128
   410dc:	18ffffc4 	addi	r3,r3,-1
   410e0:	31803fcc 	andi	r6,r6,255
   410e4:	1962703a 	and	r17,r3,r5
   410e8:	af003fcc 	andi	fp,r21,255
   410ec:	30004a26 	beq	r6,zero,41218 <__divsf3+0x1b0>
   410f0:	00803fc4 	movi	r2,255
   410f4:	30804526 	beq	r6,r2,4120c <__divsf3+0x1a4>
   410f8:	89402034 	orhi	r5,r17,128
   410fc:	282290fa 	slli	r17,r5,3
   41100:	31bfe044 	addi	r6,r6,-127
   41104:	000b883a 	mov	r5,zero
   41108:	2c20b03a 	or	r16,r5,r16
   4110c:	802090ba 	slli	r16,r16,2
   41110:	00800134 	movhi	r2,4
   41114:	10844d04 	addi	r2,r2,4404
   41118:	80a1883a 	add	r16,r16,r2
   4111c:	81000017 	ldw	r4,0(r16)
   41120:	9d46f03a 	xor	r3,r19,r21
   41124:	180f883a 	mov	r7,r3
   41128:	18803fcc 	andi	r2,r3,255
   4112c:	a18dc83a 	sub	r6,r20,r6
   41130:	2000683a 	jmp	r4
   41134:	00041318 	cmpnei	zero,zero,4172
   41138:	0004119c 	xori	zero,zero,4166
   4113c:	0004130c 	andi	zero,zero,4172
   41140:	00041188 	cmpgei	zero,zero,4166
   41144:	0004130c 	andi	zero,zero,4172
   41148:	000412e4 	muli	zero,zero,4171
   4114c:	0004130c 	andi	zero,zero,4172
   41150:	00041188 	cmpgei	zero,zero,4166
   41154:	0004119c 	xori	zero,zero,4166
   41158:	0004119c 	xori	zero,zero,4166
   4115c:	000412e4 	muli	zero,zero,4171
   41160:	00041188 	cmpgei	zero,zero,4166
   41164:	000413f8 	rdprs	zero,zero,4175
   41168:	000413f8 	rdprs	zero,zero,4175
   4116c:	000413f8 	rdprs	zero,zero,4175
   41170:	000413ac 	andhi	zero,zero,4174
   41174:	9000581e 	bne	r18,zero,412d8 <__divsf3+0x270>
   41178:	04000204 	movi	r16,8
   4117c:	05c00084 	movi	r23,2
   41180:	003fd306 	br	410d0 <__alt_data_end+0xfffc10d0>
   41184:	0023883a 	mov	r17,zero
   41188:	e02d883a 	mov	r22,fp
   4118c:	282f883a 	mov	r23,r5
   41190:	00800084 	movi	r2,2
   41194:	b8808f1e 	bne	r23,r2,413d4 <__divsf3+0x36c>
   41198:	b005883a 	mov	r2,r22
   4119c:	11c0004c 	andi	r7,r2,1
   411a0:	013fffc4 	movi	r4,-1
   411a4:	000d883a 	mov	r6,zero
   411a8:	21003fcc 	andi	r4,r4,255
   411ac:	200895fa 	slli	r4,r4,23
   411b0:	38803fcc 	andi	r2,r7,255
   411b4:	00c02034 	movhi	r3,128
   411b8:	100497fa 	slli	r2,r2,31
   411bc:	18ffffc4 	addi	r3,r3,-1
   411c0:	30c6703a 	and	r3,r6,r3
   411c4:	1906b03a 	or	r3,r3,r4
   411c8:	1884b03a 	or	r2,r3,r2
   411cc:	dfc00a17 	ldw	ra,40(sp)
   411d0:	df000917 	ldw	fp,36(sp)
   411d4:	ddc00817 	ldw	r23,32(sp)
   411d8:	dd800717 	ldw	r22,28(sp)
   411dc:	dd400617 	ldw	r21,24(sp)
   411e0:	dd000517 	ldw	r20,20(sp)
   411e4:	dcc00417 	ldw	r19,16(sp)
   411e8:	dc800317 	ldw	r18,12(sp)
   411ec:	dc400217 	ldw	r17,8(sp)
   411f0:	dc000117 	ldw	r16,4(sp)
   411f4:	dec00b04 	addi	sp,sp,44
   411f8:	f800283a 	ret
   411fc:	90002b1e 	bne	r18,zero,412ac <__divsf3+0x244>
   41200:	04000104 	movi	r16,4
   41204:	05c00044 	movi	r23,1
   41208:	003fb106 	br	410d0 <__alt_data_end+0xfffc10d0>
   4120c:	8800251e 	bne	r17,zero,412a4 <__divsf3+0x23c>
   41210:	01400084 	movi	r5,2
   41214:	00000206 	br	41220 <__divsf3+0x1b8>
   41218:	88001a1e 	bne	r17,zero,41284 <__divsf3+0x21c>
   4121c:	01400044 	movi	r5,1
   41220:	8160b03a 	or	r16,r16,r5
   41224:	802090ba 	slli	r16,r16,2
   41228:	00c00134 	movhi	r3,4
   4122c:	18c49104 	addi	r3,r3,4676
   41230:	80e1883a 	add	r16,r16,r3
   41234:	80c00017 	ldw	r3,0(r16)
   41238:	9d44f03a 	xor	r2,r19,r21
   4123c:	a18dc83a 	sub	r6,r20,r6
   41240:	1800683a 	jmp	r3
   41244:	0004119c 	xori	zero,zero,4166
   41248:	0004119c 	xori	zero,zero,4166
   4124c:	000413e8 	cmpgeui	zero,zero,4175
   41250:	00041184 	movi	zero,4166
   41254:	000413e8 	cmpgeui	zero,zero,4175
   41258:	000412e4 	muli	zero,zero,4171
   4125c:	000413e8 	cmpgeui	zero,zero,4175
   41260:	00041184 	movi	zero,4166
   41264:	0004119c 	xori	zero,zero,4166
   41268:	0004119c 	xori	zero,zero,4166
   4126c:	000412e4 	muli	zero,zero,4171
   41270:	00041184 	movi	zero,4166
   41274:	000413f8 	rdprs	zero,zero,4175
   41278:	000413f8 	rdprs	zero,zero,4175
   4127c:	000413f8 	rdprs	zero,zero,4175
   41280:	00041410 	cmplti	zero,zero,4176
   41284:	8809883a 	mov	r4,r17
   41288:	00430040 	call	43004 <__clzsi2>
   4128c:	10fffec4 	addi	r3,r2,-5
   41290:	10801d84 	addi	r2,r2,118
   41294:	88e2983a 	sll	r17,r17,r3
   41298:	008dc83a 	sub	r6,zero,r2
   4129c:	000b883a 	mov	r5,zero
   412a0:	003f9906 	br	41108 <__alt_data_end+0xfffc1108>
   412a4:	014000c4 	movi	r5,3
   412a8:	003f9706 	br	41108 <__alt_data_end+0xfffc1108>
   412ac:	9009883a 	mov	r4,r18
   412b0:	d9400015 	stw	r5,0(sp)
   412b4:	00430040 	call	43004 <__clzsi2>
   412b8:	10fffec4 	addi	r3,r2,-5
   412bc:	11801d84 	addi	r6,r2,118
   412c0:	90e4983a 	sll	r18,r18,r3
   412c4:	01a9c83a 	sub	r20,zero,r6
   412c8:	0021883a 	mov	r16,zero
   412cc:	002f883a 	mov	r23,zero
   412d0:	d9400017 	ldw	r5,0(sp)
   412d4:	003f7e06 	br	410d0 <__alt_data_end+0xfffc10d0>
   412d8:	04000304 	movi	r16,12
   412dc:	05c000c4 	movi	r23,3
   412e0:	003f7b06 	br	410d0 <__alt_data_end+0xfffc10d0>
   412e4:	01802034 	movhi	r6,128
   412e8:	000f883a 	mov	r7,zero
   412ec:	31bfffc4 	addi	r6,r6,-1
   412f0:	013fffc4 	movi	r4,-1
   412f4:	003fac06 	br	411a8 <__alt_data_end+0xfffc11a8>
   412f8:	01400044 	movi	r5,1
   412fc:	2909c83a 	sub	r4,r5,r4
   41300:	00c006c4 	movi	r3,27
   41304:	19004b0e 	bge	r3,r4,41434 <__divsf3+0x3cc>
   41308:	114e703a 	and	r7,r2,r5
   4130c:	0009883a 	mov	r4,zero
   41310:	000d883a 	mov	r6,zero
   41314:	003fa406 	br	411a8 <__alt_data_end+0xfffc11a8>
   41318:	9006917a 	slli	r3,r18,5
   4131c:	8822917a 	slli	r17,r17,5
   41320:	1c40372e 	bgeu	r3,r17,41400 <__divsf3+0x398>
   41324:	31bfffc4 	addi	r6,r6,-1
   41328:	010006c4 	movi	r4,27
   4132c:	000b883a 	mov	r5,zero
   41330:	180f883a 	mov	r7,r3
   41334:	294b883a 	add	r5,r5,r5
   41338:	18c7883a 	add	r3,r3,r3
   4133c:	38000116 	blt	r7,zero,41344 <__divsf3+0x2dc>
   41340:	1c400236 	bltu	r3,r17,4134c <__divsf3+0x2e4>
   41344:	1c47c83a 	sub	r3,r3,r17
   41348:	29400054 	ori	r5,r5,1
   4134c:	213fffc4 	addi	r4,r4,-1
   41350:	203ff71e 	bne	r4,zero,41330 <__alt_data_end+0xfffc1330>
   41354:	1806c03a 	cmpne	r3,r3,zero
   41358:	1962b03a 	or	r17,r3,r5
   4135c:	31001fc4 	addi	r4,r6,127
   41360:	013fe50e 	bge	zero,r4,412f8 <__alt_data_end+0xfffc12f8>
   41364:	88c001cc 	andi	r3,r17,7
   41368:	18000426 	beq	r3,zero,4137c <__divsf3+0x314>
   4136c:	88c003cc 	andi	r3,r17,15
   41370:	01400104 	movi	r5,4
   41374:	19400126 	beq	r3,r5,4137c <__divsf3+0x314>
   41378:	8963883a 	add	r17,r17,r5
   4137c:	88c2002c 	andhi	r3,r17,2048
   41380:	18000426 	beq	r3,zero,41394 <__divsf3+0x32c>
   41384:	00fe0034 	movhi	r3,63488
   41388:	18ffffc4 	addi	r3,r3,-1
   4138c:	31002004 	addi	r4,r6,128
   41390:	88e2703a 	and	r17,r17,r3
   41394:	00c03f84 	movi	r3,254
   41398:	193f8016 	blt	r3,r4,4119c <__alt_data_end+0xfffc119c>
   4139c:	880c91ba 	slli	r6,r17,6
   413a0:	11c0004c 	andi	r7,r2,1
   413a4:	300cd27a 	srli	r6,r6,9
   413a8:	003f7f06 	br	411a8 <__alt_data_end+0xfffc11a8>
   413ac:	9080102c 	andhi	r2,r18,64
   413b0:	10000226 	beq	r2,zero,413bc <__divsf3+0x354>
   413b4:	8880102c 	andhi	r2,r17,64
   413b8:	10001826 	beq	r2,zero,4141c <__divsf3+0x3b4>
   413bc:	00802034 	movhi	r2,128
   413c0:	91801034 	orhi	r6,r18,64
   413c4:	10bfffc4 	addi	r2,r2,-1
   413c8:	980f883a 	mov	r7,r19
   413cc:	308c703a 	and	r6,r6,r2
   413d0:	003fc706 	br	412f0 <__alt_data_end+0xfffc12f0>
   413d4:	008000c4 	movi	r2,3
   413d8:	b8802d26 	beq	r23,r2,41490 <__divsf3+0x428>
   413dc:	00c00044 	movi	r3,1
   413e0:	b005883a 	mov	r2,r22
   413e4:	b8ffdd1e 	bne	r23,r3,4135c <__alt_data_end+0xfffc135c>
   413e8:	11c0004c 	andi	r7,r2,1
   413ec:	0009883a 	mov	r4,zero
   413f0:	000d883a 	mov	r6,zero
   413f4:	003f6c06 	br	411a8 <__alt_data_end+0xfffc11a8>
   413f8:	9023883a 	mov	r17,r18
   413fc:	003f6406 	br	41190 <__alt_data_end+0xfffc1190>
   41400:	1c47c83a 	sub	r3,r3,r17
   41404:	01000684 	movi	r4,26
   41408:	01400044 	movi	r5,1
   4140c:	003fc806 	br	41330 <__alt_data_end+0xfffc1330>
   41410:	9080102c 	andhi	r2,r18,64
   41414:	103fe926 	beq	r2,zero,413bc <__alt_data_end+0xfffc13bc>
   41418:	0023883a 	mov	r17,zero
   4141c:	00802034 	movhi	r2,128
   41420:	89801034 	orhi	r6,r17,64
   41424:	10bfffc4 	addi	r2,r2,-1
   41428:	a80f883a 	mov	r7,r21
   4142c:	308c703a 	and	r6,r6,r2
   41430:	003faf06 	br	412f0 <__alt_data_end+0xfffc12f0>
   41434:	01c00804 	movi	r7,32
   41438:	390fc83a 	sub	r7,r7,r4
   4143c:	89ce983a 	sll	r7,r17,r7
   41440:	890ad83a 	srl	r5,r17,r4
   41444:	380ec03a 	cmpne	r7,r7,zero
   41448:	29cab03a 	or	r5,r5,r7
   4144c:	28c001cc 	andi	r3,r5,7
   41450:	18000426 	beq	r3,zero,41464 <__divsf3+0x3fc>
   41454:	28c003cc 	andi	r3,r5,15
   41458:	01000104 	movi	r4,4
   4145c:	19000126 	beq	r3,r4,41464 <__divsf3+0x3fc>
   41460:	290b883a 	add	r5,r5,r4
   41464:	28c1002c 	andhi	r3,r5,1024
   41468:	18000426 	beq	r3,zero,4147c <__divsf3+0x414>
   4146c:	11c0004c 	andi	r7,r2,1
   41470:	01000044 	movi	r4,1
   41474:	000d883a 	mov	r6,zero
   41478:	003f4b06 	br	411a8 <__alt_data_end+0xfffc11a8>
   4147c:	280a91ba 	slli	r5,r5,6
   41480:	11c0004c 	andi	r7,r2,1
   41484:	0009883a 	mov	r4,zero
   41488:	280cd27a 	srli	r6,r5,9
   4148c:	003f4606 	br	411a8 <__alt_data_end+0xfffc11a8>
   41490:	00802034 	movhi	r2,128
   41494:	89801034 	orhi	r6,r17,64
   41498:	10bfffc4 	addi	r2,r2,-1
   4149c:	b00f883a 	mov	r7,r22
   414a0:	308c703a 	and	r6,r6,r2
   414a4:	003f9206 	br	412f0 <__alt_data_end+0xfffc12f0>

000414a8 <__mulsf3>:
   414a8:	defff504 	addi	sp,sp,-44
   414ac:	dc000115 	stw	r16,4(sp)
   414b0:	2020d5fa 	srli	r16,r4,23
   414b4:	dd400615 	stw	r21,24(sp)
   414b8:	202ad7fa 	srli	r21,r4,31
   414bc:	dc800315 	stw	r18,12(sp)
   414c0:	04802034 	movhi	r18,128
   414c4:	df000915 	stw	fp,36(sp)
   414c8:	dd000515 	stw	r20,20(sp)
   414cc:	94bfffc4 	addi	r18,r18,-1
   414d0:	dfc00a15 	stw	ra,40(sp)
   414d4:	ddc00815 	stw	r23,32(sp)
   414d8:	dd800715 	stw	r22,28(sp)
   414dc:	dcc00415 	stw	r19,16(sp)
   414e0:	dc400215 	stw	r17,8(sp)
   414e4:	84003fcc 	andi	r16,r16,255
   414e8:	9124703a 	and	r18,r18,r4
   414ec:	a829883a 	mov	r20,r21
   414f0:	af003fcc 	andi	fp,r21,255
   414f4:	80005426 	beq	r16,zero,41648 <__mulsf3+0x1a0>
   414f8:	00803fc4 	movi	r2,255
   414fc:	80802f26 	beq	r16,r2,415bc <__mulsf3+0x114>
   41500:	91002034 	orhi	r4,r18,128
   41504:	202490fa 	slli	r18,r4,3
   41508:	843fe044 	addi	r16,r16,-127
   4150c:	0023883a 	mov	r17,zero
   41510:	002f883a 	mov	r23,zero
   41514:	2804d5fa 	srli	r2,r5,23
   41518:	282cd7fa 	srli	r22,r5,31
   4151c:	01002034 	movhi	r4,128
   41520:	213fffc4 	addi	r4,r4,-1
   41524:	10803fcc 	andi	r2,r2,255
   41528:	2166703a 	and	r19,r4,r5
   4152c:	b1803fcc 	andi	r6,r22,255
   41530:	10004c26 	beq	r2,zero,41664 <__mulsf3+0x1bc>
   41534:	00c03fc4 	movi	r3,255
   41538:	10c04726 	beq	r2,r3,41658 <__mulsf3+0x1b0>
   4153c:	99002034 	orhi	r4,r19,128
   41540:	202690fa 	slli	r19,r4,3
   41544:	10bfe044 	addi	r2,r2,-127
   41548:	0007883a 	mov	r3,zero
   4154c:	80a1883a 	add	r16,r16,r2
   41550:	010003c4 	movi	r4,15
   41554:	1c44b03a 	or	r2,r3,r17
   41558:	b56af03a 	xor	r21,r22,r21
   4155c:	81c00044 	addi	r7,r16,1
   41560:	20806b36 	bltu	r4,r2,41710 <__mulsf3+0x268>
   41564:	100490ba 	slli	r2,r2,2
   41568:	01000134 	movhi	r4,4
   4156c:	21055f04 	addi	r4,r4,5500
   41570:	1105883a 	add	r2,r2,r4
   41574:	10800017 	ldw	r2,0(r2)
   41578:	1000683a 	jmp	r2
   4157c:	00041710 	cmplti	zero,zero,4188
   41580:	000415d0 	cmplti	zero,zero,4183
   41584:	000415d0 	cmplti	zero,zero,4183
   41588:	000415cc 	andi	zero,zero,4183
   4158c:	000416f4 	movhi	zero,4187
   41590:	000416f4 	movhi	zero,4187
   41594:	000416e0 	cmpeqi	zero,zero,4187
   41598:	000415cc 	andi	zero,zero,4183
   4159c:	000416f4 	movhi	zero,4187
   415a0:	000416e0 	cmpeqi	zero,zero,4187
   415a4:	000416f4 	movhi	zero,4187
   415a8:	000415cc 	andi	zero,zero,4183
   415ac:	00041700 	call	4170 <__alt_mem_onchip_memory2_0-0x3be90>
   415b0:	00041700 	call	4170 <__alt_mem_onchip_memory2_0-0x3be90>
   415b4:	00041700 	call	4170 <__alt_mem_onchip_memory2_0-0x3be90>
   415b8:	000417dc 	xori	zero,zero,4191
   415bc:	90003b1e 	bne	r18,zero,416ac <__mulsf3+0x204>
   415c0:	04400204 	movi	r17,8
   415c4:	05c00084 	movi	r23,2
   415c8:	003fd206 	br	41514 <__alt_data_end+0xfffc1514>
   415cc:	302b883a 	mov	r21,r6
   415d0:	00800084 	movi	r2,2
   415d4:	18802626 	beq	r3,r2,41670 <__mulsf3+0x1c8>
   415d8:	008000c4 	movi	r2,3
   415dc:	1880ab26 	beq	r3,r2,4188c <__mulsf3+0x3e4>
   415e0:	00800044 	movi	r2,1
   415e4:	1880a21e 	bne	r3,r2,41870 <__mulsf3+0x3c8>
   415e8:	a829883a 	mov	r20,r21
   415ec:	0007883a 	mov	r3,zero
   415f0:	0009883a 	mov	r4,zero
   415f4:	18803fcc 	andi	r2,r3,255
   415f8:	100695fa 	slli	r3,r2,23
   415fc:	a0803fcc 	andi	r2,r20,255
   41600:	100a97fa 	slli	r5,r2,31
   41604:	00802034 	movhi	r2,128
   41608:	10bfffc4 	addi	r2,r2,-1
   4160c:	2084703a 	and	r2,r4,r2
   41610:	10c4b03a 	or	r2,r2,r3
   41614:	1144b03a 	or	r2,r2,r5
   41618:	dfc00a17 	ldw	ra,40(sp)
   4161c:	df000917 	ldw	fp,36(sp)
   41620:	ddc00817 	ldw	r23,32(sp)
   41624:	dd800717 	ldw	r22,28(sp)
   41628:	dd400617 	ldw	r21,24(sp)
   4162c:	dd000517 	ldw	r20,20(sp)
   41630:	dcc00417 	ldw	r19,16(sp)
   41634:	dc800317 	ldw	r18,12(sp)
   41638:	dc400217 	ldw	r17,8(sp)
   4163c:	dc000117 	ldw	r16,4(sp)
   41640:	dec00b04 	addi	sp,sp,44
   41644:	f800283a 	ret
   41648:	90000d1e 	bne	r18,zero,41680 <__mulsf3+0x1d8>
   4164c:	04400104 	movi	r17,4
   41650:	05c00044 	movi	r23,1
   41654:	003faf06 	br	41514 <__alt_data_end+0xfffc1514>
   41658:	9806c03a 	cmpne	r3,r19,zero
   4165c:	18c00084 	addi	r3,r3,2
   41660:	003fba06 	br	4154c <__alt_data_end+0xfffc154c>
   41664:	9800141e 	bne	r19,zero,416b8 <__mulsf3+0x210>
   41668:	00c00044 	movi	r3,1
   4166c:	003fb706 	br	4154c <__alt_data_end+0xfffc154c>
   41670:	a829883a 	mov	r20,r21
   41674:	00ffffc4 	movi	r3,-1
   41678:	0009883a 	mov	r4,zero
   4167c:	003fdd06 	br	415f4 <__alt_data_end+0xfffc15f4>
   41680:	9009883a 	mov	r4,r18
   41684:	d9400015 	stw	r5,0(sp)
   41688:	00430040 	call	43004 <__clzsi2>
   4168c:	10fffec4 	addi	r3,r2,-5
   41690:	10801d84 	addi	r2,r2,118
   41694:	90e4983a 	sll	r18,r18,r3
   41698:	00a1c83a 	sub	r16,zero,r2
   4169c:	0023883a 	mov	r17,zero
   416a0:	002f883a 	mov	r23,zero
   416a4:	d9400017 	ldw	r5,0(sp)
   416a8:	003f9a06 	br	41514 <__alt_data_end+0xfffc1514>
   416ac:	04400304 	movi	r17,12
   416b0:	05c000c4 	movi	r23,3
   416b4:	003f9706 	br	41514 <__alt_data_end+0xfffc1514>
   416b8:	9809883a 	mov	r4,r19
   416bc:	d9800015 	stw	r6,0(sp)
   416c0:	00430040 	call	43004 <__clzsi2>
   416c4:	10fffec4 	addi	r3,r2,-5
   416c8:	10801d84 	addi	r2,r2,118
   416cc:	98e6983a 	sll	r19,r19,r3
   416d0:	0085c83a 	sub	r2,zero,r2
   416d4:	0007883a 	mov	r3,zero
   416d8:	d9800017 	ldw	r6,0(sp)
   416dc:	003f9b06 	br	4154c <__alt_data_end+0xfffc154c>
   416e0:	01002034 	movhi	r4,128
   416e4:	0029883a 	mov	r20,zero
   416e8:	213fffc4 	addi	r4,r4,-1
   416ec:	00ffffc4 	movi	r3,-1
   416f0:	003fc006 	br	415f4 <__alt_data_end+0xfffc15f4>
   416f4:	9027883a 	mov	r19,r18
   416f8:	b807883a 	mov	r3,r23
   416fc:	003fb406 	br	415d0 <__alt_data_end+0xfffc15d0>
   41700:	9027883a 	mov	r19,r18
   41704:	e02b883a 	mov	r21,fp
   41708:	b807883a 	mov	r3,r23
   4170c:	003fb006 	br	415d0 <__alt_data_end+0xfffc15d0>
   41710:	9004d43a 	srli	r2,r18,16
   41714:	9810d43a 	srli	r8,r19,16
   41718:	94bfffcc 	andi	r18,r18,65535
   4171c:	993fffcc 	andi	r4,r19,65535
   41720:	910d383a 	mul	r6,r18,r4
   41724:	20a7383a 	mul	r19,r4,r2
   41728:	9225383a 	mul	r18,r18,r8
   4172c:	3006d43a 	srli	r3,r6,16
   41730:	1211383a 	mul	r8,r2,r8
   41734:	94e5883a 	add	r18,r18,r19
   41738:	1c87883a 	add	r3,r3,r18
   4173c:	1cc0022e 	bgeu	r3,r19,41748 <__mulsf3+0x2a0>
   41740:	00800074 	movhi	r2,1
   41744:	4091883a 	add	r8,r8,r2
   41748:	1804943a 	slli	r2,r3,16
   4174c:	31bfffcc 	andi	r6,r6,65535
   41750:	1806d43a 	srli	r3,r3,16
   41754:	1185883a 	add	r2,r2,r6
   41758:	102691ba 	slli	r19,r2,6
   4175c:	1a07883a 	add	r3,r3,r8
   41760:	1004d6ba 	srli	r2,r2,26
   41764:	180891ba 	slli	r4,r3,6
   41768:	9826c03a 	cmpne	r19,r19,zero
   4176c:	9884b03a 	or	r2,r19,r2
   41770:	1126b03a 	or	r19,r2,r4
   41774:	9882002c 	andhi	r2,r19,2048
   41778:	10000426 	beq	r2,zero,4178c <__mulsf3+0x2e4>
   4177c:	9804d07a 	srli	r2,r19,1
   41780:	9900004c 	andi	r4,r19,1
   41784:	3821883a 	mov	r16,r7
   41788:	1126b03a 	or	r19,r2,r4
   4178c:	80c01fc4 	addi	r3,r16,127
   41790:	00c0210e 	bge	zero,r3,41818 <__mulsf3+0x370>
   41794:	988001cc 	andi	r2,r19,7
   41798:	10000426 	beq	r2,zero,417ac <__mulsf3+0x304>
   4179c:	988003cc 	andi	r2,r19,15
   417a0:	01000104 	movi	r4,4
   417a4:	11000126 	beq	r2,r4,417ac <__mulsf3+0x304>
   417a8:	9927883a 	add	r19,r19,r4
   417ac:	9882002c 	andhi	r2,r19,2048
   417b0:	10000426 	beq	r2,zero,417c4 <__mulsf3+0x31c>
   417b4:	00be0034 	movhi	r2,63488
   417b8:	10bfffc4 	addi	r2,r2,-1
   417bc:	80c02004 	addi	r3,r16,128
   417c0:	98a6703a 	and	r19,r19,r2
   417c4:	00803f84 	movi	r2,254
   417c8:	10ffa916 	blt	r2,r3,41670 <__alt_data_end+0xfffc1670>
   417cc:	980891ba 	slli	r4,r19,6
   417d0:	a829883a 	mov	r20,r21
   417d4:	2008d27a 	srli	r4,r4,9
   417d8:	003f8606 	br	415f4 <__alt_data_end+0xfffc15f4>
   417dc:	9080102c 	andhi	r2,r18,64
   417e0:	10000826 	beq	r2,zero,41804 <__mulsf3+0x35c>
   417e4:	9880102c 	andhi	r2,r19,64
   417e8:	1000061e 	bne	r2,zero,41804 <__mulsf3+0x35c>
   417ec:	00802034 	movhi	r2,128
   417f0:	99001034 	orhi	r4,r19,64
   417f4:	10bfffc4 	addi	r2,r2,-1
   417f8:	b029883a 	mov	r20,r22
   417fc:	2088703a 	and	r4,r4,r2
   41800:	003fba06 	br	416ec <__alt_data_end+0xfffc16ec>
   41804:	00802034 	movhi	r2,128
   41808:	91001034 	orhi	r4,r18,64
   4180c:	10bfffc4 	addi	r2,r2,-1
   41810:	2088703a 	and	r4,r4,r2
   41814:	003fb506 	br	416ec <__alt_data_end+0xfffc16ec>
   41818:	00800044 	movi	r2,1
   4181c:	10c7c83a 	sub	r3,r2,r3
   41820:	008006c4 	movi	r2,27
   41824:	10ff7016 	blt	r2,r3,415e8 <__alt_data_end+0xfffc15e8>
   41828:	00800804 	movi	r2,32
   4182c:	10c5c83a 	sub	r2,r2,r3
   41830:	9884983a 	sll	r2,r19,r2
   41834:	98c6d83a 	srl	r3,r19,r3
   41838:	1004c03a 	cmpne	r2,r2,zero
   4183c:	1884b03a 	or	r2,r3,r2
   41840:	10c001cc 	andi	r3,r2,7
   41844:	18000426 	beq	r3,zero,41858 <__mulsf3+0x3b0>
   41848:	10c003cc 	andi	r3,r2,15
   4184c:	01000104 	movi	r4,4
   41850:	19000126 	beq	r3,r4,41858 <__mulsf3+0x3b0>
   41854:	1105883a 	add	r2,r2,r4
   41858:	10c1002c 	andhi	r3,r2,1024
   4185c:	18000626 	beq	r3,zero,41878 <__mulsf3+0x3d0>
   41860:	a829883a 	mov	r20,r21
   41864:	00c00044 	movi	r3,1
   41868:	0009883a 	mov	r4,zero
   4186c:	003f6106 	br	415f4 <__alt_data_end+0xfffc15f4>
   41870:	3821883a 	mov	r16,r7
   41874:	003fc506 	br	4178c <__alt_data_end+0xfffc178c>
   41878:	100491ba 	slli	r2,r2,6
   4187c:	a829883a 	mov	r20,r21
   41880:	0007883a 	mov	r3,zero
   41884:	1008d27a 	srli	r4,r2,9
   41888:	003f5a06 	br	415f4 <__alt_data_end+0xfffc15f4>
   4188c:	00802034 	movhi	r2,128
   41890:	99001034 	orhi	r4,r19,64
   41894:	10bfffc4 	addi	r2,r2,-1
   41898:	a829883a 	mov	r20,r21
   4189c:	2088703a 	and	r4,r4,r2
   418a0:	003f9206 	br	416ec <__alt_data_end+0xfffc16ec>

000418a4 <__subsf3>:
   418a4:	defffc04 	addi	sp,sp,-16
   418a8:	280cd5fa 	srli	r6,r5,23
   418ac:	dc000015 	stw	r16,0(sp)
   418b0:	01c02034 	movhi	r7,128
   418b4:	2020d5fa 	srli	r16,r4,23
   418b8:	39ffffc4 	addi	r7,r7,-1
   418bc:	3906703a 	and	r3,r7,r4
   418c0:	dc400115 	stw	r17,4(sp)
   418c4:	394e703a 	and	r7,r7,r5
   418c8:	2022d7fa 	srli	r17,r4,31
   418cc:	dfc00315 	stw	ra,12(sp)
   418d0:	dc800215 	stw	r18,8(sp)
   418d4:	31803fcc 	andi	r6,r6,255
   418d8:	01003fc4 	movi	r4,255
   418dc:	84003fcc 	andi	r16,r16,255
   418e0:	180690fa 	slli	r3,r3,3
   418e4:	2804d7fa 	srli	r2,r5,31
   418e8:	380e90fa 	slli	r7,r7,3
   418ec:	31006d26 	beq	r6,r4,41aa4 <__subsf3+0x200>
   418f0:	1080005c 	xori	r2,r2,1
   418f4:	8189c83a 	sub	r4,r16,r6
   418f8:	14404f26 	beq	r2,r17,41a38 <__subsf3+0x194>
   418fc:	0100770e 	bge	zero,r4,41adc <__subsf3+0x238>
   41900:	30001e1e 	bne	r6,zero,4197c <__subsf3+0xd8>
   41904:	38006a1e 	bne	r7,zero,41ab0 <__subsf3+0x20c>
   41908:	188001cc 	andi	r2,r3,7
   4190c:	10000426 	beq	r2,zero,41920 <__subsf3+0x7c>
   41910:	188003cc 	andi	r2,r3,15
   41914:	01000104 	movi	r4,4
   41918:	11000126 	beq	r2,r4,41920 <__subsf3+0x7c>
   4191c:	1907883a 	add	r3,r3,r4
   41920:	1881002c 	andhi	r2,r3,1024
   41924:	10003926 	beq	r2,zero,41a0c <__subsf3+0x168>
   41928:	84000044 	addi	r16,r16,1
   4192c:	00803fc4 	movi	r2,255
   41930:	80807526 	beq	r16,r2,41b08 <__subsf3+0x264>
   41934:	180691ba 	slli	r3,r3,6
   41938:	8880004c 	andi	r2,r17,1
   4193c:	180ad27a 	srli	r5,r3,9
   41940:	84003fcc 	andi	r16,r16,255
   41944:	800695fa 	slli	r3,r16,23
   41948:	10803fcc 	andi	r2,r2,255
   4194c:	01002034 	movhi	r4,128
   41950:	213fffc4 	addi	r4,r4,-1
   41954:	100497fa 	slli	r2,r2,31
   41958:	2920703a 	and	r16,r5,r4
   4195c:	80e0b03a 	or	r16,r16,r3
   41960:	8084b03a 	or	r2,r16,r2
   41964:	dfc00317 	ldw	ra,12(sp)
   41968:	dc800217 	ldw	r18,8(sp)
   4196c:	dc400117 	ldw	r17,4(sp)
   41970:	dc000017 	ldw	r16,0(sp)
   41974:	dec00404 	addi	sp,sp,16
   41978:	f800283a 	ret
   4197c:	00803fc4 	movi	r2,255
   41980:	80bfe126 	beq	r16,r2,41908 <__alt_data_end+0xfffc1908>
   41984:	39c10034 	orhi	r7,r7,1024
   41988:	008006c4 	movi	r2,27
   4198c:	11007416 	blt	r2,r4,41b60 <__subsf3+0x2bc>
   41990:	00800804 	movi	r2,32
   41994:	1105c83a 	sub	r2,r2,r4
   41998:	3884983a 	sll	r2,r7,r2
   4199c:	390ed83a 	srl	r7,r7,r4
   419a0:	1008c03a 	cmpne	r4,r2,zero
   419a4:	390eb03a 	or	r7,r7,r4
   419a8:	19c7c83a 	sub	r3,r3,r7
   419ac:	1881002c 	andhi	r2,r3,1024
   419b0:	10001426 	beq	r2,zero,41a04 <__subsf3+0x160>
   419b4:	04810034 	movhi	r18,1024
   419b8:	94bfffc4 	addi	r18,r18,-1
   419bc:	1ca4703a 	and	r18,r3,r18
   419c0:	9009883a 	mov	r4,r18
   419c4:	00430040 	call	43004 <__clzsi2>
   419c8:	10bffec4 	addi	r2,r2,-5
   419cc:	90a4983a 	sll	r18,r18,r2
   419d0:	14005116 	blt	r2,r16,41b18 <__subsf3+0x274>
   419d4:	1405c83a 	sub	r2,r2,r16
   419d8:	10c00044 	addi	r3,r2,1
   419dc:	00800804 	movi	r2,32
   419e0:	10c5c83a 	sub	r2,r2,r3
   419e4:	9084983a 	sll	r2,r18,r2
   419e8:	90e4d83a 	srl	r18,r18,r3
   419ec:	0021883a 	mov	r16,zero
   419f0:	1006c03a 	cmpne	r3,r2,zero
   419f4:	90c6b03a 	or	r3,r18,r3
   419f8:	003fc306 	br	41908 <__alt_data_end+0xfffc1908>
   419fc:	2000e026 	beq	r4,zero,41d80 <__subsf3+0x4dc>
   41a00:	2007883a 	mov	r3,r4
   41a04:	188001cc 	andi	r2,r3,7
   41a08:	103fc11e 	bne	r2,zero,41910 <__alt_data_end+0xfffc1910>
   41a0c:	180ad0fa 	srli	r5,r3,3
   41a10:	00c03fc4 	movi	r3,255
   41a14:	8880004c 	andi	r2,r17,1
   41a18:	80c0031e 	bne	r16,r3,41a28 <__subsf3+0x184>
   41a1c:	28006d26 	beq	r5,zero,41bd4 <__subsf3+0x330>
   41a20:	29401034 	orhi	r5,r5,64
   41a24:	043fffc4 	movi	r16,-1
   41a28:	00c02034 	movhi	r3,128
   41a2c:	18ffffc4 	addi	r3,r3,-1
   41a30:	28ca703a 	and	r5,r5,r3
   41a34:	003fc206 	br	41940 <__alt_data_end+0xfffc1940>
   41a38:	01003c0e 	bge	zero,r4,41b2c <__subsf3+0x288>
   41a3c:	30002126 	beq	r6,zero,41ac4 <__subsf3+0x220>
   41a40:	01403fc4 	movi	r5,255
   41a44:	817fb026 	beq	r16,r5,41908 <__alt_data_end+0xfffc1908>
   41a48:	39c10034 	orhi	r7,r7,1024
   41a4c:	014006c4 	movi	r5,27
   41a50:	29007416 	blt	r5,r4,41c24 <__subsf3+0x380>
   41a54:	01400804 	movi	r5,32
   41a58:	290bc83a 	sub	r5,r5,r4
   41a5c:	394a983a 	sll	r5,r7,r5
   41a60:	390ed83a 	srl	r7,r7,r4
   41a64:	2808c03a 	cmpne	r4,r5,zero
   41a68:	390eb03a 	or	r7,r7,r4
   41a6c:	19c7883a 	add	r3,r3,r7
   41a70:	1901002c 	andhi	r4,r3,1024
   41a74:	20003826 	beq	r4,zero,41b58 <__subsf3+0x2b4>
   41a78:	84000044 	addi	r16,r16,1
   41a7c:	01003fc4 	movi	r4,255
   41a80:	81005426 	beq	r16,r4,41bd4 <__subsf3+0x330>
   41a84:	1023883a 	mov	r17,r2
   41a88:	00bf0034 	movhi	r2,64512
   41a8c:	10bfffc4 	addi	r2,r2,-1
   41a90:	1900004c 	andi	r4,r3,1
   41a94:	1886703a 	and	r3,r3,r2
   41a98:	1806d07a 	srli	r3,r3,1
   41a9c:	1906b03a 	or	r3,r3,r4
   41aa0:	003f9906 	br	41908 <__alt_data_end+0xfffc1908>
   41aa4:	383f9226 	beq	r7,zero,418f0 <__alt_data_end+0xfffc18f0>
   41aa8:	10803fcc 	andi	r2,r2,255
   41aac:	003f9106 	br	418f4 <__alt_data_end+0xfffc18f4>
   41ab0:	213fffc4 	addi	r4,r4,-1
   41ab4:	203fbc26 	beq	r4,zero,419a8 <__alt_data_end+0xfffc19a8>
   41ab8:	00803fc4 	movi	r2,255
   41abc:	80bfb21e 	bne	r16,r2,41988 <__alt_data_end+0xfffc1988>
   41ac0:	003f9106 	br	41908 <__alt_data_end+0xfffc1908>
   41ac4:	383f9026 	beq	r7,zero,41908 <__alt_data_end+0xfffc1908>
   41ac8:	213fffc4 	addi	r4,r4,-1
   41acc:	203fe726 	beq	r4,zero,41a6c <__alt_data_end+0xfffc1a6c>
   41ad0:	01403fc4 	movi	r5,255
   41ad4:	817fdd1e 	bne	r16,r5,41a4c <__alt_data_end+0xfffc1a4c>
   41ad8:	003f8b06 	br	41908 <__alt_data_end+0xfffc1908>
   41adc:	2000221e 	bne	r4,zero,41b68 <__subsf3+0x2c4>
   41ae0:	81000044 	addi	r4,r16,1
   41ae4:	21003fcc 	andi	r4,r4,255
   41ae8:	01400044 	movi	r5,1
   41aec:	2900470e 	bge	r5,r4,41c0c <__subsf3+0x368>
   41af0:	19e5c83a 	sub	r18,r3,r7
   41af4:	9141002c 	andhi	r5,r18,1024
   41af8:	28002d26 	beq	r5,zero,41bb0 <__subsf3+0x30c>
   41afc:	38e5c83a 	sub	r18,r7,r3
   41b00:	1023883a 	mov	r17,r2
   41b04:	003fae06 	br	419c0 <__alt_data_end+0xfffc19c0>
   41b08:	8880004c 	andi	r2,r17,1
   41b0c:	043fffc4 	movi	r16,-1
   41b10:	000b883a 	mov	r5,zero
   41b14:	003f8a06 	br	41940 <__alt_data_end+0xfffc1940>
   41b18:	00ff0034 	movhi	r3,64512
   41b1c:	18ffffc4 	addi	r3,r3,-1
   41b20:	80a1c83a 	sub	r16,r16,r2
   41b24:	90c6703a 	and	r3,r18,r3
   41b28:	003f7706 	br	41908 <__alt_data_end+0xfffc1908>
   41b2c:	2000431e 	bne	r4,zero,41c3c <__subsf3+0x398>
   41b30:	81000044 	addi	r4,r16,1
   41b34:	21803fcc 	andi	r6,r4,255
   41b38:	01400044 	movi	r5,1
   41b3c:	2980280e 	bge	r5,r6,41be0 <__subsf3+0x33c>
   41b40:	01403fc4 	movi	r5,255
   41b44:	21402326 	beq	r4,r5,41bd4 <__subsf3+0x330>
   41b48:	19c7883a 	add	r3,r3,r7
   41b4c:	1806d07a 	srli	r3,r3,1
   41b50:	2021883a 	mov	r16,r4
   41b54:	003f6c06 	br	41908 <__alt_data_end+0xfffc1908>
   41b58:	1023883a 	mov	r17,r2
   41b5c:	003fa906 	br	41a04 <__alt_data_end+0xfffc1a04>
   41b60:	01c00044 	movi	r7,1
   41b64:	003f9006 	br	419a8 <__alt_data_end+0xfffc19a8>
   41b68:	8000151e 	bne	r16,zero,41bc0 <__subsf3+0x31c>
   41b6c:	18002f26 	beq	r3,zero,41c2c <__subsf3+0x388>
   41b70:	0108303a 	nor	r4,zero,r4
   41b74:	20000a26 	beq	r4,zero,41ba0 <__subsf3+0x2fc>
   41b78:	01403fc4 	movi	r5,255
   41b7c:	31402b26 	beq	r6,r5,41c2c <__subsf3+0x388>
   41b80:	014006c4 	movi	r5,27
   41b84:	29006e16 	blt	r5,r4,41d40 <__subsf3+0x49c>
   41b88:	01400804 	movi	r5,32
   41b8c:	290bc83a 	sub	r5,r5,r4
   41b90:	194a983a 	sll	r5,r3,r5
   41b94:	1908d83a 	srl	r4,r3,r4
   41b98:	2806c03a 	cmpne	r3,r5,zero
   41b9c:	20c6b03a 	or	r3,r4,r3
   41ba0:	38c7c83a 	sub	r3,r7,r3
   41ba4:	3021883a 	mov	r16,r6
   41ba8:	1023883a 	mov	r17,r2
   41bac:	003f7f06 	br	419ac <__alt_data_end+0xfffc19ac>
   41bb0:	903f831e 	bne	r18,zero,419c0 <__alt_data_end+0xfffc19c0>
   41bb4:	0005883a 	mov	r2,zero
   41bb8:	0021883a 	mov	r16,zero
   41bbc:	003f9a06 	br	41a28 <__alt_data_end+0xfffc1a28>
   41bc0:	01403fc4 	movi	r5,255
   41bc4:	31401926 	beq	r6,r5,41c2c <__subsf3+0x388>
   41bc8:	0109c83a 	sub	r4,zero,r4
   41bcc:	18c10034 	orhi	r3,r3,1024
   41bd0:	003feb06 	br	41b80 <__alt_data_end+0xfffc1b80>
   41bd4:	043fffc4 	movi	r16,-1
   41bd8:	000b883a 	mov	r5,zero
   41bdc:	003f5806 	br	41940 <__alt_data_end+0xfffc1940>
   41be0:	8000481e 	bne	r16,zero,41d04 <__subsf3+0x460>
   41be4:	18006226 	beq	r3,zero,41d70 <__subsf3+0x4cc>
   41be8:	383f4726 	beq	r7,zero,41908 <__alt_data_end+0xfffc1908>
   41bec:	19c7883a 	add	r3,r3,r7
   41bf0:	1881002c 	andhi	r2,r3,1024
   41bf4:	103f8326 	beq	r2,zero,41a04 <__alt_data_end+0xfffc1a04>
   41bf8:	00bf0034 	movhi	r2,64512
   41bfc:	10bfffc4 	addi	r2,r2,-1
   41c00:	2821883a 	mov	r16,r5
   41c04:	1886703a 	and	r3,r3,r2
   41c08:	003f3f06 	br	41908 <__alt_data_end+0xfffc1908>
   41c0c:	80001c1e 	bne	r16,zero,41c80 <__subsf3+0x3dc>
   41c10:	1800261e 	bne	r3,zero,41cac <__subsf3+0x408>
   41c14:	38004c26 	beq	r7,zero,41d48 <__subsf3+0x4a4>
   41c18:	3807883a 	mov	r3,r7
   41c1c:	1023883a 	mov	r17,r2
   41c20:	003f3906 	br	41908 <__alt_data_end+0xfffc1908>
   41c24:	01c00044 	movi	r7,1
   41c28:	003f9006 	br	41a6c <__alt_data_end+0xfffc1a6c>
   41c2c:	3807883a 	mov	r3,r7
   41c30:	3021883a 	mov	r16,r6
   41c34:	1023883a 	mov	r17,r2
   41c38:	003f3306 	br	41908 <__alt_data_end+0xfffc1908>
   41c3c:	8000161e 	bne	r16,zero,41c98 <__subsf3+0x3f4>
   41c40:	18002d26 	beq	r3,zero,41cf8 <__subsf3+0x454>
   41c44:	0108303a 	nor	r4,zero,r4
   41c48:	20000a26 	beq	r4,zero,41c74 <__subsf3+0x3d0>
   41c4c:	01403fc4 	movi	r5,255
   41c50:	31402926 	beq	r6,r5,41cf8 <__subsf3+0x454>
   41c54:	014006c4 	movi	r5,27
   41c58:	29004716 	blt	r5,r4,41d78 <__subsf3+0x4d4>
   41c5c:	01400804 	movi	r5,32
   41c60:	290bc83a 	sub	r5,r5,r4
   41c64:	194a983a 	sll	r5,r3,r5
   41c68:	1908d83a 	srl	r4,r3,r4
   41c6c:	2806c03a 	cmpne	r3,r5,zero
   41c70:	20c6b03a 	or	r3,r4,r3
   41c74:	19c7883a 	add	r3,r3,r7
   41c78:	3021883a 	mov	r16,r6
   41c7c:	003f7c06 	br	41a70 <__alt_data_end+0xfffc1a70>
   41c80:	1800111e 	bne	r3,zero,41cc8 <__subsf3+0x424>
   41c84:	38003326 	beq	r7,zero,41d54 <__subsf3+0x4b0>
   41c88:	3807883a 	mov	r3,r7
   41c8c:	1023883a 	mov	r17,r2
   41c90:	04003fc4 	movi	r16,255
   41c94:	003f1c06 	br	41908 <__alt_data_end+0xfffc1908>
   41c98:	01403fc4 	movi	r5,255
   41c9c:	31401626 	beq	r6,r5,41cf8 <__subsf3+0x454>
   41ca0:	0109c83a 	sub	r4,zero,r4
   41ca4:	18c10034 	orhi	r3,r3,1024
   41ca8:	003fea06 	br	41c54 <__alt_data_end+0xfffc1c54>
   41cac:	383f1626 	beq	r7,zero,41908 <__alt_data_end+0xfffc1908>
   41cb0:	19c9c83a 	sub	r4,r3,r7
   41cb4:	2141002c 	andhi	r5,r4,1024
   41cb8:	283f5026 	beq	r5,zero,419fc <__alt_data_end+0xfffc19fc>
   41cbc:	38c7c83a 	sub	r3,r7,r3
   41cc0:	1023883a 	mov	r17,r2
   41cc4:	003f1006 	br	41908 <__alt_data_end+0xfffc1908>
   41cc8:	38001b26 	beq	r7,zero,41d38 <__subsf3+0x494>
   41ccc:	1806d0fa 	srli	r3,r3,3
   41cd0:	1900102c 	andhi	r4,r3,64
   41cd4:	20000526 	beq	r4,zero,41cec <__subsf3+0x448>
   41cd8:	380ed0fa 	srli	r7,r7,3
   41cdc:	3900102c 	andhi	r4,r7,64
   41ce0:	2000021e 	bne	r4,zero,41cec <__subsf3+0x448>
   41ce4:	3807883a 	mov	r3,r7
   41ce8:	1023883a 	mov	r17,r2
   41cec:	180690fa 	slli	r3,r3,3
   41cf0:	04003fc4 	movi	r16,255
   41cf4:	003f0406 	br	41908 <__alt_data_end+0xfffc1908>
   41cf8:	3807883a 	mov	r3,r7
   41cfc:	3021883a 	mov	r16,r6
   41d00:	003f0106 	br	41908 <__alt_data_end+0xfffc1908>
   41d04:	18001726 	beq	r3,zero,41d64 <__subsf3+0x4c0>
   41d08:	38000b26 	beq	r7,zero,41d38 <__subsf3+0x494>
   41d0c:	1806d0fa 	srli	r3,r3,3
   41d10:	1900102c 	andhi	r4,r3,64
   41d14:	20000426 	beq	r4,zero,41d28 <__subsf3+0x484>
   41d18:	380ed0fa 	srli	r7,r7,3
   41d1c:	3900102c 	andhi	r4,r7,64
   41d20:	2000011e 	bne	r4,zero,41d28 <__subsf3+0x484>
   41d24:	3807883a 	mov	r3,r7
   41d28:	180690fa 	slli	r3,r3,3
   41d2c:	1023883a 	mov	r17,r2
   41d30:	04003fc4 	movi	r16,255
   41d34:	003ef406 	br	41908 <__alt_data_end+0xfffc1908>
   41d38:	04003fc4 	movi	r16,255
   41d3c:	003ef206 	br	41908 <__alt_data_end+0xfffc1908>
   41d40:	00c00044 	movi	r3,1
   41d44:	003f9606 	br	41ba0 <__alt_data_end+0xfffc1ba0>
   41d48:	000b883a 	mov	r5,zero
   41d4c:	0005883a 	mov	r2,zero
   41d50:	003f3506 	br	41a28 <__alt_data_end+0xfffc1a28>
   41d54:	01402034 	movhi	r5,128
   41d58:	297fffc4 	addi	r5,r5,-1
   41d5c:	0005883a 	mov	r2,zero
   41d60:	003f2f06 	br	41a20 <__alt_data_end+0xfffc1a20>
   41d64:	3807883a 	mov	r3,r7
   41d68:	04003fc4 	movi	r16,255
   41d6c:	003ee606 	br	41908 <__alt_data_end+0xfffc1908>
   41d70:	3807883a 	mov	r3,r7
   41d74:	003ee406 	br	41908 <__alt_data_end+0xfffc1908>
   41d78:	00c00044 	movi	r3,1
   41d7c:	003fbd06 	br	41c74 <__alt_data_end+0xfffc1c74>
   41d80:	0005883a 	mov	r2,zero
   41d84:	003f2806 	br	41a28 <__alt_data_end+0xfffc1a28>

00041d88 <__adddf3>:
   41d88:	02c00434 	movhi	r11,16
   41d8c:	5affffc4 	addi	r11,r11,-1
   41d90:	2806d7fa 	srli	r3,r5,31
   41d94:	2ad4703a 	and	r10,r5,r11
   41d98:	3ad2703a 	and	r9,r7,r11
   41d9c:	3804d53a 	srli	r2,r7,20
   41da0:	3018d77a 	srli	r12,r6,29
   41da4:	280ad53a 	srli	r5,r5,20
   41da8:	501490fa 	slli	r10,r10,3
   41dac:	2010d77a 	srli	r8,r4,29
   41db0:	481290fa 	slli	r9,r9,3
   41db4:	380ed7fa 	srli	r7,r7,31
   41db8:	defffb04 	addi	sp,sp,-20
   41dbc:	dc800215 	stw	r18,8(sp)
   41dc0:	dc400115 	stw	r17,4(sp)
   41dc4:	dc000015 	stw	r16,0(sp)
   41dc8:	dfc00415 	stw	ra,16(sp)
   41dcc:	dcc00315 	stw	r19,12(sp)
   41dd0:	1c803fcc 	andi	r18,r3,255
   41dd4:	2c01ffcc 	andi	r16,r5,2047
   41dd8:	5210b03a 	or	r8,r10,r8
   41ddc:	202290fa 	slli	r17,r4,3
   41de0:	1081ffcc 	andi	r2,r2,2047
   41de4:	4b12b03a 	or	r9,r9,r12
   41de8:	300c90fa 	slli	r6,r6,3
   41dec:	91c07526 	beq	r18,r7,41fc4 <__adddf3+0x23c>
   41df0:	8087c83a 	sub	r3,r16,r2
   41df4:	00c0ab0e 	bge	zero,r3,420a4 <__adddf3+0x31c>
   41df8:	10002a1e 	bne	r2,zero,41ea4 <__adddf3+0x11c>
   41dfc:	4984b03a 	or	r2,r9,r6
   41e00:	1000961e 	bne	r2,zero,4205c <__adddf3+0x2d4>
   41e04:	888001cc 	andi	r2,r17,7
   41e08:	10000726 	beq	r2,zero,41e28 <__adddf3+0xa0>
   41e0c:	888003cc 	andi	r2,r17,15
   41e10:	00c00104 	movi	r3,4
   41e14:	10c00426 	beq	r2,r3,41e28 <__adddf3+0xa0>
   41e18:	88c7883a 	add	r3,r17,r3
   41e1c:	1c63803a 	cmpltu	r17,r3,r17
   41e20:	4451883a 	add	r8,r8,r17
   41e24:	1823883a 	mov	r17,r3
   41e28:	4080202c 	andhi	r2,r8,128
   41e2c:	10005926 	beq	r2,zero,41f94 <__adddf3+0x20c>
   41e30:	84000044 	addi	r16,r16,1
   41e34:	0081ffc4 	movi	r2,2047
   41e38:	8080ba26 	beq	r16,r2,42124 <__adddf3+0x39c>
   41e3c:	00bfe034 	movhi	r2,65408
   41e40:	10bfffc4 	addi	r2,r2,-1
   41e44:	4090703a 	and	r8,r8,r2
   41e48:	4004977a 	slli	r2,r8,29
   41e4c:	4010927a 	slli	r8,r8,9
   41e50:	8822d0fa 	srli	r17,r17,3
   41e54:	8401ffcc 	andi	r16,r16,2047
   41e58:	4010d33a 	srli	r8,r8,12
   41e5c:	9007883a 	mov	r3,r18
   41e60:	1444b03a 	or	r2,r2,r17
   41e64:	8401ffcc 	andi	r16,r16,2047
   41e68:	8020953a 	slli	r16,r16,20
   41e6c:	18c03fcc 	andi	r3,r3,255
   41e70:	01000434 	movhi	r4,16
   41e74:	213fffc4 	addi	r4,r4,-1
   41e78:	180697fa 	slli	r3,r3,31
   41e7c:	4110703a 	and	r8,r8,r4
   41e80:	4410b03a 	or	r8,r8,r16
   41e84:	40c6b03a 	or	r3,r8,r3
   41e88:	dfc00417 	ldw	ra,16(sp)
   41e8c:	dcc00317 	ldw	r19,12(sp)
   41e90:	dc800217 	ldw	r18,8(sp)
   41e94:	dc400117 	ldw	r17,4(sp)
   41e98:	dc000017 	ldw	r16,0(sp)
   41e9c:	dec00504 	addi	sp,sp,20
   41ea0:	f800283a 	ret
   41ea4:	0081ffc4 	movi	r2,2047
   41ea8:	80bfd626 	beq	r16,r2,41e04 <__alt_data_end+0xfffc1e04>
   41eac:	4a402034 	orhi	r9,r9,128
   41eb0:	00800e04 	movi	r2,56
   41eb4:	10c09f16 	blt	r2,r3,42134 <__adddf3+0x3ac>
   41eb8:	008007c4 	movi	r2,31
   41ebc:	10c0c216 	blt	r2,r3,421c8 <__adddf3+0x440>
   41ec0:	00800804 	movi	r2,32
   41ec4:	10c5c83a 	sub	r2,r2,r3
   41ec8:	488a983a 	sll	r5,r9,r2
   41ecc:	30c8d83a 	srl	r4,r6,r3
   41ed0:	3084983a 	sll	r2,r6,r2
   41ed4:	48c6d83a 	srl	r3,r9,r3
   41ed8:	290cb03a 	or	r6,r5,r4
   41edc:	1004c03a 	cmpne	r2,r2,zero
   41ee0:	308cb03a 	or	r6,r6,r2
   41ee4:	898dc83a 	sub	r6,r17,r6
   41ee8:	89a3803a 	cmpltu	r17,r17,r6
   41eec:	40d1c83a 	sub	r8,r8,r3
   41ef0:	4451c83a 	sub	r8,r8,r17
   41ef4:	3023883a 	mov	r17,r6
   41ef8:	4080202c 	andhi	r2,r8,128
   41efc:	10002326 	beq	r2,zero,41f8c <__adddf3+0x204>
   41f00:	04c02034 	movhi	r19,128
   41f04:	9cffffc4 	addi	r19,r19,-1
   41f08:	44e6703a 	and	r19,r8,r19
   41f0c:	98007626 	beq	r19,zero,420e8 <__adddf3+0x360>
   41f10:	9809883a 	mov	r4,r19
   41f14:	00430040 	call	43004 <__clzsi2>
   41f18:	10fffe04 	addi	r3,r2,-8
   41f1c:	010007c4 	movi	r4,31
   41f20:	20c07716 	blt	r4,r3,42100 <__adddf3+0x378>
   41f24:	00800804 	movi	r2,32
   41f28:	10c5c83a 	sub	r2,r2,r3
   41f2c:	8884d83a 	srl	r2,r17,r2
   41f30:	98d0983a 	sll	r8,r19,r3
   41f34:	88e2983a 	sll	r17,r17,r3
   41f38:	1204b03a 	or	r2,r2,r8
   41f3c:	1c007416 	blt	r3,r16,42110 <__adddf3+0x388>
   41f40:	1c21c83a 	sub	r16,r3,r16
   41f44:	82000044 	addi	r8,r16,1
   41f48:	00c007c4 	movi	r3,31
   41f4c:	1a009116 	blt	r3,r8,42194 <__adddf3+0x40c>
   41f50:	00c00804 	movi	r3,32
   41f54:	1a07c83a 	sub	r3,r3,r8
   41f58:	8a08d83a 	srl	r4,r17,r8
   41f5c:	88e2983a 	sll	r17,r17,r3
   41f60:	10c6983a 	sll	r3,r2,r3
   41f64:	1210d83a 	srl	r8,r2,r8
   41f68:	8804c03a 	cmpne	r2,r17,zero
   41f6c:	1906b03a 	or	r3,r3,r4
   41f70:	18a2b03a 	or	r17,r3,r2
   41f74:	0021883a 	mov	r16,zero
   41f78:	003fa206 	br	41e04 <__alt_data_end+0xfffc1e04>
   41f7c:	1890b03a 	or	r8,r3,r2
   41f80:	40017d26 	beq	r8,zero,42578 <__adddf3+0x7f0>
   41f84:	1011883a 	mov	r8,r2
   41f88:	1823883a 	mov	r17,r3
   41f8c:	888001cc 	andi	r2,r17,7
   41f90:	103f9e1e 	bne	r2,zero,41e0c <__alt_data_end+0xfffc1e0c>
   41f94:	4004977a 	slli	r2,r8,29
   41f98:	8822d0fa 	srli	r17,r17,3
   41f9c:	4010d0fa 	srli	r8,r8,3
   41fa0:	9007883a 	mov	r3,r18
   41fa4:	1444b03a 	or	r2,r2,r17
   41fa8:	0101ffc4 	movi	r4,2047
   41fac:	81002426 	beq	r16,r4,42040 <__adddf3+0x2b8>
   41fb0:	8120703a 	and	r16,r16,r4
   41fb4:	01000434 	movhi	r4,16
   41fb8:	213fffc4 	addi	r4,r4,-1
   41fbc:	4110703a 	and	r8,r8,r4
   41fc0:	003fa806 	br	41e64 <__alt_data_end+0xfffc1e64>
   41fc4:	8089c83a 	sub	r4,r16,r2
   41fc8:	01005e0e 	bge	zero,r4,42144 <__adddf3+0x3bc>
   41fcc:	10002b26 	beq	r2,zero,4207c <__adddf3+0x2f4>
   41fd0:	0081ffc4 	movi	r2,2047
   41fd4:	80bf8b26 	beq	r16,r2,41e04 <__alt_data_end+0xfffc1e04>
   41fd8:	4a402034 	orhi	r9,r9,128
   41fdc:	00800e04 	movi	r2,56
   41fe0:	1100a40e 	bge	r2,r4,42274 <__adddf3+0x4ec>
   41fe4:	498cb03a 	or	r6,r9,r6
   41fe8:	300ac03a 	cmpne	r5,r6,zero
   41fec:	0013883a 	mov	r9,zero
   41ff0:	2c4b883a 	add	r5,r5,r17
   41ff4:	2c63803a 	cmpltu	r17,r5,r17
   41ff8:	4a11883a 	add	r8,r9,r8
   41ffc:	8a11883a 	add	r8,r17,r8
   42000:	2823883a 	mov	r17,r5
   42004:	4080202c 	andhi	r2,r8,128
   42008:	103fe026 	beq	r2,zero,41f8c <__alt_data_end+0xfffc1f8c>
   4200c:	84000044 	addi	r16,r16,1
   42010:	0081ffc4 	movi	r2,2047
   42014:	8080d226 	beq	r16,r2,42360 <__adddf3+0x5d8>
   42018:	00bfe034 	movhi	r2,65408
   4201c:	10bfffc4 	addi	r2,r2,-1
   42020:	4090703a 	and	r8,r8,r2
   42024:	880ad07a 	srli	r5,r17,1
   42028:	400897fa 	slli	r4,r8,31
   4202c:	88c0004c 	andi	r3,r17,1
   42030:	28e2b03a 	or	r17,r5,r3
   42034:	4010d07a 	srli	r8,r8,1
   42038:	2462b03a 	or	r17,r4,r17
   4203c:	003f7106 	br	41e04 <__alt_data_end+0xfffc1e04>
   42040:	4088b03a 	or	r4,r8,r2
   42044:	20014526 	beq	r4,zero,4255c <__adddf3+0x7d4>
   42048:	01000434 	movhi	r4,16
   4204c:	42000234 	orhi	r8,r8,8
   42050:	213fffc4 	addi	r4,r4,-1
   42054:	4110703a 	and	r8,r8,r4
   42058:	003f8206 	br	41e64 <__alt_data_end+0xfffc1e64>
   4205c:	18ffffc4 	addi	r3,r3,-1
   42060:	1800491e 	bne	r3,zero,42188 <__adddf3+0x400>
   42064:	898bc83a 	sub	r5,r17,r6
   42068:	8963803a 	cmpltu	r17,r17,r5
   4206c:	4251c83a 	sub	r8,r8,r9
   42070:	4451c83a 	sub	r8,r8,r17
   42074:	2823883a 	mov	r17,r5
   42078:	003f9f06 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   4207c:	4984b03a 	or	r2,r9,r6
   42080:	103f6026 	beq	r2,zero,41e04 <__alt_data_end+0xfffc1e04>
   42084:	213fffc4 	addi	r4,r4,-1
   42088:	2000931e 	bne	r4,zero,422d8 <__adddf3+0x550>
   4208c:	898d883a 	add	r6,r17,r6
   42090:	3463803a 	cmpltu	r17,r6,r17
   42094:	4251883a 	add	r8,r8,r9
   42098:	8a11883a 	add	r8,r17,r8
   4209c:	3023883a 	mov	r17,r6
   420a0:	003fd806 	br	42004 <__alt_data_end+0xfffc2004>
   420a4:	1800541e 	bne	r3,zero,421f8 <__adddf3+0x470>
   420a8:	80800044 	addi	r2,r16,1
   420ac:	1081ffcc 	andi	r2,r2,2047
   420b0:	00c00044 	movi	r3,1
   420b4:	1880a00e 	bge	r3,r2,42338 <__adddf3+0x5b0>
   420b8:	8989c83a 	sub	r4,r17,r6
   420bc:	8905803a 	cmpltu	r2,r17,r4
   420c0:	4267c83a 	sub	r19,r8,r9
   420c4:	98a7c83a 	sub	r19,r19,r2
   420c8:	9880202c 	andhi	r2,r19,128
   420cc:	10006326 	beq	r2,zero,4225c <__adddf3+0x4d4>
   420d0:	3463c83a 	sub	r17,r6,r17
   420d4:	4a07c83a 	sub	r3,r9,r8
   420d8:	344d803a 	cmpltu	r6,r6,r17
   420dc:	19a7c83a 	sub	r19,r3,r6
   420e0:	3825883a 	mov	r18,r7
   420e4:	983f8a1e 	bne	r19,zero,41f10 <__alt_data_end+0xfffc1f10>
   420e8:	8809883a 	mov	r4,r17
   420ec:	00430040 	call	43004 <__clzsi2>
   420f0:	10800804 	addi	r2,r2,32
   420f4:	10fffe04 	addi	r3,r2,-8
   420f8:	010007c4 	movi	r4,31
   420fc:	20ff890e 	bge	r4,r3,41f24 <__alt_data_end+0xfffc1f24>
   42100:	10bff604 	addi	r2,r2,-40
   42104:	8884983a 	sll	r2,r17,r2
   42108:	0023883a 	mov	r17,zero
   4210c:	1c3f8c0e 	bge	r3,r16,41f40 <__alt_data_end+0xfffc1f40>
   42110:	023fe034 	movhi	r8,65408
   42114:	423fffc4 	addi	r8,r8,-1
   42118:	80e1c83a 	sub	r16,r16,r3
   4211c:	1210703a 	and	r8,r2,r8
   42120:	003f3806 	br	41e04 <__alt_data_end+0xfffc1e04>
   42124:	9007883a 	mov	r3,r18
   42128:	0011883a 	mov	r8,zero
   4212c:	0005883a 	mov	r2,zero
   42130:	003f4c06 	br	41e64 <__alt_data_end+0xfffc1e64>
   42134:	498cb03a 	or	r6,r9,r6
   42138:	300cc03a 	cmpne	r6,r6,zero
   4213c:	0007883a 	mov	r3,zero
   42140:	003f6806 	br	41ee4 <__alt_data_end+0xfffc1ee4>
   42144:	20009c1e 	bne	r4,zero,423b8 <__adddf3+0x630>
   42148:	80800044 	addi	r2,r16,1
   4214c:	1141ffcc 	andi	r5,r2,2047
   42150:	01000044 	movi	r4,1
   42154:	2140670e 	bge	r4,r5,422f4 <__adddf3+0x56c>
   42158:	0101ffc4 	movi	r4,2047
   4215c:	11007f26 	beq	r2,r4,4235c <__adddf3+0x5d4>
   42160:	898d883a 	add	r6,r17,r6
   42164:	4247883a 	add	r3,r8,r9
   42168:	3451803a 	cmpltu	r8,r6,r17
   4216c:	40d1883a 	add	r8,r8,r3
   42170:	402297fa 	slli	r17,r8,31
   42174:	300cd07a 	srli	r6,r6,1
   42178:	4010d07a 	srli	r8,r8,1
   4217c:	1021883a 	mov	r16,r2
   42180:	89a2b03a 	or	r17,r17,r6
   42184:	003f1f06 	br	41e04 <__alt_data_end+0xfffc1e04>
   42188:	0081ffc4 	movi	r2,2047
   4218c:	80bf481e 	bne	r16,r2,41eb0 <__alt_data_end+0xfffc1eb0>
   42190:	003f1c06 	br	41e04 <__alt_data_end+0xfffc1e04>
   42194:	843ff844 	addi	r16,r16,-31
   42198:	01000804 	movi	r4,32
   4219c:	1406d83a 	srl	r3,r2,r16
   421a0:	41005026 	beq	r8,r4,422e4 <__adddf3+0x55c>
   421a4:	01001004 	movi	r4,64
   421a8:	2211c83a 	sub	r8,r4,r8
   421ac:	1204983a 	sll	r2,r2,r8
   421b0:	88a2b03a 	or	r17,r17,r2
   421b4:	8822c03a 	cmpne	r17,r17,zero
   421b8:	1c62b03a 	or	r17,r3,r17
   421bc:	0011883a 	mov	r8,zero
   421c0:	0021883a 	mov	r16,zero
   421c4:	003f7106 	br	41f8c <__alt_data_end+0xfffc1f8c>
   421c8:	193ff804 	addi	r4,r3,-32
   421cc:	00800804 	movi	r2,32
   421d0:	4908d83a 	srl	r4,r9,r4
   421d4:	18804526 	beq	r3,r2,422ec <__adddf3+0x564>
   421d8:	00801004 	movi	r2,64
   421dc:	10c5c83a 	sub	r2,r2,r3
   421e0:	4886983a 	sll	r3,r9,r2
   421e4:	198cb03a 	or	r6,r3,r6
   421e8:	300cc03a 	cmpne	r6,r6,zero
   421ec:	218cb03a 	or	r6,r4,r6
   421f0:	0007883a 	mov	r3,zero
   421f4:	003f3b06 	br	41ee4 <__alt_data_end+0xfffc1ee4>
   421f8:	80002a26 	beq	r16,zero,422a4 <__adddf3+0x51c>
   421fc:	0101ffc4 	movi	r4,2047
   42200:	11006826 	beq	r2,r4,423a4 <__adddf3+0x61c>
   42204:	00c7c83a 	sub	r3,zero,r3
   42208:	42002034 	orhi	r8,r8,128
   4220c:	01000e04 	movi	r4,56
   42210:	20c07c16 	blt	r4,r3,42404 <__adddf3+0x67c>
   42214:	010007c4 	movi	r4,31
   42218:	20c0da16 	blt	r4,r3,42584 <__adddf3+0x7fc>
   4221c:	01000804 	movi	r4,32
   42220:	20c9c83a 	sub	r4,r4,r3
   42224:	4114983a 	sll	r10,r8,r4
   42228:	88cad83a 	srl	r5,r17,r3
   4222c:	8908983a 	sll	r4,r17,r4
   42230:	40c6d83a 	srl	r3,r8,r3
   42234:	5162b03a 	or	r17,r10,r5
   42238:	2008c03a 	cmpne	r4,r4,zero
   4223c:	8922b03a 	or	r17,r17,r4
   42240:	3463c83a 	sub	r17,r6,r17
   42244:	48c7c83a 	sub	r3,r9,r3
   42248:	344d803a 	cmpltu	r6,r6,r17
   4224c:	1991c83a 	sub	r8,r3,r6
   42250:	1021883a 	mov	r16,r2
   42254:	3825883a 	mov	r18,r7
   42258:	003f2706 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   4225c:	24d0b03a 	or	r8,r4,r19
   42260:	40001b1e 	bne	r8,zero,422d0 <__adddf3+0x548>
   42264:	0005883a 	mov	r2,zero
   42268:	0007883a 	mov	r3,zero
   4226c:	0021883a 	mov	r16,zero
   42270:	003f4d06 	br	41fa8 <__alt_data_end+0xfffc1fa8>
   42274:	008007c4 	movi	r2,31
   42278:	11003c16 	blt	r2,r4,4236c <__adddf3+0x5e4>
   4227c:	00800804 	movi	r2,32
   42280:	1105c83a 	sub	r2,r2,r4
   42284:	488e983a 	sll	r7,r9,r2
   42288:	310ad83a 	srl	r5,r6,r4
   4228c:	3084983a 	sll	r2,r6,r2
   42290:	4912d83a 	srl	r9,r9,r4
   42294:	394ab03a 	or	r5,r7,r5
   42298:	1004c03a 	cmpne	r2,r2,zero
   4229c:	288ab03a 	or	r5,r5,r2
   422a0:	003f5306 	br	41ff0 <__alt_data_end+0xfffc1ff0>
   422a4:	4448b03a 	or	r4,r8,r17
   422a8:	20003e26 	beq	r4,zero,423a4 <__adddf3+0x61c>
   422ac:	00c6303a 	nor	r3,zero,r3
   422b0:	18003a1e 	bne	r3,zero,4239c <__adddf3+0x614>
   422b4:	3463c83a 	sub	r17,r6,r17
   422b8:	4a07c83a 	sub	r3,r9,r8
   422bc:	344d803a 	cmpltu	r6,r6,r17
   422c0:	1991c83a 	sub	r8,r3,r6
   422c4:	1021883a 	mov	r16,r2
   422c8:	3825883a 	mov	r18,r7
   422cc:	003f0a06 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   422d0:	2023883a 	mov	r17,r4
   422d4:	003f0d06 	br	41f0c <__alt_data_end+0xfffc1f0c>
   422d8:	0081ffc4 	movi	r2,2047
   422dc:	80bf3f1e 	bne	r16,r2,41fdc <__alt_data_end+0xfffc1fdc>
   422e0:	003ec806 	br	41e04 <__alt_data_end+0xfffc1e04>
   422e4:	0005883a 	mov	r2,zero
   422e8:	003fb106 	br	421b0 <__alt_data_end+0xfffc21b0>
   422ec:	0007883a 	mov	r3,zero
   422f0:	003fbc06 	br	421e4 <__alt_data_end+0xfffc21e4>
   422f4:	4444b03a 	or	r2,r8,r17
   422f8:	8000871e 	bne	r16,zero,42518 <__adddf3+0x790>
   422fc:	1000ba26 	beq	r2,zero,425e8 <__adddf3+0x860>
   42300:	4984b03a 	or	r2,r9,r6
   42304:	103ebf26 	beq	r2,zero,41e04 <__alt_data_end+0xfffc1e04>
   42308:	8985883a 	add	r2,r17,r6
   4230c:	4247883a 	add	r3,r8,r9
   42310:	1451803a 	cmpltu	r8,r2,r17
   42314:	40d1883a 	add	r8,r8,r3
   42318:	40c0202c 	andhi	r3,r8,128
   4231c:	1023883a 	mov	r17,r2
   42320:	183f1a26 	beq	r3,zero,41f8c <__alt_data_end+0xfffc1f8c>
   42324:	00bfe034 	movhi	r2,65408
   42328:	10bfffc4 	addi	r2,r2,-1
   4232c:	2021883a 	mov	r16,r4
   42330:	4090703a 	and	r8,r8,r2
   42334:	003eb306 	br	41e04 <__alt_data_end+0xfffc1e04>
   42338:	4444b03a 	or	r2,r8,r17
   4233c:	8000291e 	bne	r16,zero,423e4 <__adddf3+0x65c>
   42340:	10004b1e 	bne	r2,zero,42470 <__adddf3+0x6e8>
   42344:	4990b03a 	or	r8,r9,r6
   42348:	40008b26 	beq	r8,zero,42578 <__adddf3+0x7f0>
   4234c:	4811883a 	mov	r8,r9
   42350:	3023883a 	mov	r17,r6
   42354:	3825883a 	mov	r18,r7
   42358:	003eaa06 	br	41e04 <__alt_data_end+0xfffc1e04>
   4235c:	1021883a 	mov	r16,r2
   42360:	0011883a 	mov	r8,zero
   42364:	0005883a 	mov	r2,zero
   42368:	003f0f06 	br	41fa8 <__alt_data_end+0xfffc1fa8>
   4236c:	217ff804 	addi	r5,r4,-32
   42370:	00800804 	movi	r2,32
   42374:	494ad83a 	srl	r5,r9,r5
   42378:	20807d26 	beq	r4,r2,42570 <__adddf3+0x7e8>
   4237c:	00801004 	movi	r2,64
   42380:	1109c83a 	sub	r4,r2,r4
   42384:	4912983a 	sll	r9,r9,r4
   42388:	498cb03a 	or	r6,r9,r6
   4238c:	300cc03a 	cmpne	r6,r6,zero
   42390:	298ab03a 	or	r5,r5,r6
   42394:	0013883a 	mov	r9,zero
   42398:	003f1506 	br	41ff0 <__alt_data_end+0xfffc1ff0>
   4239c:	0101ffc4 	movi	r4,2047
   423a0:	113f9a1e 	bne	r2,r4,4220c <__alt_data_end+0xfffc220c>
   423a4:	4811883a 	mov	r8,r9
   423a8:	3023883a 	mov	r17,r6
   423ac:	1021883a 	mov	r16,r2
   423b0:	3825883a 	mov	r18,r7
   423b4:	003e9306 	br	41e04 <__alt_data_end+0xfffc1e04>
   423b8:	8000161e 	bne	r16,zero,42414 <__adddf3+0x68c>
   423bc:	444ab03a 	or	r5,r8,r17
   423c0:	28005126 	beq	r5,zero,42508 <__adddf3+0x780>
   423c4:	0108303a 	nor	r4,zero,r4
   423c8:	20004d1e 	bne	r4,zero,42500 <__adddf3+0x778>
   423cc:	89a3883a 	add	r17,r17,r6
   423d0:	4253883a 	add	r9,r8,r9
   423d4:	898d803a 	cmpltu	r6,r17,r6
   423d8:	3251883a 	add	r8,r6,r9
   423dc:	1021883a 	mov	r16,r2
   423e0:	003f0806 	br	42004 <__alt_data_end+0xfffc2004>
   423e4:	1000301e 	bne	r2,zero,424a8 <__adddf3+0x720>
   423e8:	4984b03a 	or	r2,r9,r6
   423ec:	10007126 	beq	r2,zero,425b4 <__adddf3+0x82c>
   423f0:	4811883a 	mov	r8,r9
   423f4:	3023883a 	mov	r17,r6
   423f8:	3825883a 	mov	r18,r7
   423fc:	0401ffc4 	movi	r16,2047
   42400:	003e8006 	br	41e04 <__alt_data_end+0xfffc1e04>
   42404:	4462b03a 	or	r17,r8,r17
   42408:	8822c03a 	cmpne	r17,r17,zero
   4240c:	0007883a 	mov	r3,zero
   42410:	003f8b06 	br	42240 <__alt_data_end+0xfffc2240>
   42414:	0141ffc4 	movi	r5,2047
   42418:	11403b26 	beq	r2,r5,42508 <__adddf3+0x780>
   4241c:	0109c83a 	sub	r4,zero,r4
   42420:	42002034 	orhi	r8,r8,128
   42424:	01400e04 	movi	r5,56
   42428:	29006716 	blt	r5,r4,425c8 <__adddf3+0x840>
   4242c:	014007c4 	movi	r5,31
   42430:	29007016 	blt	r5,r4,425f4 <__adddf3+0x86c>
   42434:	01400804 	movi	r5,32
   42438:	290bc83a 	sub	r5,r5,r4
   4243c:	4154983a 	sll	r10,r8,r5
   42440:	890ed83a 	srl	r7,r17,r4
   42444:	894a983a 	sll	r5,r17,r5
   42448:	4108d83a 	srl	r4,r8,r4
   4244c:	51e2b03a 	or	r17,r10,r7
   42450:	280ac03a 	cmpne	r5,r5,zero
   42454:	8962b03a 	or	r17,r17,r5
   42458:	89a3883a 	add	r17,r17,r6
   4245c:	2253883a 	add	r9,r4,r9
   42460:	898d803a 	cmpltu	r6,r17,r6
   42464:	3251883a 	add	r8,r6,r9
   42468:	1021883a 	mov	r16,r2
   4246c:	003ee506 	br	42004 <__alt_data_end+0xfffc2004>
   42470:	4984b03a 	or	r2,r9,r6
   42474:	103e6326 	beq	r2,zero,41e04 <__alt_data_end+0xfffc1e04>
   42478:	8987c83a 	sub	r3,r17,r6
   4247c:	88c9803a 	cmpltu	r4,r17,r3
   42480:	4245c83a 	sub	r2,r8,r9
   42484:	1105c83a 	sub	r2,r2,r4
   42488:	1100202c 	andhi	r4,r2,128
   4248c:	203ebb26 	beq	r4,zero,41f7c <__alt_data_end+0xfffc1f7c>
   42490:	3463c83a 	sub	r17,r6,r17
   42494:	4a07c83a 	sub	r3,r9,r8
   42498:	344d803a 	cmpltu	r6,r6,r17
   4249c:	1991c83a 	sub	r8,r3,r6
   424a0:	3825883a 	mov	r18,r7
   424a4:	003e5706 	br	41e04 <__alt_data_end+0xfffc1e04>
   424a8:	4984b03a 	or	r2,r9,r6
   424ac:	10002e26 	beq	r2,zero,42568 <__adddf3+0x7e0>
   424b0:	4004d0fa 	srli	r2,r8,3
   424b4:	8822d0fa 	srli	r17,r17,3
   424b8:	4010977a 	slli	r8,r8,29
   424bc:	10c0022c 	andhi	r3,r2,8
   424c0:	4462b03a 	or	r17,r8,r17
   424c4:	18000826 	beq	r3,zero,424e8 <__adddf3+0x760>
   424c8:	4808d0fa 	srli	r4,r9,3
   424cc:	20c0022c 	andhi	r3,r4,8
   424d0:	1800051e 	bne	r3,zero,424e8 <__adddf3+0x760>
   424d4:	300cd0fa 	srli	r6,r6,3
   424d8:	4806977a 	slli	r3,r9,29
   424dc:	2005883a 	mov	r2,r4
   424e0:	3825883a 	mov	r18,r7
   424e4:	19a2b03a 	or	r17,r3,r6
   424e8:	8810d77a 	srli	r8,r17,29
   424ec:	100490fa 	slli	r2,r2,3
   424f0:	882290fa 	slli	r17,r17,3
   424f4:	0401ffc4 	movi	r16,2047
   424f8:	4090b03a 	or	r8,r8,r2
   424fc:	003e4106 	br	41e04 <__alt_data_end+0xfffc1e04>
   42500:	0141ffc4 	movi	r5,2047
   42504:	117fc71e 	bne	r2,r5,42424 <__alt_data_end+0xfffc2424>
   42508:	4811883a 	mov	r8,r9
   4250c:	3023883a 	mov	r17,r6
   42510:	1021883a 	mov	r16,r2
   42514:	003e3b06 	br	41e04 <__alt_data_end+0xfffc1e04>
   42518:	10002f26 	beq	r2,zero,425d8 <__adddf3+0x850>
   4251c:	4984b03a 	or	r2,r9,r6
   42520:	10001126 	beq	r2,zero,42568 <__adddf3+0x7e0>
   42524:	4004d0fa 	srli	r2,r8,3
   42528:	8822d0fa 	srli	r17,r17,3
   4252c:	4010977a 	slli	r8,r8,29
   42530:	10c0022c 	andhi	r3,r2,8
   42534:	4462b03a 	or	r17,r8,r17
   42538:	183feb26 	beq	r3,zero,424e8 <__alt_data_end+0xfffc24e8>
   4253c:	4808d0fa 	srli	r4,r9,3
   42540:	20c0022c 	andhi	r3,r4,8
   42544:	183fe81e 	bne	r3,zero,424e8 <__alt_data_end+0xfffc24e8>
   42548:	300cd0fa 	srli	r6,r6,3
   4254c:	4806977a 	slli	r3,r9,29
   42550:	2005883a 	mov	r2,r4
   42554:	19a2b03a 	or	r17,r3,r6
   42558:	003fe306 	br	424e8 <__alt_data_end+0xfffc24e8>
   4255c:	0011883a 	mov	r8,zero
   42560:	0005883a 	mov	r2,zero
   42564:	003e3f06 	br	41e64 <__alt_data_end+0xfffc1e64>
   42568:	0401ffc4 	movi	r16,2047
   4256c:	003e2506 	br	41e04 <__alt_data_end+0xfffc1e04>
   42570:	0013883a 	mov	r9,zero
   42574:	003f8406 	br	42388 <__alt_data_end+0xfffc2388>
   42578:	0005883a 	mov	r2,zero
   4257c:	0007883a 	mov	r3,zero
   42580:	003e8906 	br	41fa8 <__alt_data_end+0xfffc1fa8>
   42584:	197ff804 	addi	r5,r3,-32
   42588:	01000804 	movi	r4,32
   4258c:	414ad83a 	srl	r5,r8,r5
   42590:	19002426 	beq	r3,r4,42624 <__adddf3+0x89c>
   42594:	01001004 	movi	r4,64
   42598:	20c7c83a 	sub	r3,r4,r3
   4259c:	40c6983a 	sll	r3,r8,r3
   425a0:	1c46b03a 	or	r3,r3,r17
   425a4:	1806c03a 	cmpne	r3,r3,zero
   425a8:	28e2b03a 	or	r17,r5,r3
   425ac:	0007883a 	mov	r3,zero
   425b0:	003f2306 	br	42240 <__alt_data_end+0xfffc2240>
   425b4:	0007883a 	mov	r3,zero
   425b8:	5811883a 	mov	r8,r11
   425bc:	00bfffc4 	movi	r2,-1
   425c0:	0401ffc4 	movi	r16,2047
   425c4:	003e7806 	br	41fa8 <__alt_data_end+0xfffc1fa8>
   425c8:	4462b03a 	or	r17,r8,r17
   425cc:	8822c03a 	cmpne	r17,r17,zero
   425d0:	0009883a 	mov	r4,zero
   425d4:	003fa006 	br	42458 <__alt_data_end+0xfffc2458>
   425d8:	4811883a 	mov	r8,r9
   425dc:	3023883a 	mov	r17,r6
   425e0:	0401ffc4 	movi	r16,2047
   425e4:	003e0706 	br	41e04 <__alt_data_end+0xfffc1e04>
   425e8:	4811883a 	mov	r8,r9
   425ec:	3023883a 	mov	r17,r6
   425f0:	003e0406 	br	41e04 <__alt_data_end+0xfffc1e04>
   425f4:	21fff804 	addi	r7,r4,-32
   425f8:	01400804 	movi	r5,32
   425fc:	41ced83a 	srl	r7,r8,r7
   42600:	21400a26 	beq	r4,r5,4262c <__adddf3+0x8a4>
   42604:	01401004 	movi	r5,64
   42608:	2909c83a 	sub	r4,r5,r4
   4260c:	4108983a 	sll	r4,r8,r4
   42610:	2448b03a 	or	r4,r4,r17
   42614:	2008c03a 	cmpne	r4,r4,zero
   42618:	3922b03a 	or	r17,r7,r4
   4261c:	0009883a 	mov	r4,zero
   42620:	003f8d06 	br	42458 <__alt_data_end+0xfffc2458>
   42624:	0007883a 	mov	r3,zero
   42628:	003fdd06 	br	425a0 <__alt_data_end+0xfffc25a0>
   4262c:	0009883a 	mov	r4,zero
   42630:	003ff706 	br	42610 <__alt_data_end+0xfffc2610>

00042634 <__muldf3>:
   42634:	defff304 	addi	sp,sp,-52
   42638:	2804d53a 	srli	r2,r5,20
   4263c:	dd800915 	stw	r22,36(sp)
   42640:	282cd7fa 	srli	r22,r5,31
   42644:	dc000315 	stw	r16,12(sp)
   42648:	04000434 	movhi	r16,16
   4264c:	dd400815 	stw	r21,32(sp)
   42650:	dc800515 	stw	r18,20(sp)
   42654:	843fffc4 	addi	r16,r16,-1
   42658:	dfc00c15 	stw	ra,48(sp)
   4265c:	df000b15 	stw	fp,44(sp)
   42660:	ddc00a15 	stw	r23,40(sp)
   42664:	dd000715 	stw	r20,28(sp)
   42668:	dcc00615 	stw	r19,24(sp)
   4266c:	dc400415 	stw	r17,16(sp)
   42670:	1481ffcc 	andi	r18,r2,2047
   42674:	2c20703a 	and	r16,r5,r16
   42678:	b02b883a 	mov	r21,r22
   4267c:	b2403fcc 	andi	r9,r22,255
   42680:	90006026 	beq	r18,zero,42804 <__muldf3+0x1d0>
   42684:	0081ffc4 	movi	r2,2047
   42688:	2029883a 	mov	r20,r4
   4268c:	90803626 	beq	r18,r2,42768 <__muldf3+0x134>
   42690:	80800434 	orhi	r2,r16,16
   42694:	100490fa 	slli	r2,r2,3
   42698:	2020d77a 	srli	r16,r4,29
   4269c:	202890fa 	slli	r20,r4,3
   426a0:	94bf0044 	addi	r18,r18,-1023
   426a4:	80a0b03a 	or	r16,r16,r2
   426a8:	0027883a 	mov	r19,zero
   426ac:	0039883a 	mov	fp,zero
   426b0:	3804d53a 	srli	r2,r7,20
   426b4:	382ed7fa 	srli	r23,r7,31
   426b8:	04400434 	movhi	r17,16
   426bc:	8c7fffc4 	addi	r17,r17,-1
   426c0:	1081ffcc 	andi	r2,r2,2047
   426c4:	3011883a 	mov	r8,r6
   426c8:	3c62703a 	and	r17,r7,r17
   426cc:	ba803fcc 	andi	r10,r23,255
   426d0:	10006d26 	beq	r2,zero,42888 <__muldf3+0x254>
   426d4:	00c1ffc4 	movi	r3,2047
   426d8:	10c06526 	beq	r2,r3,42870 <__muldf3+0x23c>
   426dc:	88c00434 	orhi	r3,r17,16
   426e0:	180690fa 	slli	r3,r3,3
   426e4:	3022d77a 	srli	r17,r6,29
   426e8:	301090fa 	slli	r8,r6,3
   426ec:	10bf0044 	addi	r2,r2,-1023
   426f0:	88e2b03a 	or	r17,r17,r3
   426f4:	000b883a 	mov	r5,zero
   426f8:	9085883a 	add	r2,r18,r2
   426fc:	2cc8b03a 	or	r4,r5,r19
   42700:	00c003c4 	movi	r3,15
   42704:	bdacf03a 	xor	r22,r23,r22
   42708:	12c00044 	addi	r11,r2,1
   4270c:	19009936 	bltu	r3,r4,42974 <__muldf3+0x340>
   42710:	200890ba 	slli	r4,r4,2
   42714:	00c00134 	movhi	r3,4
   42718:	18c9ca04 	addi	r3,r3,10024
   4271c:	20c9883a 	add	r4,r4,r3
   42720:	20c00017 	ldw	r3,0(r4)
   42724:	1800683a 	jmp	r3
   42728:	00042974 	movhi	zero,4261
   4272c:	00042788 	cmpgei	zero,zero,4254
   42730:	00042788 	cmpgei	zero,zero,4254
   42734:	00042784 	movi	zero,4254
   42738:	00042950 	cmplti	zero,zero,4261
   4273c:	00042950 	cmplti	zero,zero,4261
   42740:	00042938 	rdprs	zero,zero,4260
   42744:	00042784 	movi	zero,4254
   42748:	00042950 	cmplti	zero,zero,4261
   4274c:	00042938 	rdprs	zero,zero,4260
   42750:	00042950 	cmplti	zero,zero,4261
   42754:	00042784 	movi	zero,4254
   42758:	00042960 	cmpeqi	zero,zero,4261
   4275c:	00042960 	cmpeqi	zero,zero,4261
   42760:	00042960 	cmpeqi	zero,zero,4261
   42764:	00042b7c 	xorhi	zero,zero,4269
   42768:	2404b03a 	or	r2,r4,r16
   4276c:	10006f1e 	bne	r2,zero,4292c <__muldf3+0x2f8>
   42770:	04c00204 	movi	r19,8
   42774:	0021883a 	mov	r16,zero
   42778:	0029883a 	mov	r20,zero
   4277c:	07000084 	movi	fp,2
   42780:	003fcb06 	br	426b0 <__alt_data_end+0xfffc26b0>
   42784:	502d883a 	mov	r22,r10
   42788:	00800084 	movi	r2,2
   4278c:	28805726 	beq	r5,r2,428ec <__muldf3+0x2b8>
   42790:	008000c4 	movi	r2,3
   42794:	28816626 	beq	r5,r2,42d30 <__muldf3+0x6fc>
   42798:	00800044 	movi	r2,1
   4279c:	2881411e 	bne	r5,r2,42ca4 <__muldf3+0x670>
   427a0:	b02b883a 	mov	r21,r22
   427a4:	0005883a 	mov	r2,zero
   427a8:	000b883a 	mov	r5,zero
   427ac:	0029883a 	mov	r20,zero
   427b0:	1004953a 	slli	r2,r2,20
   427b4:	a8c03fcc 	andi	r3,r21,255
   427b8:	04400434 	movhi	r17,16
   427bc:	8c7fffc4 	addi	r17,r17,-1
   427c0:	180697fa 	slli	r3,r3,31
   427c4:	2c4a703a 	and	r5,r5,r17
   427c8:	288ab03a 	or	r5,r5,r2
   427cc:	28c6b03a 	or	r3,r5,r3
   427d0:	a005883a 	mov	r2,r20
   427d4:	dfc00c17 	ldw	ra,48(sp)
   427d8:	df000b17 	ldw	fp,44(sp)
   427dc:	ddc00a17 	ldw	r23,40(sp)
   427e0:	dd800917 	ldw	r22,36(sp)
   427e4:	dd400817 	ldw	r21,32(sp)
   427e8:	dd000717 	ldw	r20,28(sp)
   427ec:	dcc00617 	ldw	r19,24(sp)
   427f0:	dc800517 	ldw	r18,20(sp)
   427f4:	dc400417 	ldw	r17,16(sp)
   427f8:	dc000317 	ldw	r16,12(sp)
   427fc:	dec00d04 	addi	sp,sp,52
   42800:	f800283a 	ret
   42804:	2404b03a 	or	r2,r4,r16
   42808:	2027883a 	mov	r19,r4
   4280c:	10004226 	beq	r2,zero,42918 <__muldf3+0x2e4>
   42810:	8000fc26 	beq	r16,zero,42c04 <__muldf3+0x5d0>
   42814:	8009883a 	mov	r4,r16
   42818:	d9800215 	stw	r6,8(sp)
   4281c:	d9c00015 	stw	r7,0(sp)
   42820:	da400115 	stw	r9,4(sp)
   42824:	00430040 	call	43004 <__clzsi2>
   42828:	d9800217 	ldw	r6,8(sp)
   4282c:	d9c00017 	ldw	r7,0(sp)
   42830:	da400117 	ldw	r9,4(sp)
   42834:	113ffd44 	addi	r4,r2,-11
   42838:	00c00704 	movi	r3,28
   4283c:	1900ed16 	blt	r3,r4,42bf4 <__muldf3+0x5c0>
   42840:	00c00744 	movi	r3,29
   42844:	147ffe04 	addi	r17,r2,-8
   42848:	1907c83a 	sub	r3,r3,r4
   4284c:	8460983a 	sll	r16,r16,r17
   42850:	98c6d83a 	srl	r3,r19,r3
   42854:	9c68983a 	sll	r20,r19,r17
   42858:	1c20b03a 	or	r16,r3,r16
   4285c:	1080fcc4 	addi	r2,r2,1011
   42860:	00a5c83a 	sub	r18,zero,r2
   42864:	0027883a 	mov	r19,zero
   42868:	0039883a 	mov	fp,zero
   4286c:	003f9006 	br	426b0 <__alt_data_end+0xfffc26b0>
   42870:	3446b03a 	or	r3,r6,r17
   42874:	1800261e 	bne	r3,zero,42910 <__muldf3+0x2dc>
   42878:	0023883a 	mov	r17,zero
   4287c:	0011883a 	mov	r8,zero
   42880:	01400084 	movi	r5,2
   42884:	003f9c06 	br	426f8 <__alt_data_end+0xfffc26f8>
   42888:	3446b03a 	or	r3,r6,r17
   4288c:	18001c26 	beq	r3,zero,42900 <__muldf3+0x2cc>
   42890:	8800ce26 	beq	r17,zero,42bcc <__muldf3+0x598>
   42894:	8809883a 	mov	r4,r17
   42898:	d9800215 	stw	r6,8(sp)
   4289c:	da400115 	stw	r9,4(sp)
   428a0:	da800015 	stw	r10,0(sp)
   428a4:	00430040 	call	43004 <__clzsi2>
   428a8:	d9800217 	ldw	r6,8(sp)
   428ac:	da400117 	ldw	r9,4(sp)
   428b0:	da800017 	ldw	r10,0(sp)
   428b4:	113ffd44 	addi	r4,r2,-11
   428b8:	00c00704 	movi	r3,28
   428bc:	1900bf16 	blt	r3,r4,42bbc <__muldf3+0x588>
   428c0:	00c00744 	movi	r3,29
   428c4:	123ffe04 	addi	r8,r2,-8
   428c8:	1907c83a 	sub	r3,r3,r4
   428cc:	8a22983a 	sll	r17,r17,r8
   428d0:	30c6d83a 	srl	r3,r6,r3
   428d4:	3210983a 	sll	r8,r6,r8
   428d8:	1c62b03a 	or	r17,r3,r17
   428dc:	1080fcc4 	addi	r2,r2,1011
   428e0:	0085c83a 	sub	r2,zero,r2
   428e4:	000b883a 	mov	r5,zero
   428e8:	003f8306 	br	426f8 <__alt_data_end+0xfffc26f8>
   428ec:	b02b883a 	mov	r21,r22
   428f0:	0081ffc4 	movi	r2,2047
   428f4:	000b883a 	mov	r5,zero
   428f8:	0029883a 	mov	r20,zero
   428fc:	003fac06 	br	427b0 <__alt_data_end+0xfffc27b0>
   42900:	0023883a 	mov	r17,zero
   42904:	0011883a 	mov	r8,zero
   42908:	01400044 	movi	r5,1
   4290c:	003f7a06 	br	426f8 <__alt_data_end+0xfffc26f8>
   42910:	014000c4 	movi	r5,3
   42914:	003f7806 	br	426f8 <__alt_data_end+0xfffc26f8>
   42918:	04c00104 	movi	r19,4
   4291c:	0021883a 	mov	r16,zero
   42920:	0029883a 	mov	r20,zero
   42924:	07000044 	movi	fp,1
   42928:	003f6106 	br	426b0 <__alt_data_end+0xfffc26b0>
   4292c:	04c00304 	movi	r19,12
   42930:	070000c4 	movi	fp,3
   42934:	003f5e06 	br	426b0 <__alt_data_end+0xfffc26b0>
   42938:	01400434 	movhi	r5,16
   4293c:	002b883a 	mov	r21,zero
   42940:	297fffc4 	addi	r5,r5,-1
   42944:	053fffc4 	movi	r20,-1
   42948:	0081ffc4 	movi	r2,2047
   4294c:	003f9806 	br	427b0 <__alt_data_end+0xfffc27b0>
   42950:	8023883a 	mov	r17,r16
   42954:	a011883a 	mov	r8,r20
   42958:	e00b883a 	mov	r5,fp
   4295c:	003f8a06 	br	42788 <__alt_data_end+0xfffc2788>
   42960:	8023883a 	mov	r17,r16
   42964:	a011883a 	mov	r8,r20
   42968:	482d883a 	mov	r22,r9
   4296c:	e00b883a 	mov	r5,fp
   42970:	003f8506 	br	42788 <__alt_data_end+0xfffc2788>
   42974:	a00ad43a 	srli	r5,r20,16
   42978:	401ad43a 	srli	r13,r8,16
   4297c:	a53fffcc 	andi	r20,r20,65535
   42980:	423fffcc 	andi	r8,r8,65535
   42984:	4519383a 	mul	r12,r8,r20
   42988:	4147383a 	mul	r3,r8,r5
   4298c:	6d09383a 	mul	r4,r13,r20
   42990:	600cd43a 	srli	r6,r12,16
   42994:	2b5d383a 	mul	r14,r5,r13
   42998:	20c9883a 	add	r4,r4,r3
   4299c:	310d883a 	add	r6,r6,r4
   429a0:	30c0022e 	bgeu	r6,r3,429ac <__muldf3+0x378>
   429a4:	00c00074 	movhi	r3,1
   429a8:	70dd883a 	add	r14,r14,r3
   429ac:	8826d43a 	srli	r19,r17,16
   429b0:	8bffffcc 	andi	r15,r17,65535
   429b4:	7d23383a 	mul	r17,r15,r20
   429b8:	7949383a 	mul	r4,r15,r5
   429bc:	9d29383a 	mul	r20,r19,r20
   429c0:	8814d43a 	srli	r10,r17,16
   429c4:	3012943a 	slli	r9,r6,16
   429c8:	a129883a 	add	r20,r20,r4
   429cc:	633fffcc 	andi	r12,r12,65535
   429d0:	5515883a 	add	r10,r10,r20
   429d4:	3006d43a 	srli	r3,r6,16
   429d8:	4b13883a 	add	r9,r9,r12
   429dc:	2ccb383a 	mul	r5,r5,r19
   429e0:	5100022e 	bgeu	r10,r4,429ec <__muldf3+0x3b8>
   429e4:	01000074 	movhi	r4,1
   429e8:	290b883a 	add	r5,r5,r4
   429ec:	802ad43a 	srli	r21,r16,16
   429f0:	843fffcc 	andi	r16,r16,65535
   429f4:	440d383a 	mul	r6,r8,r16
   429f8:	4565383a 	mul	r18,r8,r21
   429fc:	8349383a 	mul	r4,r16,r13
   42a00:	500e943a 	slli	r7,r10,16
   42a04:	3010d43a 	srli	r8,r6,16
   42a08:	5028d43a 	srli	r20,r10,16
   42a0c:	2489883a 	add	r4,r4,r18
   42a10:	8abfffcc 	andi	r10,r17,65535
   42a14:	3a95883a 	add	r10,r7,r10
   42a18:	4119883a 	add	r12,r8,r4
   42a1c:	a169883a 	add	r20,r20,r5
   42a20:	1a87883a 	add	r3,r3,r10
   42a24:	6d5b383a 	mul	r13,r13,r21
   42a28:	6480022e 	bgeu	r12,r18,42a34 <__muldf3+0x400>
   42a2c:	01000074 	movhi	r4,1
   42a30:	691b883a 	add	r13,r13,r4
   42a34:	7c25383a 	mul	r18,r15,r16
   42a38:	7d4b383a 	mul	r5,r15,r21
   42a3c:	84cf383a 	mul	r7,r16,r19
   42a40:	901ed43a 	srli	r15,r18,16
   42a44:	6008d43a 	srli	r4,r12,16
   42a48:	6010943a 	slli	r8,r12,16
   42a4c:	394f883a 	add	r7,r7,r5
   42a50:	333fffcc 	andi	r12,r6,65535
   42a54:	79df883a 	add	r15,r15,r7
   42a58:	235b883a 	add	r13,r4,r13
   42a5c:	9d63383a 	mul	r17,r19,r21
   42a60:	4309883a 	add	r4,r8,r12
   42a64:	7940022e 	bgeu	r15,r5,42a70 <__muldf3+0x43c>
   42a68:	01400074 	movhi	r5,1
   42a6c:	8963883a 	add	r17,r17,r5
   42a70:	780a943a 	slli	r5,r15,16
   42a74:	91bfffcc 	andi	r6,r18,65535
   42a78:	70c7883a 	add	r3,r14,r3
   42a7c:	298d883a 	add	r6,r5,r6
   42a80:	1a8f803a 	cmpltu	r7,r3,r10
   42a84:	350b883a 	add	r5,r6,r20
   42a88:	20c7883a 	add	r3,r4,r3
   42a8c:	3955883a 	add	r10,r7,r5
   42a90:	1909803a 	cmpltu	r4,r3,r4
   42a94:	6a91883a 	add	r8,r13,r10
   42a98:	780cd43a 	srli	r6,r15,16
   42a9c:	2219883a 	add	r12,r4,r8
   42aa0:	2d0b803a 	cmpltu	r5,r5,r20
   42aa4:	51cf803a 	cmpltu	r7,r10,r7
   42aa8:	29ceb03a 	or	r7,r5,r7
   42aac:	4351803a 	cmpltu	r8,r8,r13
   42ab0:	610b803a 	cmpltu	r5,r12,r4
   42ab4:	4148b03a 	or	r4,r8,r5
   42ab8:	398f883a 	add	r7,r7,r6
   42abc:	3909883a 	add	r4,r7,r4
   42ac0:	1810927a 	slli	r8,r3,9
   42ac4:	2449883a 	add	r4,r4,r17
   42ac8:	2008927a 	slli	r4,r4,9
   42acc:	6022d5fa 	srli	r17,r12,23
   42ad0:	1806d5fa 	srli	r3,r3,23
   42ad4:	4252b03a 	or	r9,r8,r9
   42ad8:	600a927a 	slli	r5,r12,9
   42adc:	4810c03a 	cmpne	r8,r9,zero
   42ae0:	2462b03a 	or	r17,r4,r17
   42ae4:	40c6b03a 	or	r3,r8,r3
   42ae8:	8900402c 	andhi	r4,r17,256
   42aec:	1950b03a 	or	r8,r3,r5
   42af0:	20000726 	beq	r4,zero,42b10 <__muldf3+0x4dc>
   42af4:	4006d07a 	srli	r3,r8,1
   42af8:	880497fa 	slli	r2,r17,31
   42afc:	4200004c 	andi	r8,r8,1
   42b00:	8822d07a 	srli	r17,r17,1
   42b04:	1a10b03a 	or	r8,r3,r8
   42b08:	1210b03a 	or	r8,r2,r8
   42b0c:	5805883a 	mov	r2,r11
   42b10:	1140ffc4 	addi	r5,r2,1023
   42b14:	0140440e 	bge	zero,r5,42c28 <__muldf3+0x5f4>
   42b18:	40c001cc 	andi	r3,r8,7
   42b1c:	18000726 	beq	r3,zero,42b3c <__muldf3+0x508>
   42b20:	40c003cc 	andi	r3,r8,15
   42b24:	01000104 	movi	r4,4
   42b28:	19000426 	beq	r3,r4,42b3c <__muldf3+0x508>
   42b2c:	4107883a 	add	r3,r8,r4
   42b30:	1a11803a 	cmpltu	r8,r3,r8
   42b34:	8a23883a 	add	r17,r17,r8
   42b38:	1811883a 	mov	r8,r3
   42b3c:	88c0402c 	andhi	r3,r17,256
   42b40:	18000426 	beq	r3,zero,42b54 <__muldf3+0x520>
   42b44:	11410004 	addi	r5,r2,1024
   42b48:	00bfc034 	movhi	r2,65280
   42b4c:	10bfffc4 	addi	r2,r2,-1
   42b50:	88a2703a 	and	r17,r17,r2
   42b54:	0081ff84 	movi	r2,2046
   42b58:	117f6416 	blt	r2,r5,428ec <__alt_data_end+0xfffc28ec>
   42b5c:	8828977a 	slli	r20,r17,29
   42b60:	4010d0fa 	srli	r8,r8,3
   42b64:	8822927a 	slli	r17,r17,9
   42b68:	2881ffcc 	andi	r2,r5,2047
   42b6c:	a228b03a 	or	r20,r20,r8
   42b70:	880ad33a 	srli	r5,r17,12
   42b74:	b02b883a 	mov	r21,r22
   42b78:	003f0d06 	br	427b0 <__alt_data_end+0xfffc27b0>
   42b7c:	8080022c 	andhi	r2,r16,8
   42b80:	10000926 	beq	r2,zero,42ba8 <__muldf3+0x574>
   42b84:	8880022c 	andhi	r2,r17,8
   42b88:	1000071e 	bne	r2,zero,42ba8 <__muldf3+0x574>
   42b8c:	00800434 	movhi	r2,16
   42b90:	89400234 	orhi	r5,r17,8
   42b94:	10bfffc4 	addi	r2,r2,-1
   42b98:	b82b883a 	mov	r21,r23
   42b9c:	288a703a 	and	r5,r5,r2
   42ba0:	4029883a 	mov	r20,r8
   42ba4:	003f6806 	br	42948 <__alt_data_end+0xfffc2948>
   42ba8:	00800434 	movhi	r2,16
   42bac:	81400234 	orhi	r5,r16,8
   42bb0:	10bfffc4 	addi	r2,r2,-1
   42bb4:	288a703a 	and	r5,r5,r2
   42bb8:	003f6306 	br	42948 <__alt_data_end+0xfffc2948>
   42bbc:	147ff604 	addi	r17,r2,-40
   42bc0:	3462983a 	sll	r17,r6,r17
   42bc4:	0011883a 	mov	r8,zero
   42bc8:	003f4406 	br	428dc <__alt_data_end+0xfffc28dc>
   42bcc:	3009883a 	mov	r4,r6
   42bd0:	d9800215 	stw	r6,8(sp)
   42bd4:	da400115 	stw	r9,4(sp)
   42bd8:	da800015 	stw	r10,0(sp)
   42bdc:	00430040 	call	43004 <__clzsi2>
   42be0:	10800804 	addi	r2,r2,32
   42be4:	da800017 	ldw	r10,0(sp)
   42be8:	da400117 	ldw	r9,4(sp)
   42bec:	d9800217 	ldw	r6,8(sp)
   42bf0:	003f3006 	br	428b4 <__alt_data_end+0xfffc28b4>
   42bf4:	143ff604 	addi	r16,r2,-40
   42bf8:	9c20983a 	sll	r16,r19,r16
   42bfc:	0029883a 	mov	r20,zero
   42c00:	003f1606 	br	4285c <__alt_data_end+0xfffc285c>
   42c04:	d9800215 	stw	r6,8(sp)
   42c08:	d9c00015 	stw	r7,0(sp)
   42c0c:	da400115 	stw	r9,4(sp)
   42c10:	00430040 	call	43004 <__clzsi2>
   42c14:	10800804 	addi	r2,r2,32
   42c18:	da400117 	ldw	r9,4(sp)
   42c1c:	d9c00017 	ldw	r7,0(sp)
   42c20:	d9800217 	ldw	r6,8(sp)
   42c24:	003f0306 	br	42834 <__alt_data_end+0xfffc2834>
   42c28:	00c00044 	movi	r3,1
   42c2c:	1947c83a 	sub	r3,r3,r5
   42c30:	00800e04 	movi	r2,56
   42c34:	10feda16 	blt	r2,r3,427a0 <__alt_data_end+0xfffc27a0>
   42c38:	008007c4 	movi	r2,31
   42c3c:	10c01b16 	blt	r2,r3,42cac <__muldf3+0x678>
   42c40:	00800804 	movi	r2,32
   42c44:	10c5c83a 	sub	r2,r2,r3
   42c48:	888a983a 	sll	r5,r17,r2
   42c4c:	40c8d83a 	srl	r4,r8,r3
   42c50:	4084983a 	sll	r2,r8,r2
   42c54:	88e2d83a 	srl	r17,r17,r3
   42c58:	2906b03a 	or	r3,r5,r4
   42c5c:	1004c03a 	cmpne	r2,r2,zero
   42c60:	1886b03a 	or	r3,r3,r2
   42c64:	188001cc 	andi	r2,r3,7
   42c68:	10000726 	beq	r2,zero,42c88 <__muldf3+0x654>
   42c6c:	188003cc 	andi	r2,r3,15
   42c70:	01000104 	movi	r4,4
   42c74:	11000426 	beq	r2,r4,42c88 <__muldf3+0x654>
   42c78:	1805883a 	mov	r2,r3
   42c7c:	10c00104 	addi	r3,r2,4
   42c80:	1885803a 	cmpltu	r2,r3,r2
   42c84:	88a3883a 	add	r17,r17,r2
   42c88:	8880202c 	andhi	r2,r17,128
   42c8c:	10001c26 	beq	r2,zero,42d00 <__muldf3+0x6cc>
   42c90:	b02b883a 	mov	r21,r22
   42c94:	00800044 	movi	r2,1
   42c98:	000b883a 	mov	r5,zero
   42c9c:	0029883a 	mov	r20,zero
   42ca0:	003ec306 	br	427b0 <__alt_data_end+0xfffc27b0>
   42ca4:	5805883a 	mov	r2,r11
   42ca8:	003f9906 	br	42b10 <__alt_data_end+0xfffc2b10>
   42cac:	00bff844 	movi	r2,-31
   42cb0:	1145c83a 	sub	r2,r2,r5
   42cb4:	8888d83a 	srl	r4,r17,r2
   42cb8:	00800804 	movi	r2,32
   42cbc:	18801a26 	beq	r3,r2,42d28 <__muldf3+0x6f4>
   42cc0:	00801004 	movi	r2,64
   42cc4:	10c5c83a 	sub	r2,r2,r3
   42cc8:	8884983a 	sll	r2,r17,r2
   42ccc:	1204b03a 	or	r2,r2,r8
   42cd0:	1004c03a 	cmpne	r2,r2,zero
   42cd4:	2084b03a 	or	r2,r4,r2
   42cd8:	144001cc 	andi	r17,r2,7
   42cdc:	88000d1e 	bne	r17,zero,42d14 <__muldf3+0x6e0>
   42ce0:	000b883a 	mov	r5,zero
   42ce4:	1028d0fa 	srli	r20,r2,3
   42ce8:	b02b883a 	mov	r21,r22
   42cec:	0005883a 	mov	r2,zero
   42cf0:	a468b03a 	or	r20,r20,r17
   42cf4:	003eae06 	br	427b0 <__alt_data_end+0xfffc27b0>
   42cf8:	1007883a 	mov	r3,r2
   42cfc:	0023883a 	mov	r17,zero
   42d00:	880a927a 	slli	r5,r17,9
   42d04:	1805883a 	mov	r2,r3
   42d08:	8822977a 	slli	r17,r17,29
   42d0c:	280ad33a 	srli	r5,r5,12
   42d10:	003ff406 	br	42ce4 <__alt_data_end+0xfffc2ce4>
   42d14:	10c003cc 	andi	r3,r2,15
   42d18:	01000104 	movi	r4,4
   42d1c:	193ff626 	beq	r3,r4,42cf8 <__alt_data_end+0xfffc2cf8>
   42d20:	0023883a 	mov	r17,zero
   42d24:	003fd506 	br	42c7c <__alt_data_end+0xfffc2c7c>
   42d28:	0005883a 	mov	r2,zero
   42d2c:	003fe706 	br	42ccc <__alt_data_end+0xfffc2ccc>
   42d30:	00800434 	movhi	r2,16
   42d34:	89400234 	orhi	r5,r17,8
   42d38:	10bfffc4 	addi	r2,r2,-1
   42d3c:	b02b883a 	mov	r21,r22
   42d40:	288a703a 	and	r5,r5,r2
   42d44:	4029883a 	mov	r20,r8
   42d48:	003eff06 	br	42948 <__alt_data_end+0xfffc2948>

00042d4c <__extendsfdf2>:
   42d4c:	200ad5fa 	srli	r5,r4,23
   42d50:	defffd04 	addi	sp,sp,-12
   42d54:	dc400115 	stw	r17,4(sp)
   42d58:	29403fcc 	andi	r5,r5,255
   42d5c:	29800044 	addi	r6,r5,1
   42d60:	04402034 	movhi	r17,128
   42d64:	dc000015 	stw	r16,0(sp)
   42d68:	8c7fffc4 	addi	r17,r17,-1
   42d6c:	dfc00215 	stw	ra,8(sp)
   42d70:	31803fcc 	andi	r6,r6,255
   42d74:	00800044 	movi	r2,1
   42d78:	8922703a 	and	r17,r17,r4
   42d7c:	2020d7fa 	srli	r16,r4,31
   42d80:	1180110e 	bge	r2,r6,42dc8 <__extendsfdf2+0x7c>
   42d84:	880cd0fa 	srli	r6,r17,3
   42d88:	8822977a 	slli	r17,r17,29
   42d8c:	2940e004 	addi	r5,r5,896
   42d90:	2941ffcc 	andi	r5,r5,2047
   42d94:	2804953a 	slli	r2,r5,20
   42d98:	01400434 	movhi	r5,16
   42d9c:	800697fa 	slli	r3,r16,31
   42da0:	297fffc4 	addi	r5,r5,-1
   42da4:	314a703a 	and	r5,r6,r5
   42da8:	288ab03a 	or	r5,r5,r2
   42dac:	28c6b03a 	or	r3,r5,r3
   42db0:	8805883a 	mov	r2,r17
   42db4:	dfc00217 	ldw	ra,8(sp)
   42db8:	dc400117 	ldw	r17,4(sp)
   42dbc:	dc000017 	ldw	r16,0(sp)
   42dc0:	dec00304 	addi	sp,sp,12
   42dc4:	f800283a 	ret
   42dc8:	2800111e 	bne	r5,zero,42e10 <__extendsfdf2+0xc4>
   42dcc:	88001c26 	beq	r17,zero,42e40 <__extendsfdf2+0xf4>
   42dd0:	8809883a 	mov	r4,r17
   42dd4:	00430040 	call	43004 <__clzsi2>
   42dd8:	00c00284 	movi	r3,10
   42ddc:	18801b16 	blt	r3,r2,42e4c <__extendsfdf2+0x100>
   42de0:	018002c4 	movi	r6,11
   42de4:	308dc83a 	sub	r6,r6,r2
   42de8:	11000544 	addi	r4,r2,21
   42dec:	8986d83a 	srl	r3,r17,r6
   42df0:	8922983a 	sll	r17,r17,r4
   42df4:	0180e244 	movi	r6,905
   42df8:	01400434 	movhi	r5,16
   42dfc:	3085c83a 	sub	r2,r6,r2
   42e00:	297fffc4 	addi	r5,r5,-1
   42e04:	194c703a 	and	r6,r3,r5
   42e08:	1141ffcc 	andi	r5,r2,2047
   42e0c:	003fe006 	br	42d90 <__alt_data_end+0xfffc2d90>
   42e10:	88000826 	beq	r17,zero,42e34 <__extendsfdf2+0xe8>
   42e14:	880cd0fa 	srli	r6,r17,3
   42e18:	00800434 	movhi	r2,16
   42e1c:	10bfffc4 	addi	r2,r2,-1
   42e20:	31800234 	orhi	r6,r6,8
   42e24:	8822977a 	slli	r17,r17,29
   42e28:	308c703a 	and	r6,r6,r2
   42e2c:	0141ffc4 	movi	r5,2047
   42e30:	003fd706 	br	42d90 <__alt_data_end+0xfffc2d90>
   42e34:	0141ffc4 	movi	r5,2047
   42e38:	000d883a 	mov	r6,zero
   42e3c:	003fd406 	br	42d90 <__alt_data_end+0xfffc2d90>
   42e40:	000b883a 	mov	r5,zero
   42e44:	000d883a 	mov	r6,zero
   42e48:	003fd106 	br	42d90 <__alt_data_end+0xfffc2d90>
   42e4c:	11bffd44 	addi	r6,r2,-11
   42e50:	8986983a 	sll	r3,r17,r6
   42e54:	0023883a 	mov	r17,zero
   42e58:	003fe606 	br	42df4 <__alt_data_end+0xfffc2df4>

00042e5c <__truncdfsf2>:
   42e5c:	2810d53a 	srli	r8,r5,20
   42e60:	01c00434 	movhi	r7,16
   42e64:	39ffffc4 	addi	r7,r7,-1
   42e68:	29ce703a 	and	r7,r5,r7
   42e6c:	4201ffcc 	andi	r8,r8,2047
   42e70:	380e90fa 	slli	r7,r7,3
   42e74:	200cd77a 	srli	r6,r4,29
   42e78:	42400044 	addi	r9,r8,1
   42e7c:	4a41ffcc 	andi	r9,r9,2047
   42e80:	00c00044 	movi	r3,1
   42e84:	280ad7fa 	srli	r5,r5,31
   42e88:	31ceb03a 	or	r7,r6,r7
   42e8c:	200490fa 	slli	r2,r4,3
   42e90:	1a40230e 	bge	r3,r9,42f20 <__truncdfsf2+0xc4>
   42e94:	40ff2004 	addi	r3,r8,-896
   42e98:	01803f84 	movi	r6,254
   42e9c:	30c01516 	blt	r6,r3,42ef4 <__truncdfsf2+0x98>
   42ea0:	00c0380e 	bge	zero,r3,42f84 <__truncdfsf2+0x128>
   42ea4:	200c91ba 	slli	r6,r4,6
   42ea8:	380e90fa 	slli	r7,r7,3
   42eac:	1004d77a 	srli	r2,r2,29
   42eb0:	300cc03a 	cmpne	r6,r6,zero
   42eb4:	31ccb03a 	or	r6,r6,r7
   42eb8:	308cb03a 	or	r6,r6,r2
   42ebc:	308001cc 	andi	r2,r6,7
   42ec0:	10000426 	beq	r2,zero,42ed4 <__truncdfsf2+0x78>
   42ec4:	308003cc 	andi	r2,r6,15
   42ec8:	01000104 	movi	r4,4
   42ecc:	11000126 	beq	r2,r4,42ed4 <__truncdfsf2+0x78>
   42ed0:	31800104 	addi	r6,r6,4
   42ed4:	3081002c 	andhi	r2,r6,1024
   42ed8:	10001626 	beq	r2,zero,42f34 <__truncdfsf2+0xd8>
   42edc:	18c00044 	addi	r3,r3,1
   42ee0:	00803fc4 	movi	r2,255
   42ee4:	18800326 	beq	r3,r2,42ef4 <__truncdfsf2+0x98>
   42ee8:	300c91ba 	slli	r6,r6,6
   42eec:	300cd27a 	srli	r6,r6,9
   42ef0:	00000206 	br	42efc <__truncdfsf2+0xa0>
   42ef4:	00ffffc4 	movi	r3,-1
   42ef8:	000d883a 	mov	r6,zero
   42efc:	18c03fcc 	andi	r3,r3,255
   42f00:	180895fa 	slli	r4,r3,23
   42f04:	00c02034 	movhi	r3,128
   42f08:	280a97fa 	slli	r5,r5,31
   42f0c:	18ffffc4 	addi	r3,r3,-1
   42f10:	30c6703a 	and	r3,r6,r3
   42f14:	1906b03a 	or	r3,r3,r4
   42f18:	1944b03a 	or	r2,r3,r5
   42f1c:	f800283a 	ret
   42f20:	40000b1e 	bne	r8,zero,42f50 <__truncdfsf2+0xf4>
   42f24:	388cb03a 	or	r6,r7,r2
   42f28:	0007883a 	mov	r3,zero
   42f2c:	30000426 	beq	r6,zero,42f40 <__truncdfsf2+0xe4>
   42f30:	01800144 	movi	r6,5
   42f34:	00803fc4 	movi	r2,255
   42f38:	300cd0fa 	srli	r6,r6,3
   42f3c:	18800a26 	beq	r3,r2,42f68 <__truncdfsf2+0x10c>
   42f40:	00802034 	movhi	r2,128
   42f44:	10bfffc4 	addi	r2,r2,-1
   42f48:	308c703a 	and	r6,r6,r2
   42f4c:	003feb06 	br	42efc <__alt_data_end+0xfffc2efc>
   42f50:	3888b03a 	or	r4,r7,r2
   42f54:	203fe726 	beq	r4,zero,42ef4 <__alt_data_end+0xfffc2ef4>
   42f58:	380c90fa 	slli	r6,r7,3
   42f5c:	00c03fc4 	movi	r3,255
   42f60:	31808034 	orhi	r6,r6,512
   42f64:	003fd506 	br	42ebc <__alt_data_end+0xfffc2ebc>
   42f68:	303fe226 	beq	r6,zero,42ef4 <__alt_data_end+0xfffc2ef4>
   42f6c:	00802034 	movhi	r2,128
   42f70:	31801034 	orhi	r6,r6,64
   42f74:	10bfffc4 	addi	r2,r2,-1
   42f78:	00ffffc4 	movi	r3,-1
   42f7c:	308c703a 	and	r6,r6,r2
   42f80:	003fde06 	br	42efc <__alt_data_end+0xfffc2efc>
   42f84:	013ffa44 	movi	r4,-23
   42f88:	19000e16 	blt	r3,r4,42fc4 <__truncdfsf2+0x168>
   42f8c:	01000784 	movi	r4,30
   42f90:	20c9c83a 	sub	r4,r4,r3
   42f94:	018007c4 	movi	r6,31
   42f98:	39c02034 	orhi	r7,r7,128
   42f9c:	31000b16 	blt	r6,r4,42fcc <__truncdfsf2+0x170>
   42fa0:	423f2084 	addi	r8,r8,-894
   42fa4:	120c983a 	sll	r6,r2,r8
   42fa8:	3a0e983a 	sll	r7,r7,r8
   42fac:	1104d83a 	srl	r2,r2,r4
   42fb0:	300cc03a 	cmpne	r6,r6,zero
   42fb4:	31ceb03a 	or	r7,r6,r7
   42fb8:	388cb03a 	or	r6,r7,r2
   42fbc:	0007883a 	mov	r3,zero
   42fc0:	003fbe06 	br	42ebc <__alt_data_end+0xfffc2ebc>
   42fc4:	0007883a 	mov	r3,zero
   42fc8:	003fd906 	br	42f30 <__alt_data_end+0xfffc2f30>
   42fcc:	01bfff84 	movi	r6,-2
   42fd0:	30cdc83a 	sub	r6,r6,r3
   42fd4:	00c00804 	movi	r3,32
   42fd8:	398cd83a 	srl	r6,r7,r6
   42fdc:	20c00726 	beq	r4,r3,42ffc <__truncdfsf2+0x1a0>
   42fe0:	423f2884 	addi	r8,r8,-862
   42fe4:	3a0e983a 	sll	r7,r7,r8
   42fe8:	3884b03a 	or	r2,r7,r2
   42fec:	1004c03a 	cmpne	r2,r2,zero
   42ff0:	118cb03a 	or	r6,r2,r6
   42ff4:	0007883a 	mov	r3,zero
   42ff8:	003fb006 	br	42ebc <__alt_data_end+0xfffc2ebc>
   42ffc:	000f883a 	mov	r7,zero
   43000:	003ff906 	br	42fe8 <__alt_data_end+0xfffc2fe8>

00043004 <__clzsi2>:
   43004:	00bfffd4 	movui	r2,65535
   43008:	11000536 	bltu	r2,r4,43020 <__clzsi2+0x1c>
   4300c:	00803fc4 	movi	r2,255
   43010:	11000f36 	bltu	r2,r4,43050 <__clzsi2+0x4c>
   43014:	00800804 	movi	r2,32
   43018:	0007883a 	mov	r3,zero
   4301c:	00000506 	br	43034 <__clzsi2+0x30>
   43020:	00804034 	movhi	r2,256
   43024:	10bfffc4 	addi	r2,r2,-1
   43028:	11000c2e 	bgeu	r2,r4,4305c <__clzsi2+0x58>
   4302c:	00800204 	movi	r2,8
   43030:	00c00604 	movi	r3,24
   43034:	20c8d83a 	srl	r4,r4,r3
   43038:	00c00174 	movhi	r3,5
   4303c:	18c3da84 	addi	r3,r3,3946
   43040:	1909883a 	add	r4,r3,r4
   43044:	20c00003 	ldbu	r3,0(r4)
   43048:	10c5c83a 	sub	r2,r2,r3
   4304c:	f800283a 	ret
   43050:	00800604 	movi	r2,24
   43054:	00c00204 	movi	r3,8
   43058:	003ff606 	br	43034 <__alt_data_end+0xfffc3034>
   4305c:	00800404 	movi	r2,16
   43060:	1007883a 	mov	r3,r2
   43064:	003ff306 	br	43034 <__alt_data_end+0xfffc3034>

00043068 <_printf_r>:
   43068:	defffd04 	addi	sp,sp,-12
   4306c:	2805883a 	mov	r2,r5
   43070:	dfc00015 	stw	ra,0(sp)
   43074:	d9800115 	stw	r6,4(sp)
   43078:	d9c00215 	stw	r7,8(sp)
   4307c:	21400217 	ldw	r5,8(r4)
   43080:	d9c00104 	addi	r7,sp,4
   43084:	100d883a 	mov	r6,r2
   43088:	00430d40 	call	430d4 <___vfprintf_internal_r>
   4308c:	dfc00017 	ldw	ra,0(sp)
   43090:	dec00304 	addi	sp,sp,12
   43094:	f800283a 	ret

00043098 <printf>:
   43098:	defffc04 	addi	sp,sp,-16
   4309c:	dfc00015 	stw	ra,0(sp)
   430a0:	d9400115 	stw	r5,4(sp)
   430a4:	d9800215 	stw	r6,8(sp)
   430a8:	d9c00315 	stw	r7,12(sp)
   430ac:	00800174 	movhi	r2,5
   430b0:	108b6e04 	addi	r2,r2,11704
   430b4:	10800017 	ldw	r2,0(r2)
   430b8:	200b883a 	mov	r5,r4
   430bc:	d9800104 	addi	r6,sp,4
   430c0:	11000217 	ldw	r4,8(r2)
   430c4:	00452cc0 	call	452cc <__vfprintf_internal>
   430c8:	dfc00017 	ldw	ra,0(sp)
   430cc:	dec00404 	addi	sp,sp,16
   430d0:	f800283a 	ret

000430d4 <___vfprintf_internal_r>:
   430d4:	deffb804 	addi	sp,sp,-288
   430d8:	dfc04715 	stw	ra,284(sp)
   430dc:	ddc04515 	stw	r23,276(sp)
   430e0:	dd404315 	stw	r21,268(sp)
   430e4:	d9002c15 	stw	r4,176(sp)
   430e8:	282f883a 	mov	r23,r5
   430ec:	302b883a 	mov	r21,r6
   430f0:	d9c02d15 	stw	r7,180(sp)
   430f4:	df004615 	stw	fp,280(sp)
   430f8:	dd804415 	stw	r22,272(sp)
   430fc:	dd004215 	stw	r20,264(sp)
   43100:	dcc04115 	stw	r19,260(sp)
   43104:	dc804015 	stw	r18,256(sp)
   43108:	dc403f15 	stw	r17,252(sp)
   4310c:	dc003e15 	stw	r16,248(sp)
   43110:	0047a300 	call	47a30 <_localeconv_r>
   43114:	10800017 	ldw	r2,0(r2)
   43118:	1009883a 	mov	r4,r2
   4311c:	d8803415 	stw	r2,208(sp)
   43120:	0049a580 	call	49a58 <strlen>
   43124:	d8803715 	stw	r2,220(sp)
   43128:	d8802c17 	ldw	r2,176(sp)
   4312c:	10000226 	beq	r2,zero,43138 <___vfprintf_internal_r+0x64>
   43130:	10800e17 	ldw	r2,56(r2)
   43134:	1000f926 	beq	r2,zero,4351c <___vfprintf_internal_r+0x448>
   43138:	b880030b 	ldhu	r2,12(r23)
   4313c:	10c8000c 	andi	r3,r2,8192
   43140:	1800061e 	bne	r3,zero,4315c <___vfprintf_internal_r+0x88>
   43144:	b9001917 	ldw	r4,100(r23)
   43148:	00f7ffc4 	movi	r3,-8193
   4314c:	10880014 	ori	r2,r2,8192
   43150:	20c6703a 	and	r3,r4,r3
   43154:	b880030d 	sth	r2,12(r23)
   43158:	b8c01915 	stw	r3,100(r23)
   4315c:	10c0020c 	andi	r3,r2,8
   43160:	1800c126 	beq	r3,zero,43468 <___vfprintf_internal_r+0x394>
   43164:	b8c00417 	ldw	r3,16(r23)
   43168:	1800bf26 	beq	r3,zero,43468 <___vfprintf_internal_r+0x394>
   4316c:	1080068c 	andi	r2,r2,26
   43170:	00c00284 	movi	r3,10
   43174:	10c0c426 	beq	r2,r3,43488 <___vfprintf_internal_r+0x3b4>
   43178:	d8c00404 	addi	r3,sp,16
   4317c:	05000174 	movhi	r20,5
   43180:	d9001e04 	addi	r4,sp,120
   43184:	a5042b84 	addi	r20,r20,4270
   43188:	d8c01e15 	stw	r3,120(sp)
   4318c:	d8002015 	stw	zero,128(sp)
   43190:	d8001f15 	stw	zero,124(sp)
   43194:	d8003315 	stw	zero,204(sp)
   43198:	d8003615 	stw	zero,216(sp)
   4319c:	d8003815 	stw	zero,224(sp)
   431a0:	1811883a 	mov	r8,r3
   431a4:	d8003915 	stw	zero,228(sp)
   431a8:	d8003a15 	stw	zero,232(sp)
   431ac:	d8002f15 	stw	zero,188(sp)
   431b0:	d9002815 	stw	r4,160(sp)
   431b4:	a8800007 	ldb	r2,0(r21)
   431b8:	10027b26 	beq	r2,zero,43ba8 <___vfprintf_internal_r+0xad4>
   431bc:	00c00944 	movi	r3,37
   431c0:	a821883a 	mov	r16,r21
   431c4:	10c0021e 	bne	r2,r3,431d0 <___vfprintf_internal_r+0xfc>
   431c8:	00001406 	br	4321c <___vfprintf_internal_r+0x148>
   431cc:	10c00326 	beq	r2,r3,431dc <___vfprintf_internal_r+0x108>
   431d0:	84000044 	addi	r16,r16,1
   431d4:	80800007 	ldb	r2,0(r16)
   431d8:	103ffc1e 	bne	r2,zero,431cc <__alt_data_end+0xfffc31cc>
   431dc:	8563c83a 	sub	r17,r16,r21
   431e0:	88000e26 	beq	r17,zero,4321c <___vfprintf_internal_r+0x148>
   431e4:	d8c02017 	ldw	r3,128(sp)
   431e8:	d8801f17 	ldw	r2,124(sp)
   431ec:	45400015 	stw	r21,0(r8)
   431f0:	1c47883a 	add	r3,r3,r17
   431f4:	10800044 	addi	r2,r2,1
   431f8:	d8c02015 	stw	r3,128(sp)
   431fc:	44400115 	stw	r17,4(r8)
   43200:	d8801f15 	stw	r2,124(sp)
   43204:	00c001c4 	movi	r3,7
   43208:	1880a716 	blt	r3,r2,434a8 <___vfprintf_internal_r+0x3d4>
   4320c:	42000204 	addi	r8,r8,8
   43210:	d9402f17 	ldw	r5,188(sp)
   43214:	2c4b883a 	add	r5,r5,r17
   43218:	d9402f15 	stw	r5,188(sp)
   4321c:	80800007 	ldb	r2,0(r16)
   43220:	1000a826 	beq	r2,zero,434c4 <___vfprintf_internal_r+0x3f0>
   43224:	84400047 	ldb	r17,1(r16)
   43228:	00bfffc4 	movi	r2,-1
   4322c:	85400044 	addi	r21,r16,1
   43230:	d8002785 	stb	zero,158(sp)
   43234:	0007883a 	mov	r3,zero
   43238:	000f883a 	mov	r7,zero
   4323c:	d8802915 	stw	r2,164(sp)
   43240:	d8003115 	stw	zero,196(sp)
   43244:	0025883a 	mov	r18,zero
   43248:	01401604 	movi	r5,88
   4324c:	01800244 	movi	r6,9
   43250:	02800a84 	movi	r10,42
   43254:	02401b04 	movi	r9,108
   43258:	ad400044 	addi	r21,r21,1
   4325c:	88bff804 	addi	r2,r17,-32
   43260:	28830436 	bltu	r5,r2,43e74 <___vfprintf_internal_r+0xda0>
   43264:	100490ba 	slli	r2,r2,2
   43268:	01000134 	movhi	r4,4
   4326c:	210c9f04 	addi	r4,r4,12924
   43270:	1105883a 	add	r2,r2,r4
   43274:	10800017 	ldw	r2,0(r2)
   43278:	1000683a 	jmp	r2
   4327c:	00043d94 	movui	zero,4342
   43280:	00043e74 	movhi	zero,4345
   43284:	00043e74 	movhi	zero,4345
   43288:	00043db4 	movhi	zero,4342
   4328c:	00043e74 	movhi	zero,4345
   43290:	00043e74 	movhi	zero,4345
   43294:	00043e74 	movhi	zero,4345
   43298:	00043e74 	movhi	zero,4345
   4329c:	00043e74 	movhi	zero,4345
   432a0:	00043e74 	movhi	zero,4345
   432a4:	00043528 	cmpgeui	zero,zero,4308
   432a8:	00043cd0 	cmplti	zero,zero,4339
   432ac:	00043e74 	movhi	zero,4345
   432b0:	000433f0 	cmpltui	zero,zero,4303
   432b4:	00043550 	cmplti	zero,zero,4309
   432b8:	00043e74 	movhi	zero,4345
   432bc:	00043590 	cmplti	zero,zero,4310
   432c0:	0004359c 	xori	zero,zero,4310
   432c4:	0004359c 	xori	zero,zero,4310
   432c8:	0004359c 	xori	zero,zero,4310
   432cc:	0004359c 	xori	zero,zero,4310
   432d0:	0004359c 	xori	zero,zero,4310
   432d4:	0004359c 	xori	zero,zero,4310
   432d8:	0004359c 	xori	zero,zero,4310
   432dc:	0004359c 	xori	zero,zero,4310
   432e0:	0004359c 	xori	zero,zero,4310
   432e4:	00043e74 	movhi	zero,4345
   432e8:	00043e74 	movhi	zero,4345
   432ec:	00043e74 	movhi	zero,4345
   432f0:	00043e74 	movhi	zero,4345
   432f4:	00043e74 	movhi	zero,4345
   432f8:	00043e74 	movhi	zero,4345
   432fc:	00043e74 	movhi	zero,4345
   43300:	00043e74 	movhi	zero,4345
   43304:	00043e74 	movhi	zero,4345
   43308:	00043e74 	movhi	zero,4345
   4330c:	000435d0 	cmplti	zero,zero,4311
   43310:	0004368c 	andi	zero,zero,4314
   43314:	00043e74 	movhi	zero,4345
   43318:	0004368c 	andi	zero,zero,4314
   4331c:	00043e74 	movhi	zero,4345
   43320:	00043e74 	movhi	zero,4345
   43324:	00043e74 	movhi	zero,4345
   43328:	00043e74 	movhi	zero,4345
   4332c:	0004372c 	andhi	zero,zero,4316
   43330:	00043e74 	movhi	zero,4345
   43334:	00043e74 	movhi	zero,4345
   43338:	00043738 	rdprs	zero,zero,4316
   4333c:	00043e74 	movhi	zero,4345
   43340:	00043e74 	movhi	zero,4345
   43344:	00043e74 	movhi	zero,4345
   43348:	00043e74 	movhi	zero,4345
   4334c:	00043e74 	movhi	zero,4345
   43350:	00043bb0 	cmpltui	zero,zero,4334
   43354:	00043e74 	movhi	zero,4345
   43358:	00043e74 	movhi	zero,4345
   4335c:	00043c10 	cmplti	zero,zero,4336
   43360:	00043e74 	movhi	zero,4345
   43364:	00043e74 	movhi	zero,4345
   43368:	00043e74 	movhi	zero,4345
   4336c:	00043e74 	movhi	zero,4345
   43370:	00043e74 	movhi	zero,4345
   43374:	00043e74 	movhi	zero,4345
   43378:	00043e74 	movhi	zero,4345
   4337c:	00043e74 	movhi	zero,4345
   43380:	00043e74 	movhi	zero,4345
   43384:	00043e74 	movhi	zero,4345
   43388:	00043e20 	cmpeqi	zero,zero,4344
   4338c:	00043dc0 	call	43dc <__alt_mem_onchip_memory2_0-0x3bc24>
   43390:	0004368c 	andi	zero,zero,4314
   43394:	0004368c 	andi	zero,zero,4314
   43398:	0004368c 	andi	zero,zero,4314
   4339c:	00043dd0 	cmplti	zero,zero,4343
   433a0:	00043dc0 	call	43dc <__alt_mem_onchip_memory2_0-0x3bc24>
   433a4:	00043e74 	movhi	zero,4345
   433a8:	00043e74 	movhi	zero,4345
   433ac:	00043ddc 	xori	zero,zero,4343
   433b0:	00043e74 	movhi	zero,4345
   433b4:	00043dec 	andhi	zero,zero,4343
   433b8:	00043cc0 	call	43cc <__alt_mem_onchip_memory2_0-0x3bc34>
   433bc:	000433fc 	xorhi	zero,zero,4303
   433c0:	00043ce0 	cmpeqi	zero,zero,4339
   433c4:	00043e74 	movhi	zero,4345
   433c8:	00043cec 	andhi	zero,zero,4339
   433cc:	00043e74 	movhi	zero,4345
   433d0:	00043d48 	cmpgei	zero,zero,4341
   433d4:	00043e74 	movhi	zero,4345
   433d8:	00043e74 	movhi	zero,4345
   433dc:	00043d58 	cmpnei	zero,zero,4341
   433e0:	d9003117 	ldw	r4,196(sp)
   433e4:	d8802d15 	stw	r2,180(sp)
   433e8:	0109c83a 	sub	r4,zero,r4
   433ec:	d9003115 	stw	r4,196(sp)
   433f0:	94800114 	ori	r18,r18,4
   433f4:	ac400007 	ldb	r17,0(r21)
   433f8:	003f9706 	br	43258 <__alt_data_end+0xfffc3258>
   433fc:	00800c04 	movi	r2,48
   43400:	d9002d17 	ldw	r4,180(sp)
   43404:	d9402917 	ldw	r5,164(sp)
   43408:	d8802705 	stb	r2,156(sp)
   4340c:	00801e04 	movi	r2,120
   43410:	d8802745 	stb	r2,157(sp)
   43414:	d8002785 	stb	zero,158(sp)
   43418:	20c00104 	addi	r3,r4,4
   4341c:	24c00017 	ldw	r19,0(r4)
   43420:	002d883a 	mov	r22,zero
   43424:	90800094 	ori	r2,r18,2
   43428:	28029a16 	blt	r5,zero,43e94 <___vfprintf_internal_r+0xdc0>
   4342c:	00bfdfc4 	movi	r2,-129
   43430:	90a4703a 	and	r18,r18,r2
   43434:	d8c02d15 	stw	r3,180(sp)
   43438:	94800094 	ori	r18,r18,2
   4343c:	9802871e 	bne	r19,zero,43e5c <___vfprintf_internal_r+0xd88>
   43440:	00800174 	movhi	r2,5
   43444:	10842404 	addi	r2,r2,4240
   43448:	d8803915 	stw	r2,228(sp)
   4344c:	04401e04 	movi	r17,120
   43450:	d8802917 	ldw	r2,164(sp)
   43454:	0039883a 	mov	fp,zero
   43458:	1001e926 	beq	r2,zero,43c00 <___vfprintf_internal_r+0xb2c>
   4345c:	0027883a 	mov	r19,zero
   43460:	002d883a 	mov	r22,zero
   43464:	00020506 	br	43c7c <___vfprintf_internal_r+0xba8>
   43468:	d9002c17 	ldw	r4,176(sp)
   4346c:	b80b883a 	mov	r5,r23
   43470:	00453a40 	call	453a4 <__swsetup_r>
   43474:	1005ac1e 	bne	r2,zero,44b28 <___vfprintf_internal_r+0x1a54>
   43478:	b880030b 	ldhu	r2,12(r23)
   4347c:	00c00284 	movi	r3,10
   43480:	1080068c 	andi	r2,r2,26
   43484:	10ff3c1e 	bne	r2,r3,43178 <__alt_data_end+0xfffc3178>
   43488:	b880038f 	ldh	r2,14(r23)
   4348c:	103f3a16 	blt	r2,zero,43178 <__alt_data_end+0xfffc3178>
   43490:	d9c02d17 	ldw	r7,180(sp)
   43494:	d9002c17 	ldw	r4,176(sp)
   43498:	a80d883a 	mov	r6,r21
   4349c:	b80b883a 	mov	r5,r23
   434a0:	00452e80 	call	452e8 <__sbprintf>
   434a4:	00001106 	br	434ec <___vfprintf_internal_r+0x418>
   434a8:	d9002c17 	ldw	r4,176(sp)
   434ac:	d9801e04 	addi	r6,sp,120
   434b0:	b80b883a 	mov	r5,r23
   434b4:	0049bec0 	call	49bec <__sprint_r>
   434b8:	1000081e 	bne	r2,zero,434dc <___vfprintf_internal_r+0x408>
   434bc:	da000404 	addi	r8,sp,16
   434c0:	003f5306 	br	43210 <__alt_data_end+0xfffc3210>
   434c4:	d8802017 	ldw	r2,128(sp)
   434c8:	10000426 	beq	r2,zero,434dc <___vfprintf_internal_r+0x408>
   434cc:	d9002c17 	ldw	r4,176(sp)
   434d0:	d9801e04 	addi	r6,sp,120
   434d4:	b80b883a 	mov	r5,r23
   434d8:	0049bec0 	call	49bec <__sprint_r>
   434dc:	b880030b 	ldhu	r2,12(r23)
   434e0:	1080100c 	andi	r2,r2,64
   434e4:	1005901e 	bne	r2,zero,44b28 <___vfprintf_internal_r+0x1a54>
   434e8:	d8802f17 	ldw	r2,188(sp)
   434ec:	dfc04717 	ldw	ra,284(sp)
   434f0:	df004617 	ldw	fp,280(sp)
   434f4:	ddc04517 	ldw	r23,276(sp)
   434f8:	dd804417 	ldw	r22,272(sp)
   434fc:	dd404317 	ldw	r21,268(sp)
   43500:	dd004217 	ldw	r20,264(sp)
   43504:	dcc04117 	ldw	r19,260(sp)
   43508:	dc804017 	ldw	r18,256(sp)
   4350c:	dc403f17 	ldw	r17,252(sp)
   43510:	dc003e17 	ldw	r16,248(sp)
   43514:	dec04804 	addi	sp,sp,288
   43518:	f800283a 	ret
   4351c:	d9002c17 	ldw	r4,176(sp)
   43520:	00473780 	call	47378 <__sinit>
   43524:	003f0406 	br	43138 <__alt_data_end+0xfffc3138>
   43528:	d8802d17 	ldw	r2,180(sp)
   4352c:	d9002d17 	ldw	r4,180(sp)
   43530:	10800017 	ldw	r2,0(r2)
   43534:	d8803115 	stw	r2,196(sp)
   43538:	20800104 	addi	r2,r4,4
   4353c:	d9003117 	ldw	r4,196(sp)
   43540:	203fa716 	blt	r4,zero,433e0 <__alt_data_end+0xfffc33e0>
   43544:	d8802d15 	stw	r2,180(sp)
   43548:	ac400007 	ldb	r17,0(r21)
   4354c:	003f4206 	br	43258 <__alt_data_end+0xfffc3258>
   43550:	ac400007 	ldb	r17,0(r21)
   43554:	aac00044 	addi	r11,r21,1
   43558:	8a872826 	beq	r17,r10,451fc <___vfprintf_internal_r+0x2128>
   4355c:	88bff404 	addi	r2,r17,-48
   43560:	0009883a 	mov	r4,zero
   43564:	30867d36 	bltu	r6,r2,44f5c <___vfprintf_internal_r+0x1e88>
   43568:	5c400007 	ldb	r17,0(r11)
   4356c:	210002a4 	muli	r4,r4,10
   43570:	5d400044 	addi	r21,r11,1
   43574:	a817883a 	mov	r11,r21
   43578:	2089883a 	add	r4,r4,r2
   4357c:	88bff404 	addi	r2,r17,-48
   43580:	30bff92e 	bgeu	r6,r2,43568 <__alt_data_end+0xfffc3568>
   43584:	2005c916 	blt	r4,zero,44cac <___vfprintf_internal_r+0x1bd8>
   43588:	d9002915 	stw	r4,164(sp)
   4358c:	003f3306 	br	4325c <__alt_data_end+0xfffc325c>
   43590:	94802014 	ori	r18,r18,128
   43594:	ac400007 	ldb	r17,0(r21)
   43598:	003f2f06 	br	43258 <__alt_data_end+0xfffc3258>
   4359c:	a809883a 	mov	r4,r21
   435a0:	d8003115 	stw	zero,196(sp)
   435a4:	88bff404 	addi	r2,r17,-48
   435a8:	0017883a 	mov	r11,zero
   435ac:	24400007 	ldb	r17,0(r4)
   435b0:	5ac002a4 	muli	r11,r11,10
   435b4:	ad400044 	addi	r21,r21,1
   435b8:	a809883a 	mov	r4,r21
   435bc:	12d7883a 	add	r11,r2,r11
   435c0:	88bff404 	addi	r2,r17,-48
   435c4:	30bff92e 	bgeu	r6,r2,435ac <__alt_data_end+0xfffc35ac>
   435c8:	dac03115 	stw	r11,196(sp)
   435cc:	003f2306 	br	4325c <__alt_data_end+0xfffc325c>
   435d0:	18c03fcc 	andi	r3,r3,255
   435d4:	18072b1e 	bne	r3,zero,45284 <___vfprintf_internal_r+0x21b0>
   435d8:	94800414 	ori	r18,r18,16
   435dc:	9080080c 	andi	r2,r18,32
   435e0:	10037b26 	beq	r2,zero,443d0 <___vfprintf_internal_r+0x12fc>
   435e4:	d9402d17 	ldw	r5,180(sp)
   435e8:	28800117 	ldw	r2,4(r5)
   435ec:	2cc00017 	ldw	r19,0(r5)
   435f0:	29400204 	addi	r5,r5,8
   435f4:	d9402d15 	stw	r5,180(sp)
   435f8:	102d883a 	mov	r22,r2
   435fc:	10044b16 	blt	r2,zero,4472c <___vfprintf_internal_r+0x1658>
   43600:	d9402917 	ldw	r5,164(sp)
   43604:	df002783 	ldbu	fp,158(sp)
   43608:	2803bc16 	blt	r5,zero,444fc <___vfprintf_internal_r+0x1428>
   4360c:	00ffdfc4 	movi	r3,-129
   43610:	9d84b03a 	or	r2,r19,r22
   43614:	90e4703a 	and	r18,r18,r3
   43618:	10017726 	beq	r2,zero,43bf8 <___vfprintf_internal_r+0xb24>
   4361c:	b0038326 	beq	r22,zero,4442c <___vfprintf_internal_r+0x1358>
   43620:	dc402a15 	stw	r17,168(sp)
   43624:	dc001e04 	addi	r16,sp,120
   43628:	b023883a 	mov	r17,r22
   4362c:	402d883a 	mov	r22,r8
   43630:	9809883a 	mov	r4,r19
   43634:	880b883a 	mov	r5,r17
   43638:	01800284 	movi	r6,10
   4363c:	000f883a 	mov	r7,zero
   43640:	004cb600 	call	4cb60 <__umoddi3>
   43644:	10800c04 	addi	r2,r2,48
   43648:	843fffc4 	addi	r16,r16,-1
   4364c:	9809883a 	mov	r4,r19
   43650:	880b883a 	mov	r5,r17
   43654:	80800005 	stb	r2,0(r16)
   43658:	01800284 	movi	r6,10
   4365c:	000f883a 	mov	r7,zero
   43660:	004c5e80 	call	4c5e8 <__udivdi3>
   43664:	1027883a 	mov	r19,r2
   43668:	10c4b03a 	or	r2,r2,r3
   4366c:	1823883a 	mov	r17,r3
   43670:	103fef1e 	bne	r2,zero,43630 <__alt_data_end+0xfffc3630>
   43674:	d8c02817 	ldw	r3,160(sp)
   43678:	dc402a17 	ldw	r17,168(sp)
   4367c:	b011883a 	mov	r8,r22
   43680:	1c07c83a 	sub	r3,r3,r16
   43684:	d8c02e15 	stw	r3,184(sp)
   43688:	00005906 	br	437f0 <___vfprintf_internal_r+0x71c>
   4368c:	18c03fcc 	andi	r3,r3,255
   43690:	1806fa1e 	bne	r3,zero,4527c <___vfprintf_internal_r+0x21a8>
   43694:	9080020c 	andi	r2,r18,8
   43698:	10048a26 	beq	r2,zero,448c4 <___vfprintf_internal_r+0x17f0>
   4369c:	d8c02d17 	ldw	r3,180(sp)
   436a0:	d9002d17 	ldw	r4,180(sp)
   436a4:	d9402d17 	ldw	r5,180(sp)
   436a8:	18c00017 	ldw	r3,0(r3)
   436ac:	21000117 	ldw	r4,4(r4)
   436b0:	29400204 	addi	r5,r5,8
   436b4:	d8c03615 	stw	r3,216(sp)
   436b8:	d9003815 	stw	r4,224(sp)
   436bc:	d9402d15 	stw	r5,180(sp)
   436c0:	d9003617 	ldw	r4,216(sp)
   436c4:	d9403817 	ldw	r5,224(sp)
   436c8:	da003d15 	stw	r8,244(sp)
   436cc:	04000044 	movi	r16,1
   436d0:	00497780 	call	49778 <__fpclassifyd>
   436d4:	da003d17 	ldw	r8,244(sp)
   436d8:	14041f1e 	bne	r2,r16,44758 <___vfprintf_internal_r+0x1684>
   436dc:	d9003617 	ldw	r4,216(sp)
   436e0:	d9403817 	ldw	r5,224(sp)
   436e4:	000d883a 	mov	r6,zero
   436e8:	000f883a 	mov	r7,zero
   436ec:	004dae40 	call	4dae4 <__ledf2>
   436f0:	da003d17 	ldw	r8,244(sp)
   436f4:	1005be16 	blt	r2,zero,44df0 <___vfprintf_internal_r+0x1d1c>
   436f8:	df002783 	ldbu	fp,158(sp)
   436fc:	008011c4 	movi	r2,71
   43700:	1445330e 	bge	r2,r17,44bd0 <___vfprintf_internal_r+0x1afc>
   43704:	04000174 	movhi	r16,5
   43708:	84041c04 	addi	r16,r16,4208
   4370c:	00c000c4 	movi	r3,3
   43710:	00bfdfc4 	movi	r2,-129
   43714:	d8c02a15 	stw	r3,168(sp)
   43718:	90a4703a 	and	r18,r18,r2
   4371c:	d8c02e15 	stw	r3,184(sp)
   43720:	d8002915 	stw	zero,164(sp)
   43724:	d8003215 	stw	zero,200(sp)
   43728:	00003706 	br	43808 <___vfprintf_internal_r+0x734>
   4372c:	94800214 	ori	r18,r18,8
   43730:	ac400007 	ldb	r17,0(r21)
   43734:	003ec806 	br	43258 <__alt_data_end+0xfffc3258>
   43738:	18c03fcc 	andi	r3,r3,255
   4373c:	1806db1e 	bne	r3,zero,452ac <___vfprintf_internal_r+0x21d8>
   43740:	94800414 	ori	r18,r18,16
   43744:	9080080c 	andi	r2,r18,32
   43748:	1002d826 	beq	r2,zero,442ac <___vfprintf_internal_r+0x11d8>
   4374c:	d9402d17 	ldw	r5,180(sp)
   43750:	d8c02917 	ldw	r3,164(sp)
   43754:	d8002785 	stb	zero,158(sp)
   43758:	28800204 	addi	r2,r5,8
   4375c:	2cc00017 	ldw	r19,0(r5)
   43760:	2d800117 	ldw	r22,4(r5)
   43764:	18048f16 	blt	r3,zero,449a4 <___vfprintf_internal_r+0x18d0>
   43768:	013fdfc4 	movi	r4,-129
   4376c:	9d86b03a 	or	r3,r19,r22
   43770:	d8802d15 	stw	r2,180(sp)
   43774:	9124703a 	and	r18,r18,r4
   43778:	1802d91e 	bne	r3,zero,442e0 <___vfprintf_internal_r+0x120c>
   4377c:	d8c02917 	ldw	r3,164(sp)
   43780:	0039883a 	mov	fp,zero
   43784:	1805c326 	beq	r3,zero,44e94 <___vfprintf_internal_r+0x1dc0>
   43788:	0027883a 	mov	r19,zero
   4378c:	002d883a 	mov	r22,zero
   43790:	dc001e04 	addi	r16,sp,120
   43794:	9806d0fa 	srli	r3,r19,3
   43798:	b008977a 	slli	r4,r22,29
   4379c:	b02cd0fa 	srli	r22,r22,3
   437a0:	9cc001cc 	andi	r19,r19,7
   437a4:	98800c04 	addi	r2,r19,48
   437a8:	843fffc4 	addi	r16,r16,-1
   437ac:	20e6b03a 	or	r19,r4,r3
   437b0:	80800005 	stb	r2,0(r16)
   437b4:	9d86b03a 	or	r3,r19,r22
   437b8:	183ff61e 	bne	r3,zero,43794 <__alt_data_end+0xfffc3794>
   437bc:	90c0004c 	andi	r3,r18,1
   437c0:	18013b26 	beq	r3,zero,43cb0 <___vfprintf_internal_r+0xbdc>
   437c4:	10803fcc 	andi	r2,r2,255
   437c8:	1080201c 	xori	r2,r2,128
   437cc:	10bfe004 	addi	r2,r2,-128
   437d0:	00c00c04 	movi	r3,48
   437d4:	10c13626 	beq	r2,r3,43cb0 <___vfprintf_internal_r+0xbdc>
   437d8:	80ffffc5 	stb	r3,-1(r16)
   437dc:	d8c02817 	ldw	r3,160(sp)
   437e0:	80bfffc4 	addi	r2,r16,-1
   437e4:	1021883a 	mov	r16,r2
   437e8:	1887c83a 	sub	r3,r3,r2
   437ec:	d8c02e15 	stw	r3,184(sp)
   437f0:	d8802e17 	ldw	r2,184(sp)
   437f4:	d9002917 	ldw	r4,164(sp)
   437f8:	1100010e 	bge	r2,r4,43800 <___vfprintf_internal_r+0x72c>
   437fc:	2005883a 	mov	r2,r4
   43800:	d8802a15 	stw	r2,168(sp)
   43804:	d8003215 	stw	zero,200(sp)
   43808:	e7003fcc 	andi	fp,fp,255
   4380c:	e700201c 	xori	fp,fp,128
   43810:	e73fe004 	addi	fp,fp,-128
   43814:	e0000326 	beq	fp,zero,43824 <___vfprintf_internal_r+0x750>
   43818:	d8c02a17 	ldw	r3,168(sp)
   4381c:	18c00044 	addi	r3,r3,1
   43820:	d8c02a15 	stw	r3,168(sp)
   43824:	90c0008c 	andi	r3,r18,2
   43828:	d8c02b15 	stw	r3,172(sp)
   4382c:	18000326 	beq	r3,zero,4383c <___vfprintf_internal_r+0x768>
   43830:	d8c02a17 	ldw	r3,168(sp)
   43834:	18c00084 	addi	r3,r3,2
   43838:	d8c02a15 	stw	r3,168(sp)
   4383c:	90c0210c 	andi	r3,r18,132
   43840:	d8c03015 	stw	r3,192(sp)
   43844:	1801a31e 	bne	r3,zero,43ed4 <___vfprintf_internal_r+0xe00>
   43848:	d9003117 	ldw	r4,196(sp)
   4384c:	d8c02a17 	ldw	r3,168(sp)
   43850:	20e7c83a 	sub	r19,r4,r3
   43854:	04c19f0e 	bge	zero,r19,43ed4 <___vfprintf_internal_r+0xe00>
   43858:	02400404 	movi	r9,16
   4385c:	d8c02017 	ldw	r3,128(sp)
   43860:	d8801f17 	ldw	r2,124(sp)
   43864:	4cc50d0e 	bge	r9,r19,44c9c <___vfprintf_internal_r+0x1bc8>
   43868:	01400174 	movhi	r5,5
   4386c:	29442f84 	addi	r5,r5,4286
   43870:	dc403b15 	stw	r17,236(sp)
   43874:	d9403515 	stw	r5,212(sp)
   43878:	9823883a 	mov	r17,r19
   4387c:	482d883a 	mov	r22,r9
   43880:	9027883a 	mov	r19,r18
   43884:	070001c4 	movi	fp,7
   43888:	8025883a 	mov	r18,r16
   4388c:	dc002c17 	ldw	r16,176(sp)
   43890:	00000306 	br	438a0 <___vfprintf_internal_r+0x7cc>
   43894:	8c7ffc04 	addi	r17,r17,-16
   43898:	42000204 	addi	r8,r8,8
   4389c:	b440130e 	bge	r22,r17,438ec <___vfprintf_internal_r+0x818>
   438a0:	01000174 	movhi	r4,5
   438a4:	18c00404 	addi	r3,r3,16
   438a8:	10800044 	addi	r2,r2,1
   438ac:	21042f84 	addi	r4,r4,4286
   438b0:	41000015 	stw	r4,0(r8)
   438b4:	45800115 	stw	r22,4(r8)
   438b8:	d8c02015 	stw	r3,128(sp)
   438bc:	d8801f15 	stw	r2,124(sp)
   438c0:	e0bff40e 	bge	fp,r2,43894 <__alt_data_end+0xfffc3894>
   438c4:	d9801e04 	addi	r6,sp,120
   438c8:	b80b883a 	mov	r5,r23
   438cc:	8009883a 	mov	r4,r16
   438d0:	0049bec0 	call	49bec <__sprint_r>
   438d4:	103f011e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   438d8:	8c7ffc04 	addi	r17,r17,-16
   438dc:	d8c02017 	ldw	r3,128(sp)
   438e0:	d8801f17 	ldw	r2,124(sp)
   438e4:	da000404 	addi	r8,sp,16
   438e8:	b47fed16 	blt	r22,r17,438a0 <__alt_data_end+0xfffc38a0>
   438ec:	9021883a 	mov	r16,r18
   438f0:	9825883a 	mov	r18,r19
   438f4:	8827883a 	mov	r19,r17
   438f8:	dc403b17 	ldw	r17,236(sp)
   438fc:	d9403517 	ldw	r5,212(sp)
   43900:	98c7883a 	add	r3,r19,r3
   43904:	10800044 	addi	r2,r2,1
   43908:	41400015 	stw	r5,0(r8)
   4390c:	44c00115 	stw	r19,4(r8)
   43910:	d8c02015 	stw	r3,128(sp)
   43914:	d8801f15 	stw	r2,124(sp)
   43918:	010001c4 	movi	r4,7
   4391c:	2082a316 	blt	r4,r2,443ac <___vfprintf_internal_r+0x12d8>
   43920:	df002787 	ldb	fp,158(sp)
   43924:	42000204 	addi	r8,r8,8
   43928:	e0000c26 	beq	fp,zero,4395c <___vfprintf_internal_r+0x888>
   4392c:	d8801f17 	ldw	r2,124(sp)
   43930:	d9002784 	addi	r4,sp,158
   43934:	18c00044 	addi	r3,r3,1
   43938:	10800044 	addi	r2,r2,1
   4393c:	41000015 	stw	r4,0(r8)
   43940:	01000044 	movi	r4,1
   43944:	41000115 	stw	r4,4(r8)
   43948:	d8c02015 	stw	r3,128(sp)
   4394c:	d8801f15 	stw	r2,124(sp)
   43950:	010001c4 	movi	r4,7
   43954:	20823c16 	blt	r4,r2,44248 <___vfprintf_internal_r+0x1174>
   43958:	42000204 	addi	r8,r8,8
   4395c:	d8802b17 	ldw	r2,172(sp)
   43960:	10000c26 	beq	r2,zero,43994 <___vfprintf_internal_r+0x8c0>
   43964:	d8801f17 	ldw	r2,124(sp)
   43968:	d9002704 	addi	r4,sp,156
   4396c:	18c00084 	addi	r3,r3,2
   43970:	10800044 	addi	r2,r2,1
   43974:	41000015 	stw	r4,0(r8)
   43978:	01000084 	movi	r4,2
   4397c:	41000115 	stw	r4,4(r8)
   43980:	d8c02015 	stw	r3,128(sp)
   43984:	d8801f15 	stw	r2,124(sp)
   43988:	010001c4 	movi	r4,7
   4398c:	20823616 	blt	r4,r2,44268 <___vfprintf_internal_r+0x1194>
   43990:	42000204 	addi	r8,r8,8
   43994:	d9003017 	ldw	r4,192(sp)
   43998:	00802004 	movi	r2,128
   4399c:	20819926 	beq	r4,r2,44004 <___vfprintf_internal_r+0xf30>
   439a0:	d9402917 	ldw	r5,164(sp)
   439a4:	d8802e17 	ldw	r2,184(sp)
   439a8:	28adc83a 	sub	r22,r5,r2
   439ac:	0580310e 	bge	zero,r22,43a74 <___vfprintf_internal_r+0x9a0>
   439b0:	07000404 	movi	fp,16
   439b4:	d8801f17 	ldw	r2,124(sp)
   439b8:	e584140e 	bge	fp,r22,44a0c <___vfprintf_internal_r+0x1938>
   439bc:	01400174 	movhi	r5,5
   439c0:	29442b84 	addi	r5,r5,4270
   439c4:	dc402915 	stw	r17,164(sp)
   439c8:	d9402b15 	stw	r5,172(sp)
   439cc:	b023883a 	mov	r17,r22
   439d0:	04c001c4 	movi	r19,7
   439d4:	a82d883a 	mov	r22,r21
   439d8:	902b883a 	mov	r21,r18
   439dc:	8025883a 	mov	r18,r16
   439e0:	dc002c17 	ldw	r16,176(sp)
   439e4:	00000306 	br	439f4 <___vfprintf_internal_r+0x920>
   439e8:	8c7ffc04 	addi	r17,r17,-16
   439ec:	42000204 	addi	r8,r8,8
   439f0:	e440110e 	bge	fp,r17,43a38 <___vfprintf_internal_r+0x964>
   439f4:	18c00404 	addi	r3,r3,16
   439f8:	10800044 	addi	r2,r2,1
   439fc:	45000015 	stw	r20,0(r8)
   43a00:	47000115 	stw	fp,4(r8)
   43a04:	d8c02015 	stw	r3,128(sp)
   43a08:	d8801f15 	stw	r2,124(sp)
   43a0c:	98bff60e 	bge	r19,r2,439e8 <__alt_data_end+0xfffc39e8>
   43a10:	d9801e04 	addi	r6,sp,120
   43a14:	b80b883a 	mov	r5,r23
   43a18:	8009883a 	mov	r4,r16
   43a1c:	0049bec0 	call	49bec <__sprint_r>
   43a20:	103eae1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   43a24:	8c7ffc04 	addi	r17,r17,-16
   43a28:	d8c02017 	ldw	r3,128(sp)
   43a2c:	d8801f17 	ldw	r2,124(sp)
   43a30:	da000404 	addi	r8,sp,16
   43a34:	e47fef16 	blt	fp,r17,439f4 <__alt_data_end+0xfffc39f4>
   43a38:	9021883a 	mov	r16,r18
   43a3c:	a825883a 	mov	r18,r21
   43a40:	b02b883a 	mov	r21,r22
   43a44:	882d883a 	mov	r22,r17
   43a48:	dc402917 	ldw	r17,164(sp)
   43a4c:	d9002b17 	ldw	r4,172(sp)
   43a50:	1d87883a 	add	r3,r3,r22
   43a54:	10800044 	addi	r2,r2,1
   43a58:	41000015 	stw	r4,0(r8)
   43a5c:	45800115 	stw	r22,4(r8)
   43a60:	d8c02015 	stw	r3,128(sp)
   43a64:	d8801f15 	stw	r2,124(sp)
   43a68:	010001c4 	movi	r4,7
   43a6c:	2081ee16 	blt	r4,r2,44228 <___vfprintf_internal_r+0x1154>
   43a70:	42000204 	addi	r8,r8,8
   43a74:	9080400c 	andi	r2,r18,256
   43a78:	1001181e 	bne	r2,zero,43edc <___vfprintf_internal_r+0xe08>
   43a7c:	d9402e17 	ldw	r5,184(sp)
   43a80:	d8801f17 	ldw	r2,124(sp)
   43a84:	44000015 	stw	r16,0(r8)
   43a88:	1947883a 	add	r3,r3,r5
   43a8c:	10800044 	addi	r2,r2,1
   43a90:	41400115 	stw	r5,4(r8)
   43a94:	d8c02015 	stw	r3,128(sp)
   43a98:	d8801f15 	stw	r2,124(sp)
   43a9c:	010001c4 	movi	r4,7
   43aa0:	2081d316 	blt	r4,r2,441f0 <___vfprintf_internal_r+0x111c>
   43aa4:	42000204 	addi	r8,r8,8
   43aa8:	9480010c 	andi	r18,r18,4
   43aac:	90003226 	beq	r18,zero,43b78 <___vfprintf_internal_r+0xaa4>
   43ab0:	d9403117 	ldw	r5,196(sp)
   43ab4:	d8802a17 	ldw	r2,168(sp)
   43ab8:	28a1c83a 	sub	r16,r5,r2
   43abc:	04002e0e 	bge	zero,r16,43b78 <___vfprintf_internal_r+0xaa4>
   43ac0:	04400404 	movi	r17,16
   43ac4:	d8801f17 	ldw	r2,124(sp)
   43ac8:	8c04a20e 	bge	r17,r16,44d54 <___vfprintf_internal_r+0x1c80>
   43acc:	01400174 	movhi	r5,5
   43ad0:	29442f84 	addi	r5,r5,4286
   43ad4:	d9403515 	stw	r5,212(sp)
   43ad8:	048001c4 	movi	r18,7
   43adc:	dcc02c17 	ldw	r19,176(sp)
   43ae0:	00000306 	br	43af0 <___vfprintf_internal_r+0xa1c>
   43ae4:	843ffc04 	addi	r16,r16,-16
   43ae8:	42000204 	addi	r8,r8,8
   43aec:	8c00130e 	bge	r17,r16,43b3c <___vfprintf_internal_r+0xa68>
   43af0:	01000174 	movhi	r4,5
   43af4:	18c00404 	addi	r3,r3,16
   43af8:	10800044 	addi	r2,r2,1
   43afc:	21042f84 	addi	r4,r4,4286
   43b00:	41000015 	stw	r4,0(r8)
   43b04:	44400115 	stw	r17,4(r8)
   43b08:	d8c02015 	stw	r3,128(sp)
   43b0c:	d8801f15 	stw	r2,124(sp)
   43b10:	90bff40e 	bge	r18,r2,43ae4 <__alt_data_end+0xfffc3ae4>
   43b14:	d9801e04 	addi	r6,sp,120
   43b18:	b80b883a 	mov	r5,r23
   43b1c:	9809883a 	mov	r4,r19
   43b20:	0049bec0 	call	49bec <__sprint_r>
   43b24:	103e6d1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   43b28:	843ffc04 	addi	r16,r16,-16
   43b2c:	d8c02017 	ldw	r3,128(sp)
   43b30:	d8801f17 	ldw	r2,124(sp)
   43b34:	da000404 	addi	r8,sp,16
   43b38:	8c3fed16 	blt	r17,r16,43af0 <__alt_data_end+0xfffc3af0>
   43b3c:	d9403517 	ldw	r5,212(sp)
   43b40:	1c07883a 	add	r3,r3,r16
   43b44:	10800044 	addi	r2,r2,1
   43b48:	41400015 	stw	r5,0(r8)
   43b4c:	44000115 	stw	r16,4(r8)
   43b50:	d8c02015 	stw	r3,128(sp)
   43b54:	d8801f15 	stw	r2,124(sp)
   43b58:	010001c4 	movi	r4,7
   43b5c:	2080060e 	bge	r4,r2,43b78 <___vfprintf_internal_r+0xaa4>
   43b60:	d9002c17 	ldw	r4,176(sp)
   43b64:	d9801e04 	addi	r6,sp,120
   43b68:	b80b883a 	mov	r5,r23
   43b6c:	0049bec0 	call	49bec <__sprint_r>
   43b70:	103e5a1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   43b74:	d8c02017 	ldw	r3,128(sp)
   43b78:	d8803117 	ldw	r2,196(sp)
   43b7c:	d9002a17 	ldw	r4,168(sp)
   43b80:	1100010e 	bge	r2,r4,43b88 <___vfprintf_internal_r+0xab4>
   43b84:	2005883a 	mov	r2,r4
   43b88:	d9402f17 	ldw	r5,188(sp)
   43b8c:	288b883a 	add	r5,r5,r2
   43b90:	d9402f15 	stw	r5,188(sp)
   43b94:	18019e1e 	bne	r3,zero,44210 <___vfprintf_internal_r+0x113c>
   43b98:	a8800007 	ldb	r2,0(r21)
   43b9c:	d8001f15 	stw	zero,124(sp)
   43ba0:	da000404 	addi	r8,sp,16
   43ba4:	103d851e 	bne	r2,zero,431bc <__alt_data_end+0xfffc31bc>
   43ba8:	a821883a 	mov	r16,r21
   43bac:	003d9b06 	br	4321c <__alt_data_end+0xfffc321c>
   43bb0:	18c03fcc 	andi	r3,r3,255
   43bb4:	1805c11e 	bne	r3,zero,452bc <___vfprintf_internal_r+0x21e8>
   43bb8:	94800414 	ori	r18,r18,16
   43bbc:	9080080c 	andi	r2,r18,32
   43bc0:	10020c26 	beq	r2,zero,443f4 <___vfprintf_internal_r+0x1320>
   43bc4:	d8802d17 	ldw	r2,180(sp)
   43bc8:	d9002917 	ldw	r4,164(sp)
   43bcc:	d8002785 	stb	zero,158(sp)
   43bd0:	10c00204 	addi	r3,r2,8
   43bd4:	14c00017 	ldw	r19,0(r2)
   43bd8:	15800117 	ldw	r22,4(r2)
   43bdc:	20040f16 	blt	r4,zero,44c1c <___vfprintf_internal_r+0x1b48>
   43be0:	013fdfc4 	movi	r4,-129
   43be4:	9d84b03a 	or	r2,r19,r22
   43be8:	d8c02d15 	stw	r3,180(sp)
   43bec:	9124703a 	and	r18,r18,r4
   43bf0:	0039883a 	mov	fp,zero
   43bf4:	103e891e 	bne	r2,zero,4361c <__alt_data_end+0xfffc361c>
   43bf8:	d9002917 	ldw	r4,164(sp)
   43bfc:	2002c11e 	bne	r4,zero,44704 <___vfprintf_internal_r+0x1630>
   43c00:	d8002915 	stw	zero,164(sp)
   43c04:	d8002e15 	stw	zero,184(sp)
   43c08:	dc001e04 	addi	r16,sp,120
   43c0c:	003ef806 	br	437f0 <__alt_data_end+0xfffc37f0>
   43c10:	18c03fcc 	andi	r3,r3,255
   43c14:	18059d1e 	bne	r3,zero,4528c <___vfprintf_internal_r+0x21b8>
   43c18:	01400174 	movhi	r5,5
   43c1c:	29441f04 	addi	r5,r5,4220
   43c20:	d9403915 	stw	r5,228(sp)
   43c24:	9080080c 	andi	r2,r18,32
   43c28:	10005226 	beq	r2,zero,43d74 <___vfprintf_internal_r+0xca0>
   43c2c:	d8802d17 	ldw	r2,180(sp)
   43c30:	14c00017 	ldw	r19,0(r2)
   43c34:	15800117 	ldw	r22,4(r2)
   43c38:	10800204 	addi	r2,r2,8
   43c3c:	d8802d15 	stw	r2,180(sp)
   43c40:	9080004c 	andi	r2,r18,1
   43c44:	10019026 	beq	r2,zero,44288 <___vfprintf_internal_r+0x11b4>
   43c48:	9d84b03a 	or	r2,r19,r22
   43c4c:	10036926 	beq	r2,zero,449f4 <___vfprintf_internal_r+0x1920>
   43c50:	d8c02917 	ldw	r3,164(sp)
   43c54:	00800c04 	movi	r2,48
   43c58:	d8802705 	stb	r2,156(sp)
   43c5c:	dc402745 	stb	r17,157(sp)
   43c60:	d8002785 	stb	zero,158(sp)
   43c64:	90800094 	ori	r2,r18,2
   43c68:	18045d16 	blt	r3,zero,44de0 <___vfprintf_internal_r+0x1d0c>
   43c6c:	00bfdfc4 	movi	r2,-129
   43c70:	90a4703a 	and	r18,r18,r2
   43c74:	94800094 	ori	r18,r18,2
   43c78:	0039883a 	mov	fp,zero
   43c7c:	d9003917 	ldw	r4,228(sp)
   43c80:	dc001e04 	addi	r16,sp,120
   43c84:	988003cc 	andi	r2,r19,15
   43c88:	b006973a 	slli	r3,r22,28
   43c8c:	2085883a 	add	r2,r4,r2
   43c90:	9826d13a 	srli	r19,r19,4
   43c94:	10800003 	ldbu	r2,0(r2)
   43c98:	b02cd13a 	srli	r22,r22,4
   43c9c:	843fffc4 	addi	r16,r16,-1
   43ca0:	1ce6b03a 	or	r19,r3,r19
   43ca4:	80800005 	stb	r2,0(r16)
   43ca8:	9d84b03a 	or	r2,r19,r22
   43cac:	103ff51e 	bne	r2,zero,43c84 <__alt_data_end+0xfffc3c84>
   43cb0:	d8c02817 	ldw	r3,160(sp)
   43cb4:	1c07c83a 	sub	r3,r3,r16
   43cb8:	d8c02e15 	stw	r3,184(sp)
   43cbc:	003ecc06 	br	437f0 <__alt_data_end+0xfffc37f0>
   43cc0:	18c03fcc 	andi	r3,r3,255
   43cc4:	183e9f26 	beq	r3,zero,43744 <__alt_data_end+0xfffc3744>
   43cc8:	d9c02785 	stb	r7,158(sp)
   43ccc:	003e9d06 	br	43744 <__alt_data_end+0xfffc3744>
   43cd0:	00c00044 	movi	r3,1
   43cd4:	01c00ac4 	movi	r7,43
   43cd8:	ac400007 	ldb	r17,0(r21)
   43cdc:	003d5e06 	br	43258 <__alt_data_end+0xfffc3258>
   43ce0:	94800814 	ori	r18,r18,32
   43ce4:	ac400007 	ldb	r17,0(r21)
   43ce8:	003d5b06 	br	43258 <__alt_data_end+0xfffc3258>
   43cec:	d8c02d17 	ldw	r3,180(sp)
   43cf0:	d8002785 	stb	zero,158(sp)
   43cf4:	1c000017 	ldw	r16,0(r3)
   43cf8:	1cc00104 	addi	r19,r3,4
   43cfc:	80041926 	beq	r16,zero,44d64 <___vfprintf_internal_r+0x1c90>
   43d00:	d9002917 	ldw	r4,164(sp)
   43d04:	2003d016 	blt	r4,zero,44c48 <___vfprintf_internal_r+0x1b74>
   43d08:	200d883a 	mov	r6,r4
   43d0c:	000b883a 	mov	r5,zero
   43d10:	8009883a 	mov	r4,r16
   43d14:	da003d15 	stw	r8,244(sp)
   43d18:	00484280 	call	48428 <memchr>
   43d1c:	da003d17 	ldw	r8,244(sp)
   43d20:	10045426 	beq	r2,zero,44e74 <___vfprintf_internal_r+0x1da0>
   43d24:	1405c83a 	sub	r2,r2,r16
   43d28:	d8802e15 	stw	r2,184(sp)
   43d2c:	1003cc16 	blt	r2,zero,44c60 <___vfprintf_internal_r+0x1b8c>
   43d30:	df002783 	ldbu	fp,158(sp)
   43d34:	d8802a15 	stw	r2,168(sp)
   43d38:	dcc02d15 	stw	r19,180(sp)
   43d3c:	d8002915 	stw	zero,164(sp)
   43d40:	d8003215 	stw	zero,200(sp)
   43d44:	003eb006 	br	43808 <__alt_data_end+0xfffc3808>
   43d48:	18c03fcc 	andi	r3,r3,255
   43d4c:	183f9b26 	beq	r3,zero,43bbc <__alt_data_end+0xfffc3bbc>
   43d50:	d9c02785 	stb	r7,158(sp)
   43d54:	003f9906 	br	43bbc <__alt_data_end+0xfffc3bbc>
   43d58:	18c03fcc 	andi	r3,r3,255
   43d5c:	1805551e 	bne	r3,zero,452b4 <___vfprintf_internal_r+0x21e0>
   43d60:	01400174 	movhi	r5,5
   43d64:	29442404 	addi	r5,r5,4240
   43d68:	d9403915 	stw	r5,228(sp)
   43d6c:	9080080c 	andi	r2,r18,32
   43d70:	103fae1e 	bne	r2,zero,43c2c <__alt_data_end+0xfffc3c2c>
   43d74:	9080040c 	andi	r2,r18,16
   43d78:	1002de26 	beq	r2,zero,448f4 <___vfprintf_internal_r+0x1820>
   43d7c:	d8c02d17 	ldw	r3,180(sp)
   43d80:	002d883a 	mov	r22,zero
   43d84:	1cc00017 	ldw	r19,0(r3)
   43d88:	18c00104 	addi	r3,r3,4
   43d8c:	d8c02d15 	stw	r3,180(sp)
   43d90:	003fab06 	br	43c40 <__alt_data_end+0xfffc3c40>
   43d94:	38803fcc 	andi	r2,r7,255
   43d98:	1080201c 	xori	r2,r2,128
   43d9c:	10bfe004 	addi	r2,r2,-128
   43da0:	1002d21e 	bne	r2,zero,448ec <___vfprintf_internal_r+0x1818>
   43da4:	00c00044 	movi	r3,1
   43da8:	01c00804 	movi	r7,32
   43dac:	ac400007 	ldb	r17,0(r21)
   43db0:	003d2906 	br	43258 <__alt_data_end+0xfffc3258>
   43db4:	94800054 	ori	r18,r18,1
   43db8:	ac400007 	ldb	r17,0(r21)
   43dbc:	003d2606 	br	43258 <__alt_data_end+0xfffc3258>
   43dc0:	18c03fcc 	andi	r3,r3,255
   43dc4:	183e0526 	beq	r3,zero,435dc <__alt_data_end+0xfffc35dc>
   43dc8:	d9c02785 	stb	r7,158(sp)
   43dcc:	003e0306 	br	435dc <__alt_data_end+0xfffc35dc>
   43dd0:	94801014 	ori	r18,r18,64
   43dd4:	ac400007 	ldb	r17,0(r21)
   43dd8:	003d1f06 	br	43258 <__alt_data_end+0xfffc3258>
   43ddc:	ac400007 	ldb	r17,0(r21)
   43de0:	8a438726 	beq	r17,r9,44c00 <___vfprintf_internal_r+0x1b2c>
   43de4:	94800414 	ori	r18,r18,16
   43de8:	003d1b06 	br	43258 <__alt_data_end+0xfffc3258>
   43dec:	18c03fcc 	andi	r3,r3,255
   43df0:	1805341e 	bne	r3,zero,452c4 <___vfprintf_internal_r+0x21f0>
   43df4:	9080080c 	andi	r2,r18,32
   43df8:	1002cd26 	beq	r2,zero,44930 <___vfprintf_internal_r+0x185c>
   43dfc:	d9402d17 	ldw	r5,180(sp)
   43e00:	d9002f17 	ldw	r4,188(sp)
   43e04:	28800017 	ldw	r2,0(r5)
   43e08:	2007d7fa 	srai	r3,r4,31
   43e0c:	29400104 	addi	r5,r5,4
   43e10:	d9402d15 	stw	r5,180(sp)
   43e14:	11000015 	stw	r4,0(r2)
   43e18:	10c00115 	stw	r3,4(r2)
   43e1c:	003ce506 	br	431b4 <__alt_data_end+0xfffc31b4>
   43e20:	d8c02d17 	ldw	r3,180(sp)
   43e24:	d9002d17 	ldw	r4,180(sp)
   43e28:	d8002785 	stb	zero,158(sp)
   43e2c:	18800017 	ldw	r2,0(r3)
   43e30:	21000104 	addi	r4,r4,4
   43e34:	00c00044 	movi	r3,1
   43e38:	d8c02a15 	stw	r3,168(sp)
   43e3c:	d8801405 	stb	r2,80(sp)
   43e40:	d9002d15 	stw	r4,180(sp)
   43e44:	d8c02e15 	stw	r3,184(sp)
   43e48:	d8002915 	stw	zero,164(sp)
   43e4c:	d8003215 	stw	zero,200(sp)
   43e50:	dc001404 	addi	r16,sp,80
   43e54:	0039883a 	mov	fp,zero
   43e58:	003e7206 	br	43824 <__alt_data_end+0xfffc3824>
   43e5c:	01000174 	movhi	r4,5
   43e60:	21042404 	addi	r4,r4,4240
   43e64:	0039883a 	mov	fp,zero
   43e68:	d9003915 	stw	r4,228(sp)
   43e6c:	04401e04 	movi	r17,120
   43e70:	003f8206 	br	43c7c <__alt_data_end+0xfffc3c7c>
   43e74:	18c03fcc 	andi	r3,r3,255
   43e78:	1805061e 	bne	r3,zero,45294 <___vfprintf_internal_r+0x21c0>
   43e7c:	883d9126 	beq	r17,zero,434c4 <__alt_data_end+0xfffc34c4>
   43e80:	00c00044 	movi	r3,1
   43e84:	d8c02a15 	stw	r3,168(sp)
   43e88:	dc401405 	stb	r17,80(sp)
   43e8c:	d8002785 	stb	zero,158(sp)
   43e90:	003fec06 	br	43e44 <__alt_data_end+0xfffc3e44>
   43e94:	01400174 	movhi	r5,5
   43e98:	29442404 	addi	r5,r5,4240
   43e9c:	d9403915 	stw	r5,228(sp)
   43ea0:	d8c02d15 	stw	r3,180(sp)
   43ea4:	1025883a 	mov	r18,r2
   43ea8:	04401e04 	movi	r17,120
   43eac:	9d84b03a 	or	r2,r19,r22
   43eb0:	1000fc1e 	bne	r2,zero,442a4 <___vfprintf_internal_r+0x11d0>
   43eb4:	0039883a 	mov	fp,zero
   43eb8:	00800084 	movi	r2,2
   43ebc:	10803fcc 	andi	r2,r2,255
   43ec0:	00c00044 	movi	r3,1
   43ec4:	10c20f26 	beq	r2,r3,44704 <___vfprintf_internal_r+0x1630>
   43ec8:	00c00084 	movi	r3,2
   43ecc:	10fd6326 	beq	r2,r3,4345c <__alt_data_end+0xfffc345c>
   43ed0:	003e2d06 	br	43788 <__alt_data_end+0xfffc3788>
   43ed4:	d8c02017 	ldw	r3,128(sp)
   43ed8:	003e9306 	br	43928 <__alt_data_end+0xfffc3928>
   43edc:	00801944 	movi	r2,101
   43ee0:	14407e0e 	bge	r2,r17,440dc <___vfprintf_internal_r+0x1008>
   43ee4:	d9003617 	ldw	r4,216(sp)
   43ee8:	d9403817 	ldw	r5,224(sp)
   43eec:	000d883a 	mov	r6,zero
   43ef0:	000f883a 	mov	r7,zero
   43ef4:	d8c03c15 	stw	r3,240(sp)
   43ef8:	da003d15 	stw	r8,244(sp)
   43efc:	004d9800 	call	4d980 <__eqdf2>
   43f00:	d8c03c17 	ldw	r3,240(sp)
   43f04:	da003d17 	ldw	r8,244(sp)
   43f08:	1000f71e 	bne	r2,zero,442e8 <___vfprintf_internal_r+0x1214>
   43f0c:	d8801f17 	ldw	r2,124(sp)
   43f10:	01000174 	movhi	r4,5
   43f14:	21042b04 	addi	r4,r4,4268
   43f18:	18c00044 	addi	r3,r3,1
   43f1c:	10800044 	addi	r2,r2,1
   43f20:	41000015 	stw	r4,0(r8)
   43f24:	01000044 	movi	r4,1
   43f28:	41000115 	stw	r4,4(r8)
   43f2c:	d8c02015 	stw	r3,128(sp)
   43f30:	d8801f15 	stw	r2,124(sp)
   43f34:	010001c4 	movi	r4,7
   43f38:	2082b816 	blt	r4,r2,44a1c <___vfprintf_internal_r+0x1948>
   43f3c:	42000204 	addi	r8,r8,8
   43f40:	d8802617 	ldw	r2,152(sp)
   43f44:	d9403317 	ldw	r5,204(sp)
   43f48:	11400216 	blt	r2,r5,43f54 <___vfprintf_internal_r+0xe80>
   43f4c:	9080004c 	andi	r2,r18,1
   43f50:	103ed526 	beq	r2,zero,43aa8 <__alt_data_end+0xfffc3aa8>
   43f54:	d8803717 	ldw	r2,220(sp)
   43f58:	d9003417 	ldw	r4,208(sp)
   43f5c:	d9403717 	ldw	r5,220(sp)
   43f60:	1887883a 	add	r3,r3,r2
   43f64:	d8801f17 	ldw	r2,124(sp)
   43f68:	41000015 	stw	r4,0(r8)
   43f6c:	41400115 	stw	r5,4(r8)
   43f70:	10800044 	addi	r2,r2,1
   43f74:	d8c02015 	stw	r3,128(sp)
   43f78:	d8801f15 	stw	r2,124(sp)
   43f7c:	010001c4 	movi	r4,7
   43f80:	20832916 	blt	r4,r2,44c28 <___vfprintf_internal_r+0x1b54>
   43f84:	42000204 	addi	r8,r8,8
   43f88:	d8803317 	ldw	r2,204(sp)
   43f8c:	143fffc4 	addi	r16,r2,-1
   43f90:	043ec50e 	bge	zero,r16,43aa8 <__alt_data_end+0xfffc3aa8>
   43f94:	04400404 	movi	r17,16
   43f98:	d8801f17 	ldw	r2,124(sp)
   43f9c:	8c00880e 	bge	r17,r16,441c0 <___vfprintf_internal_r+0x10ec>
   43fa0:	01400174 	movhi	r5,5
   43fa4:	29442b84 	addi	r5,r5,4270
   43fa8:	d9402b15 	stw	r5,172(sp)
   43fac:	058001c4 	movi	r22,7
   43fb0:	dcc02c17 	ldw	r19,176(sp)
   43fb4:	00000306 	br	43fc4 <___vfprintf_internal_r+0xef0>
   43fb8:	42000204 	addi	r8,r8,8
   43fbc:	843ffc04 	addi	r16,r16,-16
   43fc0:	8c00820e 	bge	r17,r16,441cc <___vfprintf_internal_r+0x10f8>
   43fc4:	18c00404 	addi	r3,r3,16
   43fc8:	10800044 	addi	r2,r2,1
   43fcc:	45000015 	stw	r20,0(r8)
   43fd0:	44400115 	stw	r17,4(r8)
   43fd4:	d8c02015 	stw	r3,128(sp)
   43fd8:	d8801f15 	stw	r2,124(sp)
   43fdc:	b0bff60e 	bge	r22,r2,43fb8 <__alt_data_end+0xfffc3fb8>
   43fe0:	d9801e04 	addi	r6,sp,120
   43fe4:	b80b883a 	mov	r5,r23
   43fe8:	9809883a 	mov	r4,r19
   43fec:	0049bec0 	call	49bec <__sprint_r>
   43ff0:	103d3a1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   43ff4:	d8c02017 	ldw	r3,128(sp)
   43ff8:	d8801f17 	ldw	r2,124(sp)
   43ffc:	da000404 	addi	r8,sp,16
   44000:	003fee06 	br	43fbc <__alt_data_end+0xfffc3fbc>
   44004:	d9403117 	ldw	r5,196(sp)
   44008:	d8802a17 	ldw	r2,168(sp)
   4400c:	28adc83a 	sub	r22,r5,r2
   44010:	05be630e 	bge	zero,r22,439a0 <__alt_data_end+0xfffc39a0>
   44014:	07000404 	movi	fp,16
   44018:	d8801f17 	ldw	r2,124(sp)
   4401c:	e5838f0e 	bge	fp,r22,44e5c <___vfprintf_internal_r+0x1d88>
   44020:	01400174 	movhi	r5,5
   44024:	29442b84 	addi	r5,r5,4270
   44028:	dc403015 	stw	r17,192(sp)
   4402c:	d9402b15 	stw	r5,172(sp)
   44030:	b023883a 	mov	r17,r22
   44034:	04c001c4 	movi	r19,7
   44038:	a82d883a 	mov	r22,r21
   4403c:	902b883a 	mov	r21,r18
   44040:	8025883a 	mov	r18,r16
   44044:	dc002c17 	ldw	r16,176(sp)
   44048:	00000306 	br	44058 <___vfprintf_internal_r+0xf84>
   4404c:	8c7ffc04 	addi	r17,r17,-16
   44050:	42000204 	addi	r8,r8,8
   44054:	e440110e 	bge	fp,r17,4409c <___vfprintf_internal_r+0xfc8>
   44058:	18c00404 	addi	r3,r3,16
   4405c:	10800044 	addi	r2,r2,1
   44060:	45000015 	stw	r20,0(r8)
   44064:	47000115 	stw	fp,4(r8)
   44068:	d8c02015 	stw	r3,128(sp)
   4406c:	d8801f15 	stw	r2,124(sp)
   44070:	98bff60e 	bge	r19,r2,4404c <__alt_data_end+0xfffc404c>
   44074:	d9801e04 	addi	r6,sp,120
   44078:	b80b883a 	mov	r5,r23
   4407c:	8009883a 	mov	r4,r16
   44080:	0049bec0 	call	49bec <__sprint_r>
   44084:	103d151e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44088:	8c7ffc04 	addi	r17,r17,-16
   4408c:	d8c02017 	ldw	r3,128(sp)
   44090:	d8801f17 	ldw	r2,124(sp)
   44094:	da000404 	addi	r8,sp,16
   44098:	e47fef16 	blt	fp,r17,44058 <__alt_data_end+0xfffc4058>
   4409c:	9021883a 	mov	r16,r18
   440a0:	a825883a 	mov	r18,r21
   440a4:	b02b883a 	mov	r21,r22
   440a8:	882d883a 	mov	r22,r17
   440ac:	dc403017 	ldw	r17,192(sp)
   440b0:	d9002b17 	ldw	r4,172(sp)
   440b4:	1d87883a 	add	r3,r3,r22
   440b8:	10800044 	addi	r2,r2,1
   440bc:	41000015 	stw	r4,0(r8)
   440c0:	45800115 	stw	r22,4(r8)
   440c4:	d8c02015 	stw	r3,128(sp)
   440c8:	d8801f15 	stw	r2,124(sp)
   440cc:	010001c4 	movi	r4,7
   440d0:	20818e16 	blt	r4,r2,4470c <___vfprintf_internal_r+0x1638>
   440d4:	42000204 	addi	r8,r8,8
   440d8:	003e3106 	br	439a0 <__alt_data_end+0xfffc39a0>
   440dc:	d9403317 	ldw	r5,204(sp)
   440e0:	00800044 	movi	r2,1
   440e4:	18c00044 	addi	r3,r3,1
   440e8:	1141530e 	bge	r2,r5,44638 <___vfprintf_internal_r+0x1564>
   440ec:	dc401f17 	ldw	r17,124(sp)
   440f0:	00800044 	movi	r2,1
   440f4:	40800115 	stw	r2,4(r8)
   440f8:	8c400044 	addi	r17,r17,1
   440fc:	44000015 	stw	r16,0(r8)
   44100:	d8c02015 	stw	r3,128(sp)
   44104:	dc401f15 	stw	r17,124(sp)
   44108:	008001c4 	movi	r2,7
   4410c:	14416b16 	blt	r2,r17,446bc <___vfprintf_internal_r+0x15e8>
   44110:	42000204 	addi	r8,r8,8
   44114:	d8803717 	ldw	r2,220(sp)
   44118:	d9003417 	ldw	r4,208(sp)
   4411c:	8c400044 	addi	r17,r17,1
   44120:	10c7883a 	add	r3,r2,r3
   44124:	40800115 	stw	r2,4(r8)
   44128:	41000015 	stw	r4,0(r8)
   4412c:	d8c02015 	stw	r3,128(sp)
   44130:	dc401f15 	stw	r17,124(sp)
   44134:	008001c4 	movi	r2,7
   44138:	14416916 	blt	r2,r17,446e0 <___vfprintf_internal_r+0x160c>
   4413c:	45800204 	addi	r22,r8,8
   44140:	d9003617 	ldw	r4,216(sp)
   44144:	d9403817 	ldw	r5,224(sp)
   44148:	000d883a 	mov	r6,zero
   4414c:	000f883a 	mov	r7,zero
   44150:	d8c03c15 	stw	r3,240(sp)
   44154:	004d9800 	call	4d980 <__eqdf2>
   44158:	d8c03c17 	ldw	r3,240(sp)
   4415c:	1000bc26 	beq	r2,zero,44450 <___vfprintf_internal_r+0x137c>
   44160:	d9403317 	ldw	r5,204(sp)
   44164:	84000044 	addi	r16,r16,1
   44168:	8c400044 	addi	r17,r17,1
   4416c:	28bfffc4 	addi	r2,r5,-1
   44170:	1887883a 	add	r3,r3,r2
   44174:	b0800115 	stw	r2,4(r22)
   44178:	b4000015 	stw	r16,0(r22)
   4417c:	d8c02015 	stw	r3,128(sp)
   44180:	dc401f15 	stw	r17,124(sp)
   44184:	008001c4 	movi	r2,7
   44188:	14414316 	blt	r2,r17,44698 <___vfprintf_internal_r+0x15c4>
   4418c:	b5800204 	addi	r22,r22,8
   44190:	d9003a17 	ldw	r4,232(sp)
   44194:	df0022c4 	addi	fp,sp,139
   44198:	8c400044 	addi	r17,r17,1
   4419c:	20c7883a 	add	r3,r4,r3
   441a0:	b7000015 	stw	fp,0(r22)
   441a4:	b1000115 	stw	r4,4(r22)
   441a8:	d8c02015 	stw	r3,128(sp)
   441ac:	dc401f15 	stw	r17,124(sp)
   441b0:	008001c4 	movi	r2,7
   441b4:	14400e16 	blt	r2,r17,441f0 <___vfprintf_internal_r+0x111c>
   441b8:	b2000204 	addi	r8,r22,8
   441bc:	003e3a06 	br	43aa8 <__alt_data_end+0xfffc3aa8>
   441c0:	01000174 	movhi	r4,5
   441c4:	21042b84 	addi	r4,r4,4270
   441c8:	d9002b15 	stw	r4,172(sp)
   441cc:	d9002b17 	ldw	r4,172(sp)
   441d0:	1c07883a 	add	r3,r3,r16
   441d4:	44000115 	stw	r16,4(r8)
   441d8:	41000015 	stw	r4,0(r8)
   441dc:	10800044 	addi	r2,r2,1
   441e0:	d8c02015 	stw	r3,128(sp)
   441e4:	d8801f15 	stw	r2,124(sp)
   441e8:	010001c4 	movi	r4,7
   441ec:	20be2d0e 	bge	r4,r2,43aa4 <__alt_data_end+0xfffc3aa4>
   441f0:	d9002c17 	ldw	r4,176(sp)
   441f4:	d9801e04 	addi	r6,sp,120
   441f8:	b80b883a 	mov	r5,r23
   441fc:	0049bec0 	call	49bec <__sprint_r>
   44200:	103cb61e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44204:	d8c02017 	ldw	r3,128(sp)
   44208:	da000404 	addi	r8,sp,16
   4420c:	003e2606 	br	43aa8 <__alt_data_end+0xfffc3aa8>
   44210:	d9002c17 	ldw	r4,176(sp)
   44214:	d9801e04 	addi	r6,sp,120
   44218:	b80b883a 	mov	r5,r23
   4421c:	0049bec0 	call	49bec <__sprint_r>
   44220:	103e5d26 	beq	r2,zero,43b98 <__alt_data_end+0xfffc3b98>
   44224:	003cad06 	br	434dc <__alt_data_end+0xfffc34dc>
   44228:	d9002c17 	ldw	r4,176(sp)
   4422c:	d9801e04 	addi	r6,sp,120
   44230:	b80b883a 	mov	r5,r23
   44234:	0049bec0 	call	49bec <__sprint_r>
   44238:	103ca81e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   4423c:	d8c02017 	ldw	r3,128(sp)
   44240:	da000404 	addi	r8,sp,16
   44244:	003e0b06 	br	43a74 <__alt_data_end+0xfffc3a74>
   44248:	d9002c17 	ldw	r4,176(sp)
   4424c:	d9801e04 	addi	r6,sp,120
   44250:	b80b883a 	mov	r5,r23
   44254:	0049bec0 	call	49bec <__sprint_r>
   44258:	103ca01e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   4425c:	d8c02017 	ldw	r3,128(sp)
   44260:	da000404 	addi	r8,sp,16
   44264:	003dbd06 	br	4395c <__alt_data_end+0xfffc395c>
   44268:	d9002c17 	ldw	r4,176(sp)
   4426c:	d9801e04 	addi	r6,sp,120
   44270:	b80b883a 	mov	r5,r23
   44274:	0049bec0 	call	49bec <__sprint_r>
   44278:	103c981e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   4427c:	d8c02017 	ldw	r3,128(sp)
   44280:	da000404 	addi	r8,sp,16
   44284:	003dc306 	br	43994 <__alt_data_end+0xfffc3994>
   44288:	d8802917 	ldw	r2,164(sp)
   4428c:	d8002785 	stb	zero,158(sp)
   44290:	103f0616 	blt	r2,zero,43eac <__alt_data_end+0xfffc3eac>
   44294:	00ffdfc4 	movi	r3,-129
   44298:	9d84b03a 	or	r2,r19,r22
   4429c:	90e4703a 	and	r18,r18,r3
   442a0:	103c6b26 	beq	r2,zero,43450 <__alt_data_end+0xfffc3450>
   442a4:	0039883a 	mov	fp,zero
   442a8:	003e7406 	br	43c7c <__alt_data_end+0xfffc3c7c>
   442ac:	9080040c 	andi	r2,r18,16
   442b0:	1001b326 	beq	r2,zero,44980 <___vfprintf_internal_r+0x18ac>
   442b4:	d9002d17 	ldw	r4,180(sp)
   442b8:	d9402917 	ldw	r5,164(sp)
   442bc:	d8002785 	stb	zero,158(sp)
   442c0:	20800104 	addi	r2,r4,4
   442c4:	24c00017 	ldw	r19,0(r4)
   442c8:	002d883a 	mov	r22,zero
   442cc:	2801b516 	blt	r5,zero,449a4 <___vfprintf_internal_r+0x18d0>
   442d0:	00ffdfc4 	movi	r3,-129
   442d4:	d8802d15 	stw	r2,180(sp)
   442d8:	90e4703a 	and	r18,r18,r3
   442dc:	983d2726 	beq	r19,zero,4377c <__alt_data_end+0xfffc377c>
   442e0:	0039883a 	mov	fp,zero
   442e4:	003d2a06 	br	43790 <__alt_data_end+0xfffc3790>
   442e8:	dc402617 	ldw	r17,152(sp)
   442ec:	0441d30e 	bge	zero,r17,44a3c <___vfprintf_internal_r+0x1968>
   442f0:	dc403217 	ldw	r17,200(sp)
   442f4:	d8803317 	ldw	r2,204(sp)
   442f8:	1440010e 	bge	r2,r17,44300 <___vfprintf_internal_r+0x122c>
   442fc:	1023883a 	mov	r17,r2
   44300:	04400a0e 	bge	zero,r17,4432c <___vfprintf_internal_r+0x1258>
   44304:	d8801f17 	ldw	r2,124(sp)
   44308:	1c47883a 	add	r3,r3,r17
   4430c:	44000015 	stw	r16,0(r8)
   44310:	10800044 	addi	r2,r2,1
   44314:	44400115 	stw	r17,4(r8)
   44318:	d8c02015 	stw	r3,128(sp)
   4431c:	d8801f15 	stw	r2,124(sp)
   44320:	010001c4 	movi	r4,7
   44324:	20826516 	blt	r4,r2,44cbc <___vfprintf_internal_r+0x1be8>
   44328:	42000204 	addi	r8,r8,8
   4432c:	88026116 	blt	r17,zero,44cb4 <___vfprintf_internal_r+0x1be0>
   44330:	d9003217 	ldw	r4,200(sp)
   44334:	2463c83a 	sub	r17,r4,r17
   44338:	04407b0e 	bge	zero,r17,44528 <___vfprintf_internal_r+0x1454>
   4433c:	05800404 	movi	r22,16
   44340:	d8801f17 	ldw	r2,124(sp)
   44344:	b4419d0e 	bge	r22,r17,449bc <___vfprintf_internal_r+0x18e8>
   44348:	01000174 	movhi	r4,5
   4434c:	21042b84 	addi	r4,r4,4270
   44350:	d9002b15 	stw	r4,172(sp)
   44354:	070001c4 	movi	fp,7
   44358:	dcc02c17 	ldw	r19,176(sp)
   4435c:	00000306 	br	4436c <___vfprintf_internal_r+0x1298>
   44360:	42000204 	addi	r8,r8,8
   44364:	8c7ffc04 	addi	r17,r17,-16
   44368:	b441970e 	bge	r22,r17,449c8 <___vfprintf_internal_r+0x18f4>
   4436c:	18c00404 	addi	r3,r3,16
   44370:	10800044 	addi	r2,r2,1
   44374:	45000015 	stw	r20,0(r8)
   44378:	45800115 	stw	r22,4(r8)
   4437c:	d8c02015 	stw	r3,128(sp)
   44380:	d8801f15 	stw	r2,124(sp)
   44384:	e0bff60e 	bge	fp,r2,44360 <__alt_data_end+0xfffc4360>
   44388:	d9801e04 	addi	r6,sp,120
   4438c:	b80b883a 	mov	r5,r23
   44390:	9809883a 	mov	r4,r19
   44394:	0049bec0 	call	49bec <__sprint_r>
   44398:	103c501e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   4439c:	d8c02017 	ldw	r3,128(sp)
   443a0:	d8801f17 	ldw	r2,124(sp)
   443a4:	da000404 	addi	r8,sp,16
   443a8:	003fee06 	br	44364 <__alt_data_end+0xfffc4364>
   443ac:	d9002c17 	ldw	r4,176(sp)
   443b0:	d9801e04 	addi	r6,sp,120
   443b4:	b80b883a 	mov	r5,r23
   443b8:	0049bec0 	call	49bec <__sprint_r>
   443bc:	103c471e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   443c0:	d8c02017 	ldw	r3,128(sp)
   443c4:	df002787 	ldb	fp,158(sp)
   443c8:	da000404 	addi	r8,sp,16
   443cc:	003d5606 	br	43928 <__alt_data_end+0xfffc3928>
   443d0:	9080040c 	andi	r2,r18,16
   443d4:	10016126 	beq	r2,zero,4495c <___vfprintf_internal_r+0x1888>
   443d8:	d8802d17 	ldw	r2,180(sp)
   443dc:	14c00017 	ldw	r19,0(r2)
   443e0:	10800104 	addi	r2,r2,4
   443e4:	d8802d15 	stw	r2,180(sp)
   443e8:	982dd7fa 	srai	r22,r19,31
   443ec:	b005883a 	mov	r2,r22
   443f0:	003c8206 	br	435fc <__alt_data_end+0xfffc35fc>
   443f4:	9080040c 	andi	r2,r18,16
   443f8:	10003526 	beq	r2,zero,444d0 <___vfprintf_internal_r+0x13fc>
   443fc:	d9402d17 	ldw	r5,180(sp)
   44400:	d8c02917 	ldw	r3,164(sp)
   44404:	d8002785 	stb	zero,158(sp)
   44408:	28800104 	addi	r2,r5,4
   4440c:	2cc00017 	ldw	r19,0(r5)
   44410:	002d883a 	mov	r22,zero
   44414:	18003716 	blt	r3,zero,444f4 <___vfprintf_internal_r+0x1420>
   44418:	00ffdfc4 	movi	r3,-129
   4441c:	d8802d15 	stw	r2,180(sp)
   44420:	90e4703a 	and	r18,r18,r3
   44424:	0039883a 	mov	fp,zero
   44428:	983df326 	beq	r19,zero,43bf8 <__alt_data_end+0xfffc3bf8>
   4442c:	00800244 	movi	r2,9
   44430:	14fc7b36 	bltu	r2,r19,43620 <__alt_data_end+0xfffc3620>
   44434:	d8c02817 	ldw	r3,160(sp)
   44438:	dc001dc4 	addi	r16,sp,119
   4443c:	9cc00c04 	addi	r19,r19,48
   44440:	1c07c83a 	sub	r3,r3,r16
   44444:	dcc01dc5 	stb	r19,119(sp)
   44448:	d8c02e15 	stw	r3,184(sp)
   4444c:	003ce806 	br	437f0 <__alt_data_end+0xfffc37f0>
   44450:	d8803317 	ldw	r2,204(sp)
   44454:	143fffc4 	addi	r16,r2,-1
   44458:	043f4d0e 	bge	zero,r16,44190 <__alt_data_end+0xfffc4190>
   4445c:	07000404 	movi	fp,16
   44460:	e400810e 	bge	fp,r16,44668 <___vfprintf_internal_r+0x1594>
   44464:	01400174 	movhi	r5,5
   44468:	29442b84 	addi	r5,r5,4270
   4446c:	d9402b15 	stw	r5,172(sp)
   44470:	01c001c4 	movi	r7,7
   44474:	dcc02c17 	ldw	r19,176(sp)
   44478:	00000306 	br	44488 <___vfprintf_internal_r+0x13b4>
   4447c:	b5800204 	addi	r22,r22,8
   44480:	843ffc04 	addi	r16,r16,-16
   44484:	e4007b0e 	bge	fp,r16,44674 <___vfprintf_internal_r+0x15a0>
   44488:	18c00404 	addi	r3,r3,16
   4448c:	8c400044 	addi	r17,r17,1
   44490:	b5000015 	stw	r20,0(r22)
   44494:	b7000115 	stw	fp,4(r22)
   44498:	d8c02015 	stw	r3,128(sp)
   4449c:	dc401f15 	stw	r17,124(sp)
   444a0:	3c7ff60e 	bge	r7,r17,4447c <__alt_data_end+0xfffc447c>
   444a4:	d9801e04 	addi	r6,sp,120
   444a8:	b80b883a 	mov	r5,r23
   444ac:	9809883a 	mov	r4,r19
   444b0:	d9c03c15 	stw	r7,240(sp)
   444b4:	0049bec0 	call	49bec <__sprint_r>
   444b8:	d9c03c17 	ldw	r7,240(sp)
   444bc:	103c071e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   444c0:	d8c02017 	ldw	r3,128(sp)
   444c4:	dc401f17 	ldw	r17,124(sp)
   444c8:	dd800404 	addi	r22,sp,16
   444cc:	003fec06 	br	44480 <__alt_data_end+0xfffc4480>
   444d0:	9080100c 	andi	r2,r18,64
   444d4:	d8002785 	stb	zero,158(sp)
   444d8:	10010e26 	beq	r2,zero,44914 <___vfprintf_internal_r+0x1840>
   444dc:	d9002d17 	ldw	r4,180(sp)
   444e0:	d9402917 	ldw	r5,164(sp)
   444e4:	002d883a 	mov	r22,zero
   444e8:	20800104 	addi	r2,r4,4
   444ec:	24c0000b 	ldhu	r19,0(r4)
   444f0:	283fc90e 	bge	r5,zero,44418 <__alt_data_end+0xfffc4418>
   444f4:	d8802d15 	stw	r2,180(sp)
   444f8:	0039883a 	mov	fp,zero
   444fc:	9d84b03a 	or	r2,r19,r22
   44500:	103c461e 	bne	r2,zero,4361c <__alt_data_end+0xfffc361c>
   44504:	00800044 	movi	r2,1
   44508:	003e6c06 	br	43ebc <__alt_data_end+0xfffc3ebc>
   4450c:	d9002c17 	ldw	r4,176(sp)
   44510:	d9801e04 	addi	r6,sp,120
   44514:	b80b883a 	mov	r5,r23
   44518:	0049bec0 	call	49bec <__sprint_r>
   4451c:	103bef1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44520:	d8c02017 	ldw	r3,128(sp)
   44524:	da000404 	addi	r8,sp,16
   44528:	d9003217 	ldw	r4,200(sp)
   4452c:	d8802617 	ldw	r2,152(sp)
   44530:	d9403317 	ldw	r5,204(sp)
   44534:	8123883a 	add	r17,r16,r4
   44538:	11400216 	blt	r2,r5,44544 <___vfprintf_internal_r+0x1470>
   4453c:	9100004c 	andi	r4,r18,1
   44540:	20000d26 	beq	r4,zero,44578 <___vfprintf_internal_r+0x14a4>
   44544:	d9003717 	ldw	r4,220(sp)
   44548:	d9403417 	ldw	r5,208(sp)
   4454c:	1907883a 	add	r3,r3,r4
   44550:	d9001f17 	ldw	r4,124(sp)
   44554:	41400015 	stw	r5,0(r8)
   44558:	d9403717 	ldw	r5,220(sp)
   4455c:	21000044 	addi	r4,r4,1
   44560:	d8c02015 	stw	r3,128(sp)
   44564:	41400115 	stw	r5,4(r8)
   44568:	d9001f15 	stw	r4,124(sp)
   4456c:	014001c4 	movi	r5,7
   44570:	2901e816 	blt	r5,r4,44d14 <___vfprintf_internal_r+0x1c40>
   44574:	42000204 	addi	r8,r8,8
   44578:	d9003317 	ldw	r4,204(sp)
   4457c:	8121883a 	add	r16,r16,r4
   44580:	2085c83a 	sub	r2,r4,r2
   44584:	8461c83a 	sub	r16,r16,r17
   44588:	1400010e 	bge	r2,r16,44590 <___vfprintf_internal_r+0x14bc>
   4458c:	1021883a 	mov	r16,r2
   44590:	04000a0e 	bge	zero,r16,445bc <___vfprintf_internal_r+0x14e8>
   44594:	d9001f17 	ldw	r4,124(sp)
   44598:	1c07883a 	add	r3,r3,r16
   4459c:	44400015 	stw	r17,0(r8)
   445a0:	21000044 	addi	r4,r4,1
   445a4:	44000115 	stw	r16,4(r8)
   445a8:	d8c02015 	stw	r3,128(sp)
   445ac:	d9001f15 	stw	r4,124(sp)
   445b0:	014001c4 	movi	r5,7
   445b4:	2901fb16 	blt	r5,r4,44da4 <___vfprintf_internal_r+0x1cd0>
   445b8:	42000204 	addi	r8,r8,8
   445bc:	8001f716 	blt	r16,zero,44d9c <___vfprintf_internal_r+0x1cc8>
   445c0:	1421c83a 	sub	r16,r2,r16
   445c4:	043d380e 	bge	zero,r16,43aa8 <__alt_data_end+0xfffc3aa8>
   445c8:	04400404 	movi	r17,16
   445cc:	d8801f17 	ldw	r2,124(sp)
   445d0:	8c3efb0e 	bge	r17,r16,441c0 <__alt_data_end+0xfffc41c0>
   445d4:	01400174 	movhi	r5,5
   445d8:	29442b84 	addi	r5,r5,4270
   445dc:	d9402b15 	stw	r5,172(sp)
   445e0:	058001c4 	movi	r22,7
   445e4:	dcc02c17 	ldw	r19,176(sp)
   445e8:	00000306 	br	445f8 <___vfprintf_internal_r+0x1524>
   445ec:	42000204 	addi	r8,r8,8
   445f0:	843ffc04 	addi	r16,r16,-16
   445f4:	8c3ef50e 	bge	r17,r16,441cc <__alt_data_end+0xfffc41cc>
   445f8:	18c00404 	addi	r3,r3,16
   445fc:	10800044 	addi	r2,r2,1
   44600:	45000015 	stw	r20,0(r8)
   44604:	44400115 	stw	r17,4(r8)
   44608:	d8c02015 	stw	r3,128(sp)
   4460c:	d8801f15 	stw	r2,124(sp)
   44610:	b0bff60e 	bge	r22,r2,445ec <__alt_data_end+0xfffc45ec>
   44614:	d9801e04 	addi	r6,sp,120
   44618:	b80b883a 	mov	r5,r23
   4461c:	9809883a 	mov	r4,r19
   44620:	0049bec0 	call	49bec <__sprint_r>
   44624:	103bad1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44628:	d8c02017 	ldw	r3,128(sp)
   4462c:	d8801f17 	ldw	r2,124(sp)
   44630:	da000404 	addi	r8,sp,16
   44634:	003fee06 	br	445f0 <__alt_data_end+0xfffc45f0>
   44638:	9088703a 	and	r4,r18,r2
   4463c:	203eab1e 	bne	r4,zero,440ec <__alt_data_end+0xfffc40ec>
   44640:	dc401f17 	ldw	r17,124(sp)
   44644:	40800115 	stw	r2,4(r8)
   44648:	44000015 	stw	r16,0(r8)
   4464c:	8c400044 	addi	r17,r17,1
   44650:	d8c02015 	stw	r3,128(sp)
   44654:	dc401f15 	stw	r17,124(sp)
   44658:	008001c4 	movi	r2,7
   4465c:	14400e16 	blt	r2,r17,44698 <___vfprintf_internal_r+0x15c4>
   44660:	45800204 	addi	r22,r8,8
   44664:	003eca06 	br	44190 <__alt_data_end+0xfffc4190>
   44668:	01000174 	movhi	r4,5
   4466c:	21042b84 	addi	r4,r4,4270
   44670:	d9002b15 	stw	r4,172(sp)
   44674:	d8802b17 	ldw	r2,172(sp)
   44678:	1c07883a 	add	r3,r3,r16
   4467c:	8c400044 	addi	r17,r17,1
   44680:	b0800015 	stw	r2,0(r22)
   44684:	b4000115 	stw	r16,4(r22)
   44688:	d8c02015 	stw	r3,128(sp)
   4468c:	dc401f15 	stw	r17,124(sp)
   44690:	008001c4 	movi	r2,7
   44694:	147ebd0e 	bge	r2,r17,4418c <__alt_data_end+0xfffc418c>
   44698:	d9002c17 	ldw	r4,176(sp)
   4469c:	d9801e04 	addi	r6,sp,120
   446a0:	b80b883a 	mov	r5,r23
   446a4:	0049bec0 	call	49bec <__sprint_r>
   446a8:	103b8c1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   446ac:	d8c02017 	ldw	r3,128(sp)
   446b0:	dc401f17 	ldw	r17,124(sp)
   446b4:	dd800404 	addi	r22,sp,16
   446b8:	003eb506 	br	44190 <__alt_data_end+0xfffc4190>
   446bc:	d9002c17 	ldw	r4,176(sp)
   446c0:	d9801e04 	addi	r6,sp,120
   446c4:	b80b883a 	mov	r5,r23
   446c8:	0049bec0 	call	49bec <__sprint_r>
   446cc:	103b831e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   446d0:	d8c02017 	ldw	r3,128(sp)
   446d4:	dc401f17 	ldw	r17,124(sp)
   446d8:	da000404 	addi	r8,sp,16
   446dc:	003e8d06 	br	44114 <__alt_data_end+0xfffc4114>
   446e0:	d9002c17 	ldw	r4,176(sp)
   446e4:	d9801e04 	addi	r6,sp,120
   446e8:	b80b883a 	mov	r5,r23
   446ec:	0049bec0 	call	49bec <__sprint_r>
   446f0:	103b7a1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   446f4:	d8c02017 	ldw	r3,128(sp)
   446f8:	dc401f17 	ldw	r17,124(sp)
   446fc:	dd800404 	addi	r22,sp,16
   44700:	003e8f06 	br	44140 <__alt_data_end+0xfffc4140>
   44704:	0027883a 	mov	r19,zero
   44708:	003f4a06 	br	44434 <__alt_data_end+0xfffc4434>
   4470c:	d9002c17 	ldw	r4,176(sp)
   44710:	d9801e04 	addi	r6,sp,120
   44714:	b80b883a 	mov	r5,r23
   44718:	0049bec0 	call	49bec <__sprint_r>
   4471c:	103b6f1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44720:	d8c02017 	ldw	r3,128(sp)
   44724:	da000404 	addi	r8,sp,16
   44728:	003c9d06 	br	439a0 <__alt_data_end+0xfffc39a0>
   4472c:	04e7c83a 	sub	r19,zero,r19
   44730:	9804c03a 	cmpne	r2,r19,zero
   44734:	05adc83a 	sub	r22,zero,r22
   44738:	b0adc83a 	sub	r22,r22,r2
   4473c:	d8802917 	ldw	r2,164(sp)
   44740:	07000b44 	movi	fp,45
   44744:	df002785 	stb	fp,158(sp)
   44748:	10017b16 	blt	r2,zero,44d38 <___vfprintf_internal_r+0x1c64>
   4474c:	00bfdfc4 	movi	r2,-129
   44750:	90a4703a 	and	r18,r18,r2
   44754:	003bb106 	br	4361c <__alt_data_end+0xfffc361c>
   44758:	d9003617 	ldw	r4,216(sp)
   4475c:	d9403817 	ldw	r5,224(sp)
   44760:	da003d15 	stw	r8,244(sp)
   44764:	00497780 	call	49778 <__fpclassifyd>
   44768:	da003d17 	ldw	r8,244(sp)
   4476c:	1000f026 	beq	r2,zero,44b30 <___vfprintf_internal_r+0x1a5c>
   44770:	d9002917 	ldw	r4,164(sp)
   44774:	05bff7c4 	movi	r22,-33
   44778:	00bfffc4 	movi	r2,-1
   4477c:	8dac703a 	and	r22,r17,r22
   44780:	20820026 	beq	r4,r2,44f84 <___vfprintf_internal_r+0x1eb0>
   44784:	008011c4 	movi	r2,71
   44788:	b081f726 	beq	r22,r2,44f68 <___vfprintf_internal_r+0x1e94>
   4478c:	d9003817 	ldw	r4,224(sp)
   44790:	90c04014 	ori	r3,r18,256
   44794:	d8c02b15 	stw	r3,172(sp)
   44798:	20021516 	blt	r4,zero,44ff0 <___vfprintf_internal_r+0x1f1c>
   4479c:	dcc03817 	ldw	r19,224(sp)
   447a0:	d8002a05 	stb	zero,168(sp)
   447a4:	00801984 	movi	r2,102
   447a8:	8881f926 	beq	r17,r2,44f90 <___vfprintf_internal_r+0x1ebc>
   447ac:	00801184 	movi	r2,70
   447b0:	88821c26 	beq	r17,r2,45024 <___vfprintf_internal_r+0x1f50>
   447b4:	00801144 	movi	r2,69
   447b8:	b081ef26 	beq	r22,r2,44f78 <___vfprintf_internal_r+0x1ea4>
   447bc:	d8c02917 	ldw	r3,164(sp)
   447c0:	d8802104 	addi	r2,sp,132
   447c4:	d8800315 	stw	r2,12(sp)
   447c8:	d9403617 	ldw	r5,216(sp)
   447cc:	d8802504 	addi	r2,sp,148
   447d0:	d9002c17 	ldw	r4,176(sp)
   447d4:	d8800215 	stw	r2,8(sp)
   447d8:	d8802604 	addi	r2,sp,152
   447dc:	d8c00015 	stw	r3,0(sp)
   447e0:	d8800115 	stw	r2,4(sp)
   447e4:	01c00084 	movi	r7,2
   447e8:	980d883a 	mov	r6,r19
   447ec:	d8c03c15 	stw	r3,240(sp)
   447f0:	da003d15 	stw	r8,244(sp)
   447f4:	00456f80 	call	456f8 <_dtoa_r>
   447f8:	1021883a 	mov	r16,r2
   447fc:	008019c4 	movi	r2,103
   44800:	d8c03c17 	ldw	r3,240(sp)
   44804:	da003d17 	ldw	r8,244(sp)
   44808:	88817126 	beq	r17,r2,44dd0 <___vfprintf_internal_r+0x1cfc>
   4480c:	008011c4 	movi	r2,71
   44810:	88829226 	beq	r17,r2,4525c <___vfprintf_internal_r+0x2188>
   44814:	80f9883a 	add	fp,r16,r3
   44818:	d9003617 	ldw	r4,216(sp)
   4481c:	000d883a 	mov	r6,zero
   44820:	000f883a 	mov	r7,zero
   44824:	980b883a 	mov	r5,r19
   44828:	da003d15 	stw	r8,244(sp)
   4482c:	004d9800 	call	4d980 <__eqdf2>
   44830:	da003d17 	ldw	r8,244(sp)
   44834:	10018d26 	beq	r2,zero,44e6c <___vfprintf_internal_r+0x1d98>
   44838:	d8802117 	ldw	r2,132(sp)
   4483c:	1700062e 	bgeu	r2,fp,44858 <___vfprintf_internal_r+0x1784>
   44840:	01000c04 	movi	r4,48
   44844:	10c00044 	addi	r3,r2,1
   44848:	d8c02115 	stw	r3,132(sp)
   4484c:	11000005 	stb	r4,0(r2)
   44850:	d8802117 	ldw	r2,132(sp)
   44854:	173ffb36 	bltu	r2,fp,44844 <__alt_data_end+0xfffc4844>
   44858:	1405c83a 	sub	r2,r2,r16
   4485c:	d8803315 	stw	r2,204(sp)
   44860:	008011c4 	movi	r2,71
   44864:	b0817626 	beq	r22,r2,44e40 <___vfprintf_internal_r+0x1d6c>
   44868:	00801944 	movi	r2,101
   4486c:	1442810e 	bge	r2,r17,45274 <___vfprintf_internal_r+0x21a0>
   44870:	d8c02617 	ldw	r3,152(sp)
   44874:	00801984 	movi	r2,102
   44878:	d8c03215 	stw	r3,200(sp)
   4487c:	8881fe26 	beq	r17,r2,45078 <___vfprintf_internal_r+0x1fa4>
   44880:	d8c03217 	ldw	r3,200(sp)
   44884:	d9003317 	ldw	r4,204(sp)
   44888:	1901dd16 	blt	r3,r4,45000 <___vfprintf_internal_r+0x1f2c>
   4488c:	9480004c 	andi	r18,r18,1
   44890:	90022b1e 	bne	r18,zero,45140 <___vfprintf_internal_r+0x206c>
   44894:	1805883a 	mov	r2,r3
   44898:	18028016 	blt	r3,zero,4529c <___vfprintf_internal_r+0x21c8>
   4489c:	d8c03217 	ldw	r3,200(sp)
   448a0:	044019c4 	movi	r17,103
   448a4:	d8c02e15 	stw	r3,184(sp)
   448a8:	df002a07 	ldb	fp,168(sp)
   448ac:	e001531e 	bne	fp,zero,44dfc <___vfprintf_internal_r+0x1d28>
   448b0:	df002783 	ldbu	fp,158(sp)
   448b4:	d8802a15 	stw	r2,168(sp)
   448b8:	dc802b17 	ldw	r18,172(sp)
   448bc:	d8002915 	stw	zero,164(sp)
   448c0:	003bd106 	br	43808 <__alt_data_end+0xfffc3808>
   448c4:	d8802d17 	ldw	r2,180(sp)
   448c8:	d8c02d17 	ldw	r3,180(sp)
   448cc:	d9002d17 	ldw	r4,180(sp)
   448d0:	10800017 	ldw	r2,0(r2)
   448d4:	18c00117 	ldw	r3,4(r3)
   448d8:	21000204 	addi	r4,r4,8
   448dc:	d8803615 	stw	r2,216(sp)
   448e0:	d8c03815 	stw	r3,224(sp)
   448e4:	d9002d15 	stw	r4,180(sp)
   448e8:	003b7506 	br	436c0 <__alt_data_end+0xfffc36c0>
   448ec:	ac400007 	ldb	r17,0(r21)
   448f0:	003a5906 	br	43258 <__alt_data_end+0xfffc3258>
   448f4:	9080100c 	andi	r2,r18,64
   448f8:	1000a826 	beq	r2,zero,44b9c <___vfprintf_internal_r+0x1ac8>
   448fc:	d9002d17 	ldw	r4,180(sp)
   44900:	002d883a 	mov	r22,zero
   44904:	24c0000b 	ldhu	r19,0(r4)
   44908:	21000104 	addi	r4,r4,4
   4490c:	d9002d15 	stw	r4,180(sp)
   44910:	003ccb06 	br	43c40 <__alt_data_end+0xfffc3c40>
   44914:	d8c02d17 	ldw	r3,180(sp)
   44918:	d9002917 	ldw	r4,164(sp)
   4491c:	002d883a 	mov	r22,zero
   44920:	18800104 	addi	r2,r3,4
   44924:	1cc00017 	ldw	r19,0(r3)
   44928:	203ebb0e 	bge	r4,zero,44418 <__alt_data_end+0xfffc4418>
   4492c:	003ef106 	br	444f4 <__alt_data_end+0xfffc44f4>
   44930:	9080040c 	andi	r2,r18,16
   44934:	1000921e 	bne	r2,zero,44b80 <___vfprintf_internal_r+0x1aac>
   44938:	9480100c 	andi	r18,r18,64
   4493c:	90013926 	beq	r18,zero,44e24 <___vfprintf_internal_r+0x1d50>
   44940:	d9002d17 	ldw	r4,180(sp)
   44944:	d9402f17 	ldw	r5,188(sp)
   44948:	20800017 	ldw	r2,0(r4)
   4494c:	21000104 	addi	r4,r4,4
   44950:	d9002d15 	stw	r4,180(sp)
   44954:	1140000d 	sth	r5,0(r2)
   44958:	003a1606 	br	431b4 <__alt_data_end+0xfffc31b4>
   4495c:	9080100c 	andi	r2,r18,64
   44960:	10008026 	beq	r2,zero,44b64 <___vfprintf_internal_r+0x1a90>
   44964:	d8c02d17 	ldw	r3,180(sp)
   44968:	1cc0000f 	ldh	r19,0(r3)
   4496c:	18c00104 	addi	r3,r3,4
   44970:	d8c02d15 	stw	r3,180(sp)
   44974:	982dd7fa 	srai	r22,r19,31
   44978:	b005883a 	mov	r2,r22
   4497c:	003b1f06 	br	435fc <__alt_data_end+0xfffc35fc>
   44980:	9080100c 	andi	r2,r18,64
   44984:	d8002785 	stb	zero,158(sp)
   44988:	10008a1e 	bne	r2,zero,44bb4 <___vfprintf_internal_r+0x1ae0>
   4498c:	d9402d17 	ldw	r5,180(sp)
   44990:	d8c02917 	ldw	r3,164(sp)
   44994:	002d883a 	mov	r22,zero
   44998:	28800104 	addi	r2,r5,4
   4499c:	2cc00017 	ldw	r19,0(r5)
   449a0:	183e4b0e 	bge	r3,zero,442d0 <__alt_data_end+0xfffc42d0>
   449a4:	9d86b03a 	or	r3,r19,r22
   449a8:	d8802d15 	stw	r2,180(sp)
   449ac:	183e4c1e 	bne	r3,zero,442e0 <__alt_data_end+0xfffc42e0>
   449b0:	0039883a 	mov	fp,zero
   449b4:	0005883a 	mov	r2,zero
   449b8:	003d4006 	br	43ebc <__alt_data_end+0xfffc3ebc>
   449bc:	01400174 	movhi	r5,5
   449c0:	29442b84 	addi	r5,r5,4270
   449c4:	d9402b15 	stw	r5,172(sp)
   449c8:	d9402b17 	ldw	r5,172(sp)
   449cc:	1c47883a 	add	r3,r3,r17
   449d0:	10800044 	addi	r2,r2,1
   449d4:	41400015 	stw	r5,0(r8)
   449d8:	44400115 	stw	r17,4(r8)
   449dc:	d8c02015 	stw	r3,128(sp)
   449e0:	d8801f15 	stw	r2,124(sp)
   449e4:	010001c4 	movi	r4,7
   449e8:	20bec816 	blt	r4,r2,4450c <__alt_data_end+0xfffc450c>
   449ec:	42000204 	addi	r8,r8,8
   449f0:	003ecd06 	br	44528 <__alt_data_end+0xfffc4528>
   449f4:	d9002917 	ldw	r4,164(sp)
   449f8:	d8002785 	stb	zero,158(sp)
   449fc:	203d2d16 	blt	r4,zero,43eb4 <__alt_data_end+0xfffc3eb4>
   44a00:	00bfdfc4 	movi	r2,-129
   44a04:	90a4703a 	and	r18,r18,r2
   44a08:	003a9106 	br	43450 <__alt_data_end+0xfffc3450>
   44a0c:	01000174 	movhi	r4,5
   44a10:	21042b84 	addi	r4,r4,4270
   44a14:	d9002b15 	stw	r4,172(sp)
   44a18:	003c0c06 	br	43a4c <__alt_data_end+0xfffc3a4c>
   44a1c:	d9002c17 	ldw	r4,176(sp)
   44a20:	d9801e04 	addi	r6,sp,120
   44a24:	b80b883a 	mov	r5,r23
   44a28:	0049bec0 	call	49bec <__sprint_r>
   44a2c:	103aab1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44a30:	d8c02017 	ldw	r3,128(sp)
   44a34:	da000404 	addi	r8,sp,16
   44a38:	003d4106 	br	43f40 <__alt_data_end+0xfffc3f40>
   44a3c:	d8801f17 	ldw	r2,124(sp)
   44a40:	01400174 	movhi	r5,5
   44a44:	01000044 	movi	r4,1
   44a48:	18c00044 	addi	r3,r3,1
   44a4c:	10800044 	addi	r2,r2,1
   44a50:	29442b04 	addi	r5,r5,4268
   44a54:	41000115 	stw	r4,4(r8)
   44a58:	41400015 	stw	r5,0(r8)
   44a5c:	d8c02015 	stw	r3,128(sp)
   44a60:	d8801f15 	stw	r2,124(sp)
   44a64:	010001c4 	movi	r4,7
   44a68:	20805c16 	blt	r4,r2,44bdc <___vfprintf_internal_r+0x1b08>
   44a6c:	42000204 	addi	r8,r8,8
   44a70:	8800041e 	bne	r17,zero,44a84 <___vfprintf_internal_r+0x19b0>
   44a74:	d8803317 	ldw	r2,204(sp)
   44a78:	1000021e 	bne	r2,zero,44a84 <___vfprintf_internal_r+0x19b0>
   44a7c:	9080004c 	andi	r2,r18,1
   44a80:	103c0926 	beq	r2,zero,43aa8 <__alt_data_end+0xfffc3aa8>
   44a84:	d9003717 	ldw	r4,220(sp)
   44a88:	d8801f17 	ldw	r2,124(sp)
   44a8c:	d9403417 	ldw	r5,208(sp)
   44a90:	20c7883a 	add	r3,r4,r3
   44a94:	10800044 	addi	r2,r2,1
   44a98:	41000115 	stw	r4,4(r8)
   44a9c:	41400015 	stw	r5,0(r8)
   44aa0:	d8c02015 	stw	r3,128(sp)
   44aa4:	d8801f15 	stw	r2,124(sp)
   44aa8:	010001c4 	movi	r4,7
   44aac:	20812116 	blt	r4,r2,44f34 <___vfprintf_internal_r+0x1e60>
   44ab0:	42000204 	addi	r8,r8,8
   44ab4:	0463c83a 	sub	r17,zero,r17
   44ab8:	0440730e 	bge	zero,r17,44c88 <___vfprintf_internal_r+0x1bb4>
   44abc:	05800404 	movi	r22,16
   44ac0:	b440860e 	bge	r22,r17,44cdc <___vfprintf_internal_r+0x1c08>
   44ac4:	01400174 	movhi	r5,5
   44ac8:	29442b84 	addi	r5,r5,4270
   44acc:	d9402b15 	stw	r5,172(sp)
   44ad0:	070001c4 	movi	fp,7
   44ad4:	dcc02c17 	ldw	r19,176(sp)
   44ad8:	00000306 	br	44ae8 <___vfprintf_internal_r+0x1a14>
   44adc:	42000204 	addi	r8,r8,8
   44ae0:	8c7ffc04 	addi	r17,r17,-16
   44ae4:	b440800e 	bge	r22,r17,44ce8 <___vfprintf_internal_r+0x1c14>
   44ae8:	18c00404 	addi	r3,r3,16
   44aec:	10800044 	addi	r2,r2,1
   44af0:	45000015 	stw	r20,0(r8)
   44af4:	45800115 	stw	r22,4(r8)
   44af8:	d8c02015 	stw	r3,128(sp)
   44afc:	d8801f15 	stw	r2,124(sp)
   44b00:	e0bff60e 	bge	fp,r2,44adc <__alt_data_end+0xfffc4adc>
   44b04:	d9801e04 	addi	r6,sp,120
   44b08:	b80b883a 	mov	r5,r23
   44b0c:	9809883a 	mov	r4,r19
   44b10:	0049bec0 	call	49bec <__sprint_r>
   44b14:	103a711e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44b18:	d8c02017 	ldw	r3,128(sp)
   44b1c:	d8801f17 	ldw	r2,124(sp)
   44b20:	da000404 	addi	r8,sp,16
   44b24:	003fee06 	br	44ae0 <__alt_data_end+0xfffc4ae0>
   44b28:	00bfffc4 	movi	r2,-1
   44b2c:	003a6f06 	br	434ec <__alt_data_end+0xfffc34ec>
   44b30:	008011c4 	movi	r2,71
   44b34:	1440b816 	blt	r2,r17,44e18 <___vfprintf_internal_r+0x1d44>
   44b38:	04000174 	movhi	r16,5
   44b3c:	84041d04 	addi	r16,r16,4212
   44b40:	00c000c4 	movi	r3,3
   44b44:	00bfdfc4 	movi	r2,-129
   44b48:	d8c02a15 	stw	r3,168(sp)
   44b4c:	90a4703a 	and	r18,r18,r2
   44b50:	df002783 	ldbu	fp,158(sp)
   44b54:	d8c02e15 	stw	r3,184(sp)
   44b58:	d8002915 	stw	zero,164(sp)
   44b5c:	d8003215 	stw	zero,200(sp)
   44b60:	003b2906 	br	43808 <__alt_data_end+0xfffc3808>
   44b64:	d9002d17 	ldw	r4,180(sp)
   44b68:	24c00017 	ldw	r19,0(r4)
   44b6c:	21000104 	addi	r4,r4,4
   44b70:	d9002d15 	stw	r4,180(sp)
   44b74:	982dd7fa 	srai	r22,r19,31
   44b78:	b005883a 	mov	r2,r22
   44b7c:	003a9f06 	br	435fc <__alt_data_end+0xfffc35fc>
   44b80:	d9402d17 	ldw	r5,180(sp)
   44b84:	d8c02f17 	ldw	r3,188(sp)
   44b88:	28800017 	ldw	r2,0(r5)
   44b8c:	29400104 	addi	r5,r5,4
   44b90:	d9402d15 	stw	r5,180(sp)
   44b94:	10c00015 	stw	r3,0(r2)
   44b98:	00398606 	br	431b4 <__alt_data_end+0xfffc31b4>
   44b9c:	d9402d17 	ldw	r5,180(sp)
   44ba0:	002d883a 	mov	r22,zero
   44ba4:	2cc00017 	ldw	r19,0(r5)
   44ba8:	29400104 	addi	r5,r5,4
   44bac:	d9402d15 	stw	r5,180(sp)
   44bb0:	003c2306 	br	43c40 <__alt_data_end+0xfffc3c40>
   44bb4:	d8c02d17 	ldw	r3,180(sp)
   44bb8:	d9002917 	ldw	r4,164(sp)
   44bbc:	002d883a 	mov	r22,zero
   44bc0:	18800104 	addi	r2,r3,4
   44bc4:	1cc0000b 	ldhu	r19,0(r3)
   44bc8:	203dc10e 	bge	r4,zero,442d0 <__alt_data_end+0xfffc42d0>
   44bcc:	003f7506 	br	449a4 <__alt_data_end+0xfffc49a4>
   44bd0:	04000174 	movhi	r16,5
   44bd4:	84041b04 	addi	r16,r16,4204
   44bd8:	003acc06 	br	4370c <__alt_data_end+0xfffc370c>
   44bdc:	d9002c17 	ldw	r4,176(sp)
   44be0:	d9801e04 	addi	r6,sp,120
   44be4:	b80b883a 	mov	r5,r23
   44be8:	0049bec0 	call	49bec <__sprint_r>
   44bec:	103a3b1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44bf0:	dc402617 	ldw	r17,152(sp)
   44bf4:	d8c02017 	ldw	r3,128(sp)
   44bf8:	da000404 	addi	r8,sp,16
   44bfc:	003f9c06 	br	44a70 <__alt_data_end+0xfffc4a70>
   44c00:	ac400043 	ldbu	r17,1(r21)
   44c04:	94800814 	ori	r18,r18,32
   44c08:	ad400044 	addi	r21,r21,1
   44c0c:	8c403fcc 	andi	r17,r17,255
   44c10:	8c40201c 	xori	r17,r17,128
   44c14:	8c7fe004 	addi	r17,r17,-128
   44c18:	00398f06 	br	43258 <__alt_data_end+0xfffc3258>
   44c1c:	d8c02d15 	stw	r3,180(sp)
   44c20:	0039883a 	mov	fp,zero
   44c24:	003e3506 	br	444fc <__alt_data_end+0xfffc44fc>
   44c28:	d9002c17 	ldw	r4,176(sp)
   44c2c:	d9801e04 	addi	r6,sp,120
   44c30:	b80b883a 	mov	r5,r23
   44c34:	0049bec0 	call	49bec <__sprint_r>
   44c38:	103a281e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44c3c:	d8c02017 	ldw	r3,128(sp)
   44c40:	da000404 	addi	r8,sp,16
   44c44:	003cd006 	br	43f88 <__alt_data_end+0xfffc3f88>
   44c48:	8009883a 	mov	r4,r16
   44c4c:	da003d15 	stw	r8,244(sp)
   44c50:	0049a580 	call	49a58 <strlen>
   44c54:	d8802e15 	stw	r2,184(sp)
   44c58:	da003d17 	ldw	r8,244(sp)
   44c5c:	103c340e 	bge	r2,zero,43d30 <__alt_data_end+0xfffc3d30>
   44c60:	0005883a 	mov	r2,zero
   44c64:	003c3206 	br	43d30 <__alt_data_end+0xfffc3d30>
   44c68:	d9002c17 	ldw	r4,176(sp)
   44c6c:	d9801e04 	addi	r6,sp,120
   44c70:	b80b883a 	mov	r5,r23
   44c74:	0049bec0 	call	49bec <__sprint_r>
   44c78:	103a181e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44c7c:	d8c02017 	ldw	r3,128(sp)
   44c80:	d8801f17 	ldw	r2,124(sp)
   44c84:	da000404 	addi	r8,sp,16
   44c88:	d9403317 	ldw	r5,204(sp)
   44c8c:	10800044 	addi	r2,r2,1
   44c90:	44000015 	stw	r16,0(r8)
   44c94:	28c7883a 	add	r3,r5,r3
   44c98:	003b7d06 	br	43a90 <__alt_data_end+0xfffc3a90>
   44c9c:	01000174 	movhi	r4,5
   44ca0:	21042f84 	addi	r4,r4,4286
   44ca4:	d9003515 	stw	r4,212(sp)
   44ca8:	003b1406 	br	438fc <__alt_data_end+0xfffc38fc>
   44cac:	013fffc4 	movi	r4,-1
   44cb0:	003a3506 	br	43588 <__alt_data_end+0xfffc3588>
   44cb4:	0023883a 	mov	r17,zero
   44cb8:	003d9d06 	br	44330 <__alt_data_end+0xfffc4330>
   44cbc:	d9002c17 	ldw	r4,176(sp)
   44cc0:	d9801e04 	addi	r6,sp,120
   44cc4:	b80b883a 	mov	r5,r23
   44cc8:	0049bec0 	call	49bec <__sprint_r>
   44ccc:	103a031e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44cd0:	d8c02017 	ldw	r3,128(sp)
   44cd4:	da000404 	addi	r8,sp,16
   44cd8:	003d9406 	br	4432c <__alt_data_end+0xfffc432c>
   44cdc:	01000174 	movhi	r4,5
   44ce0:	21042b84 	addi	r4,r4,4270
   44ce4:	d9002b15 	stw	r4,172(sp)
   44ce8:	d9002b17 	ldw	r4,172(sp)
   44cec:	1c47883a 	add	r3,r3,r17
   44cf0:	10800044 	addi	r2,r2,1
   44cf4:	41000015 	stw	r4,0(r8)
   44cf8:	44400115 	stw	r17,4(r8)
   44cfc:	d8c02015 	stw	r3,128(sp)
   44d00:	d8801f15 	stw	r2,124(sp)
   44d04:	010001c4 	movi	r4,7
   44d08:	20bfd716 	blt	r4,r2,44c68 <__alt_data_end+0xfffc4c68>
   44d0c:	42000204 	addi	r8,r8,8
   44d10:	003fdd06 	br	44c88 <__alt_data_end+0xfffc4c88>
   44d14:	d9002c17 	ldw	r4,176(sp)
   44d18:	d9801e04 	addi	r6,sp,120
   44d1c:	b80b883a 	mov	r5,r23
   44d20:	0049bec0 	call	49bec <__sprint_r>
   44d24:	1039ed1e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44d28:	d8802617 	ldw	r2,152(sp)
   44d2c:	d8c02017 	ldw	r3,128(sp)
   44d30:	da000404 	addi	r8,sp,16
   44d34:	003e1006 	br	44578 <__alt_data_end+0xfffc4578>
   44d38:	00800044 	movi	r2,1
   44d3c:	10803fcc 	andi	r2,r2,255
   44d40:	00c00044 	movi	r3,1
   44d44:	10fa3526 	beq	r2,r3,4361c <__alt_data_end+0xfffc361c>
   44d48:	00c00084 	movi	r3,2
   44d4c:	10fbcb26 	beq	r2,r3,43c7c <__alt_data_end+0xfffc3c7c>
   44d50:	003a8f06 	br	43790 <__alt_data_end+0xfffc3790>
   44d54:	01000174 	movhi	r4,5
   44d58:	21042f84 	addi	r4,r4,4286
   44d5c:	d9003515 	stw	r4,212(sp)
   44d60:	003b7606 	br	43b3c <__alt_data_end+0xfffc3b3c>
   44d64:	d8802917 	ldw	r2,164(sp)
   44d68:	00c00184 	movi	r3,6
   44d6c:	1880012e 	bgeu	r3,r2,44d74 <___vfprintf_internal_r+0x1ca0>
   44d70:	1805883a 	mov	r2,r3
   44d74:	d8802e15 	stw	r2,184(sp)
   44d78:	1000ef16 	blt	r2,zero,45138 <___vfprintf_internal_r+0x2064>
   44d7c:	04000174 	movhi	r16,5
   44d80:	d8802a15 	stw	r2,168(sp)
   44d84:	dcc02d15 	stw	r19,180(sp)
   44d88:	d8002915 	stw	zero,164(sp)
   44d8c:	d8003215 	stw	zero,200(sp)
   44d90:	84042904 	addi	r16,r16,4260
   44d94:	0039883a 	mov	fp,zero
   44d98:	003aa206 	br	43824 <__alt_data_end+0xfffc3824>
   44d9c:	0021883a 	mov	r16,zero
   44da0:	003e0706 	br	445c0 <__alt_data_end+0xfffc45c0>
   44da4:	d9002c17 	ldw	r4,176(sp)
   44da8:	d9801e04 	addi	r6,sp,120
   44dac:	b80b883a 	mov	r5,r23
   44db0:	0049bec0 	call	49bec <__sprint_r>
   44db4:	1039c91e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44db8:	d8802617 	ldw	r2,152(sp)
   44dbc:	d9403317 	ldw	r5,204(sp)
   44dc0:	d8c02017 	ldw	r3,128(sp)
   44dc4:	da000404 	addi	r8,sp,16
   44dc8:	2885c83a 	sub	r2,r5,r2
   44dcc:	003dfb06 	br	445bc <__alt_data_end+0xfffc45bc>
   44dd0:	9080004c 	andi	r2,r18,1
   44dd4:	103e8f1e 	bne	r2,zero,44814 <__alt_data_end+0xfffc4814>
   44dd8:	d8802117 	ldw	r2,132(sp)
   44ddc:	003e9e06 	br	44858 <__alt_data_end+0xfffc4858>
   44de0:	1025883a 	mov	r18,r2
   44de4:	0039883a 	mov	fp,zero
   44de8:	00800084 	movi	r2,2
   44dec:	003fd306 	br	44d3c <__alt_data_end+0xfffc4d3c>
   44df0:	07000b44 	movi	fp,45
   44df4:	df002785 	stb	fp,158(sp)
   44df8:	003a4006 	br	436fc <__alt_data_end+0xfffc36fc>
   44dfc:	00c00b44 	movi	r3,45
   44e00:	d8c02785 	stb	r3,158(sp)
   44e04:	d8802a15 	stw	r2,168(sp)
   44e08:	dc802b17 	ldw	r18,172(sp)
   44e0c:	d8002915 	stw	zero,164(sp)
   44e10:	07000b44 	movi	fp,45
   44e14:	003a8006 	br	43818 <__alt_data_end+0xfffc3818>
   44e18:	04000174 	movhi	r16,5
   44e1c:	84041e04 	addi	r16,r16,4216
   44e20:	003f4706 	br	44b40 <__alt_data_end+0xfffc4b40>
   44e24:	d8c02d17 	ldw	r3,180(sp)
   44e28:	d9002f17 	ldw	r4,188(sp)
   44e2c:	18800017 	ldw	r2,0(r3)
   44e30:	18c00104 	addi	r3,r3,4
   44e34:	d8c02d15 	stw	r3,180(sp)
   44e38:	11000015 	stw	r4,0(r2)
   44e3c:	0038dd06 	br	431b4 <__alt_data_end+0xfffc31b4>
   44e40:	dd802617 	ldw	r22,152(sp)
   44e44:	00bfff44 	movi	r2,-3
   44e48:	b0801c16 	blt	r22,r2,44ebc <___vfprintf_internal_r+0x1de8>
   44e4c:	d9402917 	ldw	r5,164(sp)
   44e50:	2d801a16 	blt	r5,r22,44ebc <___vfprintf_internal_r+0x1de8>
   44e54:	dd803215 	stw	r22,200(sp)
   44e58:	003e8906 	br	44880 <__alt_data_end+0xfffc4880>
   44e5c:	01000174 	movhi	r4,5
   44e60:	21042b84 	addi	r4,r4,4270
   44e64:	d9002b15 	stw	r4,172(sp)
   44e68:	003c9106 	br	440b0 <__alt_data_end+0xfffc40b0>
   44e6c:	e005883a 	mov	r2,fp
   44e70:	003e7906 	br	44858 <__alt_data_end+0xfffc4858>
   44e74:	d9402917 	ldw	r5,164(sp)
   44e78:	df002783 	ldbu	fp,158(sp)
   44e7c:	dcc02d15 	stw	r19,180(sp)
   44e80:	d9402a15 	stw	r5,168(sp)
   44e84:	d9402e15 	stw	r5,184(sp)
   44e88:	d8002915 	stw	zero,164(sp)
   44e8c:	d8003215 	stw	zero,200(sp)
   44e90:	003a5d06 	br	43808 <__alt_data_end+0xfffc3808>
   44e94:	9080004c 	andi	r2,r18,1
   44e98:	0039883a 	mov	fp,zero
   44e9c:	10000426 	beq	r2,zero,44eb0 <___vfprintf_internal_r+0x1ddc>
   44ea0:	00800c04 	movi	r2,48
   44ea4:	dc001dc4 	addi	r16,sp,119
   44ea8:	d8801dc5 	stb	r2,119(sp)
   44eac:	003b8006 	br	43cb0 <__alt_data_end+0xfffc3cb0>
   44eb0:	d8002e15 	stw	zero,184(sp)
   44eb4:	dc001e04 	addi	r16,sp,120
   44eb8:	003a4d06 	br	437f0 <__alt_data_end+0xfffc37f0>
   44ebc:	8c7fff84 	addi	r17,r17,-2
   44ec0:	b5bfffc4 	addi	r22,r22,-1
   44ec4:	dd802615 	stw	r22,152(sp)
   44ec8:	dc4022c5 	stb	r17,139(sp)
   44ecc:	b000bf16 	blt	r22,zero,451cc <___vfprintf_internal_r+0x20f8>
   44ed0:	00800ac4 	movi	r2,43
   44ed4:	d8802305 	stb	r2,140(sp)
   44ed8:	00800244 	movi	r2,9
   44edc:	15807016 	blt	r2,r22,450a0 <___vfprintf_internal_r+0x1fcc>
   44ee0:	00800c04 	movi	r2,48
   44ee4:	b5800c04 	addi	r22,r22,48
   44ee8:	d8802345 	stb	r2,141(sp)
   44eec:	dd802385 	stb	r22,142(sp)
   44ef0:	d88023c4 	addi	r2,sp,143
   44ef4:	df0022c4 	addi	fp,sp,139
   44ef8:	d8c03317 	ldw	r3,204(sp)
   44efc:	1739c83a 	sub	fp,r2,fp
   44f00:	d9003317 	ldw	r4,204(sp)
   44f04:	e0c7883a 	add	r3,fp,r3
   44f08:	df003a15 	stw	fp,232(sp)
   44f0c:	d8c02e15 	stw	r3,184(sp)
   44f10:	00800044 	movi	r2,1
   44f14:	1100b30e 	bge	r2,r4,451e4 <___vfprintf_internal_r+0x2110>
   44f18:	d8c02e17 	ldw	r3,184(sp)
   44f1c:	18c00044 	addi	r3,r3,1
   44f20:	d8c02e15 	stw	r3,184(sp)
   44f24:	1805883a 	mov	r2,r3
   44f28:	1800ac16 	blt	r3,zero,451dc <___vfprintf_internal_r+0x2108>
   44f2c:	d8003215 	stw	zero,200(sp)
   44f30:	003e5d06 	br	448a8 <__alt_data_end+0xfffc48a8>
   44f34:	d9002c17 	ldw	r4,176(sp)
   44f38:	d9801e04 	addi	r6,sp,120
   44f3c:	b80b883a 	mov	r5,r23
   44f40:	0049bec0 	call	49bec <__sprint_r>
   44f44:	1039651e 	bne	r2,zero,434dc <__alt_data_end+0xfffc34dc>
   44f48:	dc402617 	ldw	r17,152(sp)
   44f4c:	d8c02017 	ldw	r3,128(sp)
   44f50:	d8801f17 	ldw	r2,124(sp)
   44f54:	da000404 	addi	r8,sp,16
   44f58:	003ed606 	br	44ab4 <__alt_data_end+0xfffc4ab4>
   44f5c:	582b883a 	mov	r21,r11
   44f60:	d8002915 	stw	zero,164(sp)
   44f64:	0038bd06 	br	4325c <__alt_data_end+0xfffc325c>
   44f68:	d8802917 	ldw	r2,164(sp)
   44f6c:	103e071e 	bne	r2,zero,4478c <__alt_data_end+0xfffc478c>
   44f70:	dc002915 	stw	r16,164(sp)
   44f74:	003e0506 	br	4478c <__alt_data_end+0xfffc478c>
   44f78:	d9002917 	ldw	r4,164(sp)
   44f7c:	20c00044 	addi	r3,r4,1
   44f80:	003e0f06 	br	447c0 <__alt_data_end+0xfffc47c0>
   44f84:	01400184 	movi	r5,6
   44f88:	d9402915 	stw	r5,164(sp)
   44f8c:	003dff06 	br	4478c <__alt_data_end+0xfffc478c>
   44f90:	d8802104 	addi	r2,sp,132
   44f94:	d8800315 	stw	r2,12(sp)
   44f98:	d8802504 	addi	r2,sp,148
   44f9c:	d8800215 	stw	r2,8(sp)
   44fa0:	d8802604 	addi	r2,sp,152
   44fa4:	d8800115 	stw	r2,4(sp)
   44fa8:	d8802917 	ldw	r2,164(sp)
   44fac:	d9403617 	ldw	r5,216(sp)
   44fb0:	d9002c17 	ldw	r4,176(sp)
   44fb4:	d8800015 	stw	r2,0(sp)
   44fb8:	01c000c4 	movi	r7,3
   44fbc:	980d883a 	mov	r6,r19
   44fc0:	da003d15 	stw	r8,244(sp)
   44fc4:	00456f80 	call	456f8 <_dtoa_r>
   44fc8:	d8c02917 	ldw	r3,164(sp)
   44fcc:	da003d17 	ldw	r8,244(sp)
   44fd0:	1021883a 	mov	r16,r2
   44fd4:	10f9883a 	add	fp,r2,r3
   44fd8:	81000007 	ldb	r4,0(r16)
   44fdc:	00800c04 	movi	r2,48
   44fe0:	20805e26 	beq	r4,r2,4515c <___vfprintf_internal_r+0x2088>
   44fe4:	d8c02617 	ldw	r3,152(sp)
   44fe8:	e0f9883a 	add	fp,fp,r3
   44fec:	003e0a06 	br	44818 <__alt_data_end+0xfffc4818>
   44ff0:	00c00b44 	movi	r3,45
   44ff4:	24e0003c 	xorhi	r19,r4,32768
   44ff8:	d8c02a05 	stb	r3,168(sp)
   44ffc:	003de906 	br	447a4 <__alt_data_end+0xfffc47a4>
   45000:	d8c03217 	ldw	r3,200(sp)
   45004:	00c07a0e 	bge	zero,r3,451f0 <___vfprintf_internal_r+0x211c>
   45008:	00800044 	movi	r2,1
   4500c:	d9003317 	ldw	r4,204(sp)
   45010:	1105883a 	add	r2,r2,r4
   45014:	d8802e15 	stw	r2,184(sp)
   45018:	10004e16 	blt	r2,zero,45154 <___vfprintf_internal_r+0x2080>
   4501c:	044019c4 	movi	r17,103
   45020:	003e2106 	br	448a8 <__alt_data_end+0xfffc48a8>
   45024:	d9002917 	ldw	r4,164(sp)
   45028:	d8802104 	addi	r2,sp,132
   4502c:	d8800315 	stw	r2,12(sp)
   45030:	d9000015 	stw	r4,0(sp)
   45034:	d8802504 	addi	r2,sp,148
   45038:	d9403617 	ldw	r5,216(sp)
   4503c:	d9002c17 	ldw	r4,176(sp)
   45040:	d8800215 	stw	r2,8(sp)
   45044:	d8802604 	addi	r2,sp,152
   45048:	d8800115 	stw	r2,4(sp)
   4504c:	01c000c4 	movi	r7,3
   45050:	980d883a 	mov	r6,r19
   45054:	da003d15 	stw	r8,244(sp)
   45058:	00456f80 	call	456f8 <_dtoa_r>
   4505c:	d8c02917 	ldw	r3,164(sp)
   45060:	da003d17 	ldw	r8,244(sp)
   45064:	1021883a 	mov	r16,r2
   45068:	00801184 	movi	r2,70
   4506c:	80f9883a 	add	fp,r16,r3
   45070:	88bfd926 	beq	r17,r2,44fd8 <__alt_data_end+0xfffc4fd8>
   45074:	003de806 	br	44818 <__alt_data_end+0xfffc4818>
   45078:	d9002917 	ldw	r4,164(sp)
   4507c:	00c04d0e 	bge	zero,r3,451b4 <___vfprintf_internal_r+0x20e0>
   45080:	2000441e 	bne	r4,zero,45194 <___vfprintf_internal_r+0x20c0>
   45084:	9480004c 	andi	r18,r18,1
   45088:	9000421e 	bne	r18,zero,45194 <___vfprintf_internal_r+0x20c0>
   4508c:	1805883a 	mov	r2,r3
   45090:	18007016 	blt	r3,zero,45254 <___vfprintf_internal_r+0x2180>
   45094:	d8c03217 	ldw	r3,200(sp)
   45098:	d8c02e15 	stw	r3,184(sp)
   4509c:	003e0206 	br	448a8 <__alt_data_end+0xfffc48a8>
   450a0:	df0022c4 	addi	fp,sp,139
   450a4:	dc002915 	stw	r16,164(sp)
   450a8:	4027883a 	mov	r19,r8
   450ac:	e021883a 	mov	r16,fp
   450b0:	b009883a 	mov	r4,r22
   450b4:	01400284 	movi	r5,10
   450b8:	0040a700 	call	40a70 <__modsi3>
   450bc:	10800c04 	addi	r2,r2,48
   450c0:	843fffc4 	addi	r16,r16,-1
   450c4:	b009883a 	mov	r4,r22
   450c8:	01400284 	movi	r5,10
   450cc:	80800005 	stb	r2,0(r16)
   450d0:	00409ec0 	call	409ec <__divsi3>
   450d4:	102d883a 	mov	r22,r2
   450d8:	00800244 	movi	r2,9
   450dc:	15bff416 	blt	r2,r22,450b0 <__alt_data_end+0xfffc50b0>
   450e0:	9811883a 	mov	r8,r19
   450e4:	b0800c04 	addi	r2,r22,48
   450e8:	8027883a 	mov	r19,r16
   450ec:	997fffc4 	addi	r5,r19,-1
   450f0:	98bfffc5 	stb	r2,-1(r19)
   450f4:	dc002917 	ldw	r16,164(sp)
   450f8:	2f006a2e 	bgeu	r5,fp,452a4 <___vfprintf_internal_r+0x21d0>
   450fc:	d9c02384 	addi	r7,sp,142
   45100:	3ccfc83a 	sub	r7,r7,r19
   45104:	d9002344 	addi	r4,sp,141
   45108:	e1cf883a 	add	r7,fp,r7
   4510c:	00000106 	br	45114 <___vfprintf_internal_r+0x2040>
   45110:	28800003 	ldbu	r2,0(r5)
   45114:	20800005 	stb	r2,0(r4)
   45118:	21000044 	addi	r4,r4,1
   4511c:	29400044 	addi	r5,r5,1
   45120:	393ffb1e 	bne	r7,r4,45110 <__alt_data_end+0xfffc5110>
   45124:	d8802304 	addi	r2,sp,140
   45128:	14c5c83a 	sub	r2,r2,r19
   4512c:	d8c02344 	addi	r3,sp,141
   45130:	1885883a 	add	r2,r3,r2
   45134:	003f7006 	br	44ef8 <__alt_data_end+0xfffc4ef8>
   45138:	0005883a 	mov	r2,zero
   4513c:	003f0f06 	br	44d7c <__alt_data_end+0xfffc4d7c>
   45140:	d8c03217 	ldw	r3,200(sp)
   45144:	18c00044 	addi	r3,r3,1
   45148:	d8c02e15 	stw	r3,184(sp)
   4514c:	1805883a 	mov	r2,r3
   45150:	183fb20e 	bge	r3,zero,4501c <__alt_data_end+0xfffc501c>
   45154:	0005883a 	mov	r2,zero
   45158:	003fb006 	br	4501c <__alt_data_end+0xfffc501c>
   4515c:	d9003617 	ldw	r4,216(sp)
   45160:	000d883a 	mov	r6,zero
   45164:	000f883a 	mov	r7,zero
   45168:	980b883a 	mov	r5,r19
   4516c:	d8c03c15 	stw	r3,240(sp)
   45170:	da003d15 	stw	r8,244(sp)
   45174:	004d9800 	call	4d980 <__eqdf2>
   45178:	d8c03c17 	ldw	r3,240(sp)
   4517c:	da003d17 	ldw	r8,244(sp)
   45180:	103f9826 	beq	r2,zero,44fe4 <__alt_data_end+0xfffc4fe4>
   45184:	00800044 	movi	r2,1
   45188:	10c7c83a 	sub	r3,r2,r3
   4518c:	d8c02615 	stw	r3,152(sp)
   45190:	003f9506 	br	44fe8 <__alt_data_end+0xfffc4fe8>
   45194:	d9002917 	ldw	r4,164(sp)
   45198:	d8c03217 	ldw	r3,200(sp)
   4519c:	20800044 	addi	r2,r4,1
   451a0:	1885883a 	add	r2,r3,r2
   451a4:	d8802e15 	stw	r2,184(sp)
   451a8:	103dbf0e 	bge	r2,zero,448a8 <__alt_data_end+0xfffc48a8>
   451ac:	0005883a 	mov	r2,zero
   451b0:	003dbd06 	br	448a8 <__alt_data_end+0xfffc48a8>
   451b4:	2000211e 	bne	r4,zero,4523c <___vfprintf_internal_r+0x2168>
   451b8:	9480004c 	andi	r18,r18,1
   451bc:	90001f1e 	bne	r18,zero,4523c <___vfprintf_internal_r+0x2168>
   451c0:	00800044 	movi	r2,1
   451c4:	d8802e15 	stw	r2,184(sp)
   451c8:	003db706 	br	448a8 <__alt_data_end+0xfffc48a8>
   451cc:	00800b44 	movi	r2,45
   451d0:	05adc83a 	sub	r22,zero,r22
   451d4:	d8802305 	stb	r2,140(sp)
   451d8:	003f3f06 	br	44ed8 <__alt_data_end+0xfffc4ed8>
   451dc:	0005883a 	mov	r2,zero
   451e0:	003f5206 	br	44f2c <__alt_data_end+0xfffc4f2c>
   451e4:	90a4703a 	and	r18,r18,r2
   451e8:	903f4e26 	beq	r18,zero,44f24 <__alt_data_end+0xfffc4f24>
   451ec:	003f4a06 	br	44f18 <__alt_data_end+0xfffc4f18>
   451f0:	00800084 	movi	r2,2
   451f4:	10c5c83a 	sub	r2,r2,r3
   451f8:	003f8406 	br	4500c <__alt_data_end+0xfffc500c>
   451fc:	d8802d17 	ldw	r2,180(sp)
   45200:	d9002d17 	ldw	r4,180(sp)
   45204:	ac400043 	ldbu	r17,1(r21)
   45208:	10800017 	ldw	r2,0(r2)
   4520c:	582b883a 	mov	r21,r11
   45210:	d8802915 	stw	r2,164(sp)
   45214:	20800104 	addi	r2,r4,4
   45218:	d9002917 	ldw	r4,164(sp)
   4521c:	d8802d15 	stw	r2,180(sp)
   45220:	203e7a0e 	bge	r4,zero,44c0c <__alt_data_end+0xfffc4c0c>
   45224:	8c403fcc 	andi	r17,r17,255
   45228:	00bfffc4 	movi	r2,-1
   4522c:	8c40201c 	xori	r17,r17,128
   45230:	d8802915 	stw	r2,164(sp)
   45234:	8c7fe004 	addi	r17,r17,-128
   45238:	00380706 	br	43258 <__alt_data_end+0xfffc3258>
   4523c:	d8c02917 	ldw	r3,164(sp)
   45240:	18c00084 	addi	r3,r3,2
   45244:	d8c02e15 	stw	r3,184(sp)
   45248:	1805883a 	mov	r2,r3
   4524c:	183d960e 	bge	r3,zero,448a8 <__alt_data_end+0xfffc48a8>
   45250:	003fd606 	br	451ac <__alt_data_end+0xfffc51ac>
   45254:	0005883a 	mov	r2,zero
   45258:	003f8e06 	br	45094 <__alt_data_end+0xfffc5094>
   4525c:	9080004c 	andi	r2,r18,1
   45260:	103f811e 	bne	r2,zero,45068 <__alt_data_end+0xfffc5068>
   45264:	d8802117 	ldw	r2,132(sp)
   45268:	1405c83a 	sub	r2,r2,r16
   4526c:	d8803315 	stw	r2,204(sp)
   45270:	b47ef326 	beq	r22,r17,44e40 <__alt_data_end+0xfffc4e40>
   45274:	dd802617 	ldw	r22,152(sp)
   45278:	003f1106 	br	44ec0 <__alt_data_end+0xfffc4ec0>
   4527c:	d9c02785 	stb	r7,158(sp)
   45280:	00390406 	br	43694 <__alt_data_end+0xfffc3694>
   45284:	d9c02785 	stb	r7,158(sp)
   45288:	0038d306 	br	435d8 <__alt_data_end+0xfffc35d8>
   4528c:	d9c02785 	stb	r7,158(sp)
   45290:	003a6106 	br	43c18 <__alt_data_end+0xfffc3c18>
   45294:	d9c02785 	stb	r7,158(sp)
   45298:	003af806 	br	43e7c <__alt_data_end+0xfffc3e7c>
   4529c:	0005883a 	mov	r2,zero
   452a0:	003d7e06 	br	4489c <__alt_data_end+0xfffc489c>
   452a4:	d8802344 	addi	r2,sp,141
   452a8:	003f1306 	br	44ef8 <__alt_data_end+0xfffc4ef8>
   452ac:	d9c02785 	stb	r7,158(sp)
   452b0:	00392306 	br	43740 <__alt_data_end+0xfffc3740>
   452b4:	d9c02785 	stb	r7,158(sp)
   452b8:	003aa906 	br	43d60 <__alt_data_end+0xfffc3d60>
   452bc:	d9c02785 	stb	r7,158(sp)
   452c0:	003a3d06 	br	43bb8 <__alt_data_end+0xfffc3bb8>
   452c4:	d9c02785 	stb	r7,158(sp)
   452c8:	003aca06 	br	43df4 <__alt_data_end+0xfffc3df4>

000452cc <__vfprintf_internal>:
   452cc:	00800174 	movhi	r2,5
   452d0:	108b6e04 	addi	r2,r2,11704
   452d4:	300f883a 	mov	r7,r6
   452d8:	280d883a 	mov	r6,r5
   452dc:	200b883a 	mov	r5,r4
   452e0:	11000017 	ldw	r4,0(r2)
   452e4:	00430d41 	jmpi	430d4 <___vfprintf_internal_r>

000452e8 <__sbprintf>:
   452e8:	2880030b 	ldhu	r2,12(r5)
   452ec:	2ac01917 	ldw	r11,100(r5)
   452f0:	2a80038b 	ldhu	r10,14(r5)
   452f4:	2a400717 	ldw	r9,28(r5)
   452f8:	2a000917 	ldw	r8,36(r5)
   452fc:	defee204 	addi	sp,sp,-1144
   45300:	00c10004 	movi	r3,1024
   45304:	dc011a15 	stw	r16,1128(sp)
   45308:	10bfff4c 	andi	r2,r2,65533
   4530c:	2821883a 	mov	r16,r5
   45310:	d8cb883a 	add	r5,sp,r3
   45314:	dc811c15 	stw	r18,1136(sp)
   45318:	dc411b15 	stw	r17,1132(sp)
   4531c:	dfc11d15 	stw	ra,1140(sp)
   45320:	2025883a 	mov	r18,r4
   45324:	d881030d 	sth	r2,1036(sp)
   45328:	dac11915 	stw	r11,1124(sp)
   4532c:	da81038d 	sth	r10,1038(sp)
   45330:	da410715 	stw	r9,1052(sp)
   45334:	da010915 	stw	r8,1060(sp)
   45338:	dec10015 	stw	sp,1024(sp)
   4533c:	dec10415 	stw	sp,1040(sp)
   45340:	d8c10215 	stw	r3,1032(sp)
   45344:	d8c10515 	stw	r3,1044(sp)
   45348:	d8010615 	stw	zero,1048(sp)
   4534c:	00430d40 	call	430d4 <___vfprintf_internal_r>
   45350:	1023883a 	mov	r17,r2
   45354:	10000416 	blt	r2,zero,45368 <__sbprintf+0x80>
   45358:	d9410004 	addi	r5,sp,1024
   4535c:	9009883a 	mov	r4,r18
   45360:	0046f9c0 	call	46f9c <_fflush_r>
   45364:	10000d1e 	bne	r2,zero,4539c <__sbprintf+0xb4>
   45368:	d881030b 	ldhu	r2,1036(sp)
   4536c:	1080100c 	andi	r2,r2,64
   45370:	10000326 	beq	r2,zero,45380 <__sbprintf+0x98>
   45374:	8080030b 	ldhu	r2,12(r16)
   45378:	10801014 	ori	r2,r2,64
   4537c:	8080030d 	sth	r2,12(r16)
   45380:	8805883a 	mov	r2,r17
   45384:	dfc11d17 	ldw	ra,1140(sp)
   45388:	dc811c17 	ldw	r18,1136(sp)
   4538c:	dc411b17 	ldw	r17,1132(sp)
   45390:	dc011a17 	ldw	r16,1128(sp)
   45394:	dec11e04 	addi	sp,sp,1144
   45398:	f800283a 	ret
   4539c:	047fffc4 	movi	r17,-1
   453a0:	003ff106 	br	45368 <__alt_data_end+0xfffc5368>

000453a4 <__swsetup_r>:
   453a4:	00800174 	movhi	r2,5
   453a8:	defffd04 	addi	sp,sp,-12
   453ac:	108b6e04 	addi	r2,r2,11704
   453b0:	dc400115 	stw	r17,4(sp)
   453b4:	2023883a 	mov	r17,r4
   453b8:	11000017 	ldw	r4,0(r2)
   453bc:	dc000015 	stw	r16,0(sp)
   453c0:	dfc00215 	stw	ra,8(sp)
   453c4:	2821883a 	mov	r16,r5
   453c8:	20000226 	beq	r4,zero,453d4 <__swsetup_r+0x30>
   453cc:	20800e17 	ldw	r2,56(r4)
   453d0:	10003126 	beq	r2,zero,45498 <__swsetup_r+0xf4>
   453d4:	8080030b 	ldhu	r2,12(r16)
   453d8:	10c0020c 	andi	r3,r2,8
   453dc:	1009883a 	mov	r4,r2
   453e0:	18000f26 	beq	r3,zero,45420 <__swsetup_r+0x7c>
   453e4:	80c00417 	ldw	r3,16(r16)
   453e8:	18001526 	beq	r3,zero,45440 <__swsetup_r+0x9c>
   453ec:	1100004c 	andi	r4,r2,1
   453f0:	20001c1e 	bne	r4,zero,45464 <__swsetup_r+0xc0>
   453f4:	1080008c 	andi	r2,r2,2
   453f8:	1000291e 	bne	r2,zero,454a0 <__swsetup_r+0xfc>
   453fc:	80800517 	ldw	r2,20(r16)
   45400:	80800215 	stw	r2,8(r16)
   45404:	18001c26 	beq	r3,zero,45478 <__swsetup_r+0xd4>
   45408:	0005883a 	mov	r2,zero
   4540c:	dfc00217 	ldw	ra,8(sp)
   45410:	dc400117 	ldw	r17,4(sp)
   45414:	dc000017 	ldw	r16,0(sp)
   45418:	dec00304 	addi	sp,sp,12
   4541c:	f800283a 	ret
   45420:	2080040c 	andi	r2,r4,16
   45424:	10002e26 	beq	r2,zero,454e0 <__swsetup_r+0x13c>
   45428:	2080010c 	andi	r2,r4,4
   4542c:	10001e1e 	bne	r2,zero,454a8 <__swsetup_r+0x104>
   45430:	80c00417 	ldw	r3,16(r16)
   45434:	20800214 	ori	r2,r4,8
   45438:	8080030d 	sth	r2,12(r16)
   4543c:	183feb1e 	bne	r3,zero,453ec <__alt_data_end+0xfffc53ec>
   45440:	1100a00c 	andi	r4,r2,640
   45444:	01408004 	movi	r5,512
   45448:	217fe826 	beq	r4,r5,453ec <__alt_data_end+0xfffc53ec>
   4544c:	800b883a 	mov	r5,r16
   45450:	8809883a 	mov	r4,r17
   45454:	0047a600 	call	47a60 <__smakebuf_r>
   45458:	8080030b 	ldhu	r2,12(r16)
   4545c:	80c00417 	ldw	r3,16(r16)
   45460:	003fe206 	br	453ec <__alt_data_end+0xfffc53ec>
   45464:	80800517 	ldw	r2,20(r16)
   45468:	80000215 	stw	zero,8(r16)
   4546c:	0085c83a 	sub	r2,zero,r2
   45470:	80800615 	stw	r2,24(r16)
   45474:	183fe41e 	bne	r3,zero,45408 <__alt_data_end+0xfffc5408>
   45478:	80c0030b 	ldhu	r3,12(r16)
   4547c:	0005883a 	mov	r2,zero
   45480:	1900200c 	andi	r4,r3,128
   45484:	203fe126 	beq	r4,zero,4540c <__alt_data_end+0xfffc540c>
   45488:	18c01014 	ori	r3,r3,64
   4548c:	80c0030d 	sth	r3,12(r16)
   45490:	00bfffc4 	movi	r2,-1
   45494:	003fdd06 	br	4540c <__alt_data_end+0xfffc540c>
   45498:	00473780 	call	47378 <__sinit>
   4549c:	003fcd06 	br	453d4 <__alt_data_end+0xfffc53d4>
   454a0:	0005883a 	mov	r2,zero
   454a4:	003fd606 	br	45400 <__alt_data_end+0xfffc5400>
   454a8:	81400c17 	ldw	r5,48(r16)
   454ac:	28000626 	beq	r5,zero,454c8 <__swsetup_r+0x124>
   454b0:	80801004 	addi	r2,r16,64
   454b4:	28800326 	beq	r5,r2,454c4 <__swsetup_r+0x120>
   454b8:	8809883a 	mov	r4,r17
   454bc:	00474ec0 	call	474ec <_free_r>
   454c0:	8100030b 	ldhu	r4,12(r16)
   454c4:	80000c15 	stw	zero,48(r16)
   454c8:	80c00417 	ldw	r3,16(r16)
   454cc:	00bff6c4 	movi	r2,-37
   454d0:	1108703a 	and	r4,r2,r4
   454d4:	80000115 	stw	zero,4(r16)
   454d8:	80c00015 	stw	r3,0(r16)
   454dc:	003fd506 	br	45434 <__alt_data_end+0xfffc5434>
   454e0:	00800244 	movi	r2,9
   454e4:	88800015 	stw	r2,0(r17)
   454e8:	20801014 	ori	r2,r4,64
   454ec:	8080030d 	sth	r2,12(r16)
   454f0:	00bfffc4 	movi	r2,-1
   454f4:	003fc506 	br	4540c <__alt_data_end+0xfffc540c>

000454f8 <quorem>:
   454f8:	defff704 	addi	sp,sp,-36
   454fc:	dc800215 	stw	r18,8(sp)
   45500:	20800417 	ldw	r2,16(r4)
   45504:	2c800417 	ldw	r18,16(r5)
   45508:	dfc00815 	stw	ra,32(sp)
   4550c:	ddc00715 	stw	r23,28(sp)
   45510:	dd800615 	stw	r22,24(sp)
   45514:	dd400515 	stw	r21,20(sp)
   45518:	dd000415 	stw	r20,16(sp)
   4551c:	dcc00315 	stw	r19,12(sp)
   45520:	dc400115 	stw	r17,4(sp)
   45524:	dc000015 	stw	r16,0(sp)
   45528:	14807116 	blt	r2,r18,456f0 <quorem+0x1f8>
   4552c:	94bfffc4 	addi	r18,r18,-1
   45530:	94ad883a 	add	r22,r18,r18
   45534:	b5ad883a 	add	r22,r22,r22
   45538:	2c400504 	addi	r17,r5,20
   4553c:	8da9883a 	add	r20,r17,r22
   45540:	25400504 	addi	r21,r4,20
   45544:	282f883a 	mov	r23,r5
   45548:	adad883a 	add	r22,r21,r22
   4554c:	a1400017 	ldw	r5,0(r20)
   45550:	2021883a 	mov	r16,r4
   45554:	b1000017 	ldw	r4,0(r22)
   45558:	29400044 	addi	r5,r5,1
   4555c:	0040ae40 	call	40ae4 <__udivsi3>
   45560:	1027883a 	mov	r19,r2
   45564:	10002c26 	beq	r2,zero,45618 <quorem+0x120>
   45568:	a813883a 	mov	r9,r21
   4556c:	880b883a 	mov	r5,r17
   45570:	0009883a 	mov	r4,zero
   45574:	000d883a 	mov	r6,zero
   45578:	2a000017 	ldw	r8,0(r5)
   4557c:	49c00017 	ldw	r7,0(r9)
   45580:	29400104 	addi	r5,r5,4
   45584:	40bfffcc 	andi	r2,r8,65535
   45588:	14c5383a 	mul	r2,r2,r19
   4558c:	4010d43a 	srli	r8,r8,16
   45590:	38ffffcc 	andi	r3,r7,65535
   45594:	1105883a 	add	r2,r2,r4
   45598:	1008d43a 	srli	r4,r2,16
   4559c:	44d1383a 	mul	r8,r8,r19
   455a0:	198d883a 	add	r6,r3,r6
   455a4:	10ffffcc 	andi	r3,r2,65535
   455a8:	30c7c83a 	sub	r3,r6,r3
   455ac:	380ed43a 	srli	r7,r7,16
   455b0:	4105883a 	add	r2,r8,r4
   455b4:	180dd43a 	srai	r6,r3,16
   455b8:	113fffcc 	andi	r4,r2,65535
   455bc:	390fc83a 	sub	r7,r7,r4
   455c0:	398d883a 	add	r6,r7,r6
   455c4:	300e943a 	slli	r7,r6,16
   455c8:	18ffffcc 	andi	r3,r3,65535
   455cc:	1008d43a 	srli	r4,r2,16
   455d0:	38ceb03a 	or	r7,r7,r3
   455d4:	49c00015 	stw	r7,0(r9)
   455d8:	300dd43a 	srai	r6,r6,16
   455dc:	4a400104 	addi	r9,r9,4
   455e0:	a17fe52e 	bgeu	r20,r5,45578 <__alt_data_end+0xfffc5578>
   455e4:	b0800017 	ldw	r2,0(r22)
   455e8:	10000b1e 	bne	r2,zero,45618 <quorem+0x120>
   455ec:	b0bfff04 	addi	r2,r22,-4
   455f0:	a880082e 	bgeu	r21,r2,45614 <quorem+0x11c>
   455f4:	b0ffff17 	ldw	r3,-4(r22)
   455f8:	18000326 	beq	r3,zero,45608 <quorem+0x110>
   455fc:	00000506 	br	45614 <quorem+0x11c>
   45600:	10c00017 	ldw	r3,0(r2)
   45604:	1800031e 	bne	r3,zero,45614 <quorem+0x11c>
   45608:	10bfff04 	addi	r2,r2,-4
   4560c:	94bfffc4 	addi	r18,r18,-1
   45610:	a8bffb36 	bltu	r21,r2,45600 <__alt_data_end+0xfffc5600>
   45614:	84800415 	stw	r18,16(r16)
   45618:	b80b883a 	mov	r5,r23
   4561c:	8009883a 	mov	r4,r16
   45620:	00490440 	call	49044 <__mcmp>
   45624:	10002616 	blt	r2,zero,456c0 <quorem+0x1c8>
   45628:	9cc00044 	addi	r19,r19,1
   4562c:	a805883a 	mov	r2,r21
   45630:	000b883a 	mov	r5,zero
   45634:	11000017 	ldw	r4,0(r2)
   45638:	89800017 	ldw	r6,0(r17)
   4563c:	10800104 	addi	r2,r2,4
   45640:	20ffffcc 	andi	r3,r4,65535
   45644:	194b883a 	add	r5,r3,r5
   45648:	30ffffcc 	andi	r3,r6,65535
   4564c:	28c7c83a 	sub	r3,r5,r3
   45650:	300cd43a 	srli	r6,r6,16
   45654:	2008d43a 	srli	r4,r4,16
   45658:	180bd43a 	srai	r5,r3,16
   4565c:	18ffffcc 	andi	r3,r3,65535
   45660:	2189c83a 	sub	r4,r4,r6
   45664:	2149883a 	add	r4,r4,r5
   45668:	200c943a 	slli	r6,r4,16
   4566c:	8c400104 	addi	r17,r17,4
   45670:	200bd43a 	srai	r5,r4,16
   45674:	30c6b03a 	or	r3,r6,r3
   45678:	10ffff15 	stw	r3,-4(r2)
   4567c:	a47fed2e 	bgeu	r20,r17,45634 <__alt_data_end+0xfffc5634>
   45680:	9485883a 	add	r2,r18,r18
   45684:	1085883a 	add	r2,r2,r2
   45688:	a887883a 	add	r3,r21,r2
   4568c:	18800017 	ldw	r2,0(r3)
   45690:	10000b1e 	bne	r2,zero,456c0 <quorem+0x1c8>
   45694:	18bfff04 	addi	r2,r3,-4
   45698:	a880082e 	bgeu	r21,r2,456bc <quorem+0x1c4>
   4569c:	18ffff17 	ldw	r3,-4(r3)
   456a0:	18000326 	beq	r3,zero,456b0 <quorem+0x1b8>
   456a4:	00000506 	br	456bc <quorem+0x1c4>
   456a8:	10c00017 	ldw	r3,0(r2)
   456ac:	1800031e 	bne	r3,zero,456bc <quorem+0x1c4>
   456b0:	10bfff04 	addi	r2,r2,-4
   456b4:	94bfffc4 	addi	r18,r18,-1
   456b8:	a8bffb36 	bltu	r21,r2,456a8 <__alt_data_end+0xfffc56a8>
   456bc:	84800415 	stw	r18,16(r16)
   456c0:	9805883a 	mov	r2,r19
   456c4:	dfc00817 	ldw	ra,32(sp)
   456c8:	ddc00717 	ldw	r23,28(sp)
   456cc:	dd800617 	ldw	r22,24(sp)
   456d0:	dd400517 	ldw	r21,20(sp)
   456d4:	dd000417 	ldw	r20,16(sp)
   456d8:	dcc00317 	ldw	r19,12(sp)
   456dc:	dc800217 	ldw	r18,8(sp)
   456e0:	dc400117 	ldw	r17,4(sp)
   456e4:	dc000017 	ldw	r16,0(sp)
   456e8:	dec00904 	addi	sp,sp,36
   456ec:	f800283a 	ret
   456f0:	0005883a 	mov	r2,zero
   456f4:	003ff306 	br	456c4 <__alt_data_end+0xfffc56c4>

000456f8 <_dtoa_r>:
   456f8:	20801017 	ldw	r2,64(r4)
   456fc:	deffde04 	addi	sp,sp,-136
   45700:	df002015 	stw	fp,128(sp)
   45704:	dcc01b15 	stw	r19,108(sp)
   45708:	dc801a15 	stw	r18,104(sp)
   4570c:	dc401915 	stw	r17,100(sp)
   45710:	dc001815 	stw	r16,96(sp)
   45714:	dfc02115 	stw	ra,132(sp)
   45718:	ddc01f15 	stw	r23,124(sp)
   4571c:	dd801e15 	stw	r22,120(sp)
   45720:	dd401d15 	stw	r21,116(sp)
   45724:	dd001c15 	stw	r20,112(sp)
   45728:	d9c00315 	stw	r7,12(sp)
   4572c:	2039883a 	mov	fp,r4
   45730:	3023883a 	mov	r17,r6
   45734:	2825883a 	mov	r18,r5
   45738:	dc002417 	ldw	r16,144(sp)
   4573c:	3027883a 	mov	r19,r6
   45740:	10000826 	beq	r2,zero,45764 <_dtoa_r+0x6c>
   45744:	21801117 	ldw	r6,68(r4)
   45748:	00c00044 	movi	r3,1
   4574c:	100b883a 	mov	r5,r2
   45750:	1986983a 	sll	r3,r3,r6
   45754:	11800115 	stw	r6,4(r2)
   45758:	10c00215 	stw	r3,8(r2)
   4575c:	00488240 	call	48824 <_Bfree>
   45760:	e0001015 	stw	zero,64(fp)
   45764:	88002e16 	blt	r17,zero,45820 <_dtoa_r+0x128>
   45768:	80000015 	stw	zero,0(r16)
   4576c:	889ffc2c 	andhi	r2,r17,32752
   45770:	00dffc34 	movhi	r3,32752
   45774:	10c01c26 	beq	r2,r3,457e8 <_dtoa_r+0xf0>
   45778:	000d883a 	mov	r6,zero
   4577c:	000f883a 	mov	r7,zero
   45780:	9009883a 	mov	r4,r18
   45784:	980b883a 	mov	r5,r19
   45788:	004d9800 	call	4d980 <__eqdf2>
   4578c:	10002b1e 	bne	r2,zero,4583c <_dtoa_r+0x144>
   45790:	d9c02317 	ldw	r7,140(sp)
   45794:	00800044 	movi	r2,1
   45798:	38800015 	stw	r2,0(r7)
   4579c:	d8802517 	ldw	r2,148(sp)
   457a0:	10019e26 	beq	r2,zero,45e1c <_dtoa_r+0x724>
   457a4:	d8c02517 	ldw	r3,148(sp)
   457a8:	00800174 	movhi	r2,5
   457ac:	10842b44 	addi	r2,r2,4269
   457b0:	18800015 	stw	r2,0(r3)
   457b4:	10bfffc4 	addi	r2,r2,-1
   457b8:	dfc02117 	ldw	ra,132(sp)
   457bc:	df002017 	ldw	fp,128(sp)
   457c0:	ddc01f17 	ldw	r23,124(sp)
   457c4:	dd801e17 	ldw	r22,120(sp)
   457c8:	dd401d17 	ldw	r21,116(sp)
   457cc:	dd001c17 	ldw	r20,112(sp)
   457d0:	dcc01b17 	ldw	r19,108(sp)
   457d4:	dc801a17 	ldw	r18,104(sp)
   457d8:	dc401917 	ldw	r17,100(sp)
   457dc:	dc001817 	ldw	r16,96(sp)
   457e0:	dec02204 	addi	sp,sp,136
   457e4:	f800283a 	ret
   457e8:	d8c02317 	ldw	r3,140(sp)
   457ec:	0089c3c4 	movi	r2,9999
   457f0:	18800015 	stw	r2,0(r3)
   457f4:	90017726 	beq	r18,zero,45dd4 <_dtoa_r+0x6dc>
   457f8:	00800174 	movhi	r2,5
   457fc:	10843704 	addi	r2,r2,4316
   45800:	d9002517 	ldw	r4,148(sp)
   45804:	203fec26 	beq	r4,zero,457b8 <__alt_data_end+0xfffc57b8>
   45808:	10c000c7 	ldb	r3,3(r2)
   4580c:	1801781e 	bne	r3,zero,45df0 <_dtoa_r+0x6f8>
   45810:	10c000c4 	addi	r3,r2,3
   45814:	d9802517 	ldw	r6,148(sp)
   45818:	30c00015 	stw	r3,0(r6)
   4581c:	003fe606 	br	457b8 <__alt_data_end+0xfffc57b8>
   45820:	04e00034 	movhi	r19,32768
   45824:	9cffffc4 	addi	r19,r19,-1
   45828:	00800044 	movi	r2,1
   4582c:	8ce6703a 	and	r19,r17,r19
   45830:	80800015 	stw	r2,0(r16)
   45834:	9823883a 	mov	r17,r19
   45838:	003fcc06 	br	4576c <__alt_data_end+0xfffc576c>
   4583c:	d8800204 	addi	r2,sp,8
   45840:	d8800015 	stw	r2,0(sp)
   45844:	d9c00104 	addi	r7,sp,4
   45848:	900b883a 	mov	r5,r18
   4584c:	980d883a 	mov	r6,r19
   45850:	e009883a 	mov	r4,fp
   45854:	8820d53a 	srli	r16,r17,20
   45858:	00494100 	call	49410 <__d2b>
   4585c:	d8800915 	stw	r2,36(sp)
   45860:	8001651e 	bne	r16,zero,45df8 <_dtoa_r+0x700>
   45864:	dd800217 	ldw	r22,8(sp)
   45868:	dc000117 	ldw	r16,4(sp)
   4586c:	00800804 	movi	r2,32
   45870:	b421883a 	add	r16,r22,r16
   45874:	80c10c84 	addi	r3,r16,1074
   45878:	10c2d10e 	bge	r2,r3,463c0 <_dtoa_r+0xcc8>
   4587c:	00801004 	movi	r2,64
   45880:	81010484 	addi	r4,r16,1042
   45884:	10c7c83a 	sub	r3,r2,r3
   45888:	9108d83a 	srl	r4,r18,r4
   4588c:	88e2983a 	sll	r17,r17,r3
   45890:	2448b03a 	or	r4,r4,r17
   45894:	004e6300 	call	4e630 <__floatunsidf>
   45898:	017f8434 	movhi	r5,65040
   4589c:	01800044 	movi	r6,1
   458a0:	1009883a 	mov	r4,r2
   458a4:	194b883a 	add	r5,r3,r5
   458a8:	843fffc4 	addi	r16,r16,-1
   458ac:	d9801115 	stw	r6,68(sp)
   458b0:	000d883a 	mov	r6,zero
   458b4:	01cffe34 	movhi	r7,16376
   458b8:	004dbd80 	call	4dbd8 <__subdf3>
   458bc:	0198dbf4 	movhi	r6,25455
   458c0:	01cff4f4 	movhi	r7,16339
   458c4:	3190d844 	addi	r6,r6,17249
   458c8:	39e1e9c4 	addi	r7,r7,-30809
   458cc:	1009883a 	mov	r4,r2
   458d0:	180b883a 	mov	r5,r3
   458d4:	00426340 	call	42634 <__muldf3>
   458d8:	01a2d874 	movhi	r6,35681
   458dc:	01cff1f4 	movhi	r7,16327
   458e0:	31b22cc4 	addi	r6,r6,-14157
   458e4:	39e28a04 	addi	r7,r7,-30168
   458e8:	180b883a 	mov	r5,r3
   458ec:	1009883a 	mov	r4,r2
   458f0:	0041d880 	call	41d88 <__adddf3>
   458f4:	8009883a 	mov	r4,r16
   458f8:	1029883a 	mov	r20,r2
   458fc:	1823883a 	mov	r17,r3
   45900:	004e5540 	call	4e554 <__floatsidf>
   45904:	019427f4 	movhi	r6,20639
   45908:	01cff4f4 	movhi	r7,16339
   4590c:	319e7ec4 	addi	r6,r6,31227
   45910:	39d104c4 	addi	r7,r7,17427
   45914:	1009883a 	mov	r4,r2
   45918:	180b883a 	mov	r5,r3
   4591c:	00426340 	call	42634 <__muldf3>
   45920:	100d883a 	mov	r6,r2
   45924:	180f883a 	mov	r7,r3
   45928:	a009883a 	mov	r4,r20
   4592c:	880b883a 	mov	r5,r17
   45930:	0041d880 	call	41d88 <__adddf3>
   45934:	1009883a 	mov	r4,r2
   45938:	180b883a 	mov	r5,r3
   4593c:	1029883a 	mov	r20,r2
   45940:	1823883a 	mov	r17,r3
   45944:	004e4d40 	call	4e4d4 <__fixdfsi>
   45948:	000d883a 	mov	r6,zero
   4594c:	000f883a 	mov	r7,zero
   45950:	a009883a 	mov	r4,r20
   45954:	880b883a 	mov	r5,r17
   45958:	d8800515 	stw	r2,20(sp)
   4595c:	004dae40 	call	4dae4 <__ledf2>
   45960:	10028716 	blt	r2,zero,46380 <_dtoa_r+0xc88>
   45964:	d8c00517 	ldw	r3,20(sp)
   45968:	00800584 	movi	r2,22
   4596c:	10c27536 	bltu	r2,r3,46344 <_dtoa_r+0xc4c>
   45970:	180490fa 	slli	r2,r3,3
   45974:	00c00174 	movhi	r3,5
   45978:	18c45304 	addi	r3,r3,4428
   4597c:	1885883a 	add	r2,r3,r2
   45980:	11000017 	ldw	r4,0(r2)
   45984:	11400117 	ldw	r5,4(r2)
   45988:	900d883a 	mov	r6,r18
   4598c:	980f883a 	mov	r7,r19
   45990:	004da080 	call	4da08 <__gedf2>
   45994:	00828d0e 	bge	zero,r2,463cc <_dtoa_r+0xcd4>
   45998:	d9000517 	ldw	r4,20(sp)
   4599c:	d8000e15 	stw	zero,56(sp)
   459a0:	213fffc4 	addi	r4,r4,-1
   459a4:	d9000515 	stw	r4,20(sp)
   459a8:	b42dc83a 	sub	r22,r22,r16
   459ac:	b5bfffc4 	addi	r22,r22,-1
   459b0:	b0026f16 	blt	r22,zero,46370 <_dtoa_r+0xc78>
   459b4:	d8000815 	stw	zero,32(sp)
   459b8:	d9c00517 	ldw	r7,20(sp)
   459bc:	38026416 	blt	r7,zero,46350 <_dtoa_r+0xc58>
   459c0:	b1ed883a 	add	r22,r22,r7
   459c4:	d9c00d15 	stw	r7,52(sp)
   459c8:	d8000a15 	stw	zero,40(sp)
   459cc:	d9800317 	ldw	r6,12(sp)
   459d0:	00800244 	movi	r2,9
   459d4:	11811436 	bltu	r2,r6,45e28 <_dtoa_r+0x730>
   459d8:	00800144 	movi	r2,5
   459dc:	1184e10e 	bge	r2,r6,46d64 <_dtoa_r+0x166c>
   459e0:	31bfff04 	addi	r6,r6,-4
   459e4:	d9800315 	stw	r6,12(sp)
   459e8:	0023883a 	mov	r17,zero
   459ec:	d9800317 	ldw	r6,12(sp)
   459f0:	008000c4 	movi	r2,3
   459f4:	30836726 	beq	r6,r2,46794 <_dtoa_r+0x109c>
   459f8:	1183410e 	bge	r2,r6,46700 <_dtoa_r+0x1008>
   459fc:	d9c00317 	ldw	r7,12(sp)
   45a00:	00800104 	movi	r2,4
   45a04:	38827c26 	beq	r7,r2,463f8 <_dtoa_r+0xd00>
   45a08:	00800144 	movi	r2,5
   45a0c:	3884c41e 	bne	r7,r2,46d20 <_dtoa_r+0x1628>
   45a10:	00800044 	movi	r2,1
   45a14:	d8800b15 	stw	r2,44(sp)
   45a18:	d8c00517 	ldw	r3,20(sp)
   45a1c:	d9002217 	ldw	r4,136(sp)
   45a20:	1907883a 	add	r3,r3,r4
   45a24:	19800044 	addi	r6,r3,1
   45a28:	d8c00c15 	stw	r3,48(sp)
   45a2c:	d9800615 	stw	r6,24(sp)
   45a30:	0183a40e 	bge	zero,r6,468c4 <_dtoa_r+0x11cc>
   45a34:	d9800617 	ldw	r6,24(sp)
   45a38:	3021883a 	mov	r16,r6
   45a3c:	e0001115 	stw	zero,68(fp)
   45a40:	008005c4 	movi	r2,23
   45a44:	1184c92e 	bgeu	r2,r6,46d6c <_dtoa_r+0x1674>
   45a48:	00c00044 	movi	r3,1
   45a4c:	00800104 	movi	r2,4
   45a50:	1085883a 	add	r2,r2,r2
   45a54:	11000504 	addi	r4,r2,20
   45a58:	180b883a 	mov	r5,r3
   45a5c:	18c00044 	addi	r3,r3,1
   45a60:	313ffb2e 	bgeu	r6,r4,45a50 <__alt_data_end+0xfffc5a50>
   45a64:	e1401115 	stw	r5,68(fp)
   45a68:	e009883a 	mov	r4,fp
   45a6c:	004877c0 	call	4877c <_Balloc>
   45a70:	d8800715 	stw	r2,28(sp)
   45a74:	e0801015 	stw	r2,64(fp)
   45a78:	00800384 	movi	r2,14
   45a7c:	1400f736 	bltu	r2,r16,45e5c <_dtoa_r+0x764>
   45a80:	8800f626 	beq	r17,zero,45e5c <_dtoa_r+0x764>
   45a84:	d9c00517 	ldw	r7,20(sp)
   45a88:	01c39a0e 	bge	zero,r7,468f4 <_dtoa_r+0x11fc>
   45a8c:	388003cc 	andi	r2,r7,15
   45a90:	100490fa 	slli	r2,r2,3
   45a94:	382bd13a 	srai	r21,r7,4
   45a98:	00c00174 	movhi	r3,5
   45a9c:	18c45304 	addi	r3,r3,4428
   45aa0:	1885883a 	add	r2,r3,r2
   45aa4:	a8c0040c 	andi	r3,r21,16
   45aa8:	12400017 	ldw	r9,0(r2)
   45aac:	12000117 	ldw	r8,4(r2)
   45ab0:	18037926 	beq	r3,zero,46898 <_dtoa_r+0x11a0>
   45ab4:	00800174 	movhi	r2,5
   45ab8:	10844904 	addi	r2,r2,4388
   45abc:	11800817 	ldw	r6,32(r2)
   45ac0:	11c00917 	ldw	r7,36(r2)
   45ac4:	9009883a 	mov	r4,r18
   45ac8:	980b883a 	mov	r5,r19
   45acc:	da001715 	stw	r8,92(sp)
   45ad0:	da401615 	stw	r9,88(sp)
   45ad4:	004d0980 	call	4d098 <__divdf3>
   45ad8:	da001717 	ldw	r8,92(sp)
   45adc:	da401617 	ldw	r9,88(sp)
   45ae0:	ad4003cc 	andi	r21,r21,15
   45ae4:	040000c4 	movi	r16,3
   45ae8:	1023883a 	mov	r17,r2
   45aec:	1829883a 	mov	r20,r3
   45af0:	a8001126 	beq	r21,zero,45b38 <_dtoa_r+0x440>
   45af4:	05c00174 	movhi	r23,5
   45af8:	bdc44904 	addi	r23,r23,4388
   45afc:	4805883a 	mov	r2,r9
   45b00:	4007883a 	mov	r3,r8
   45b04:	a980004c 	andi	r6,r21,1
   45b08:	1009883a 	mov	r4,r2
   45b0c:	a82bd07a 	srai	r21,r21,1
   45b10:	180b883a 	mov	r5,r3
   45b14:	30000426 	beq	r6,zero,45b28 <_dtoa_r+0x430>
   45b18:	b9800017 	ldw	r6,0(r23)
   45b1c:	b9c00117 	ldw	r7,4(r23)
   45b20:	84000044 	addi	r16,r16,1
   45b24:	00426340 	call	42634 <__muldf3>
   45b28:	bdc00204 	addi	r23,r23,8
   45b2c:	a83ff51e 	bne	r21,zero,45b04 <__alt_data_end+0xfffc5b04>
   45b30:	1013883a 	mov	r9,r2
   45b34:	1811883a 	mov	r8,r3
   45b38:	480d883a 	mov	r6,r9
   45b3c:	400f883a 	mov	r7,r8
   45b40:	8809883a 	mov	r4,r17
   45b44:	a00b883a 	mov	r5,r20
   45b48:	004d0980 	call	4d098 <__divdf3>
   45b4c:	d8800f15 	stw	r2,60(sp)
   45b50:	d8c01015 	stw	r3,64(sp)
   45b54:	d8c00e17 	ldw	r3,56(sp)
   45b58:	18000626 	beq	r3,zero,45b74 <_dtoa_r+0x47c>
   45b5c:	d9000f17 	ldw	r4,60(sp)
   45b60:	d9401017 	ldw	r5,64(sp)
   45b64:	000d883a 	mov	r6,zero
   45b68:	01cffc34 	movhi	r7,16368
   45b6c:	004dae40 	call	4dae4 <__ledf2>
   45b70:	10040b16 	blt	r2,zero,46ba0 <_dtoa_r+0x14a8>
   45b74:	8009883a 	mov	r4,r16
   45b78:	004e5540 	call	4e554 <__floatsidf>
   45b7c:	d9800f17 	ldw	r6,60(sp)
   45b80:	d9c01017 	ldw	r7,64(sp)
   45b84:	1009883a 	mov	r4,r2
   45b88:	180b883a 	mov	r5,r3
   45b8c:	00426340 	call	42634 <__muldf3>
   45b90:	000d883a 	mov	r6,zero
   45b94:	01d00734 	movhi	r7,16412
   45b98:	1009883a 	mov	r4,r2
   45b9c:	180b883a 	mov	r5,r3
   45ba0:	0041d880 	call	41d88 <__adddf3>
   45ba4:	1021883a 	mov	r16,r2
   45ba8:	d8800617 	ldw	r2,24(sp)
   45bac:	047f3034 	movhi	r17,64704
   45bb0:	1c63883a 	add	r17,r3,r17
   45bb4:	10031826 	beq	r2,zero,46818 <_dtoa_r+0x1120>
   45bb8:	d8c00517 	ldw	r3,20(sp)
   45bbc:	db000617 	ldw	r12,24(sp)
   45bc0:	d8c01315 	stw	r3,76(sp)
   45bc4:	d9000b17 	ldw	r4,44(sp)
   45bc8:	20038f26 	beq	r4,zero,46a08 <_dtoa_r+0x1310>
   45bcc:	60bfffc4 	addi	r2,r12,-1
   45bd0:	100490fa 	slli	r2,r2,3
   45bd4:	00c00174 	movhi	r3,5
   45bd8:	18c45304 	addi	r3,r3,4428
   45bdc:	1885883a 	add	r2,r3,r2
   45be0:	11800017 	ldw	r6,0(r2)
   45be4:	11c00117 	ldw	r7,4(r2)
   45be8:	d8800717 	ldw	r2,28(sp)
   45bec:	0009883a 	mov	r4,zero
   45bf0:	014ff834 	movhi	r5,16352
   45bf4:	db001615 	stw	r12,88(sp)
   45bf8:	15c00044 	addi	r23,r2,1
   45bfc:	004d0980 	call	4d098 <__divdf3>
   45c00:	800d883a 	mov	r6,r16
   45c04:	880f883a 	mov	r7,r17
   45c08:	1009883a 	mov	r4,r2
   45c0c:	180b883a 	mov	r5,r3
   45c10:	004dbd80 	call	4dbd8 <__subdf3>
   45c14:	d9401017 	ldw	r5,64(sp)
   45c18:	d9000f17 	ldw	r4,60(sp)
   45c1c:	102b883a 	mov	r21,r2
   45c20:	d8c01215 	stw	r3,72(sp)
   45c24:	004e4d40 	call	4e4d4 <__fixdfsi>
   45c28:	1009883a 	mov	r4,r2
   45c2c:	1029883a 	mov	r20,r2
   45c30:	004e5540 	call	4e554 <__floatsidf>
   45c34:	d9000f17 	ldw	r4,60(sp)
   45c38:	d9401017 	ldw	r5,64(sp)
   45c3c:	100d883a 	mov	r6,r2
   45c40:	180f883a 	mov	r7,r3
   45c44:	004dbd80 	call	4dbd8 <__subdf3>
   45c48:	1823883a 	mov	r17,r3
   45c4c:	d8c00717 	ldw	r3,28(sp)
   45c50:	d9401217 	ldw	r5,72(sp)
   45c54:	a2000c04 	addi	r8,r20,48
   45c58:	1021883a 	mov	r16,r2
   45c5c:	1a000005 	stb	r8,0(r3)
   45c60:	800d883a 	mov	r6,r16
   45c64:	880f883a 	mov	r7,r17
   45c68:	a809883a 	mov	r4,r21
   45c6c:	4029883a 	mov	r20,r8
   45c70:	004da080 	call	4da08 <__gedf2>
   45c74:	00841d16 	blt	zero,r2,46cec <_dtoa_r+0x15f4>
   45c78:	800d883a 	mov	r6,r16
   45c7c:	880f883a 	mov	r7,r17
   45c80:	0009883a 	mov	r4,zero
   45c84:	014ffc34 	movhi	r5,16368
   45c88:	004dbd80 	call	4dbd8 <__subdf3>
   45c8c:	d9401217 	ldw	r5,72(sp)
   45c90:	100d883a 	mov	r6,r2
   45c94:	180f883a 	mov	r7,r3
   45c98:	a809883a 	mov	r4,r21
   45c9c:	004da080 	call	4da08 <__gedf2>
   45ca0:	db001617 	ldw	r12,88(sp)
   45ca4:	00840e16 	blt	zero,r2,46ce0 <_dtoa_r+0x15e8>
   45ca8:	00800044 	movi	r2,1
   45cac:	13006b0e 	bge	r2,r12,45e5c <_dtoa_r+0x764>
   45cb0:	d9000717 	ldw	r4,28(sp)
   45cb4:	dd800f15 	stw	r22,60(sp)
   45cb8:	dcc01015 	stw	r19,64(sp)
   45cbc:	2319883a 	add	r12,r4,r12
   45cc0:	dcc01217 	ldw	r19,72(sp)
   45cc4:	602d883a 	mov	r22,r12
   45cc8:	dc801215 	stw	r18,72(sp)
   45ccc:	b825883a 	mov	r18,r23
   45cd0:	00000906 	br	45cf8 <_dtoa_r+0x600>
   45cd4:	004dbd80 	call	4dbd8 <__subdf3>
   45cd8:	a80d883a 	mov	r6,r21
   45cdc:	980f883a 	mov	r7,r19
   45ce0:	1009883a 	mov	r4,r2
   45ce4:	180b883a 	mov	r5,r3
   45ce8:	004dae40 	call	4dae4 <__ledf2>
   45cec:	1003e816 	blt	r2,zero,46c90 <_dtoa_r+0x1598>
   45cf0:	b825883a 	mov	r18,r23
   45cf4:	bd83e926 	beq	r23,r22,46c9c <_dtoa_r+0x15a4>
   45cf8:	a809883a 	mov	r4,r21
   45cfc:	980b883a 	mov	r5,r19
   45d00:	000d883a 	mov	r6,zero
   45d04:	01d00934 	movhi	r7,16420
   45d08:	00426340 	call	42634 <__muldf3>
   45d0c:	000d883a 	mov	r6,zero
   45d10:	01d00934 	movhi	r7,16420
   45d14:	8009883a 	mov	r4,r16
   45d18:	880b883a 	mov	r5,r17
   45d1c:	102b883a 	mov	r21,r2
   45d20:	1827883a 	mov	r19,r3
   45d24:	00426340 	call	42634 <__muldf3>
   45d28:	180b883a 	mov	r5,r3
   45d2c:	1009883a 	mov	r4,r2
   45d30:	1821883a 	mov	r16,r3
   45d34:	1023883a 	mov	r17,r2
   45d38:	004e4d40 	call	4e4d4 <__fixdfsi>
   45d3c:	1009883a 	mov	r4,r2
   45d40:	1029883a 	mov	r20,r2
   45d44:	004e5540 	call	4e554 <__floatsidf>
   45d48:	8809883a 	mov	r4,r17
   45d4c:	800b883a 	mov	r5,r16
   45d50:	100d883a 	mov	r6,r2
   45d54:	180f883a 	mov	r7,r3
   45d58:	004dbd80 	call	4dbd8 <__subdf3>
   45d5c:	a5000c04 	addi	r20,r20,48
   45d60:	a80d883a 	mov	r6,r21
   45d64:	980f883a 	mov	r7,r19
   45d68:	1009883a 	mov	r4,r2
   45d6c:	180b883a 	mov	r5,r3
   45d70:	95000005 	stb	r20,0(r18)
   45d74:	1021883a 	mov	r16,r2
   45d78:	1823883a 	mov	r17,r3
   45d7c:	004dae40 	call	4dae4 <__ledf2>
   45d80:	bdc00044 	addi	r23,r23,1
   45d84:	800d883a 	mov	r6,r16
   45d88:	880f883a 	mov	r7,r17
   45d8c:	0009883a 	mov	r4,zero
   45d90:	014ffc34 	movhi	r5,16368
   45d94:	103fcf0e 	bge	r2,zero,45cd4 <__alt_data_end+0xfffc5cd4>
   45d98:	d8c01317 	ldw	r3,76(sp)
   45d9c:	d8c00515 	stw	r3,20(sp)
   45da0:	d9400917 	ldw	r5,36(sp)
   45da4:	e009883a 	mov	r4,fp
   45da8:	00488240 	call	48824 <_Bfree>
   45dac:	d9000517 	ldw	r4,20(sp)
   45db0:	d9802317 	ldw	r6,140(sp)
   45db4:	d9c02517 	ldw	r7,148(sp)
   45db8:	b8000005 	stb	zero,0(r23)
   45dbc:	20800044 	addi	r2,r4,1
   45dc0:	30800015 	stw	r2,0(r6)
   45dc4:	3802aa26 	beq	r7,zero,46870 <_dtoa_r+0x1178>
   45dc8:	3dc00015 	stw	r23,0(r7)
   45dcc:	d8800717 	ldw	r2,28(sp)
   45dd0:	003e7906 	br	457b8 <__alt_data_end+0xfffc57b8>
   45dd4:	00800434 	movhi	r2,16
   45dd8:	10bfffc4 	addi	r2,r2,-1
   45ddc:	88a2703a 	and	r17,r17,r2
   45de0:	883e851e 	bne	r17,zero,457f8 <__alt_data_end+0xfffc57f8>
   45de4:	00800174 	movhi	r2,5
   45de8:	10843404 	addi	r2,r2,4304
   45dec:	003e8406 	br	45800 <__alt_data_end+0xfffc5800>
   45df0:	10c00204 	addi	r3,r2,8
   45df4:	003e8706 	br	45814 <__alt_data_end+0xfffc5814>
   45df8:	01400434 	movhi	r5,16
   45dfc:	297fffc4 	addi	r5,r5,-1
   45e00:	994a703a 	and	r5,r19,r5
   45e04:	9009883a 	mov	r4,r18
   45e08:	843f0044 	addi	r16,r16,-1023
   45e0c:	294ffc34 	orhi	r5,r5,16368
   45e10:	dd800217 	ldw	r22,8(sp)
   45e14:	d8001115 	stw	zero,68(sp)
   45e18:	003ea506 	br	458b0 <__alt_data_end+0xfffc58b0>
   45e1c:	00800174 	movhi	r2,5
   45e20:	10842b04 	addi	r2,r2,4268
   45e24:	003e6406 	br	457b8 <__alt_data_end+0xfffc57b8>
   45e28:	e0001115 	stw	zero,68(fp)
   45e2c:	000b883a 	mov	r5,zero
   45e30:	e009883a 	mov	r4,fp
   45e34:	004877c0 	call	4877c <_Balloc>
   45e38:	01bfffc4 	movi	r6,-1
   45e3c:	01c00044 	movi	r7,1
   45e40:	d8800715 	stw	r2,28(sp)
   45e44:	d9800c15 	stw	r6,48(sp)
   45e48:	e0801015 	stw	r2,64(fp)
   45e4c:	d8000315 	stw	zero,12(sp)
   45e50:	d9c00b15 	stw	r7,44(sp)
   45e54:	d9800615 	stw	r6,24(sp)
   45e58:	d8002215 	stw	zero,136(sp)
   45e5c:	d8800117 	ldw	r2,4(sp)
   45e60:	10008916 	blt	r2,zero,46088 <_dtoa_r+0x990>
   45e64:	d9000517 	ldw	r4,20(sp)
   45e68:	00c00384 	movi	r3,14
   45e6c:	19008616 	blt	r3,r4,46088 <_dtoa_r+0x990>
   45e70:	200490fa 	slli	r2,r4,3
   45e74:	00c00174 	movhi	r3,5
   45e78:	d9802217 	ldw	r6,136(sp)
   45e7c:	18c45304 	addi	r3,r3,4428
   45e80:	1885883a 	add	r2,r3,r2
   45e84:	14000017 	ldw	r16,0(r2)
   45e88:	14400117 	ldw	r17,4(r2)
   45e8c:	30016316 	blt	r6,zero,4641c <_dtoa_r+0xd24>
   45e90:	800d883a 	mov	r6,r16
   45e94:	880f883a 	mov	r7,r17
   45e98:	9009883a 	mov	r4,r18
   45e9c:	980b883a 	mov	r5,r19
   45ea0:	004d0980 	call	4d098 <__divdf3>
   45ea4:	180b883a 	mov	r5,r3
   45ea8:	1009883a 	mov	r4,r2
   45eac:	004e4d40 	call	4e4d4 <__fixdfsi>
   45eb0:	1009883a 	mov	r4,r2
   45eb4:	102b883a 	mov	r21,r2
   45eb8:	004e5540 	call	4e554 <__floatsidf>
   45ebc:	800d883a 	mov	r6,r16
   45ec0:	880f883a 	mov	r7,r17
   45ec4:	1009883a 	mov	r4,r2
   45ec8:	180b883a 	mov	r5,r3
   45ecc:	00426340 	call	42634 <__muldf3>
   45ed0:	100d883a 	mov	r6,r2
   45ed4:	180f883a 	mov	r7,r3
   45ed8:	9009883a 	mov	r4,r18
   45edc:	980b883a 	mov	r5,r19
   45ee0:	004dbd80 	call	4dbd8 <__subdf3>
   45ee4:	d9c00717 	ldw	r7,28(sp)
   45ee8:	1009883a 	mov	r4,r2
   45eec:	a8800c04 	addi	r2,r21,48
   45ef0:	38800005 	stb	r2,0(r7)
   45ef4:	3dc00044 	addi	r23,r7,1
   45ef8:	d9c00617 	ldw	r7,24(sp)
   45efc:	01800044 	movi	r6,1
   45f00:	180b883a 	mov	r5,r3
   45f04:	2005883a 	mov	r2,r4
   45f08:	39803826 	beq	r7,r6,45fec <_dtoa_r+0x8f4>
   45f0c:	000d883a 	mov	r6,zero
   45f10:	01d00934 	movhi	r7,16420
   45f14:	00426340 	call	42634 <__muldf3>
   45f18:	000d883a 	mov	r6,zero
   45f1c:	000f883a 	mov	r7,zero
   45f20:	1009883a 	mov	r4,r2
   45f24:	180b883a 	mov	r5,r3
   45f28:	1025883a 	mov	r18,r2
   45f2c:	1827883a 	mov	r19,r3
   45f30:	004d9800 	call	4d980 <__eqdf2>
   45f34:	103f9a26 	beq	r2,zero,45da0 <__alt_data_end+0xfffc5da0>
   45f38:	d9c00617 	ldw	r7,24(sp)
   45f3c:	d8c00717 	ldw	r3,28(sp)
   45f40:	b829883a 	mov	r20,r23
   45f44:	38bfffc4 	addi	r2,r7,-1
   45f48:	18ad883a 	add	r22,r3,r2
   45f4c:	00000a06 	br	45f78 <_dtoa_r+0x880>
   45f50:	00426340 	call	42634 <__muldf3>
   45f54:	000d883a 	mov	r6,zero
   45f58:	000f883a 	mov	r7,zero
   45f5c:	1009883a 	mov	r4,r2
   45f60:	180b883a 	mov	r5,r3
   45f64:	1025883a 	mov	r18,r2
   45f68:	1827883a 	mov	r19,r3
   45f6c:	b829883a 	mov	r20,r23
   45f70:	004d9800 	call	4d980 <__eqdf2>
   45f74:	103f8a26 	beq	r2,zero,45da0 <__alt_data_end+0xfffc5da0>
   45f78:	800d883a 	mov	r6,r16
   45f7c:	880f883a 	mov	r7,r17
   45f80:	9009883a 	mov	r4,r18
   45f84:	980b883a 	mov	r5,r19
   45f88:	004d0980 	call	4d098 <__divdf3>
   45f8c:	180b883a 	mov	r5,r3
   45f90:	1009883a 	mov	r4,r2
   45f94:	004e4d40 	call	4e4d4 <__fixdfsi>
   45f98:	1009883a 	mov	r4,r2
   45f9c:	102b883a 	mov	r21,r2
   45fa0:	004e5540 	call	4e554 <__floatsidf>
   45fa4:	800d883a 	mov	r6,r16
   45fa8:	880f883a 	mov	r7,r17
   45fac:	1009883a 	mov	r4,r2
   45fb0:	180b883a 	mov	r5,r3
   45fb4:	00426340 	call	42634 <__muldf3>
   45fb8:	100d883a 	mov	r6,r2
   45fbc:	180f883a 	mov	r7,r3
   45fc0:	9009883a 	mov	r4,r18
   45fc4:	980b883a 	mov	r5,r19
   45fc8:	004dbd80 	call	4dbd8 <__subdf3>
   45fcc:	aa000c04 	addi	r8,r21,48
   45fd0:	a2000005 	stb	r8,0(r20)
   45fd4:	000d883a 	mov	r6,zero
   45fd8:	01d00934 	movhi	r7,16420
   45fdc:	1009883a 	mov	r4,r2
   45fe0:	180b883a 	mov	r5,r3
   45fe4:	a5c00044 	addi	r23,r20,1
   45fe8:	b53fd91e 	bne	r22,r20,45f50 <__alt_data_end+0xfffc5f50>
   45fec:	100d883a 	mov	r6,r2
   45ff0:	180f883a 	mov	r7,r3
   45ff4:	1009883a 	mov	r4,r2
   45ff8:	180b883a 	mov	r5,r3
   45ffc:	0041d880 	call	41d88 <__adddf3>
   46000:	100d883a 	mov	r6,r2
   46004:	180f883a 	mov	r7,r3
   46008:	8009883a 	mov	r4,r16
   4600c:	880b883a 	mov	r5,r17
   46010:	1027883a 	mov	r19,r2
   46014:	1825883a 	mov	r18,r3
   46018:	004dae40 	call	4dae4 <__ledf2>
   4601c:	10000816 	blt	r2,zero,46040 <_dtoa_r+0x948>
   46020:	980d883a 	mov	r6,r19
   46024:	900f883a 	mov	r7,r18
   46028:	8009883a 	mov	r4,r16
   4602c:	880b883a 	mov	r5,r17
   46030:	004d9800 	call	4d980 <__eqdf2>
   46034:	103f5a1e 	bne	r2,zero,45da0 <__alt_data_end+0xfffc5da0>
   46038:	ad40004c 	andi	r21,r21,1
   4603c:	a83f5826 	beq	r21,zero,45da0 <__alt_data_end+0xfffc5da0>
   46040:	bd3fffc3 	ldbu	r20,-1(r23)
   46044:	b8bfffc4 	addi	r2,r23,-1
   46048:	1007883a 	mov	r3,r2
   4604c:	01400e44 	movi	r5,57
   46050:	d9800717 	ldw	r6,28(sp)
   46054:	00000506 	br	4606c <_dtoa_r+0x974>
   46058:	18ffffc4 	addi	r3,r3,-1
   4605c:	11824726 	beq	r2,r6,4697c <_dtoa_r+0x1284>
   46060:	1d000003 	ldbu	r20,0(r3)
   46064:	102f883a 	mov	r23,r2
   46068:	10bfffc4 	addi	r2,r2,-1
   4606c:	a1003fcc 	andi	r4,r20,255
   46070:	2100201c 	xori	r4,r4,128
   46074:	213fe004 	addi	r4,r4,-128
   46078:	217ff726 	beq	r4,r5,46058 <__alt_data_end+0xfffc6058>
   4607c:	a2000044 	addi	r8,r20,1
   46080:	12000005 	stb	r8,0(r2)
   46084:	003f4606 	br	45da0 <__alt_data_end+0xfffc5da0>
   46088:	d9000b17 	ldw	r4,44(sp)
   4608c:	2000c826 	beq	r4,zero,463b0 <_dtoa_r+0xcb8>
   46090:	d9800317 	ldw	r6,12(sp)
   46094:	00c00044 	movi	r3,1
   46098:	1980f90e 	bge	r3,r6,46480 <_dtoa_r+0xd88>
   4609c:	d8800617 	ldw	r2,24(sp)
   460a0:	d8c00a17 	ldw	r3,40(sp)
   460a4:	157fffc4 	addi	r21,r2,-1
   460a8:	1d41f316 	blt	r3,r21,46878 <_dtoa_r+0x1180>
   460ac:	1d6bc83a 	sub	r21,r3,r21
   460b0:	d9c00617 	ldw	r7,24(sp)
   460b4:	3802aa16 	blt	r7,zero,46b60 <_dtoa_r+0x1468>
   460b8:	dd000817 	ldw	r20,32(sp)
   460bc:	d8800617 	ldw	r2,24(sp)
   460c0:	d8c00817 	ldw	r3,32(sp)
   460c4:	01400044 	movi	r5,1
   460c8:	e009883a 	mov	r4,fp
   460cc:	1887883a 	add	r3,r3,r2
   460d0:	d8c00815 	stw	r3,32(sp)
   460d4:	b0ad883a 	add	r22,r22,r2
   460d8:	0048b880 	call	48b88 <__i2b>
   460dc:	1023883a 	mov	r17,r2
   460e0:	a0000826 	beq	r20,zero,46104 <_dtoa_r+0xa0c>
   460e4:	0580070e 	bge	zero,r22,46104 <_dtoa_r+0xa0c>
   460e8:	a005883a 	mov	r2,r20
   460ec:	b500b916 	blt	r22,r20,463d4 <_dtoa_r+0xcdc>
   460f0:	d9000817 	ldw	r4,32(sp)
   460f4:	a0a9c83a 	sub	r20,r20,r2
   460f8:	b0adc83a 	sub	r22,r22,r2
   460fc:	2089c83a 	sub	r4,r4,r2
   46100:	d9000815 	stw	r4,32(sp)
   46104:	d9800a17 	ldw	r6,40(sp)
   46108:	0181810e 	bge	zero,r6,46710 <_dtoa_r+0x1018>
   4610c:	d9c00b17 	ldw	r7,44(sp)
   46110:	3800b326 	beq	r7,zero,463e0 <_dtoa_r+0xce8>
   46114:	a800b226 	beq	r21,zero,463e0 <_dtoa_r+0xce8>
   46118:	880b883a 	mov	r5,r17
   4611c:	a80d883a 	mov	r6,r21
   46120:	e009883a 	mov	r4,fp
   46124:	0048dbc0 	call	48dbc <__pow5mult>
   46128:	d9800917 	ldw	r6,36(sp)
   4612c:	100b883a 	mov	r5,r2
   46130:	e009883a 	mov	r4,fp
   46134:	1023883a 	mov	r17,r2
   46138:	0048bc40 	call	48bc4 <__multiply>
   4613c:	1021883a 	mov	r16,r2
   46140:	d8800a17 	ldw	r2,40(sp)
   46144:	d9400917 	ldw	r5,36(sp)
   46148:	e009883a 	mov	r4,fp
   4614c:	1545c83a 	sub	r2,r2,r21
   46150:	d8800a15 	stw	r2,40(sp)
   46154:	00488240 	call	48824 <_Bfree>
   46158:	d8c00a17 	ldw	r3,40(sp)
   4615c:	18009f1e 	bne	r3,zero,463dc <_dtoa_r+0xce4>
   46160:	05c00044 	movi	r23,1
   46164:	e009883a 	mov	r4,fp
   46168:	b80b883a 	mov	r5,r23
   4616c:	0048b880 	call	48b88 <__i2b>
   46170:	d9000d17 	ldw	r4,52(sp)
   46174:	102b883a 	mov	r21,r2
   46178:	2000ce26 	beq	r4,zero,464b4 <_dtoa_r+0xdbc>
   4617c:	200d883a 	mov	r6,r4
   46180:	100b883a 	mov	r5,r2
   46184:	e009883a 	mov	r4,fp
   46188:	0048dbc0 	call	48dbc <__pow5mult>
   4618c:	d9800317 	ldw	r6,12(sp)
   46190:	102b883a 	mov	r21,r2
   46194:	b981810e 	bge	r23,r6,4679c <_dtoa_r+0x10a4>
   46198:	0027883a 	mov	r19,zero
   4619c:	a8800417 	ldw	r2,16(r21)
   461a0:	05c00804 	movi	r23,32
   461a4:	10800104 	addi	r2,r2,4
   461a8:	1085883a 	add	r2,r2,r2
   461ac:	1085883a 	add	r2,r2,r2
   461b0:	a885883a 	add	r2,r21,r2
   461b4:	11000017 	ldw	r4,0(r2)
   461b8:	0048a700 	call	48a70 <__hi0bits>
   461bc:	b885c83a 	sub	r2,r23,r2
   461c0:	1585883a 	add	r2,r2,r22
   461c4:	108007cc 	andi	r2,r2,31
   461c8:	1000b326 	beq	r2,zero,46498 <_dtoa_r+0xda0>
   461cc:	00c00804 	movi	r3,32
   461d0:	1887c83a 	sub	r3,r3,r2
   461d4:	01000104 	movi	r4,4
   461d8:	20c2cd0e 	bge	r4,r3,46d10 <_dtoa_r+0x1618>
   461dc:	00c00704 	movi	r3,28
   461e0:	1885c83a 	sub	r2,r3,r2
   461e4:	d8c00817 	ldw	r3,32(sp)
   461e8:	a0a9883a 	add	r20,r20,r2
   461ec:	b0ad883a 	add	r22,r22,r2
   461f0:	1887883a 	add	r3,r3,r2
   461f4:	d8c00815 	stw	r3,32(sp)
   461f8:	d9800817 	ldw	r6,32(sp)
   461fc:	0180040e 	bge	zero,r6,46210 <_dtoa_r+0xb18>
   46200:	800b883a 	mov	r5,r16
   46204:	e009883a 	mov	r4,fp
   46208:	0048efc0 	call	48efc <__lshift>
   4620c:	1021883a 	mov	r16,r2
   46210:	0580050e 	bge	zero,r22,46228 <_dtoa_r+0xb30>
   46214:	a80b883a 	mov	r5,r21
   46218:	b00d883a 	mov	r6,r22
   4621c:	e009883a 	mov	r4,fp
   46220:	0048efc0 	call	48efc <__lshift>
   46224:	102b883a 	mov	r21,r2
   46228:	d9c00e17 	ldw	r7,56(sp)
   4622c:	3801211e 	bne	r7,zero,466b4 <_dtoa_r+0xfbc>
   46230:	d9800617 	ldw	r6,24(sp)
   46234:	0181380e 	bge	zero,r6,46718 <_dtoa_r+0x1020>
   46238:	d8c00b17 	ldw	r3,44(sp)
   4623c:	1800ab1e 	bne	r3,zero,464ec <_dtoa_r+0xdf4>
   46240:	dc800717 	ldw	r18,28(sp)
   46244:	dcc00617 	ldw	r19,24(sp)
   46248:	9029883a 	mov	r20,r18
   4624c:	00000206 	br	46258 <_dtoa_r+0xb60>
   46250:	004884c0 	call	4884c <__multadd>
   46254:	1021883a 	mov	r16,r2
   46258:	a80b883a 	mov	r5,r21
   4625c:	8009883a 	mov	r4,r16
   46260:	00454f80 	call	454f8 <quorem>
   46264:	10800c04 	addi	r2,r2,48
   46268:	90800005 	stb	r2,0(r18)
   4626c:	94800044 	addi	r18,r18,1
   46270:	9507c83a 	sub	r3,r18,r20
   46274:	000f883a 	mov	r7,zero
   46278:	01800284 	movi	r6,10
   4627c:	800b883a 	mov	r5,r16
   46280:	e009883a 	mov	r4,fp
   46284:	1cfff216 	blt	r3,r19,46250 <__alt_data_end+0xfffc6250>
   46288:	1011883a 	mov	r8,r2
   4628c:	d8800617 	ldw	r2,24(sp)
   46290:	0082370e 	bge	zero,r2,46b70 <_dtoa_r+0x1478>
   46294:	d9000717 	ldw	r4,28(sp)
   46298:	0025883a 	mov	r18,zero
   4629c:	20af883a 	add	r23,r4,r2
   462a0:	01800044 	movi	r6,1
   462a4:	800b883a 	mov	r5,r16
   462a8:	e009883a 	mov	r4,fp
   462ac:	da001715 	stw	r8,92(sp)
   462b0:	0048efc0 	call	48efc <__lshift>
   462b4:	a80b883a 	mov	r5,r21
   462b8:	1009883a 	mov	r4,r2
   462bc:	d8800915 	stw	r2,36(sp)
   462c0:	00490440 	call	49044 <__mcmp>
   462c4:	da001717 	ldw	r8,92(sp)
   462c8:	0081800e 	bge	zero,r2,468cc <_dtoa_r+0x11d4>
   462cc:	b93fffc3 	ldbu	r4,-1(r23)
   462d0:	b8bfffc4 	addi	r2,r23,-1
   462d4:	1007883a 	mov	r3,r2
   462d8:	01800e44 	movi	r6,57
   462dc:	d9c00717 	ldw	r7,28(sp)
   462e0:	00000506 	br	462f8 <_dtoa_r+0xc00>
   462e4:	18ffffc4 	addi	r3,r3,-1
   462e8:	11c12326 	beq	r2,r7,46778 <_dtoa_r+0x1080>
   462ec:	19000003 	ldbu	r4,0(r3)
   462f0:	102f883a 	mov	r23,r2
   462f4:	10bfffc4 	addi	r2,r2,-1
   462f8:	21403fcc 	andi	r5,r4,255
   462fc:	2940201c 	xori	r5,r5,128
   46300:	297fe004 	addi	r5,r5,-128
   46304:	29bff726 	beq	r5,r6,462e4 <__alt_data_end+0xfffc62e4>
   46308:	21000044 	addi	r4,r4,1
   4630c:	11000005 	stb	r4,0(r2)
   46310:	a80b883a 	mov	r5,r21
   46314:	e009883a 	mov	r4,fp
   46318:	00488240 	call	48824 <_Bfree>
   4631c:	883ea026 	beq	r17,zero,45da0 <__alt_data_end+0xfffc5da0>
   46320:	90000426 	beq	r18,zero,46334 <_dtoa_r+0xc3c>
   46324:	94400326 	beq	r18,r17,46334 <_dtoa_r+0xc3c>
   46328:	900b883a 	mov	r5,r18
   4632c:	e009883a 	mov	r4,fp
   46330:	00488240 	call	48824 <_Bfree>
   46334:	880b883a 	mov	r5,r17
   46338:	e009883a 	mov	r4,fp
   4633c:	00488240 	call	48824 <_Bfree>
   46340:	003e9706 	br	45da0 <__alt_data_end+0xfffc5da0>
   46344:	01800044 	movi	r6,1
   46348:	d9800e15 	stw	r6,56(sp)
   4634c:	003d9606 	br	459a8 <__alt_data_end+0xfffc59a8>
   46350:	d8800817 	ldw	r2,32(sp)
   46354:	d8c00517 	ldw	r3,20(sp)
   46358:	d8000d15 	stw	zero,52(sp)
   4635c:	10c5c83a 	sub	r2,r2,r3
   46360:	00c9c83a 	sub	r4,zero,r3
   46364:	d8800815 	stw	r2,32(sp)
   46368:	d9000a15 	stw	r4,40(sp)
   4636c:	003d9706 	br	459cc <__alt_data_end+0xfffc59cc>
   46370:	05adc83a 	sub	r22,zero,r22
   46374:	dd800815 	stw	r22,32(sp)
   46378:	002d883a 	mov	r22,zero
   4637c:	003d8e06 	br	459b8 <__alt_data_end+0xfffc59b8>
   46380:	d9000517 	ldw	r4,20(sp)
   46384:	004e5540 	call	4e554 <__floatsidf>
   46388:	100d883a 	mov	r6,r2
   4638c:	180f883a 	mov	r7,r3
   46390:	a009883a 	mov	r4,r20
   46394:	880b883a 	mov	r5,r17
   46398:	004d9800 	call	4d980 <__eqdf2>
   4639c:	103d7126 	beq	r2,zero,45964 <__alt_data_end+0xfffc5964>
   463a0:	d9c00517 	ldw	r7,20(sp)
   463a4:	39ffffc4 	addi	r7,r7,-1
   463a8:	d9c00515 	stw	r7,20(sp)
   463ac:	003d6d06 	br	45964 <__alt_data_end+0xfffc5964>
   463b0:	dd400a17 	ldw	r21,40(sp)
   463b4:	dd000817 	ldw	r20,32(sp)
   463b8:	0023883a 	mov	r17,zero
   463bc:	003f4806 	br	460e0 <__alt_data_end+0xfffc60e0>
   463c0:	10e3c83a 	sub	r17,r2,r3
   463c4:	9448983a 	sll	r4,r18,r17
   463c8:	003d3206 	br	45894 <__alt_data_end+0xfffc5894>
   463cc:	d8000e15 	stw	zero,56(sp)
   463d0:	003d7506 	br	459a8 <__alt_data_end+0xfffc59a8>
   463d4:	b005883a 	mov	r2,r22
   463d8:	003f4506 	br	460f0 <__alt_data_end+0xfffc60f0>
   463dc:	dc000915 	stw	r16,36(sp)
   463e0:	d9800a17 	ldw	r6,40(sp)
   463e4:	d9400917 	ldw	r5,36(sp)
   463e8:	e009883a 	mov	r4,fp
   463ec:	0048dbc0 	call	48dbc <__pow5mult>
   463f0:	1021883a 	mov	r16,r2
   463f4:	003f5a06 	br	46160 <__alt_data_end+0xfffc6160>
   463f8:	01c00044 	movi	r7,1
   463fc:	d9c00b15 	stw	r7,44(sp)
   46400:	d8802217 	ldw	r2,136(sp)
   46404:	0081280e 	bge	zero,r2,468a8 <_dtoa_r+0x11b0>
   46408:	100d883a 	mov	r6,r2
   4640c:	1021883a 	mov	r16,r2
   46410:	d8800c15 	stw	r2,48(sp)
   46414:	d8800615 	stw	r2,24(sp)
   46418:	003d8806 	br	45a3c <__alt_data_end+0xfffc5a3c>
   4641c:	d8800617 	ldw	r2,24(sp)
   46420:	00be9b16 	blt	zero,r2,45e90 <__alt_data_end+0xfffc5e90>
   46424:	10010f1e 	bne	r2,zero,46864 <_dtoa_r+0x116c>
   46428:	880b883a 	mov	r5,r17
   4642c:	000d883a 	mov	r6,zero
   46430:	01d00534 	movhi	r7,16404
   46434:	8009883a 	mov	r4,r16
   46438:	00426340 	call	42634 <__muldf3>
   4643c:	900d883a 	mov	r6,r18
   46440:	980f883a 	mov	r7,r19
   46444:	1009883a 	mov	r4,r2
   46448:	180b883a 	mov	r5,r3
   4644c:	004da080 	call	4da08 <__gedf2>
   46450:	002b883a 	mov	r21,zero
   46454:	0023883a 	mov	r17,zero
   46458:	1000bf16 	blt	r2,zero,46758 <_dtoa_r+0x1060>
   4645c:	d9802217 	ldw	r6,136(sp)
   46460:	ddc00717 	ldw	r23,28(sp)
   46464:	018c303a 	nor	r6,zero,r6
   46468:	d9800515 	stw	r6,20(sp)
   4646c:	a80b883a 	mov	r5,r21
   46470:	e009883a 	mov	r4,fp
   46474:	00488240 	call	48824 <_Bfree>
   46478:	883e4926 	beq	r17,zero,45da0 <__alt_data_end+0xfffc5da0>
   4647c:	003fad06 	br	46334 <__alt_data_end+0xfffc6334>
   46480:	d9c01117 	ldw	r7,68(sp)
   46484:	3801bc26 	beq	r7,zero,46b78 <_dtoa_r+0x1480>
   46488:	10810cc4 	addi	r2,r2,1075
   4648c:	dd400a17 	ldw	r21,40(sp)
   46490:	dd000817 	ldw	r20,32(sp)
   46494:	003f0a06 	br	460c0 <__alt_data_end+0xfffc60c0>
   46498:	00800704 	movi	r2,28
   4649c:	d9000817 	ldw	r4,32(sp)
   464a0:	a0a9883a 	add	r20,r20,r2
   464a4:	b0ad883a 	add	r22,r22,r2
   464a8:	2089883a 	add	r4,r4,r2
   464ac:	d9000815 	stw	r4,32(sp)
   464b0:	003f5106 	br	461f8 <__alt_data_end+0xfffc61f8>
   464b4:	d8c00317 	ldw	r3,12(sp)
   464b8:	b8c1fc0e 	bge	r23,r3,46cac <_dtoa_r+0x15b4>
   464bc:	0027883a 	mov	r19,zero
   464c0:	b805883a 	mov	r2,r23
   464c4:	003f3e06 	br	461c0 <__alt_data_end+0xfffc61c0>
   464c8:	880b883a 	mov	r5,r17
   464cc:	e009883a 	mov	r4,fp
   464d0:	000f883a 	mov	r7,zero
   464d4:	01800284 	movi	r6,10
   464d8:	004884c0 	call	4884c <__multadd>
   464dc:	d9000c17 	ldw	r4,48(sp)
   464e0:	1023883a 	mov	r17,r2
   464e4:	0102040e 	bge	zero,r4,46cf8 <_dtoa_r+0x1600>
   464e8:	d9000615 	stw	r4,24(sp)
   464ec:	0500050e 	bge	zero,r20,46504 <_dtoa_r+0xe0c>
   464f0:	880b883a 	mov	r5,r17
   464f4:	a00d883a 	mov	r6,r20
   464f8:	e009883a 	mov	r4,fp
   464fc:	0048efc0 	call	48efc <__lshift>
   46500:	1023883a 	mov	r17,r2
   46504:	9801241e 	bne	r19,zero,46998 <_dtoa_r+0x12a0>
   46508:	8829883a 	mov	r20,r17
   4650c:	d9000617 	ldw	r4,24(sp)
   46510:	dcc00717 	ldw	r19,28(sp)
   46514:	9480004c 	andi	r18,r18,1
   46518:	20bfffc4 	addi	r2,r4,-1
   4651c:	9885883a 	add	r2,r19,r2
   46520:	d8800415 	stw	r2,16(sp)
   46524:	dc800615 	stw	r18,24(sp)
   46528:	a80b883a 	mov	r5,r21
   4652c:	8009883a 	mov	r4,r16
   46530:	00454f80 	call	454f8 <quorem>
   46534:	880b883a 	mov	r5,r17
   46538:	8009883a 	mov	r4,r16
   4653c:	102f883a 	mov	r23,r2
   46540:	00490440 	call	49044 <__mcmp>
   46544:	a80b883a 	mov	r5,r21
   46548:	a00d883a 	mov	r6,r20
   4654c:	e009883a 	mov	r4,fp
   46550:	102d883a 	mov	r22,r2
   46554:	00490a40 	call	490a4 <__mdiff>
   46558:	1007883a 	mov	r3,r2
   4655c:	10800317 	ldw	r2,12(r2)
   46560:	bc800c04 	addi	r18,r23,48
   46564:	180b883a 	mov	r5,r3
   46568:	10004e1e 	bne	r2,zero,466a4 <_dtoa_r+0xfac>
   4656c:	8009883a 	mov	r4,r16
   46570:	d8c01615 	stw	r3,88(sp)
   46574:	00490440 	call	49044 <__mcmp>
   46578:	d8c01617 	ldw	r3,88(sp)
   4657c:	e009883a 	mov	r4,fp
   46580:	d8801615 	stw	r2,88(sp)
   46584:	180b883a 	mov	r5,r3
   46588:	00488240 	call	48824 <_Bfree>
   4658c:	d8801617 	ldw	r2,88(sp)
   46590:	1000041e 	bne	r2,zero,465a4 <_dtoa_r+0xeac>
   46594:	d9800317 	ldw	r6,12(sp)
   46598:	3000021e 	bne	r6,zero,465a4 <_dtoa_r+0xeac>
   4659c:	d8c00617 	ldw	r3,24(sp)
   465a0:	18003726 	beq	r3,zero,46680 <_dtoa_r+0xf88>
   465a4:	b0002016 	blt	r22,zero,46628 <_dtoa_r+0xf30>
   465a8:	b000041e 	bne	r22,zero,465bc <_dtoa_r+0xec4>
   465ac:	d9000317 	ldw	r4,12(sp)
   465b0:	2000021e 	bne	r4,zero,465bc <_dtoa_r+0xec4>
   465b4:	d8c00617 	ldw	r3,24(sp)
   465b8:	18001b26 	beq	r3,zero,46628 <_dtoa_r+0xf30>
   465bc:	00810716 	blt	zero,r2,469dc <_dtoa_r+0x12e4>
   465c0:	d8c00417 	ldw	r3,16(sp)
   465c4:	9d800044 	addi	r22,r19,1
   465c8:	9c800005 	stb	r18,0(r19)
   465cc:	b02f883a 	mov	r23,r22
   465d0:	98c10626 	beq	r19,r3,469ec <_dtoa_r+0x12f4>
   465d4:	800b883a 	mov	r5,r16
   465d8:	000f883a 	mov	r7,zero
   465dc:	01800284 	movi	r6,10
   465e0:	e009883a 	mov	r4,fp
   465e4:	004884c0 	call	4884c <__multadd>
   465e8:	1021883a 	mov	r16,r2
   465ec:	000f883a 	mov	r7,zero
   465f0:	01800284 	movi	r6,10
   465f4:	880b883a 	mov	r5,r17
   465f8:	e009883a 	mov	r4,fp
   465fc:	8d002526 	beq	r17,r20,46694 <_dtoa_r+0xf9c>
   46600:	004884c0 	call	4884c <__multadd>
   46604:	a00b883a 	mov	r5,r20
   46608:	000f883a 	mov	r7,zero
   4660c:	01800284 	movi	r6,10
   46610:	e009883a 	mov	r4,fp
   46614:	1023883a 	mov	r17,r2
   46618:	004884c0 	call	4884c <__multadd>
   4661c:	1029883a 	mov	r20,r2
   46620:	b027883a 	mov	r19,r22
   46624:	003fc006 	br	46528 <__alt_data_end+0xfffc6528>
   46628:	9011883a 	mov	r8,r18
   4662c:	00800e0e 	bge	zero,r2,46668 <_dtoa_r+0xf70>
   46630:	800b883a 	mov	r5,r16
   46634:	01800044 	movi	r6,1
   46638:	e009883a 	mov	r4,fp
   4663c:	da001715 	stw	r8,92(sp)
   46640:	0048efc0 	call	48efc <__lshift>
   46644:	a80b883a 	mov	r5,r21
   46648:	1009883a 	mov	r4,r2
   4664c:	1021883a 	mov	r16,r2
   46650:	00490440 	call	49044 <__mcmp>
   46654:	da001717 	ldw	r8,92(sp)
   46658:	0081960e 	bge	zero,r2,46cb4 <_dtoa_r+0x15bc>
   4665c:	00800e44 	movi	r2,57
   46660:	40817026 	beq	r8,r2,46c24 <_dtoa_r+0x152c>
   46664:	ba000c44 	addi	r8,r23,49
   46668:	8825883a 	mov	r18,r17
   4666c:	9dc00044 	addi	r23,r19,1
   46670:	9a000005 	stb	r8,0(r19)
   46674:	a023883a 	mov	r17,r20
   46678:	dc000915 	stw	r16,36(sp)
   4667c:	003f2406 	br	46310 <__alt_data_end+0xfffc6310>
   46680:	00800e44 	movi	r2,57
   46684:	9011883a 	mov	r8,r18
   46688:	90816626 	beq	r18,r2,46c24 <_dtoa_r+0x152c>
   4668c:	05bff516 	blt	zero,r22,46664 <__alt_data_end+0xfffc6664>
   46690:	003ff506 	br	46668 <__alt_data_end+0xfffc6668>
   46694:	004884c0 	call	4884c <__multadd>
   46698:	1023883a 	mov	r17,r2
   4669c:	1029883a 	mov	r20,r2
   466a0:	003fdf06 	br	46620 <__alt_data_end+0xfffc6620>
   466a4:	e009883a 	mov	r4,fp
   466a8:	00488240 	call	48824 <_Bfree>
   466ac:	00800044 	movi	r2,1
   466b0:	003fbc06 	br	465a4 <__alt_data_end+0xfffc65a4>
   466b4:	a80b883a 	mov	r5,r21
   466b8:	8009883a 	mov	r4,r16
   466bc:	00490440 	call	49044 <__mcmp>
   466c0:	103edb0e 	bge	r2,zero,46230 <__alt_data_end+0xfffc6230>
   466c4:	800b883a 	mov	r5,r16
   466c8:	000f883a 	mov	r7,zero
   466cc:	01800284 	movi	r6,10
   466d0:	e009883a 	mov	r4,fp
   466d4:	004884c0 	call	4884c <__multadd>
   466d8:	1021883a 	mov	r16,r2
   466dc:	d8800517 	ldw	r2,20(sp)
   466e0:	d8c00b17 	ldw	r3,44(sp)
   466e4:	10bfffc4 	addi	r2,r2,-1
   466e8:	d8800515 	stw	r2,20(sp)
   466ec:	183f761e 	bne	r3,zero,464c8 <__alt_data_end+0xfffc64c8>
   466f0:	d9000c17 	ldw	r4,48(sp)
   466f4:	0101730e 	bge	zero,r4,46cc4 <_dtoa_r+0x15cc>
   466f8:	d9000615 	stw	r4,24(sp)
   466fc:	003ed006 	br	46240 <__alt_data_end+0xfffc6240>
   46700:	00800084 	movi	r2,2
   46704:	3081861e 	bne	r6,r2,46d20 <_dtoa_r+0x1628>
   46708:	d8000b15 	stw	zero,44(sp)
   4670c:	003f3c06 	br	46400 <__alt_data_end+0xfffc6400>
   46710:	dc000917 	ldw	r16,36(sp)
   46714:	003e9206 	br	46160 <__alt_data_end+0xfffc6160>
   46718:	d9c00317 	ldw	r7,12(sp)
   4671c:	00800084 	movi	r2,2
   46720:	11fec50e 	bge	r2,r7,46238 <__alt_data_end+0xfffc6238>
   46724:	d9000617 	ldw	r4,24(sp)
   46728:	20013c1e 	bne	r4,zero,46c1c <_dtoa_r+0x1524>
   4672c:	a80b883a 	mov	r5,r21
   46730:	000f883a 	mov	r7,zero
   46734:	01800144 	movi	r6,5
   46738:	e009883a 	mov	r4,fp
   4673c:	004884c0 	call	4884c <__multadd>
   46740:	100b883a 	mov	r5,r2
   46744:	8009883a 	mov	r4,r16
   46748:	102b883a 	mov	r21,r2
   4674c:	00490440 	call	49044 <__mcmp>
   46750:	dc000915 	stw	r16,36(sp)
   46754:	00bf410e 	bge	zero,r2,4645c <__alt_data_end+0xfffc645c>
   46758:	d9c00717 	ldw	r7,28(sp)
   4675c:	00800c44 	movi	r2,49
   46760:	38800005 	stb	r2,0(r7)
   46764:	d8800517 	ldw	r2,20(sp)
   46768:	3dc00044 	addi	r23,r7,1
   4676c:	10800044 	addi	r2,r2,1
   46770:	d8800515 	stw	r2,20(sp)
   46774:	003f3d06 	br	4646c <__alt_data_end+0xfffc646c>
   46778:	d9800517 	ldw	r6,20(sp)
   4677c:	d9c00717 	ldw	r7,28(sp)
   46780:	00800c44 	movi	r2,49
   46784:	31800044 	addi	r6,r6,1
   46788:	d9800515 	stw	r6,20(sp)
   4678c:	38800005 	stb	r2,0(r7)
   46790:	003edf06 	br	46310 <__alt_data_end+0xfffc6310>
   46794:	d8000b15 	stw	zero,44(sp)
   46798:	003c9f06 	br	45a18 <__alt_data_end+0xfffc5a18>
   4679c:	903e7e1e 	bne	r18,zero,46198 <__alt_data_end+0xfffc6198>
   467a0:	00800434 	movhi	r2,16
   467a4:	10bfffc4 	addi	r2,r2,-1
   467a8:	9884703a 	and	r2,r19,r2
   467ac:	1000ea1e 	bne	r2,zero,46b58 <_dtoa_r+0x1460>
   467b0:	9cdffc2c 	andhi	r19,r19,32752
   467b4:	9800e826 	beq	r19,zero,46b58 <_dtoa_r+0x1460>
   467b8:	d9c00817 	ldw	r7,32(sp)
   467bc:	b5800044 	addi	r22,r22,1
   467c0:	04c00044 	movi	r19,1
   467c4:	39c00044 	addi	r7,r7,1
   467c8:	d9c00815 	stw	r7,32(sp)
   467cc:	d8800d17 	ldw	r2,52(sp)
   467d0:	103e721e 	bne	r2,zero,4619c <__alt_data_end+0xfffc619c>
   467d4:	00800044 	movi	r2,1
   467d8:	003e7906 	br	461c0 <__alt_data_end+0xfffc61c0>
   467dc:	8009883a 	mov	r4,r16
   467e0:	004e5540 	call	4e554 <__floatsidf>
   467e4:	d9800f17 	ldw	r6,60(sp)
   467e8:	d9c01017 	ldw	r7,64(sp)
   467ec:	1009883a 	mov	r4,r2
   467f0:	180b883a 	mov	r5,r3
   467f4:	00426340 	call	42634 <__muldf3>
   467f8:	000d883a 	mov	r6,zero
   467fc:	01d00734 	movhi	r7,16412
   46800:	1009883a 	mov	r4,r2
   46804:	180b883a 	mov	r5,r3
   46808:	0041d880 	call	41d88 <__adddf3>
   4680c:	047f3034 	movhi	r17,64704
   46810:	1021883a 	mov	r16,r2
   46814:	1c63883a 	add	r17,r3,r17
   46818:	d9000f17 	ldw	r4,60(sp)
   4681c:	d9401017 	ldw	r5,64(sp)
   46820:	000d883a 	mov	r6,zero
   46824:	01d00534 	movhi	r7,16404
   46828:	004dbd80 	call	4dbd8 <__subdf3>
   4682c:	800d883a 	mov	r6,r16
   46830:	880f883a 	mov	r7,r17
   46834:	1009883a 	mov	r4,r2
   46838:	180b883a 	mov	r5,r3
   4683c:	102b883a 	mov	r21,r2
   46840:	1829883a 	mov	r20,r3
   46844:	004da080 	call	4da08 <__gedf2>
   46848:	00806c16 	blt	zero,r2,469fc <_dtoa_r+0x1304>
   4684c:	89e0003c 	xorhi	r7,r17,32768
   46850:	800d883a 	mov	r6,r16
   46854:	a809883a 	mov	r4,r21
   46858:	a00b883a 	mov	r5,r20
   4685c:	004dae40 	call	4dae4 <__ledf2>
   46860:	103d7e0e 	bge	r2,zero,45e5c <__alt_data_end+0xfffc5e5c>
   46864:	002b883a 	mov	r21,zero
   46868:	0023883a 	mov	r17,zero
   4686c:	003efb06 	br	4645c <__alt_data_end+0xfffc645c>
   46870:	d8800717 	ldw	r2,28(sp)
   46874:	003bd006 	br	457b8 <__alt_data_end+0xfffc57b8>
   46878:	d9000a17 	ldw	r4,40(sp)
   4687c:	d9800d17 	ldw	r6,52(sp)
   46880:	dd400a15 	stw	r21,40(sp)
   46884:	a905c83a 	sub	r2,r21,r4
   46888:	308d883a 	add	r6,r6,r2
   4688c:	d9800d15 	stw	r6,52(sp)
   46890:	002b883a 	mov	r21,zero
   46894:	003e0606 	br	460b0 <__alt_data_end+0xfffc60b0>
   46898:	9023883a 	mov	r17,r18
   4689c:	9829883a 	mov	r20,r19
   468a0:	04000084 	movi	r16,2
   468a4:	003c9206 	br	45af0 <__alt_data_end+0xfffc5af0>
   468a8:	04000044 	movi	r16,1
   468ac:	dc000c15 	stw	r16,48(sp)
   468b0:	dc000615 	stw	r16,24(sp)
   468b4:	dc002215 	stw	r16,136(sp)
   468b8:	e0001115 	stw	zero,68(fp)
   468bc:	000b883a 	mov	r5,zero
   468c0:	003c6906 	br	45a68 <__alt_data_end+0xfffc5a68>
   468c4:	3021883a 	mov	r16,r6
   468c8:	003ffb06 	br	468b8 <__alt_data_end+0xfffc68b8>
   468cc:	1000021e 	bne	r2,zero,468d8 <_dtoa_r+0x11e0>
   468d0:	4200004c 	andi	r8,r8,1
   468d4:	403e7d1e 	bne	r8,zero,462cc <__alt_data_end+0xfffc62cc>
   468d8:	01000c04 	movi	r4,48
   468dc:	00000106 	br	468e4 <_dtoa_r+0x11ec>
   468e0:	102f883a 	mov	r23,r2
   468e4:	b8bfffc4 	addi	r2,r23,-1
   468e8:	10c00007 	ldb	r3,0(r2)
   468ec:	193ffc26 	beq	r3,r4,468e0 <__alt_data_end+0xfffc68e0>
   468f0:	003e8706 	br	46310 <__alt_data_end+0xfffc6310>
   468f4:	d8800517 	ldw	r2,20(sp)
   468f8:	00a3c83a 	sub	r17,zero,r2
   468fc:	8800a426 	beq	r17,zero,46b90 <_dtoa_r+0x1498>
   46900:	888003cc 	andi	r2,r17,15
   46904:	100490fa 	slli	r2,r2,3
   46908:	00c00174 	movhi	r3,5
   4690c:	18c45304 	addi	r3,r3,4428
   46910:	1885883a 	add	r2,r3,r2
   46914:	11800017 	ldw	r6,0(r2)
   46918:	11c00117 	ldw	r7,4(r2)
   4691c:	9009883a 	mov	r4,r18
   46920:	980b883a 	mov	r5,r19
   46924:	8823d13a 	srai	r17,r17,4
   46928:	00426340 	call	42634 <__muldf3>
   4692c:	d8800f15 	stw	r2,60(sp)
   46930:	d8c01015 	stw	r3,64(sp)
   46934:	8800e826 	beq	r17,zero,46cd8 <_dtoa_r+0x15e0>
   46938:	05000174 	movhi	r20,5
   4693c:	a5044904 	addi	r20,r20,4388
   46940:	04000084 	movi	r16,2
   46944:	8980004c 	andi	r6,r17,1
   46948:	1009883a 	mov	r4,r2
   4694c:	8823d07a 	srai	r17,r17,1
   46950:	180b883a 	mov	r5,r3
   46954:	30000426 	beq	r6,zero,46968 <_dtoa_r+0x1270>
   46958:	a1800017 	ldw	r6,0(r20)
   4695c:	a1c00117 	ldw	r7,4(r20)
   46960:	84000044 	addi	r16,r16,1
   46964:	00426340 	call	42634 <__muldf3>
   46968:	a5000204 	addi	r20,r20,8
   4696c:	883ff51e 	bne	r17,zero,46944 <__alt_data_end+0xfffc6944>
   46970:	d8800f15 	stw	r2,60(sp)
   46974:	d8c01015 	stw	r3,64(sp)
   46978:	003c7606 	br	45b54 <__alt_data_end+0xfffc5b54>
   4697c:	00c00c04 	movi	r3,48
   46980:	10c00005 	stb	r3,0(r2)
   46984:	d8c00517 	ldw	r3,20(sp)
   46988:	bd3fffc3 	ldbu	r20,-1(r23)
   4698c:	18c00044 	addi	r3,r3,1
   46990:	d8c00515 	stw	r3,20(sp)
   46994:	003db906 	br	4607c <__alt_data_end+0xfffc607c>
   46998:	89400117 	ldw	r5,4(r17)
   4699c:	e009883a 	mov	r4,fp
   469a0:	004877c0 	call	4877c <_Balloc>
   469a4:	89800417 	ldw	r6,16(r17)
   469a8:	89400304 	addi	r5,r17,12
   469ac:	11000304 	addi	r4,r2,12
   469b0:	31800084 	addi	r6,r6,2
   469b4:	318d883a 	add	r6,r6,r6
   469b8:	318d883a 	add	r6,r6,r6
   469bc:	1027883a 	mov	r19,r2
   469c0:	004850c0 	call	4850c <memcpy>
   469c4:	01800044 	movi	r6,1
   469c8:	980b883a 	mov	r5,r19
   469cc:	e009883a 	mov	r4,fp
   469d0:	0048efc0 	call	48efc <__lshift>
   469d4:	1029883a 	mov	r20,r2
   469d8:	003ecc06 	br	4650c <__alt_data_end+0xfffc650c>
   469dc:	00800e44 	movi	r2,57
   469e0:	90809026 	beq	r18,r2,46c24 <_dtoa_r+0x152c>
   469e4:	92000044 	addi	r8,r18,1
   469e8:	003f1f06 	br	46668 <__alt_data_end+0xfffc6668>
   469ec:	9011883a 	mov	r8,r18
   469f0:	8825883a 	mov	r18,r17
   469f4:	a023883a 	mov	r17,r20
   469f8:	003e2906 	br	462a0 <__alt_data_end+0xfffc62a0>
   469fc:	002b883a 	mov	r21,zero
   46a00:	0023883a 	mov	r17,zero
   46a04:	003f5406 	br	46758 <__alt_data_end+0xfffc6758>
   46a08:	61bfffc4 	addi	r6,r12,-1
   46a0c:	300490fa 	slli	r2,r6,3
   46a10:	00c00174 	movhi	r3,5
   46a14:	18c45304 	addi	r3,r3,4428
   46a18:	1885883a 	add	r2,r3,r2
   46a1c:	11000017 	ldw	r4,0(r2)
   46a20:	11400117 	ldw	r5,4(r2)
   46a24:	d8800717 	ldw	r2,28(sp)
   46a28:	880f883a 	mov	r7,r17
   46a2c:	d9801215 	stw	r6,72(sp)
   46a30:	800d883a 	mov	r6,r16
   46a34:	db001615 	stw	r12,88(sp)
   46a38:	15c00044 	addi	r23,r2,1
   46a3c:	00426340 	call	42634 <__muldf3>
   46a40:	d9401017 	ldw	r5,64(sp)
   46a44:	d9000f17 	ldw	r4,60(sp)
   46a48:	d8c01515 	stw	r3,84(sp)
   46a4c:	d8801415 	stw	r2,80(sp)
   46a50:	004e4d40 	call	4e4d4 <__fixdfsi>
   46a54:	1009883a 	mov	r4,r2
   46a58:	1021883a 	mov	r16,r2
   46a5c:	004e5540 	call	4e554 <__floatsidf>
   46a60:	d9000f17 	ldw	r4,60(sp)
   46a64:	d9401017 	ldw	r5,64(sp)
   46a68:	100d883a 	mov	r6,r2
   46a6c:	180f883a 	mov	r7,r3
   46a70:	004dbd80 	call	4dbd8 <__subdf3>
   46a74:	1829883a 	mov	r20,r3
   46a78:	d8c00717 	ldw	r3,28(sp)
   46a7c:	84000c04 	addi	r16,r16,48
   46a80:	1023883a 	mov	r17,r2
   46a84:	1c000005 	stb	r16,0(r3)
   46a88:	db001617 	ldw	r12,88(sp)
   46a8c:	00800044 	movi	r2,1
   46a90:	60802226 	beq	r12,r2,46b1c <_dtoa_r+0x1424>
   46a94:	d9c00717 	ldw	r7,28(sp)
   46a98:	8805883a 	mov	r2,r17
   46a9c:	b82b883a 	mov	r21,r23
   46aa0:	3b19883a 	add	r12,r7,r12
   46aa4:	6023883a 	mov	r17,r12
   46aa8:	a007883a 	mov	r3,r20
   46aac:	dc800f15 	stw	r18,60(sp)
   46ab0:	000d883a 	mov	r6,zero
   46ab4:	01d00934 	movhi	r7,16420
   46ab8:	1009883a 	mov	r4,r2
   46abc:	180b883a 	mov	r5,r3
   46ac0:	00426340 	call	42634 <__muldf3>
   46ac4:	180b883a 	mov	r5,r3
   46ac8:	1009883a 	mov	r4,r2
   46acc:	1829883a 	mov	r20,r3
   46ad0:	1025883a 	mov	r18,r2
   46ad4:	004e4d40 	call	4e4d4 <__fixdfsi>
   46ad8:	1009883a 	mov	r4,r2
   46adc:	1021883a 	mov	r16,r2
   46ae0:	004e5540 	call	4e554 <__floatsidf>
   46ae4:	100d883a 	mov	r6,r2
   46ae8:	180f883a 	mov	r7,r3
   46aec:	9009883a 	mov	r4,r18
   46af0:	a00b883a 	mov	r5,r20
   46af4:	84000c04 	addi	r16,r16,48
   46af8:	004dbd80 	call	4dbd8 <__subdf3>
   46afc:	ad400044 	addi	r21,r21,1
   46b00:	ac3fffc5 	stb	r16,-1(r21)
   46b04:	ac7fea1e 	bne	r21,r17,46ab0 <__alt_data_end+0xfffc6ab0>
   46b08:	1023883a 	mov	r17,r2
   46b0c:	d8801217 	ldw	r2,72(sp)
   46b10:	dc800f17 	ldw	r18,60(sp)
   46b14:	1829883a 	mov	r20,r3
   46b18:	b8af883a 	add	r23,r23,r2
   46b1c:	d9001417 	ldw	r4,80(sp)
   46b20:	d9401517 	ldw	r5,84(sp)
   46b24:	000d883a 	mov	r6,zero
   46b28:	01cff834 	movhi	r7,16352
   46b2c:	0041d880 	call	41d88 <__adddf3>
   46b30:	880d883a 	mov	r6,r17
   46b34:	a00f883a 	mov	r7,r20
   46b38:	1009883a 	mov	r4,r2
   46b3c:	180b883a 	mov	r5,r3
   46b40:	004dae40 	call	4dae4 <__ledf2>
   46b44:	10003e0e 	bge	r2,zero,46c40 <_dtoa_r+0x1548>
   46b48:	d9001317 	ldw	r4,76(sp)
   46b4c:	bd3fffc3 	ldbu	r20,-1(r23)
   46b50:	d9000515 	stw	r4,20(sp)
   46b54:	003d3b06 	br	46044 <__alt_data_end+0xfffc6044>
   46b58:	0027883a 	mov	r19,zero
   46b5c:	003f1b06 	br	467cc <__alt_data_end+0xfffc67cc>
   46b60:	d8800817 	ldw	r2,32(sp)
   46b64:	11e9c83a 	sub	r20,r2,r7
   46b68:	0005883a 	mov	r2,zero
   46b6c:	003d5406 	br	460c0 <__alt_data_end+0xfffc60c0>
   46b70:	00800044 	movi	r2,1
   46b74:	003dc706 	br	46294 <__alt_data_end+0xfffc6294>
   46b78:	d8c00217 	ldw	r3,8(sp)
   46b7c:	00800d84 	movi	r2,54
   46b80:	dd400a17 	ldw	r21,40(sp)
   46b84:	10c5c83a 	sub	r2,r2,r3
   46b88:	dd000817 	ldw	r20,32(sp)
   46b8c:	003d4c06 	br	460c0 <__alt_data_end+0xfffc60c0>
   46b90:	dc800f15 	stw	r18,60(sp)
   46b94:	dcc01015 	stw	r19,64(sp)
   46b98:	04000084 	movi	r16,2
   46b9c:	003bed06 	br	45b54 <__alt_data_end+0xfffc5b54>
   46ba0:	d9000617 	ldw	r4,24(sp)
   46ba4:	203f0d26 	beq	r4,zero,467dc <__alt_data_end+0xfffc67dc>
   46ba8:	d9800c17 	ldw	r6,48(sp)
   46bac:	01bcab0e 	bge	zero,r6,45e5c <__alt_data_end+0xfffc5e5c>
   46bb0:	d9401017 	ldw	r5,64(sp)
   46bb4:	d9000f17 	ldw	r4,60(sp)
   46bb8:	000d883a 	mov	r6,zero
   46bbc:	01d00934 	movhi	r7,16420
   46bc0:	00426340 	call	42634 <__muldf3>
   46bc4:	81000044 	addi	r4,r16,1
   46bc8:	d8800f15 	stw	r2,60(sp)
   46bcc:	d8c01015 	stw	r3,64(sp)
   46bd0:	004e5540 	call	4e554 <__floatsidf>
   46bd4:	d9800f17 	ldw	r6,60(sp)
   46bd8:	d9c01017 	ldw	r7,64(sp)
   46bdc:	1009883a 	mov	r4,r2
   46be0:	180b883a 	mov	r5,r3
   46be4:	00426340 	call	42634 <__muldf3>
   46be8:	01d00734 	movhi	r7,16412
   46bec:	000d883a 	mov	r6,zero
   46bf0:	1009883a 	mov	r4,r2
   46bf4:	180b883a 	mov	r5,r3
   46bf8:	0041d880 	call	41d88 <__adddf3>
   46bfc:	d9c00517 	ldw	r7,20(sp)
   46c00:	047f3034 	movhi	r17,64704
   46c04:	1021883a 	mov	r16,r2
   46c08:	39ffffc4 	addi	r7,r7,-1
   46c0c:	d9c01315 	stw	r7,76(sp)
   46c10:	1c63883a 	add	r17,r3,r17
   46c14:	db000c17 	ldw	r12,48(sp)
   46c18:	003bea06 	br	45bc4 <__alt_data_end+0xfffc5bc4>
   46c1c:	dc000915 	stw	r16,36(sp)
   46c20:	003e0e06 	br	4645c <__alt_data_end+0xfffc645c>
   46c24:	01000e44 	movi	r4,57
   46c28:	8825883a 	mov	r18,r17
   46c2c:	9dc00044 	addi	r23,r19,1
   46c30:	99000005 	stb	r4,0(r19)
   46c34:	a023883a 	mov	r17,r20
   46c38:	dc000915 	stw	r16,36(sp)
   46c3c:	003da406 	br	462d0 <__alt_data_end+0xfffc62d0>
   46c40:	d9801417 	ldw	r6,80(sp)
   46c44:	d9c01517 	ldw	r7,84(sp)
   46c48:	0009883a 	mov	r4,zero
   46c4c:	014ff834 	movhi	r5,16352
   46c50:	004dbd80 	call	4dbd8 <__subdf3>
   46c54:	880d883a 	mov	r6,r17
   46c58:	a00f883a 	mov	r7,r20
   46c5c:	1009883a 	mov	r4,r2
   46c60:	180b883a 	mov	r5,r3
   46c64:	004da080 	call	4da08 <__gedf2>
   46c68:	00bc7c0e 	bge	zero,r2,45e5c <__alt_data_end+0xfffc5e5c>
   46c6c:	01000c04 	movi	r4,48
   46c70:	00000106 	br	46c78 <_dtoa_r+0x1580>
   46c74:	102f883a 	mov	r23,r2
   46c78:	b8bfffc4 	addi	r2,r23,-1
   46c7c:	10c00007 	ldb	r3,0(r2)
   46c80:	193ffc26 	beq	r3,r4,46c74 <__alt_data_end+0xfffc6c74>
   46c84:	d9801317 	ldw	r6,76(sp)
   46c88:	d9800515 	stw	r6,20(sp)
   46c8c:	003c4406 	br	45da0 <__alt_data_end+0xfffc5da0>
   46c90:	d9801317 	ldw	r6,76(sp)
   46c94:	d9800515 	stw	r6,20(sp)
   46c98:	003cea06 	br	46044 <__alt_data_end+0xfffc6044>
   46c9c:	dd800f17 	ldw	r22,60(sp)
   46ca0:	dcc01017 	ldw	r19,64(sp)
   46ca4:	dc801217 	ldw	r18,72(sp)
   46ca8:	003c6c06 	br	45e5c <__alt_data_end+0xfffc5e5c>
   46cac:	903e031e 	bne	r18,zero,464bc <__alt_data_end+0xfffc64bc>
   46cb0:	003ebb06 	br	467a0 <__alt_data_end+0xfffc67a0>
   46cb4:	103e6c1e 	bne	r2,zero,46668 <__alt_data_end+0xfffc6668>
   46cb8:	4080004c 	andi	r2,r8,1
   46cbc:	103e6a26 	beq	r2,zero,46668 <__alt_data_end+0xfffc6668>
   46cc0:	003e6606 	br	4665c <__alt_data_end+0xfffc665c>
   46cc4:	d8c00317 	ldw	r3,12(sp)
   46cc8:	00800084 	movi	r2,2
   46ccc:	10c02916 	blt	r2,r3,46d74 <_dtoa_r+0x167c>
   46cd0:	d9000c17 	ldw	r4,48(sp)
   46cd4:	003e8806 	br	466f8 <__alt_data_end+0xfffc66f8>
   46cd8:	04000084 	movi	r16,2
   46cdc:	003b9d06 	br	45b54 <__alt_data_end+0xfffc5b54>
   46ce0:	d9001317 	ldw	r4,76(sp)
   46ce4:	d9000515 	stw	r4,20(sp)
   46ce8:	003cd606 	br	46044 <__alt_data_end+0xfffc6044>
   46cec:	d8801317 	ldw	r2,76(sp)
   46cf0:	d8800515 	stw	r2,20(sp)
   46cf4:	003c2a06 	br	45da0 <__alt_data_end+0xfffc5da0>
   46cf8:	d9800317 	ldw	r6,12(sp)
   46cfc:	00800084 	movi	r2,2
   46d00:	11801516 	blt	r2,r6,46d58 <_dtoa_r+0x1660>
   46d04:	d9c00c17 	ldw	r7,48(sp)
   46d08:	d9c00615 	stw	r7,24(sp)
   46d0c:	003df706 	br	464ec <__alt_data_end+0xfffc64ec>
   46d10:	193d3926 	beq	r3,r4,461f8 <__alt_data_end+0xfffc61f8>
   46d14:	00c00f04 	movi	r3,60
   46d18:	1885c83a 	sub	r2,r3,r2
   46d1c:	003ddf06 	br	4649c <__alt_data_end+0xfffc649c>
   46d20:	e009883a 	mov	r4,fp
   46d24:	e0001115 	stw	zero,68(fp)
   46d28:	000b883a 	mov	r5,zero
   46d2c:	004877c0 	call	4877c <_Balloc>
   46d30:	d8800715 	stw	r2,28(sp)
   46d34:	d8c00717 	ldw	r3,28(sp)
   46d38:	00bfffc4 	movi	r2,-1
   46d3c:	01000044 	movi	r4,1
   46d40:	d8800c15 	stw	r2,48(sp)
   46d44:	e0c01015 	stw	r3,64(fp)
   46d48:	d9000b15 	stw	r4,44(sp)
   46d4c:	d8800615 	stw	r2,24(sp)
   46d50:	d8002215 	stw	zero,136(sp)
   46d54:	003c4106 	br	45e5c <__alt_data_end+0xfffc5e5c>
   46d58:	d8c00c17 	ldw	r3,48(sp)
   46d5c:	d8c00615 	stw	r3,24(sp)
   46d60:	003e7006 	br	46724 <__alt_data_end+0xfffc6724>
   46d64:	04400044 	movi	r17,1
   46d68:	003b2006 	br	459ec <__alt_data_end+0xfffc59ec>
   46d6c:	000b883a 	mov	r5,zero
   46d70:	003b3d06 	br	45a68 <__alt_data_end+0xfffc5a68>
   46d74:	d8800c17 	ldw	r2,48(sp)
   46d78:	d8800615 	stw	r2,24(sp)
   46d7c:	003e6906 	br	46724 <__alt_data_end+0xfffc6724>

00046d80 <__sflush_r>:
   46d80:	2880030b 	ldhu	r2,12(r5)
   46d84:	defffb04 	addi	sp,sp,-20
   46d88:	dcc00315 	stw	r19,12(sp)
   46d8c:	dc400115 	stw	r17,4(sp)
   46d90:	dfc00415 	stw	ra,16(sp)
   46d94:	dc800215 	stw	r18,8(sp)
   46d98:	dc000015 	stw	r16,0(sp)
   46d9c:	10c0020c 	andi	r3,r2,8
   46da0:	2823883a 	mov	r17,r5
   46da4:	2027883a 	mov	r19,r4
   46da8:	1800311e 	bne	r3,zero,46e70 <__sflush_r+0xf0>
   46dac:	28c00117 	ldw	r3,4(r5)
   46db0:	10820014 	ori	r2,r2,2048
   46db4:	2880030d 	sth	r2,12(r5)
   46db8:	00c04b0e 	bge	zero,r3,46ee8 <__sflush_r+0x168>
   46dbc:	8a000a17 	ldw	r8,40(r17)
   46dc0:	40002326 	beq	r8,zero,46e50 <__sflush_r+0xd0>
   46dc4:	9c000017 	ldw	r16,0(r19)
   46dc8:	10c4000c 	andi	r3,r2,4096
   46dcc:	98000015 	stw	zero,0(r19)
   46dd0:	18004826 	beq	r3,zero,46ef4 <__sflush_r+0x174>
   46dd4:	89801417 	ldw	r6,80(r17)
   46dd8:	10c0010c 	andi	r3,r2,4
   46ddc:	18000626 	beq	r3,zero,46df8 <__sflush_r+0x78>
   46de0:	88c00117 	ldw	r3,4(r17)
   46de4:	88800c17 	ldw	r2,48(r17)
   46de8:	30cdc83a 	sub	r6,r6,r3
   46dec:	10000226 	beq	r2,zero,46df8 <__sflush_r+0x78>
   46df0:	88800f17 	ldw	r2,60(r17)
   46df4:	308dc83a 	sub	r6,r6,r2
   46df8:	89400717 	ldw	r5,28(r17)
   46dfc:	000f883a 	mov	r7,zero
   46e00:	9809883a 	mov	r4,r19
   46e04:	403ee83a 	callr	r8
   46e08:	00ffffc4 	movi	r3,-1
   46e0c:	10c04426 	beq	r2,r3,46f20 <__sflush_r+0x1a0>
   46e10:	88c0030b 	ldhu	r3,12(r17)
   46e14:	89000417 	ldw	r4,16(r17)
   46e18:	88000115 	stw	zero,4(r17)
   46e1c:	197dffcc 	andi	r5,r3,63487
   46e20:	8940030d 	sth	r5,12(r17)
   46e24:	89000015 	stw	r4,0(r17)
   46e28:	18c4000c 	andi	r3,r3,4096
   46e2c:	18002c1e 	bne	r3,zero,46ee0 <__sflush_r+0x160>
   46e30:	89400c17 	ldw	r5,48(r17)
   46e34:	9c000015 	stw	r16,0(r19)
   46e38:	28000526 	beq	r5,zero,46e50 <__sflush_r+0xd0>
   46e3c:	88801004 	addi	r2,r17,64
   46e40:	28800226 	beq	r5,r2,46e4c <__sflush_r+0xcc>
   46e44:	9809883a 	mov	r4,r19
   46e48:	00474ec0 	call	474ec <_free_r>
   46e4c:	88000c15 	stw	zero,48(r17)
   46e50:	0005883a 	mov	r2,zero
   46e54:	dfc00417 	ldw	ra,16(sp)
   46e58:	dcc00317 	ldw	r19,12(sp)
   46e5c:	dc800217 	ldw	r18,8(sp)
   46e60:	dc400117 	ldw	r17,4(sp)
   46e64:	dc000017 	ldw	r16,0(sp)
   46e68:	dec00504 	addi	sp,sp,20
   46e6c:	f800283a 	ret
   46e70:	2c800417 	ldw	r18,16(r5)
   46e74:	903ff626 	beq	r18,zero,46e50 <__alt_data_end+0xfffc6e50>
   46e78:	2c000017 	ldw	r16,0(r5)
   46e7c:	108000cc 	andi	r2,r2,3
   46e80:	2c800015 	stw	r18,0(r5)
   46e84:	84a1c83a 	sub	r16,r16,r18
   46e88:	1000131e 	bne	r2,zero,46ed8 <__sflush_r+0x158>
   46e8c:	28800517 	ldw	r2,20(r5)
   46e90:	88800215 	stw	r2,8(r17)
   46e94:	04000316 	blt	zero,r16,46ea4 <__sflush_r+0x124>
   46e98:	003fed06 	br	46e50 <__alt_data_end+0xfffc6e50>
   46e9c:	90a5883a 	add	r18,r18,r2
   46ea0:	043feb0e 	bge	zero,r16,46e50 <__alt_data_end+0xfffc6e50>
   46ea4:	88800917 	ldw	r2,36(r17)
   46ea8:	89400717 	ldw	r5,28(r17)
   46eac:	800f883a 	mov	r7,r16
   46eb0:	900d883a 	mov	r6,r18
   46eb4:	9809883a 	mov	r4,r19
   46eb8:	103ee83a 	callr	r2
   46ebc:	80a1c83a 	sub	r16,r16,r2
   46ec0:	00bff616 	blt	zero,r2,46e9c <__alt_data_end+0xfffc6e9c>
   46ec4:	88c0030b 	ldhu	r3,12(r17)
   46ec8:	00bfffc4 	movi	r2,-1
   46ecc:	18c01014 	ori	r3,r3,64
   46ed0:	88c0030d 	sth	r3,12(r17)
   46ed4:	003fdf06 	br	46e54 <__alt_data_end+0xfffc6e54>
   46ed8:	0005883a 	mov	r2,zero
   46edc:	003fec06 	br	46e90 <__alt_data_end+0xfffc6e90>
   46ee0:	88801415 	stw	r2,80(r17)
   46ee4:	003fd206 	br	46e30 <__alt_data_end+0xfffc6e30>
   46ee8:	28c00f17 	ldw	r3,60(r5)
   46eec:	00ffb316 	blt	zero,r3,46dbc <__alt_data_end+0xfffc6dbc>
   46ef0:	003fd706 	br	46e50 <__alt_data_end+0xfffc6e50>
   46ef4:	89400717 	ldw	r5,28(r17)
   46ef8:	000d883a 	mov	r6,zero
   46efc:	01c00044 	movi	r7,1
   46f00:	9809883a 	mov	r4,r19
   46f04:	403ee83a 	callr	r8
   46f08:	100d883a 	mov	r6,r2
   46f0c:	00bfffc4 	movi	r2,-1
   46f10:	30801426 	beq	r6,r2,46f64 <__sflush_r+0x1e4>
   46f14:	8880030b 	ldhu	r2,12(r17)
   46f18:	8a000a17 	ldw	r8,40(r17)
   46f1c:	003fae06 	br	46dd8 <__alt_data_end+0xfffc6dd8>
   46f20:	98c00017 	ldw	r3,0(r19)
   46f24:	183fba26 	beq	r3,zero,46e10 <__alt_data_end+0xfffc6e10>
   46f28:	01000744 	movi	r4,29
   46f2c:	19000626 	beq	r3,r4,46f48 <__sflush_r+0x1c8>
   46f30:	01000584 	movi	r4,22
   46f34:	19000426 	beq	r3,r4,46f48 <__sflush_r+0x1c8>
   46f38:	88c0030b 	ldhu	r3,12(r17)
   46f3c:	18c01014 	ori	r3,r3,64
   46f40:	88c0030d 	sth	r3,12(r17)
   46f44:	003fc306 	br	46e54 <__alt_data_end+0xfffc6e54>
   46f48:	8880030b 	ldhu	r2,12(r17)
   46f4c:	88c00417 	ldw	r3,16(r17)
   46f50:	88000115 	stw	zero,4(r17)
   46f54:	10bdffcc 	andi	r2,r2,63487
   46f58:	8880030d 	sth	r2,12(r17)
   46f5c:	88c00015 	stw	r3,0(r17)
   46f60:	003fb306 	br	46e30 <__alt_data_end+0xfffc6e30>
   46f64:	98800017 	ldw	r2,0(r19)
   46f68:	103fea26 	beq	r2,zero,46f14 <__alt_data_end+0xfffc6f14>
   46f6c:	00c00744 	movi	r3,29
   46f70:	10c00226 	beq	r2,r3,46f7c <__sflush_r+0x1fc>
   46f74:	00c00584 	movi	r3,22
   46f78:	10c0031e 	bne	r2,r3,46f88 <__sflush_r+0x208>
   46f7c:	9c000015 	stw	r16,0(r19)
   46f80:	0005883a 	mov	r2,zero
   46f84:	003fb306 	br	46e54 <__alt_data_end+0xfffc6e54>
   46f88:	88c0030b 	ldhu	r3,12(r17)
   46f8c:	3005883a 	mov	r2,r6
   46f90:	18c01014 	ori	r3,r3,64
   46f94:	88c0030d 	sth	r3,12(r17)
   46f98:	003fae06 	br	46e54 <__alt_data_end+0xfffc6e54>

00046f9c <_fflush_r>:
   46f9c:	defffd04 	addi	sp,sp,-12
   46fa0:	dc000115 	stw	r16,4(sp)
   46fa4:	dfc00215 	stw	ra,8(sp)
   46fa8:	2021883a 	mov	r16,r4
   46fac:	20000226 	beq	r4,zero,46fb8 <_fflush_r+0x1c>
   46fb0:	20800e17 	ldw	r2,56(r4)
   46fb4:	10000c26 	beq	r2,zero,46fe8 <_fflush_r+0x4c>
   46fb8:	2880030f 	ldh	r2,12(r5)
   46fbc:	1000051e 	bne	r2,zero,46fd4 <_fflush_r+0x38>
   46fc0:	0005883a 	mov	r2,zero
   46fc4:	dfc00217 	ldw	ra,8(sp)
   46fc8:	dc000117 	ldw	r16,4(sp)
   46fcc:	dec00304 	addi	sp,sp,12
   46fd0:	f800283a 	ret
   46fd4:	8009883a 	mov	r4,r16
   46fd8:	dfc00217 	ldw	ra,8(sp)
   46fdc:	dc000117 	ldw	r16,4(sp)
   46fe0:	dec00304 	addi	sp,sp,12
   46fe4:	0046d801 	jmpi	46d80 <__sflush_r>
   46fe8:	d9400015 	stw	r5,0(sp)
   46fec:	00473780 	call	47378 <__sinit>
   46ff0:	d9400017 	ldw	r5,0(sp)
   46ff4:	003ff006 	br	46fb8 <__alt_data_end+0xfffc6fb8>

00046ff8 <fflush>:
   46ff8:	20000526 	beq	r4,zero,47010 <fflush+0x18>
   46ffc:	00800174 	movhi	r2,5
   47000:	108b6e04 	addi	r2,r2,11704
   47004:	200b883a 	mov	r5,r4
   47008:	11000017 	ldw	r4,0(r2)
   4700c:	0046f9c1 	jmpi	46f9c <_fflush_r>
   47010:	00800174 	movhi	r2,5
   47014:	108b6d04 	addi	r2,r2,11700
   47018:	11000017 	ldw	r4,0(r2)
   4701c:	01400134 	movhi	r5,4
   47020:	295be704 	addi	r5,r5,28572
   47024:	00478c01 	jmpi	478c0 <_fwalk_reent>

00047028 <__fp_unlock>:
   47028:	0005883a 	mov	r2,zero
   4702c:	f800283a 	ret

00047030 <_cleanup_r>:
   47030:	01400174 	movhi	r5,5
   47034:	296cac04 	addi	r5,r5,-19792
   47038:	00478c01 	jmpi	478c0 <_fwalk_reent>

0004703c <__sinit.part.1>:
   4703c:	defff704 	addi	sp,sp,-36
   47040:	00c00134 	movhi	r3,4
   47044:	dfc00815 	stw	ra,32(sp)
   47048:	ddc00715 	stw	r23,28(sp)
   4704c:	dd800615 	stw	r22,24(sp)
   47050:	dd400515 	stw	r21,20(sp)
   47054:	dd000415 	stw	r20,16(sp)
   47058:	dcc00315 	stw	r19,12(sp)
   4705c:	dc800215 	stw	r18,8(sp)
   47060:	dc400115 	stw	r17,4(sp)
   47064:	dc000015 	stw	r16,0(sp)
   47068:	18dc0c04 	addi	r3,r3,28720
   4706c:	24000117 	ldw	r16,4(r4)
   47070:	20c00f15 	stw	r3,60(r4)
   47074:	2080bb04 	addi	r2,r4,748
   47078:	00c000c4 	movi	r3,3
   4707c:	20c0b915 	stw	r3,740(r4)
   47080:	2080ba15 	stw	r2,744(r4)
   47084:	2000b815 	stw	zero,736(r4)
   47088:	05c00204 	movi	r23,8
   4708c:	00800104 	movi	r2,4
   47090:	2025883a 	mov	r18,r4
   47094:	b80d883a 	mov	r6,r23
   47098:	81001704 	addi	r4,r16,92
   4709c:	000b883a 	mov	r5,zero
   470a0:	80000015 	stw	zero,0(r16)
   470a4:	80000115 	stw	zero,4(r16)
   470a8:	80000215 	stw	zero,8(r16)
   470ac:	8080030d 	sth	r2,12(r16)
   470b0:	80001915 	stw	zero,100(r16)
   470b4:	8000038d 	sth	zero,14(r16)
   470b8:	80000415 	stw	zero,16(r16)
   470bc:	80000515 	stw	zero,20(r16)
   470c0:	80000615 	stw	zero,24(r16)
   470c4:	00486540 	call	48654 <memset>
   470c8:	05800174 	movhi	r22,5
   470cc:	94400217 	ldw	r17,8(r18)
   470d0:	05400174 	movhi	r21,5
   470d4:	05000174 	movhi	r20,5
   470d8:	04c00174 	movhi	r19,5
   470dc:	b5a61004 	addi	r22,r22,-26560
   470e0:	ad662704 	addi	r21,r21,-26468
   470e4:	a5264604 	addi	r20,r20,-26344
   470e8:	9ce65d04 	addi	r19,r19,-26252
   470ec:	85800815 	stw	r22,32(r16)
   470f0:	85400915 	stw	r21,36(r16)
   470f4:	85000a15 	stw	r20,40(r16)
   470f8:	84c00b15 	stw	r19,44(r16)
   470fc:	84000715 	stw	r16,28(r16)
   47100:	00800284 	movi	r2,10
   47104:	8880030d 	sth	r2,12(r17)
   47108:	00800044 	movi	r2,1
   4710c:	b80d883a 	mov	r6,r23
   47110:	89001704 	addi	r4,r17,92
   47114:	000b883a 	mov	r5,zero
   47118:	88000015 	stw	zero,0(r17)
   4711c:	88000115 	stw	zero,4(r17)
   47120:	88000215 	stw	zero,8(r17)
   47124:	88001915 	stw	zero,100(r17)
   47128:	8880038d 	sth	r2,14(r17)
   4712c:	88000415 	stw	zero,16(r17)
   47130:	88000515 	stw	zero,20(r17)
   47134:	88000615 	stw	zero,24(r17)
   47138:	00486540 	call	48654 <memset>
   4713c:	94000317 	ldw	r16,12(r18)
   47140:	00800484 	movi	r2,18
   47144:	8c400715 	stw	r17,28(r17)
   47148:	8d800815 	stw	r22,32(r17)
   4714c:	8d400915 	stw	r21,36(r17)
   47150:	8d000a15 	stw	r20,40(r17)
   47154:	8cc00b15 	stw	r19,44(r17)
   47158:	8080030d 	sth	r2,12(r16)
   4715c:	00800084 	movi	r2,2
   47160:	80000015 	stw	zero,0(r16)
   47164:	80000115 	stw	zero,4(r16)
   47168:	80000215 	stw	zero,8(r16)
   4716c:	80001915 	stw	zero,100(r16)
   47170:	8080038d 	sth	r2,14(r16)
   47174:	80000415 	stw	zero,16(r16)
   47178:	80000515 	stw	zero,20(r16)
   4717c:	80000615 	stw	zero,24(r16)
   47180:	b80d883a 	mov	r6,r23
   47184:	000b883a 	mov	r5,zero
   47188:	81001704 	addi	r4,r16,92
   4718c:	00486540 	call	48654 <memset>
   47190:	00800044 	movi	r2,1
   47194:	84000715 	stw	r16,28(r16)
   47198:	85800815 	stw	r22,32(r16)
   4719c:	85400915 	stw	r21,36(r16)
   471a0:	85000a15 	stw	r20,40(r16)
   471a4:	84c00b15 	stw	r19,44(r16)
   471a8:	90800e15 	stw	r2,56(r18)
   471ac:	dfc00817 	ldw	ra,32(sp)
   471b0:	ddc00717 	ldw	r23,28(sp)
   471b4:	dd800617 	ldw	r22,24(sp)
   471b8:	dd400517 	ldw	r21,20(sp)
   471bc:	dd000417 	ldw	r20,16(sp)
   471c0:	dcc00317 	ldw	r19,12(sp)
   471c4:	dc800217 	ldw	r18,8(sp)
   471c8:	dc400117 	ldw	r17,4(sp)
   471cc:	dc000017 	ldw	r16,0(sp)
   471d0:	dec00904 	addi	sp,sp,36
   471d4:	f800283a 	ret

000471d8 <__fp_lock>:
   471d8:	0005883a 	mov	r2,zero
   471dc:	f800283a 	ret

000471e0 <__sfmoreglue>:
   471e0:	defffc04 	addi	sp,sp,-16
   471e4:	dc400115 	stw	r17,4(sp)
   471e8:	2c7fffc4 	addi	r17,r5,-1
   471ec:	8c401a24 	muli	r17,r17,104
   471f0:	dc800215 	stw	r18,8(sp)
   471f4:	2825883a 	mov	r18,r5
   471f8:	89401d04 	addi	r5,r17,116
   471fc:	dc000015 	stw	r16,0(sp)
   47200:	dfc00315 	stw	ra,12(sp)
   47204:	0047c1c0 	call	47c1c <_malloc_r>
   47208:	1021883a 	mov	r16,r2
   4720c:	10000726 	beq	r2,zero,4722c <__sfmoreglue+0x4c>
   47210:	11000304 	addi	r4,r2,12
   47214:	10000015 	stw	zero,0(r2)
   47218:	14800115 	stw	r18,4(r2)
   4721c:	11000215 	stw	r4,8(r2)
   47220:	89801a04 	addi	r6,r17,104
   47224:	000b883a 	mov	r5,zero
   47228:	00486540 	call	48654 <memset>
   4722c:	8005883a 	mov	r2,r16
   47230:	dfc00317 	ldw	ra,12(sp)
   47234:	dc800217 	ldw	r18,8(sp)
   47238:	dc400117 	ldw	r17,4(sp)
   4723c:	dc000017 	ldw	r16,0(sp)
   47240:	dec00404 	addi	sp,sp,16
   47244:	f800283a 	ret

00047248 <__sfp>:
   47248:	defffb04 	addi	sp,sp,-20
   4724c:	dc000015 	stw	r16,0(sp)
   47250:	04000174 	movhi	r16,5
   47254:	840b6d04 	addi	r16,r16,11700
   47258:	dcc00315 	stw	r19,12(sp)
   4725c:	2027883a 	mov	r19,r4
   47260:	81000017 	ldw	r4,0(r16)
   47264:	dfc00415 	stw	ra,16(sp)
   47268:	dc800215 	stw	r18,8(sp)
   4726c:	20800e17 	ldw	r2,56(r4)
   47270:	dc400115 	stw	r17,4(sp)
   47274:	1000021e 	bne	r2,zero,47280 <__sfp+0x38>
   47278:	004703c0 	call	4703c <__sinit.part.1>
   4727c:	81000017 	ldw	r4,0(r16)
   47280:	2480b804 	addi	r18,r4,736
   47284:	047fffc4 	movi	r17,-1
   47288:	91000117 	ldw	r4,4(r18)
   4728c:	94000217 	ldw	r16,8(r18)
   47290:	213fffc4 	addi	r4,r4,-1
   47294:	20000a16 	blt	r4,zero,472c0 <__sfp+0x78>
   47298:	8080030f 	ldh	r2,12(r16)
   4729c:	10000c26 	beq	r2,zero,472d0 <__sfp+0x88>
   472a0:	80c01d04 	addi	r3,r16,116
   472a4:	00000206 	br	472b0 <__sfp+0x68>
   472a8:	18bfe60f 	ldh	r2,-104(r3)
   472ac:	10000826 	beq	r2,zero,472d0 <__sfp+0x88>
   472b0:	213fffc4 	addi	r4,r4,-1
   472b4:	1c3ffd04 	addi	r16,r3,-12
   472b8:	18c01a04 	addi	r3,r3,104
   472bc:	247ffa1e 	bne	r4,r17,472a8 <__alt_data_end+0xfffc72a8>
   472c0:	90800017 	ldw	r2,0(r18)
   472c4:	10001d26 	beq	r2,zero,4733c <__sfp+0xf4>
   472c8:	1025883a 	mov	r18,r2
   472cc:	003fee06 	br	47288 <__alt_data_end+0xfffc7288>
   472d0:	00bfffc4 	movi	r2,-1
   472d4:	8080038d 	sth	r2,14(r16)
   472d8:	00800044 	movi	r2,1
   472dc:	8080030d 	sth	r2,12(r16)
   472e0:	80001915 	stw	zero,100(r16)
   472e4:	80000015 	stw	zero,0(r16)
   472e8:	80000215 	stw	zero,8(r16)
   472ec:	80000115 	stw	zero,4(r16)
   472f0:	80000415 	stw	zero,16(r16)
   472f4:	80000515 	stw	zero,20(r16)
   472f8:	80000615 	stw	zero,24(r16)
   472fc:	01800204 	movi	r6,8
   47300:	000b883a 	mov	r5,zero
   47304:	81001704 	addi	r4,r16,92
   47308:	00486540 	call	48654 <memset>
   4730c:	8005883a 	mov	r2,r16
   47310:	80000c15 	stw	zero,48(r16)
   47314:	80000d15 	stw	zero,52(r16)
   47318:	80001115 	stw	zero,68(r16)
   4731c:	80001215 	stw	zero,72(r16)
   47320:	dfc00417 	ldw	ra,16(sp)
   47324:	dcc00317 	ldw	r19,12(sp)
   47328:	dc800217 	ldw	r18,8(sp)
   4732c:	dc400117 	ldw	r17,4(sp)
   47330:	dc000017 	ldw	r16,0(sp)
   47334:	dec00504 	addi	sp,sp,20
   47338:	f800283a 	ret
   4733c:	01400104 	movi	r5,4
   47340:	9809883a 	mov	r4,r19
   47344:	00471e00 	call	471e0 <__sfmoreglue>
   47348:	90800015 	stw	r2,0(r18)
   4734c:	103fde1e 	bne	r2,zero,472c8 <__alt_data_end+0xfffc72c8>
   47350:	00800304 	movi	r2,12
   47354:	98800015 	stw	r2,0(r19)
   47358:	0005883a 	mov	r2,zero
   4735c:	003ff006 	br	47320 <__alt_data_end+0xfffc7320>

00047360 <_cleanup>:
   47360:	00800174 	movhi	r2,5
   47364:	108b6d04 	addi	r2,r2,11700
   47368:	11000017 	ldw	r4,0(r2)
   4736c:	01400174 	movhi	r5,5
   47370:	296cac04 	addi	r5,r5,-19792
   47374:	00478c01 	jmpi	478c0 <_fwalk_reent>

00047378 <__sinit>:
   47378:	20800e17 	ldw	r2,56(r4)
   4737c:	10000126 	beq	r2,zero,47384 <__sinit+0xc>
   47380:	f800283a 	ret
   47384:	004703c1 	jmpi	4703c <__sinit.part.1>

00047388 <__sfp_lock_acquire>:
   47388:	f800283a 	ret

0004738c <__sfp_lock_release>:
   4738c:	f800283a 	ret

00047390 <__sinit_lock_acquire>:
   47390:	f800283a 	ret

00047394 <__sinit_lock_release>:
   47394:	f800283a 	ret

00047398 <__fp_lock_all>:
   47398:	00800174 	movhi	r2,5
   4739c:	108b6e04 	addi	r2,r2,11704
   473a0:	11000017 	ldw	r4,0(r2)
   473a4:	01400134 	movhi	r5,4
   473a8:	295c7604 	addi	r5,r5,29144
   473ac:	00477fc1 	jmpi	477fc <_fwalk>

000473b0 <__fp_unlock_all>:
   473b0:	00800174 	movhi	r2,5
   473b4:	108b6e04 	addi	r2,r2,11704
   473b8:	11000017 	ldw	r4,0(r2)
   473bc:	01400134 	movhi	r5,4
   473c0:	295c0a04 	addi	r5,r5,28712
   473c4:	00477fc1 	jmpi	477fc <_fwalk>

000473c8 <_malloc_trim_r>:
   473c8:	defffb04 	addi	sp,sp,-20
   473cc:	dcc00315 	stw	r19,12(sp)
   473d0:	04c00174 	movhi	r19,5
   473d4:	dc800215 	stw	r18,8(sp)
   473d8:	dc400115 	stw	r17,4(sp)
   473dc:	dc000015 	stw	r16,0(sp)
   473e0:	dfc00415 	stw	ra,16(sp)
   473e4:	2821883a 	mov	r16,r5
   473e8:	9cc5e904 	addi	r19,r19,6052
   473ec:	2025883a 	mov	r18,r4
   473f0:	004ec540 	call	4ec54 <__malloc_lock>
   473f4:	98800217 	ldw	r2,8(r19)
   473f8:	14400117 	ldw	r17,4(r2)
   473fc:	00bfff04 	movi	r2,-4
   47400:	88a2703a 	and	r17,r17,r2
   47404:	8c21c83a 	sub	r16,r17,r16
   47408:	8403fbc4 	addi	r16,r16,4079
   4740c:	8020d33a 	srli	r16,r16,12
   47410:	0083ffc4 	movi	r2,4095
   47414:	843fffc4 	addi	r16,r16,-1
   47418:	8020933a 	slli	r16,r16,12
   4741c:	1400060e 	bge	r2,r16,47438 <_malloc_trim_r+0x70>
   47420:	000b883a 	mov	r5,zero
   47424:	9009883a 	mov	r4,r18
   47428:	00497ec0 	call	497ec <_sbrk_r>
   4742c:	98c00217 	ldw	r3,8(r19)
   47430:	1c47883a 	add	r3,r3,r17
   47434:	10c00a26 	beq	r2,r3,47460 <_malloc_trim_r+0x98>
   47438:	9009883a 	mov	r4,r18
   4743c:	004ec780 	call	4ec78 <__malloc_unlock>
   47440:	0005883a 	mov	r2,zero
   47444:	dfc00417 	ldw	ra,16(sp)
   47448:	dcc00317 	ldw	r19,12(sp)
   4744c:	dc800217 	ldw	r18,8(sp)
   47450:	dc400117 	ldw	r17,4(sp)
   47454:	dc000017 	ldw	r16,0(sp)
   47458:	dec00504 	addi	sp,sp,20
   4745c:	f800283a 	ret
   47460:	040bc83a 	sub	r5,zero,r16
   47464:	9009883a 	mov	r4,r18
   47468:	00497ec0 	call	497ec <_sbrk_r>
   4746c:	00ffffc4 	movi	r3,-1
   47470:	10c00d26 	beq	r2,r3,474a8 <_malloc_trim_r+0xe0>
   47474:	00c00174 	movhi	r3,5
   47478:	18d27204 	addi	r3,r3,18888
   4747c:	18800017 	ldw	r2,0(r3)
   47480:	99000217 	ldw	r4,8(r19)
   47484:	8c23c83a 	sub	r17,r17,r16
   47488:	8c400054 	ori	r17,r17,1
   4748c:	1421c83a 	sub	r16,r2,r16
   47490:	24400115 	stw	r17,4(r4)
   47494:	9009883a 	mov	r4,r18
   47498:	1c000015 	stw	r16,0(r3)
   4749c:	004ec780 	call	4ec78 <__malloc_unlock>
   474a0:	00800044 	movi	r2,1
   474a4:	003fe706 	br	47444 <__alt_data_end+0xfffc7444>
   474a8:	000b883a 	mov	r5,zero
   474ac:	9009883a 	mov	r4,r18
   474b0:	00497ec0 	call	497ec <_sbrk_r>
   474b4:	99000217 	ldw	r4,8(r19)
   474b8:	014003c4 	movi	r5,15
   474bc:	1107c83a 	sub	r3,r2,r4
   474c0:	28ffdd0e 	bge	r5,r3,47438 <__alt_data_end+0xfffc7438>
   474c4:	01400174 	movhi	r5,5
   474c8:	294b7004 	addi	r5,r5,11712
   474cc:	29400017 	ldw	r5,0(r5)
   474d0:	18c00054 	ori	r3,r3,1
   474d4:	20c00115 	stw	r3,4(r4)
   474d8:	00c00174 	movhi	r3,5
   474dc:	1145c83a 	sub	r2,r2,r5
   474e0:	18d27204 	addi	r3,r3,18888
   474e4:	18800015 	stw	r2,0(r3)
   474e8:	003fd306 	br	47438 <__alt_data_end+0xfffc7438>

000474ec <_free_r>:
   474ec:	28004126 	beq	r5,zero,475f4 <_free_r+0x108>
   474f0:	defffd04 	addi	sp,sp,-12
   474f4:	dc400115 	stw	r17,4(sp)
   474f8:	dc000015 	stw	r16,0(sp)
   474fc:	2023883a 	mov	r17,r4
   47500:	2821883a 	mov	r16,r5
   47504:	dfc00215 	stw	ra,8(sp)
   47508:	004ec540 	call	4ec54 <__malloc_lock>
   4750c:	81ffff17 	ldw	r7,-4(r16)
   47510:	00bfff84 	movi	r2,-2
   47514:	01000174 	movhi	r4,5
   47518:	81bffe04 	addi	r6,r16,-8
   4751c:	3884703a 	and	r2,r7,r2
   47520:	2105e904 	addi	r4,r4,6052
   47524:	308b883a 	add	r5,r6,r2
   47528:	2a400117 	ldw	r9,4(r5)
   4752c:	22000217 	ldw	r8,8(r4)
   47530:	00ffff04 	movi	r3,-4
   47534:	48c6703a 	and	r3,r9,r3
   47538:	2a005726 	beq	r5,r8,47698 <_free_r+0x1ac>
   4753c:	28c00115 	stw	r3,4(r5)
   47540:	39c0004c 	andi	r7,r7,1
   47544:	3800091e 	bne	r7,zero,4756c <_free_r+0x80>
   47548:	823ffe17 	ldw	r8,-8(r16)
   4754c:	22400204 	addi	r9,r4,8
   47550:	320dc83a 	sub	r6,r6,r8
   47554:	31c00217 	ldw	r7,8(r6)
   47558:	1205883a 	add	r2,r2,r8
   4755c:	3a406526 	beq	r7,r9,476f4 <_free_r+0x208>
   47560:	32000317 	ldw	r8,12(r6)
   47564:	3a000315 	stw	r8,12(r7)
   47568:	41c00215 	stw	r7,8(r8)
   4756c:	28cf883a 	add	r7,r5,r3
   47570:	39c00117 	ldw	r7,4(r7)
   47574:	39c0004c 	andi	r7,r7,1
   47578:	38003a26 	beq	r7,zero,47664 <_free_r+0x178>
   4757c:	10c00054 	ori	r3,r2,1
   47580:	30c00115 	stw	r3,4(r6)
   47584:	3087883a 	add	r3,r6,r2
   47588:	18800015 	stw	r2,0(r3)
   4758c:	00c07fc4 	movi	r3,511
   47590:	18801936 	bltu	r3,r2,475f8 <_free_r+0x10c>
   47594:	1004d0fa 	srli	r2,r2,3
   47598:	01c00044 	movi	r7,1
   4759c:	21400117 	ldw	r5,4(r4)
   475a0:	10c00044 	addi	r3,r2,1
   475a4:	18c7883a 	add	r3,r3,r3
   475a8:	1005d0ba 	srai	r2,r2,2
   475ac:	18c7883a 	add	r3,r3,r3
   475b0:	18c7883a 	add	r3,r3,r3
   475b4:	1907883a 	add	r3,r3,r4
   475b8:	3884983a 	sll	r2,r7,r2
   475bc:	19c00017 	ldw	r7,0(r3)
   475c0:	1a3ffe04 	addi	r8,r3,-8
   475c4:	1144b03a 	or	r2,r2,r5
   475c8:	32000315 	stw	r8,12(r6)
   475cc:	31c00215 	stw	r7,8(r6)
   475d0:	20800115 	stw	r2,4(r4)
   475d4:	19800015 	stw	r6,0(r3)
   475d8:	39800315 	stw	r6,12(r7)
   475dc:	8809883a 	mov	r4,r17
   475e0:	dfc00217 	ldw	ra,8(sp)
   475e4:	dc400117 	ldw	r17,4(sp)
   475e8:	dc000017 	ldw	r16,0(sp)
   475ec:	dec00304 	addi	sp,sp,12
   475f0:	004ec781 	jmpi	4ec78 <__malloc_unlock>
   475f4:	f800283a 	ret
   475f8:	100ad27a 	srli	r5,r2,9
   475fc:	00c00104 	movi	r3,4
   47600:	19404a36 	bltu	r3,r5,4772c <_free_r+0x240>
   47604:	100ad1ba 	srli	r5,r2,6
   47608:	28c00e44 	addi	r3,r5,57
   4760c:	18c7883a 	add	r3,r3,r3
   47610:	29400e04 	addi	r5,r5,56
   47614:	18c7883a 	add	r3,r3,r3
   47618:	18c7883a 	add	r3,r3,r3
   4761c:	1909883a 	add	r4,r3,r4
   47620:	20c00017 	ldw	r3,0(r4)
   47624:	01c00174 	movhi	r7,5
   47628:	213ffe04 	addi	r4,r4,-8
   4762c:	39c5e904 	addi	r7,r7,6052
   47630:	20c04426 	beq	r4,r3,47744 <_free_r+0x258>
   47634:	01ffff04 	movi	r7,-4
   47638:	19400117 	ldw	r5,4(r3)
   4763c:	29ca703a 	and	r5,r5,r7
   47640:	1140022e 	bgeu	r2,r5,4764c <_free_r+0x160>
   47644:	18c00217 	ldw	r3,8(r3)
   47648:	20fffb1e 	bne	r4,r3,47638 <__alt_data_end+0xfffc7638>
   4764c:	19000317 	ldw	r4,12(r3)
   47650:	31000315 	stw	r4,12(r6)
   47654:	30c00215 	stw	r3,8(r6)
   47658:	21800215 	stw	r6,8(r4)
   4765c:	19800315 	stw	r6,12(r3)
   47660:	003fde06 	br	475dc <__alt_data_end+0xfffc75dc>
   47664:	29c00217 	ldw	r7,8(r5)
   47668:	10c5883a 	add	r2,r2,r3
   4766c:	00c00174 	movhi	r3,5
   47670:	18c5eb04 	addi	r3,r3,6060
   47674:	38c03b26 	beq	r7,r3,47764 <_free_r+0x278>
   47678:	2a000317 	ldw	r8,12(r5)
   4767c:	11400054 	ori	r5,r2,1
   47680:	3087883a 	add	r3,r6,r2
   47684:	3a000315 	stw	r8,12(r7)
   47688:	41c00215 	stw	r7,8(r8)
   4768c:	31400115 	stw	r5,4(r6)
   47690:	18800015 	stw	r2,0(r3)
   47694:	003fbd06 	br	4758c <__alt_data_end+0xfffc758c>
   47698:	39c0004c 	andi	r7,r7,1
   4769c:	10c5883a 	add	r2,r2,r3
   476a0:	3800071e 	bne	r7,zero,476c0 <_free_r+0x1d4>
   476a4:	81fffe17 	ldw	r7,-8(r16)
   476a8:	31cdc83a 	sub	r6,r6,r7
   476ac:	30c00317 	ldw	r3,12(r6)
   476b0:	31400217 	ldw	r5,8(r6)
   476b4:	11c5883a 	add	r2,r2,r7
   476b8:	28c00315 	stw	r3,12(r5)
   476bc:	19400215 	stw	r5,8(r3)
   476c0:	10c00054 	ori	r3,r2,1
   476c4:	30c00115 	stw	r3,4(r6)
   476c8:	00c00174 	movhi	r3,5
   476cc:	18cb7104 	addi	r3,r3,11716
   476d0:	18c00017 	ldw	r3,0(r3)
   476d4:	21800215 	stw	r6,8(r4)
   476d8:	10ffc036 	bltu	r2,r3,475dc <__alt_data_end+0xfffc75dc>
   476dc:	00800174 	movhi	r2,5
   476e0:	10926904 	addi	r2,r2,18852
   476e4:	11400017 	ldw	r5,0(r2)
   476e8:	8809883a 	mov	r4,r17
   476ec:	00473c80 	call	473c8 <_malloc_trim_r>
   476f0:	003fba06 	br	475dc <__alt_data_end+0xfffc75dc>
   476f4:	28c9883a 	add	r4,r5,r3
   476f8:	21000117 	ldw	r4,4(r4)
   476fc:	2100004c 	andi	r4,r4,1
   47700:	2000391e 	bne	r4,zero,477e8 <_free_r+0x2fc>
   47704:	29c00217 	ldw	r7,8(r5)
   47708:	29000317 	ldw	r4,12(r5)
   4770c:	1885883a 	add	r2,r3,r2
   47710:	10c00054 	ori	r3,r2,1
   47714:	39000315 	stw	r4,12(r7)
   47718:	21c00215 	stw	r7,8(r4)
   4771c:	30c00115 	stw	r3,4(r6)
   47720:	308d883a 	add	r6,r6,r2
   47724:	30800015 	stw	r2,0(r6)
   47728:	003fac06 	br	475dc <__alt_data_end+0xfffc75dc>
   4772c:	00c00504 	movi	r3,20
   47730:	19401536 	bltu	r3,r5,47788 <_free_r+0x29c>
   47734:	28c01704 	addi	r3,r5,92
   47738:	18c7883a 	add	r3,r3,r3
   4773c:	294016c4 	addi	r5,r5,91
   47740:	003fb406 	br	47614 <__alt_data_end+0xfffc7614>
   47744:	280bd0ba 	srai	r5,r5,2
   47748:	00c00044 	movi	r3,1
   4774c:	38800117 	ldw	r2,4(r7)
   47750:	194a983a 	sll	r5,r3,r5
   47754:	2007883a 	mov	r3,r4
   47758:	2884b03a 	or	r2,r5,r2
   4775c:	38800115 	stw	r2,4(r7)
   47760:	003fbb06 	br	47650 <__alt_data_end+0xfffc7650>
   47764:	21800515 	stw	r6,20(r4)
   47768:	21800415 	stw	r6,16(r4)
   4776c:	10c00054 	ori	r3,r2,1
   47770:	31c00315 	stw	r7,12(r6)
   47774:	31c00215 	stw	r7,8(r6)
   47778:	30c00115 	stw	r3,4(r6)
   4777c:	308d883a 	add	r6,r6,r2
   47780:	30800015 	stw	r2,0(r6)
   47784:	003f9506 	br	475dc <__alt_data_end+0xfffc75dc>
   47788:	00c01504 	movi	r3,84
   4778c:	19400536 	bltu	r3,r5,477a4 <_free_r+0x2b8>
   47790:	100ad33a 	srli	r5,r2,12
   47794:	28c01bc4 	addi	r3,r5,111
   47798:	18c7883a 	add	r3,r3,r3
   4779c:	29401b84 	addi	r5,r5,110
   477a0:	003f9c06 	br	47614 <__alt_data_end+0xfffc7614>
   477a4:	00c05504 	movi	r3,340
   477a8:	19400536 	bltu	r3,r5,477c0 <_free_r+0x2d4>
   477ac:	100ad3fa 	srli	r5,r2,15
   477b0:	28c01e04 	addi	r3,r5,120
   477b4:	18c7883a 	add	r3,r3,r3
   477b8:	29401dc4 	addi	r5,r5,119
   477bc:	003f9506 	br	47614 <__alt_data_end+0xfffc7614>
   477c0:	00c15504 	movi	r3,1364
   477c4:	19400536 	bltu	r3,r5,477dc <_free_r+0x2f0>
   477c8:	100ad4ba 	srli	r5,r2,18
   477cc:	28c01f44 	addi	r3,r5,125
   477d0:	18c7883a 	add	r3,r3,r3
   477d4:	29401f04 	addi	r5,r5,124
   477d8:	003f8e06 	br	47614 <__alt_data_end+0xfffc7614>
   477dc:	00c03f84 	movi	r3,254
   477e0:	01401f84 	movi	r5,126
   477e4:	003f8b06 	br	47614 <__alt_data_end+0xfffc7614>
   477e8:	10c00054 	ori	r3,r2,1
   477ec:	30c00115 	stw	r3,4(r6)
   477f0:	308d883a 	add	r6,r6,r2
   477f4:	30800015 	stw	r2,0(r6)
   477f8:	003f7806 	br	475dc <__alt_data_end+0xfffc75dc>

000477fc <_fwalk>:
   477fc:	defff704 	addi	sp,sp,-36
   47800:	dd000415 	stw	r20,16(sp)
   47804:	dfc00815 	stw	ra,32(sp)
   47808:	ddc00715 	stw	r23,28(sp)
   4780c:	dd800615 	stw	r22,24(sp)
   47810:	dd400515 	stw	r21,20(sp)
   47814:	dcc00315 	stw	r19,12(sp)
   47818:	dc800215 	stw	r18,8(sp)
   4781c:	dc400115 	stw	r17,4(sp)
   47820:	dc000015 	stw	r16,0(sp)
   47824:	2500b804 	addi	r20,r4,736
   47828:	a0002326 	beq	r20,zero,478b8 <_fwalk+0xbc>
   4782c:	282b883a 	mov	r21,r5
   47830:	002f883a 	mov	r23,zero
   47834:	05800044 	movi	r22,1
   47838:	04ffffc4 	movi	r19,-1
   4783c:	a4400117 	ldw	r17,4(r20)
   47840:	a4800217 	ldw	r18,8(r20)
   47844:	8c7fffc4 	addi	r17,r17,-1
   47848:	88000d16 	blt	r17,zero,47880 <_fwalk+0x84>
   4784c:	94000304 	addi	r16,r18,12
   47850:	94800384 	addi	r18,r18,14
   47854:	8080000b 	ldhu	r2,0(r16)
   47858:	8c7fffc4 	addi	r17,r17,-1
   4785c:	813ffd04 	addi	r4,r16,-12
   47860:	b080042e 	bgeu	r22,r2,47874 <_fwalk+0x78>
   47864:	9080000f 	ldh	r2,0(r18)
   47868:	14c00226 	beq	r2,r19,47874 <_fwalk+0x78>
   4786c:	a83ee83a 	callr	r21
   47870:	b8aeb03a 	or	r23,r23,r2
   47874:	84001a04 	addi	r16,r16,104
   47878:	94801a04 	addi	r18,r18,104
   4787c:	8cfff51e 	bne	r17,r19,47854 <__alt_data_end+0xfffc7854>
   47880:	a5000017 	ldw	r20,0(r20)
   47884:	a03fed1e 	bne	r20,zero,4783c <__alt_data_end+0xfffc783c>
   47888:	b805883a 	mov	r2,r23
   4788c:	dfc00817 	ldw	ra,32(sp)
   47890:	ddc00717 	ldw	r23,28(sp)
   47894:	dd800617 	ldw	r22,24(sp)
   47898:	dd400517 	ldw	r21,20(sp)
   4789c:	dd000417 	ldw	r20,16(sp)
   478a0:	dcc00317 	ldw	r19,12(sp)
   478a4:	dc800217 	ldw	r18,8(sp)
   478a8:	dc400117 	ldw	r17,4(sp)
   478ac:	dc000017 	ldw	r16,0(sp)
   478b0:	dec00904 	addi	sp,sp,36
   478b4:	f800283a 	ret
   478b8:	002f883a 	mov	r23,zero
   478bc:	003ff206 	br	47888 <__alt_data_end+0xfffc7888>

000478c0 <_fwalk_reent>:
   478c0:	defff704 	addi	sp,sp,-36
   478c4:	dd000415 	stw	r20,16(sp)
   478c8:	dfc00815 	stw	ra,32(sp)
   478cc:	ddc00715 	stw	r23,28(sp)
   478d0:	dd800615 	stw	r22,24(sp)
   478d4:	dd400515 	stw	r21,20(sp)
   478d8:	dcc00315 	stw	r19,12(sp)
   478dc:	dc800215 	stw	r18,8(sp)
   478e0:	dc400115 	stw	r17,4(sp)
   478e4:	dc000015 	stw	r16,0(sp)
   478e8:	2500b804 	addi	r20,r4,736
   478ec:	a0002326 	beq	r20,zero,4797c <_fwalk_reent+0xbc>
   478f0:	282b883a 	mov	r21,r5
   478f4:	2027883a 	mov	r19,r4
   478f8:	002f883a 	mov	r23,zero
   478fc:	05800044 	movi	r22,1
   47900:	04bfffc4 	movi	r18,-1
   47904:	a4400117 	ldw	r17,4(r20)
   47908:	a4000217 	ldw	r16,8(r20)
   4790c:	8c7fffc4 	addi	r17,r17,-1
   47910:	88000c16 	blt	r17,zero,47944 <_fwalk_reent+0x84>
   47914:	84000304 	addi	r16,r16,12
   47918:	8080000b 	ldhu	r2,0(r16)
   4791c:	8c7fffc4 	addi	r17,r17,-1
   47920:	817ffd04 	addi	r5,r16,-12
   47924:	b080052e 	bgeu	r22,r2,4793c <_fwalk_reent+0x7c>
   47928:	8080008f 	ldh	r2,2(r16)
   4792c:	9809883a 	mov	r4,r19
   47930:	14800226 	beq	r2,r18,4793c <_fwalk_reent+0x7c>
   47934:	a83ee83a 	callr	r21
   47938:	b8aeb03a 	or	r23,r23,r2
   4793c:	84001a04 	addi	r16,r16,104
   47940:	8cbff51e 	bne	r17,r18,47918 <__alt_data_end+0xfffc7918>
   47944:	a5000017 	ldw	r20,0(r20)
   47948:	a03fee1e 	bne	r20,zero,47904 <__alt_data_end+0xfffc7904>
   4794c:	b805883a 	mov	r2,r23
   47950:	dfc00817 	ldw	ra,32(sp)
   47954:	ddc00717 	ldw	r23,28(sp)
   47958:	dd800617 	ldw	r22,24(sp)
   4795c:	dd400517 	ldw	r21,20(sp)
   47960:	dd000417 	ldw	r20,16(sp)
   47964:	dcc00317 	ldw	r19,12(sp)
   47968:	dc800217 	ldw	r18,8(sp)
   4796c:	dc400117 	ldw	r17,4(sp)
   47970:	dc000017 	ldw	r16,0(sp)
   47974:	dec00904 	addi	sp,sp,36
   47978:	f800283a 	ret
   4797c:	002f883a 	mov	r23,zero
   47980:	003ff206 	br	4794c <__alt_data_end+0xfffc794c>

00047984 <_setlocale_r>:
   47984:	30001b26 	beq	r6,zero,479f4 <_setlocale_r+0x70>
   47988:	01400174 	movhi	r5,5
   4798c:	defffe04 	addi	sp,sp,-8
   47990:	29443904 	addi	r5,r5,4324
   47994:	3009883a 	mov	r4,r6
   47998:	dc000015 	stw	r16,0(sp)
   4799c:	dfc00115 	stw	ra,4(sp)
   479a0:	3021883a 	mov	r16,r6
   479a4:	004997c0 	call	4997c <strcmp>
   479a8:	1000061e 	bne	r2,zero,479c4 <_setlocale_r+0x40>
   479ac:	00800174 	movhi	r2,5
   479b0:	10843804 	addi	r2,r2,4320
   479b4:	dfc00117 	ldw	ra,4(sp)
   479b8:	dc000017 	ldw	r16,0(sp)
   479bc:	dec00204 	addi	sp,sp,8
   479c0:	f800283a 	ret
   479c4:	01400174 	movhi	r5,5
   479c8:	29443804 	addi	r5,r5,4320
   479cc:	8009883a 	mov	r4,r16
   479d0:	004997c0 	call	4997c <strcmp>
   479d4:	103ff526 	beq	r2,zero,479ac <__alt_data_end+0xfffc79ac>
   479d8:	01400174 	movhi	r5,5
   479dc:	29442304 	addi	r5,r5,4236
   479e0:	8009883a 	mov	r4,r16
   479e4:	004997c0 	call	4997c <strcmp>
   479e8:	103ff026 	beq	r2,zero,479ac <__alt_data_end+0xfffc79ac>
   479ec:	0005883a 	mov	r2,zero
   479f0:	003ff006 	br	479b4 <__alt_data_end+0xfffc79b4>
   479f4:	00800174 	movhi	r2,5
   479f8:	10843804 	addi	r2,r2,4320
   479fc:	f800283a 	ret

00047a00 <__locale_charset>:
   47a00:	00800174 	movhi	r2,5
   47a04:	1085d304 	addi	r2,r2,5964
   47a08:	f800283a 	ret

00047a0c <__locale_mb_cur_max>:
   47a0c:	00800174 	movhi	r2,5
   47a10:	108b6f04 	addi	r2,r2,11708
   47a14:	10800017 	ldw	r2,0(r2)
   47a18:	f800283a 	ret

00047a1c <__locale_msgcharset>:
   47a1c:	00800174 	movhi	r2,5
   47a20:	1085cb04 	addi	r2,r2,5932
   47a24:	f800283a 	ret

00047a28 <__locale_cjk_lang>:
   47a28:	0005883a 	mov	r2,zero
   47a2c:	f800283a 	ret

00047a30 <_localeconv_r>:
   47a30:	00800174 	movhi	r2,5
   47a34:	1085db04 	addi	r2,r2,5996
   47a38:	f800283a 	ret

00047a3c <setlocale>:
   47a3c:	00800174 	movhi	r2,5
   47a40:	108b6e04 	addi	r2,r2,11704
   47a44:	280d883a 	mov	r6,r5
   47a48:	200b883a 	mov	r5,r4
   47a4c:	11000017 	ldw	r4,0(r2)
   47a50:	00479841 	jmpi	47984 <_setlocale_r>

00047a54 <localeconv>:
   47a54:	00800174 	movhi	r2,5
   47a58:	1085db04 	addi	r2,r2,5996
   47a5c:	f800283a 	ret

00047a60 <__smakebuf_r>:
   47a60:	2880030b 	ldhu	r2,12(r5)
   47a64:	10c0008c 	andi	r3,r2,2
   47a68:	1800411e 	bne	r3,zero,47b70 <__smakebuf_r+0x110>
   47a6c:	deffec04 	addi	sp,sp,-80
   47a70:	dc000f15 	stw	r16,60(sp)
   47a74:	2821883a 	mov	r16,r5
   47a78:	2940038f 	ldh	r5,14(r5)
   47a7c:	dc401015 	stw	r17,64(sp)
   47a80:	dfc01315 	stw	ra,76(sp)
   47a84:	dcc01215 	stw	r19,72(sp)
   47a88:	dc801115 	stw	r18,68(sp)
   47a8c:	2023883a 	mov	r17,r4
   47a90:	28001c16 	blt	r5,zero,47b04 <__smakebuf_r+0xa4>
   47a94:	d80d883a 	mov	r6,sp
   47a98:	004b5bc0 	call	4b5bc <_fstat_r>
   47a9c:	10001816 	blt	r2,zero,47b00 <__smakebuf_r+0xa0>
   47aa0:	d8800117 	ldw	r2,4(sp)
   47aa4:	00e00014 	movui	r3,32768
   47aa8:	10bc000c 	andi	r2,r2,61440
   47aac:	14c80020 	cmpeqi	r19,r2,8192
   47ab0:	10c03726 	beq	r2,r3,47b90 <__smakebuf_r+0x130>
   47ab4:	80c0030b 	ldhu	r3,12(r16)
   47ab8:	18c20014 	ori	r3,r3,2048
   47abc:	80c0030d 	sth	r3,12(r16)
   47ac0:	00c80004 	movi	r3,8192
   47ac4:	10c0521e 	bne	r2,r3,47c10 <__smakebuf_r+0x1b0>
   47ac8:	8140038f 	ldh	r5,14(r16)
   47acc:	8809883a 	mov	r4,r17
   47ad0:	004bad40 	call	4bad4 <_isatty_r>
   47ad4:	10004c26 	beq	r2,zero,47c08 <__smakebuf_r+0x1a8>
   47ad8:	8080030b 	ldhu	r2,12(r16)
   47adc:	80c010c4 	addi	r3,r16,67
   47ae0:	80c00015 	stw	r3,0(r16)
   47ae4:	10800054 	ori	r2,r2,1
   47ae8:	8080030d 	sth	r2,12(r16)
   47aec:	00800044 	movi	r2,1
   47af0:	80c00415 	stw	r3,16(r16)
   47af4:	80800515 	stw	r2,20(r16)
   47af8:	04810004 	movi	r18,1024
   47afc:	00000706 	br	47b1c <__smakebuf_r+0xbc>
   47b00:	8080030b 	ldhu	r2,12(r16)
   47b04:	10c0200c 	andi	r3,r2,128
   47b08:	18001f1e 	bne	r3,zero,47b88 <__smakebuf_r+0x128>
   47b0c:	04810004 	movi	r18,1024
   47b10:	10820014 	ori	r2,r2,2048
   47b14:	8080030d 	sth	r2,12(r16)
   47b18:	0027883a 	mov	r19,zero
   47b1c:	900b883a 	mov	r5,r18
   47b20:	8809883a 	mov	r4,r17
   47b24:	0047c1c0 	call	47c1c <_malloc_r>
   47b28:	10002c26 	beq	r2,zero,47bdc <__smakebuf_r+0x17c>
   47b2c:	80c0030b 	ldhu	r3,12(r16)
   47b30:	01000134 	movhi	r4,4
   47b34:	211c0c04 	addi	r4,r4,28720
   47b38:	89000f15 	stw	r4,60(r17)
   47b3c:	18c02014 	ori	r3,r3,128
   47b40:	80c0030d 	sth	r3,12(r16)
   47b44:	80800015 	stw	r2,0(r16)
   47b48:	80800415 	stw	r2,16(r16)
   47b4c:	84800515 	stw	r18,20(r16)
   47b50:	98001a1e 	bne	r19,zero,47bbc <__smakebuf_r+0x15c>
   47b54:	dfc01317 	ldw	ra,76(sp)
   47b58:	dcc01217 	ldw	r19,72(sp)
   47b5c:	dc801117 	ldw	r18,68(sp)
   47b60:	dc401017 	ldw	r17,64(sp)
   47b64:	dc000f17 	ldw	r16,60(sp)
   47b68:	dec01404 	addi	sp,sp,80
   47b6c:	f800283a 	ret
   47b70:	288010c4 	addi	r2,r5,67
   47b74:	28800015 	stw	r2,0(r5)
   47b78:	28800415 	stw	r2,16(r5)
   47b7c:	00800044 	movi	r2,1
   47b80:	28800515 	stw	r2,20(r5)
   47b84:	f800283a 	ret
   47b88:	04801004 	movi	r18,64
   47b8c:	003fe006 	br	47b10 <__alt_data_end+0xfffc7b10>
   47b90:	81000a17 	ldw	r4,40(r16)
   47b94:	00c00174 	movhi	r3,5
   47b98:	18e64604 	addi	r3,r3,-26344
   47b9c:	20ffc51e 	bne	r4,r3,47ab4 <__alt_data_end+0xfffc7ab4>
   47ba0:	8080030b 	ldhu	r2,12(r16)
   47ba4:	04810004 	movi	r18,1024
   47ba8:	84801315 	stw	r18,76(r16)
   47bac:	1484b03a 	or	r2,r2,r18
   47bb0:	8080030d 	sth	r2,12(r16)
   47bb4:	0027883a 	mov	r19,zero
   47bb8:	003fd806 	br	47b1c <__alt_data_end+0xfffc7b1c>
   47bbc:	8140038f 	ldh	r5,14(r16)
   47bc0:	8809883a 	mov	r4,r17
   47bc4:	004bad40 	call	4bad4 <_isatty_r>
   47bc8:	103fe226 	beq	r2,zero,47b54 <__alt_data_end+0xfffc7b54>
   47bcc:	8080030b 	ldhu	r2,12(r16)
   47bd0:	10800054 	ori	r2,r2,1
   47bd4:	8080030d 	sth	r2,12(r16)
   47bd8:	003fde06 	br	47b54 <__alt_data_end+0xfffc7b54>
   47bdc:	8080030b 	ldhu	r2,12(r16)
   47be0:	10c0800c 	andi	r3,r2,512
   47be4:	183fdb1e 	bne	r3,zero,47b54 <__alt_data_end+0xfffc7b54>
   47be8:	10800094 	ori	r2,r2,2
   47bec:	80c010c4 	addi	r3,r16,67
   47bf0:	8080030d 	sth	r2,12(r16)
   47bf4:	00800044 	movi	r2,1
   47bf8:	80c00015 	stw	r3,0(r16)
   47bfc:	80c00415 	stw	r3,16(r16)
   47c00:	80800515 	stw	r2,20(r16)
   47c04:	003fd306 	br	47b54 <__alt_data_end+0xfffc7b54>
   47c08:	04810004 	movi	r18,1024
   47c0c:	003fc306 	br	47b1c <__alt_data_end+0xfffc7b1c>
   47c10:	0027883a 	mov	r19,zero
   47c14:	04810004 	movi	r18,1024
   47c18:	003fc006 	br	47b1c <__alt_data_end+0xfffc7b1c>

00047c1c <_malloc_r>:
   47c1c:	defff504 	addi	sp,sp,-44
   47c20:	dc800315 	stw	r18,12(sp)
   47c24:	dfc00a15 	stw	ra,40(sp)
   47c28:	df000915 	stw	fp,36(sp)
   47c2c:	ddc00815 	stw	r23,32(sp)
   47c30:	dd800715 	stw	r22,28(sp)
   47c34:	dd400615 	stw	r21,24(sp)
   47c38:	dd000515 	stw	r20,20(sp)
   47c3c:	dcc00415 	stw	r19,16(sp)
   47c40:	dc400215 	stw	r17,8(sp)
   47c44:	dc000115 	stw	r16,4(sp)
   47c48:	288002c4 	addi	r2,r5,11
   47c4c:	00c00584 	movi	r3,22
   47c50:	2025883a 	mov	r18,r4
   47c54:	18807f2e 	bgeu	r3,r2,47e54 <_malloc_r+0x238>
   47c58:	047ffe04 	movi	r17,-8
   47c5c:	1462703a 	and	r17,r2,r17
   47c60:	8800a316 	blt	r17,zero,47ef0 <_malloc_r+0x2d4>
   47c64:	8940a236 	bltu	r17,r5,47ef0 <_malloc_r+0x2d4>
   47c68:	004ec540 	call	4ec54 <__malloc_lock>
   47c6c:	00807dc4 	movi	r2,503
   47c70:	1441e92e 	bgeu	r2,r17,48418 <_malloc_r+0x7fc>
   47c74:	8804d27a 	srli	r2,r17,9
   47c78:	1000a126 	beq	r2,zero,47f00 <_malloc_r+0x2e4>
   47c7c:	00c00104 	movi	r3,4
   47c80:	18811e36 	bltu	r3,r2,480fc <_malloc_r+0x4e0>
   47c84:	8804d1ba 	srli	r2,r17,6
   47c88:	12000e44 	addi	r8,r2,57
   47c8c:	11c00e04 	addi	r7,r2,56
   47c90:	4209883a 	add	r4,r8,r8
   47c94:	04c00174 	movhi	r19,5
   47c98:	2109883a 	add	r4,r4,r4
   47c9c:	9cc5e904 	addi	r19,r19,6052
   47ca0:	2109883a 	add	r4,r4,r4
   47ca4:	9909883a 	add	r4,r19,r4
   47ca8:	24000117 	ldw	r16,4(r4)
   47cac:	213ffe04 	addi	r4,r4,-8
   47cb0:	24009726 	beq	r4,r16,47f10 <_malloc_r+0x2f4>
   47cb4:	80800117 	ldw	r2,4(r16)
   47cb8:	01bfff04 	movi	r6,-4
   47cbc:	014003c4 	movi	r5,15
   47cc0:	1184703a 	and	r2,r2,r6
   47cc4:	1447c83a 	sub	r3,r2,r17
   47cc8:	28c00716 	blt	r5,r3,47ce8 <_malloc_r+0xcc>
   47ccc:	1800920e 	bge	r3,zero,47f18 <_malloc_r+0x2fc>
   47cd0:	84000317 	ldw	r16,12(r16)
   47cd4:	24008e26 	beq	r4,r16,47f10 <_malloc_r+0x2f4>
   47cd8:	80800117 	ldw	r2,4(r16)
   47cdc:	1184703a 	and	r2,r2,r6
   47ce0:	1447c83a 	sub	r3,r2,r17
   47ce4:	28fff90e 	bge	r5,r3,47ccc <__alt_data_end+0xfffc7ccc>
   47ce8:	3809883a 	mov	r4,r7
   47cec:	01800174 	movhi	r6,5
   47cf0:	9c000417 	ldw	r16,16(r19)
   47cf4:	3185e904 	addi	r6,r6,6052
   47cf8:	32000204 	addi	r8,r6,8
   47cfc:	82013426 	beq	r16,r8,481d0 <_malloc_r+0x5b4>
   47d00:	80c00117 	ldw	r3,4(r16)
   47d04:	00bfff04 	movi	r2,-4
   47d08:	188e703a 	and	r7,r3,r2
   47d0c:	3c45c83a 	sub	r2,r7,r17
   47d10:	00c003c4 	movi	r3,15
   47d14:	18811f16 	blt	r3,r2,48194 <_malloc_r+0x578>
   47d18:	32000515 	stw	r8,20(r6)
   47d1c:	32000415 	stw	r8,16(r6)
   47d20:	10007f0e 	bge	r2,zero,47f20 <_malloc_r+0x304>
   47d24:	00807fc4 	movi	r2,511
   47d28:	11c0fd36 	bltu	r2,r7,48120 <_malloc_r+0x504>
   47d2c:	3806d0fa 	srli	r3,r7,3
   47d30:	01c00044 	movi	r7,1
   47d34:	30800117 	ldw	r2,4(r6)
   47d38:	19400044 	addi	r5,r3,1
   47d3c:	294b883a 	add	r5,r5,r5
   47d40:	1807d0ba 	srai	r3,r3,2
   47d44:	294b883a 	add	r5,r5,r5
   47d48:	294b883a 	add	r5,r5,r5
   47d4c:	298b883a 	add	r5,r5,r6
   47d50:	38c6983a 	sll	r3,r7,r3
   47d54:	29c00017 	ldw	r7,0(r5)
   47d58:	2a7ffe04 	addi	r9,r5,-8
   47d5c:	1886b03a 	or	r3,r3,r2
   47d60:	82400315 	stw	r9,12(r16)
   47d64:	81c00215 	stw	r7,8(r16)
   47d68:	30c00115 	stw	r3,4(r6)
   47d6c:	2c000015 	stw	r16,0(r5)
   47d70:	3c000315 	stw	r16,12(r7)
   47d74:	2005d0ba 	srai	r2,r4,2
   47d78:	01400044 	movi	r5,1
   47d7c:	288a983a 	sll	r5,r5,r2
   47d80:	19406f36 	bltu	r3,r5,47f40 <_malloc_r+0x324>
   47d84:	28c4703a 	and	r2,r5,r3
   47d88:	10000a1e 	bne	r2,zero,47db4 <_malloc_r+0x198>
   47d8c:	00bfff04 	movi	r2,-4
   47d90:	294b883a 	add	r5,r5,r5
   47d94:	2088703a 	and	r4,r4,r2
   47d98:	28c4703a 	and	r2,r5,r3
   47d9c:	21000104 	addi	r4,r4,4
   47da0:	1000041e 	bne	r2,zero,47db4 <_malloc_r+0x198>
   47da4:	294b883a 	add	r5,r5,r5
   47da8:	28c4703a 	and	r2,r5,r3
   47dac:	21000104 	addi	r4,r4,4
   47db0:	103ffc26 	beq	r2,zero,47da4 <__alt_data_end+0xfffc7da4>
   47db4:	02bfff04 	movi	r10,-4
   47db8:	024003c4 	movi	r9,15
   47dbc:	21800044 	addi	r6,r4,1
   47dc0:	318d883a 	add	r6,r6,r6
   47dc4:	318d883a 	add	r6,r6,r6
   47dc8:	318d883a 	add	r6,r6,r6
   47dcc:	998d883a 	add	r6,r19,r6
   47dd0:	333ffe04 	addi	r12,r6,-8
   47dd4:	2017883a 	mov	r11,r4
   47dd8:	31800104 	addi	r6,r6,4
   47ddc:	34000017 	ldw	r16,0(r6)
   47de0:	31fffd04 	addi	r7,r6,-12
   47de4:	81c0041e 	bne	r16,r7,47df8 <_malloc_r+0x1dc>
   47de8:	0000fb06 	br	481d8 <_malloc_r+0x5bc>
   47dec:	1801030e 	bge	r3,zero,481fc <_malloc_r+0x5e0>
   47df0:	84000317 	ldw	r16,12(r16)
   47df4:	81c0f826 	beq	r16,r7,481d8 <_malloc_r+0x5bc>
   47df8:	80800117 	ldw	r2,4(r16)
   47dfc:	1284703a 	and	r2,r2,r10
   47e00:	1447c83a 	sub	r3,r2,r17
   47e04:	48fff90e 	bge	r9,r3,47dec <__alt_data_end+0xfffc7dec>
   47e08:	80800317 	ldw	r2,12(r16)
   47e0c:	81000217 	ldw	r4,8(r16)
   47e10:	89400054 	ori	r5,r17,1
   47e14:	81400115 	stw	r5,4(r16)
   47e18:	20800315 	stw	r2,12(r4)
   47e1c:	11000215 	stw	r4,8(r2)
   47e20:	8463883a 	add	r17,r16,r17
   47e24:	9c400515 	stw	r17,20(r19)
   47e28:	9c400415 	stw	r17,16(r19)
   47e2c:	18800054 	ori	r2,r3,1
   47e30:	88800115 	stw	r2,4(r17)
   47e34:	8a000315 	stw	r8,12(r17)
   47e38:	8a000215 	stw	r8,8(r17)
   47e3c:	88e3883a 	add	r17,r17,r3
   47e40:	88c00015 	stw	r3,0(r17)
   47e44:	9009883a 	mov	r4,r18
   47e48:	004ec780 	call	4ec78 <__malloc_unlock>
   47e4c:	80800204 	addi	r2,r16,8
   47e50:	00001b06 	br	47ec0 <_malloc_r+0x2a4>
   47e54:	04400404 	movi	r17,16
   47e58:	89402536 	bltu	r17,r5,47ef0 <_malloc_r+0x2d4>
   47e5c:	004ec540 	call	4ec54 <__malloc_lock>
   47e60:	00800184 	movi	r2,6
   47e64:	01000084 	movi	r4,2
   47e68:	04c00174 	movhi	r19,5
   47e6c:	1085883a 	add	r2,r2,r2
   47e70:	9cc5e904 	addi	r19,r19,6052
   47e74:	1085883a 	add	r2,r2,r2
   47e78:	9885883a 	add	r2,r19,r2
   47e7c:	14000117 	ldw	r16,4(r2)
   47e80:	10fffe04 	addi	r3,r2,-8
   47e84:	80c0d926 	beq	r16,r3,481ec <_malloc_r+0x5d0>
   47e88:	80c00117 	ldw	r3,4(r16)
   47e8c:	81000317 	ldw	r4,12(r16)
   47e90:	00bfff04 	movi	r2,-4
   47e94:	1884703a 	and	r2,r3,r2
   47e98:	81400217 	ldw	r5,8(r16)
   47e9c:	8085883a 	add	r2,r16,r2
   47ea0:	10c00117 	ldw	r3,4(r2)
   47ea4:	29000315 	stw	r4,12(r5)
   47ea8:	21400215 	stw	r5,8(r4)
   47eac:	18c00054 	ori	r3,r3,1
   47eb0:	10c00115 	stw	r3,4(r2)
   47eb4:	9009883a 	mov	r4,r18
   47eb8:	004ec780 	call	4ec78 <__malloc_unlock>
   47ebc:	80800204 	addi	r2,r16,8
   47ec0:	dfc00a17 	ldw	ra,40(sp)
   47ec4:	df000917 	ldw	fp,36(sp)
   47ec8:	ddc00817 	ldw	r23,32(sp)
   47ecc:	dd800717 	ldw	r22,28(sp)
   47ed0:	dd400617 	ldw	r21,24(sp)
   47ed4:	dd000517 	ldw	r20,20(sp)
   47ed8:	dcc00417 	ldw	r19,16(sp)
   47edc:	dc800317 	ldw	r18,12(sp)
   47ee0:	dc400217 	ldw	r17,8(sp)
   47ee4:	dc000117 	ldw	r16,4(sp)
   47ee8:	dec00b04 	addi	sp,sp,44
   47eec:	f800283a 	ret
   47ef0:	00800304 	movi	r2,12
   47ef4:	90800015 	stw	r2,0(r18)
   47ef8:	0005883a 	mov	r2,zero
   47efc:	003ff006 	br	47ec0 <__alt_data_end+0xfffc7ec0>
   47f00:	01002004 	movi	r4,128
   47f04:	02001004 	movi	r8,64
   47f08:	01c00fc4 	movi	r7,63
   47f0c:	003f6106 	br	47c94 <__alt_data_end+0xfffc7c94>
   47f10:	4009883a 	mov	r4,r8
   47f14:	003f7506 	br	47cec <__alt_data_end+0xfffc7cec>
   47f18:	81000317 	ldw	r4,12(r16)
   47f1c:	003fde06 	br	47e98 <__alt_data_end+0xfffc7e98>
   47f20:	81c5883a 	add	r2,r16,r7
   47f24:	11400117 	ldw	r5,4(r2)
   47f28:	9009883a 	mov	r4,r18
   47f2c:	29400054 	ori	r5,r5,1
   47f30:	11400115 	stw	r5,4(r2)
   47f34:	004ec780 	call	4ec78 <__malloc_unlock>
   47f38:	80800204 	addi	r2,r16,8
   47f3c:	003fe006 	br	47ec0 <__alt_data_end+0xfffc7ec0>
   47f40:	9c000217 	ldw	r16,8(r19)
   47f44:	00bfff04 	movi	r2,-4
   47f48:	85800117 	ldw	r22,4(r16)
   47f4c:	b0ac703a 	and	r22,r22,r2
   47f50:	b4400336 	bltu	r22,r17,47f60 <_malloc_r+0x344>
   47f54:	b445c83a 	sub	r2,r22,r17
   47f58:	00c003c4 	movi	r3,15
   47f5c:	18805d16 	blt	r3,r2,480d4 <_malloc_r+0x4b8>
   47f60:	05c00174 	movhi	r23,5
   47f64:	00800174 	movhi	r2,5
   47f68:	10926904 	addi	r2,r2,18852
   47f6c:	bdcb7004 	addi	r23,r23,11712
   47f70:	15400017 	ldw	r21,0(r2)
   47f74:	b8c00017 	ldw	r3,0(r23)
   47f78:	00bfffc4 	movi	r2,-1
   47f7c:	858d883a 	add	r6,r16,r22
   47f80:	8d6b883a 	add	r21,r17,r21
   47f84:	1880ea26 	beq	r3,r2,48330 <_malloc_r+0x714>
   47f88:	ad4403c4 	addi	r21,r21,4111
   47f8c:	00bc0004 	movi	r2,-4096
   47f90:	a8aa703a 	and	r21,r21,r2
   47f94:	a80b883a 	mov	r5,r21
   47f98:	9009883a 	mov	r4,r18
   47f9c:	d9800015 	stw	r6,0(sp)
   47fa0:	00497ec0 	call	497ec <_sbrk_r>
   47fa4:	1029883a 	mov	r20,r2
   47fa8:	00bfffc4 	movi	r2,-1
   47fac:	d9800017 	ldw	r6,0(sp)
   47fb0:	a080e826 	beq	r20,r2,48354 <_malloc_r+0x738>
   47fb4:	a180a636 	bltu	r20,r6,48250 <_malloc_r+0x634>
   47fb8:	07000174 	movhi	fp,5
   47fbc:	e7127204 	addi	fp,fp,18888
   47fc0:	e0800017 	ldw	r2,0(fp)
   47fc4:	a887883a 	add	r3,r21,r2
   47fc8:	e0c00015 	stw	r3,0(fp)
   47fcc:	3500e626 	beq	r6,r20,48368 <_malloc_r+0x74c>
   47fd0:	b9000017 	ldw	r4,0(r23)
   47fd4:	00bfffc4 	movi	r2,-1
   47fd8:	2080ee26 	beq	r4,r2,48394 <_malloc_r+0x778>
   47fdc:	a185c83a 	sub	r2,r20,r6
   47fe0:	10c5883a 	add	r2,r2,r3
   47fe4:	e0800015 	stw	r2,0(fp)
   47fe8:	a0c001cc 	andi	r3,r20,7
   47fec:	1800bc26 	beq	r3,zero,482e0 <_malloc_r+0x6c4>
   47ff0:	a0e9c83a 	sub	r20,r20,r3
   47ff4:	00840204 	movi	r2,4104
   47ff8:	a5000204 	addi	r20,r20,8
   47ffc:	10c7c83a 	sub	r3,r2,r3
   48000:	a545883a 	add	r2,r20,r21
   48004:	1083ffcc 	andi	r2,r2,4095
   48008:	18abc83a 	sub	r21,r3,r2
   4800c:	a80b883a 	mov	r5,r21
   48010:	9009883a 	mov	r4,r18
   48014:	00497ec0 	call	497ec <_sbrk_r>
   48018:	00ffffc4 	movi	r3,-1
   4801c:	10c0e126 	beq	r2,r3,483a4 <_malloc_r+0x788>
   48020:	1505c83a 	sub	r2,r2,r20
   48024:	1545883a 	add	r2,r2,r21
   48028:	10800054 	ori	r2,r2,1
   4802c:	e0c00017 	ldw	r3,0(fp)
   48030:	9d000215 	stw	r20,8(r19)
   48034:	a0800115 	stw	r2,4(r20)
   48038:	a8c7883a 	add	r3,r21,r3
   4803c:	e0c00015 	stw	r3,0(fp)
   48040:	84c00e26 	beq	r16,r19,4807c <_malloc_r+0x460>
   48044:	018003c4 	movi	r6,15
   48048:	3580a72e 	bgeu	r6,r22,482e8 <_malloc_r+0x6cc>
   4804c:	81400117 	ldw	r5,4(r16)
   48050:	013ffe04 	movi	r4,-8
   48054:	b0bffd04 	addi	r2,r22,-12
   48058:	1104703a 	and	r2,r2,r4
   4805c:	2900004c 	andi	r4,r5,1
   48060:	2088b03a 	or	r4,r4,r2
   48064:	81000115 	stw	r4,4(r16)
   48068:	01400144 	movi	r5,5
   4806c:	8089883a 	add	r4,r16,r2
   48070:	21400115 	stw	r5,4(r4)
   48074:	21400215 	stw	r5,8(r4)
   48078:	3080cd36 	bltu	r6,r2,483b0 <_malloc_r+0x794>
   4807c:	00800174 	movhi	r2,5
   48080:	10926804 	addi	r2,r2,18848
   48084:	11000017 	ldw	r4,0(r2)
   48088:	20c0012e 	bgeu	r4,r3,48090 <_malloc_r+0x474>
   4808c:	10c00015 	stw	r3,0(r2)
   48090:	00800174 	movhi	r2,5
   48094:	10926704 	addi	r2,r2,18844
   48098:	11000017 	ldw	r4,0(r2)
   4809c:	9c000217 	ldw	r16,8(r19)
   480a0:	20c0012e 	bgeu	r4,r3,480a8 <_malloc_r+0x48c>
   480a4:	10c00015 	stw	r3,0(r2)
   480a8:	80c00117 	ldw	r3,4(r16)
   480ac:	00bfff04 	movi	r2,-4
   480b0:	1886703a 	and	r3,r3,r2
   480b4:	1c45c83a 	sub	r2,r3,r17
   480b8:	1c400236 	bltu	r3,r17,480c4 <_malloc_r+0x4a8>
   480bc:	00c003c4 	movi	r3,15
   480c0:	18800416 	blt	r3,r2,480d4 <_malloc_r+0x4b8>
   480c4:	9009883a 	mov	r4,r18
   480c8:	004ec780 	call	4ec78 <__malloc_unlock>
   480cc:	0005883a 	mov	r2,zero
   480d0:	003f7b06 	br	47ec0 <__alt_data_end+0xfffc7ec0>
   480d4:	88c00054 	ori	r3,r17,1
   480d8:	80c00115 	stw	r3,4(r16)
   480dc:	8463883a 	add	r17,r16,r17
   480e0:	10800054 	ori	r2,r2,1
   480e4:	9c400215 	stw	r17,8(r19)
   480e8:	88800115 	stw	r2,4(r17)
   480ec:	9009883a 	mov	r4,r18
   480f0:	004ec780 	call	4ec78 <__malloc_unlock>
   480f4:	80800204 	addi	r2,r16,8
   480f8:	003f7106 	br	47ec0 <__alt_data_end+0xfffc7ec0>
   480fc:	00c00504 	movi	r3,20
   48100:	18804a2e 	bgeu	r3,r2,4822c <_malloc_r+0x610>
   48104:	00c01504 	movi	r3,84
   48108:	18806e36 	bltu	r3,r2,482c4 <_malloc_r+0x6a8>
   4810c:	8804d33a 	srli	r2,r17,12
   48110:	12001bc4 	addi	r8,r2,111
   48114:	11c01b84 	addi	r7,r2,110
   48118:	4209883a 	add	r4,r8,r8
   4811c:	003edd06 	br	47c94 <__alt_data_end+0xfffc7c94>
   48120:	3804d27a 	srli	r2,r7,9
   48124:	00c00104 	movi	r3,4
   48128:	1880442e 	bgeu	r3,r2,4823c <_malloc_r+0x620>
   4812c:	00c00504 	movi	r3,20
   48130:	18808136 	bltu	r3,r2,48338 <_malloc_r+0x71c>
   48134:	11401704 	addi	r5,r2,92
   48138:	10c016c4 	addi	r3,r2,91
   4813c:	294b883a 	add	r5,r5,r5
   48140:	294b883a 	add	r5,r5,r5
   48144:	294b883a 	add	r5,r5,r5
   48148:	994b883a 	add	r5,r19,r5
   4814c:	28800017 	ldw	r2,0(r5)
   48150:	01800174 	movhi	r6,5
   48154:	297ffe04 	addi	r5,r5,-8
   48158:	3185e904 	addi	r6,r6,6052
   4815c:	28806526 	beq	r5,r2,482f4 <_malloc_r+0x6d8>
   48160:	01bfff04 	movi	r6,-4
   48164:	10c00117 	ldw	r3,4(r2)
   48168:	1986703a 	and	r3,r3,r6
   4816c:	38c0022e 	bgeu	r7,r3,48178 <_malloc_r+0x55c>
   48170:	10800217 	ldw	r2,8(r2)
   48174:	28bffb1e 	bne	r5,r2,48164 <__alt_data_end+0xfffc8164>
   48178:	11400317 	ldw	r5,12(r2)
   4817c:	98c00117 	ldw	r3,4(r19)
   48180:	81400315 	stw	r5,12(r16)
   48184:	80800215 	stw	r2,8(r16)
   48188:	2c000215 	stw	r16,8(r5)
   4818c:	14000315 	stw	r16,12(r2)
   48190:	003ef806 	br	47d74 <__alt_data_end+0xfffc7d74>
   48194:	88c00054 	ori	r3,r17,1
   48198:	80c00115 	stw	r3,4(r16)
   4819c:	8463883a 	add	r17,r16,r17
   481a0:	34400515 	stw	r17,20(r6)
   481a4:	34400415 	stw	r17,16(r6)
   481a8:	10c00054 	ori	r3,r2,1
   481ac:	8a000315 	stw	r8,12(r17)
   481b0:	8a000215 	stw	r8,8(r17)
   481b4:	88c00115 	stw	r3,4(r17)
   481b8:	88a3883a 	add	r17,r17,r2
   481bc:	88800015 	stw	r2,0(r17)
   481c0:	9009883a 	mov	r4,r18
   481c4:	004ec780 	call	4ec78 <__malloc_unlock>
   481c8:	80800204 	addi	r2,r16,8
   481cc:	003f3c06 	br	47ec0 <__alt_data_end+0xfffc7ec0>
   481d0:	30c00117 	ldw	r3,4(r6)
   481d4:	003ee706 	br	47d74 <__alt_data_end+0xfffc7d74>
   481d8:	5ac00044 	addi	r11,r11,1
   481dc:	588000cc 	andi	r2,r11,3
   481e0:	31800204 	addi	r6,r6,8
   481e4:	103efd1e 	bne	r2,zero,47ddc <__alt_data_end+0xfffc7ddc>
   481e8:	00002406 	br	4827c <_malloc_r+0x660>
   481ec:	14000317 	ldw	r16,12(r2)
   481f0:	143f251e 	bne	r2,r16,47e88 <__alt_data_end+0xfffc7e88>
   481f4:	21000084 	addi	r4,r4,2
   481f8:	003ebc06 	br	47cec <__alt_data_end+0xfffc7cec>
   481fc:	8085883a 	add	r2,r16,r2
   48200:	10c00117 	ldw	r3,4(r2)
   48204:	81000317 	ldw	r4,12(r16)
   48208:	81400217 	ldw	r5,8(r16)
   4820c:	18c00054 	ori	r3,r3,1
   48210:	10c00115 	stw	r3,4(r2)
   48214:	29000315 	stw	r4,12(r5)
   48218:	21400215 	stw	r5,8(r4)
   4821c:	9009883a 	mov	r4,r18
   48220:	004ec780 	call	4ec78 <__malloc_unlock>
   48224:	80800204 	addi	r2,r16,8
   48228:	003f2506 	br	47ec0 <__alt_data_end+0xfffc7ec0>
   4822c:	12001704 	addi	r8,r2,92
   48230:	11c016c4 	addi	r7,r2,91
   48234:	4209883a 	add	r4,r8,r8
   48238:	003e9606 	br	47c94 <__alt_data_end+0xfffc7c94>
   4823c:	3804d1ba 	srli	r2,r7,6
   48240:	11400e44 	addi	r5,r2,57
   48244:	10c00e04 	addi	r3,r2,56
   48248:	294b883a 	add	r5,r5,r5
   4824c:	003fbc06 	br	48140 <__alt_data_end+0xfffc8140>
   48250:	84ff5926 	beq	r16,r19,47fb8 <__alt_data_end+0xfffc7fb8>
   48254:	00800174 	movhi	r2,5
   48258:	1085e904 	addi	r2,r2,6052
   4825c:	14000217 	ldw	r16,8(r2)
   48260:	00bfff04 	movi	r2,-4
   48264:	80c00117 	ldw	r3,4(r16)
   48268:	1886703a 	and	r3,r3,r2
   4826c:	003f9106 	br	480b4 <__alt_data_end+0xfffc80b4>
   48270:	60800217 	ldw	r2,8(r12)
   48274:	213fffc4 	addi	r4,r4,-1
   48278:	1300651e 	bne	r2,r12,48410 <_malloc_r+0x7f4>
   4827c:	208000cc 	andi	r2,r4,3
   48280:	633ffe04 	addi	r12,r12,-8
   48284:	103ffa1e 	bne	r2,zero,48270 <__alt_data_end+0xfffc8270>
   48288:	98800117 	ldw	r2,4(r19)
   4828c:	0146303a 	nor	r3,zero,r5
   48290:	1884703a 	and	r2,r3,r2
   48294:	98800115 	stw	r2,4(r19)
   48298:	294b883a 	add	r5,r5,r5
   4829c:	117f2836 	bltu	r2,r5,47f40 <__alt_data_end+0xfffc7f40>
   482a0:	283f2726 	beq	r5,zero,47f40 <__alt_data_end+0xfffc7f40>
   482a4:	2886703a 	and	r3,r5,r2
   482a8:	5809883a 	mov	r4,r11
   482ac:	183ec31e 	bne	r3,zero,47dbc <__alt_data_end+0xfffc7dbc>
   482b0:	294b883a 	add	r5,r5,r5
   482b4:	2886703a 	and	r3,r5,r2
   482b8:	21000104 	addi	r4,r4,4
   482bc:	183ffc26 	beq	r3,zero,482b0 <__alt_data_end+0xfffc82b0>
   482c0:	003ebe06 	br	47dbc <__alt_data_end+0xfffc7dbc>
   482c4:	00c05504 	movi	r3,340
   482c8:	18801236 	bltu	r3,r2,48314 <_malloc_r+0x6f8>
   482cc:	8804d3fa 	srli	r2,r17,15
   482d0:	12001e04 	addi	r8,r2,120
   482d4:	11c01dc4 	addi	r7,r2,119
   482d8:	4209883a 	add	r4,r8,r8
   482dc:	003e6d06 	br	47c94 <__alt_data_end+0xfffc7c94>
   482e0:	00c40004 	movi	r3,4096
   482e4:	003f4606 	br	48000 <__alt_data_end+0xfffc8000>
   482e8:	00800044 	movi	r2,1
   482ec:	a0800115 	stw	r2,4(r20)
   482f0:	003f7406 	br	480c4 <__alt_data_end+0xfffc80c4>
   482f4:	1805d0ba 	srai	r2,r3,2
   482f8:	01c00044 	movi	r7,1
   482fc:	30c00117 	ldw	r3,4(r6)
   48300:	388e983a 	sll	r7,r7,r2
   48304:	2805883a 	mov	r2,r5
   48308:	38c6b03a 	or	r3,r7,r3
   4830c:	30c00115 	stw	r3,4(r6)
   48310:	003f9b06 	br	48180 <__alt_data_end+0xfffc8180>
   48314:	00c15504 	movi	r3,1364
   48318:	18801a36 	bltu	r3,r2,48384 <_malloc_r+0x768>
   4831c:	8804d4ba 	srli	r2,r17,18
   48320:	12001f44 	addi	r8,r2,125
   48324:	11c01f04 	addi	r7,r2,124
   48328:	4209883a 	add	r4,r8,r8
   4832c:	003e5906 	br	47c94 <__alt_data_end+0xfffc7c94>
   48330:	ad400404 	addi	r21,r21,16
   48334:	003f1706 	br	47f94 <__alt_data_end+0xfffc7f94>
   48338:	00c01504 	movi	r3,84
   4833c:	18802336 	bltu	r3,r2,483cc <_malloc_r+0x7b0>
   48340:	3804d33a 	srli	r2,r7,12
   48344:	11401bc4 	addi	r5,r2,111
   48348:	10c01b84 	addi	r3,r2,110
   4834c:	294b883a 	add	r5,r5,r5
   48350:	003f7b06 	br	48140 <__alt_data_end+0xfffc8140>
   48354:	9c000217 	ldw	r16,8(r19)
   48358:	00bfff04 	movi	r2,-4
   4835c:	80c00117 	ldw	r3,4(r16)
   48360:	1886703a 	and	r3,r3,r2
   48364:	003f5306 	br	480b4 <__alt_data_end+0xfffc80b4>
   48368:	3083ffcc 	andi	r2,r6,4095
   4836c:	103f181e 	bne	r2,zero,47fd0 <__alt_data_end+0xfffc7fd0>
   48370:	99000217 	ldw	r4,8(r19)
   48374:	b545883a 	add	r2,r22,r21
   48378:	10800054 	ori	r2,r2,1
   4837c:	20800115 	stw	r2,4(r4)
   48380:	003f3e06 	br	4807c <__alt_data_end+0xfffc807c>
   48384:	01003f84 	movi	r4,254
   48388:	02001fc4 	movi	r8,127
   4838c:	01c01f84 	movi	r7,126
   48390:	003e4006 	br	47c94 <__alt_data_end+0xfffc7c94>
   48394:	00800174 	movhi	r2,5
   48398:	108b7004 	addi	r2,r2,11712
   4839c:	15000015 	stw	r20,0(r2)
   483a0:	003f1106 	br	47fe8 <__alt_data_end+0xfffc7fe8>
   483a4:	00800044 	movi	r2,1
   483a8:	002b883a 	mov	r21,zero
   483ac:	003f1f06 	br	4802c <__alt_data_end+0xfffc802c>
   483b0:	81400204 	addi	r5,r16,8
   483b4:	9009883a 	mov	r4,r18
   483b8:	00474ec0 	call	474ec <_free_r>
   483bc:	00800174 	movhi	r2,5
   483c0:	10927204 	addi	r2,r2,18888
   483c4:	10c00017 	ldw	r3,0(r2)
   483c8:	003f2c06 	br	4807c <__alt_data_end+0xfffc807c>
   483cc:	00c05504 	movi	r3,340
   483d0:	18800536 	bltu	r3,r2,483e8 <_malloc_r+0x7cc>
   483d4:	3804d3fa 	srli	r2,r7,15
   483d8:	11401e04 	addi	r5,r2,120
   483dc:	10c01dc4 	addi	r3,r2,119
   483e0:	294b883a 	add	r5,r5,r5
   483e4:	003f5606 	br	48140 <__alt_data_end+0xfffc8140>
   483e8:	00c15504 	movi	r3,1364
   483ec:	18800536 	bltu	r3,r2,48404 <_malloc_r+0x7e8>
   483f0:	3804d4ba 	srli	r2,r7,18
   483f4:	11401f44 	addi	r5,r2,125
   483f8:	10c01f04 	addi	r3,r2,124
   483fc:	294b883a 	add	r5,r5,r5
   48400:	003f4f06 	br	48140 <__alt_data_end+0xfffc8140>
   48404:	01403f84 	movi	r5,254
   48408:	00c01f84 	movi	r3,126
   4840c:	003f4c06 	br	48140 <__alt_data_end+0xfffc8140>
   48410:	98800117 	ldw	r2,4(r19)
   48414:	003fa006 	br	48298 <__alt_data_end+0xfffc8298>
   48418:	8808d0fa 	srli	r4,r17,3
   4841c:	20800044 	addi	r2,r4,1
   48420:	1085883a 	add	r2,r2,r2
   48424:	003e9006 	br	47e68 <__alt_data_end+0xfffc7e68>

00048428 <memchr>:
   48428:	208000cc 	andi	r2,r4,3
   4842c:	280f883a 	mov	r7,r5
   48430:	10003426 	beq	r2,zero,48504 <memchr+0xdc>
   48434:	30bfffc4 	addi	r2,r6,-1
   48438:	30001a26 	beq	r6,zero,484a4 <memchr+0x7c>
   4843c:	20c00003 	ldbu	r3,0(r4)
   48440:	29803fcc 	andi	r6,r5,255
   48444:	30c0051e 	bne	r6,r3,4845c <memchr+0x34>
   48448:	00001806 	br	484ac <memchr+0x84>
   4844c:	10001526 	beq	r2,zero,484a4 <memchr+0x7c>
   48450:	20c00003 	ldbu	r3,0(r4)
   48454:	10bfffc4 	addi	r2,r2,-1
   48458:	30c01426 	beq	r6,r3,484ac <memchr+0x84>
   4845c:	21000044 	addi	r4,r4,1
   48460:	20c000cc 	andi	r3,r4,3
   48464:	183ff91e 	bne	r3,zero,4844c <__alt_data_end+0xfffc844c>
   48468:	020000c4 	movi	r8,3
   4846c:	40801136 	bltu	r8,r2,484b4 <memchr+0x8c>
   48470:	10000c26 	beq	r2,zero,484a4 <memchr+0x7c>
   48474:	20c00003 	ldbu	r3,0(r4)
   48478:	29403fcc 	andi	r5,r5,255
   4847c:	28c00b26 	beq	r5,r3,484ac <memchr+0x84>
   48480:	20c00044 	addi	r3,r4,1
   48484:	39803fcc 	andi	r6,r7,255
   48488:	2089883a 	add	r4,r4,r2
   4848c:	00000306 	br	4849c <memchr+0x74>
   48490:	18c00044 	addi	r3,r3,1
   48494:	197fffc3 	ldbu	r5,-1(r3)
   48498:	31400526 	beq	r6,r5,484b0 <memchr+0x88>
   4849c:	1805883a 	mov	r2,r3
   484a0:	20fffb1e 	bne	r4,r3,48490 <__alt_data_end+0xfffc8490>
   484a4:	0005883a 	mov	r2,zero
   484a8:	f800283a 	ret
   484ac:	2005883a 	mov	r2,r4
   484b0:	f800283a 	ret
   484b4:	28c03fcc 	andi	r3,r5,255
   484b8:	1812923a 	slli	r9,r3,8
   484bc:	02ffbff4 	movhi	r11,65279
   484c0:	02a02074 	movhi	r10,32897
   484c4:	48d2b03a 	or	r9,r9,r3
   484c8:	4806943a 	slli	r3,r9,16
   484cc:	5affbfc4 	addi	r11,r11,-257
   484d0:	52a02004 	addi	r10,r10,-32640
   484d4:	48d2b03a 	or	r9,r9,r3
   484d8:	20c00017 	ldw	r3,0(r4)
   484dc:	48c6f03a 	xor	r3,r9,r3
   484e0:	1acd883a 	add	r6,r3,r11
   484e4:	00c6303a 	nor	r3,zero,r3
   484e8:	30c6703a 	and	r3,r6,r3
   484ec:	1a86703a 	and	r3,r3,r10
   484f0:	183fe01e 	bne	r3,zero,48474 <__alt_data_end+0xfffc8474>
   484f4:	10bfff04 	addi	r2,r2,-4
   484f8:	21000104 	addi	r4,r4,4
   484fc:	40bff636 	bltu	r8,r2,484d8 <__alt_data_end+0xfffc84d8>
   48500:	003fdb06 	br	48470 <__alt_data_end+0xfffc8470>
   48504:	3005883a 	mov	r2,r6
   48508:	003fd706 	br	48468 <__alt_data_end+0xfffc8468>

0004850c <memcpy>:
   4850c:	defffd04 	addi	sp,sp,-12
   48510:	dfc00215 	stw	ra,8(sp)
   48514:	dc400115 	stw	r17,4(sp)
   48518:	dc000015 	stw	r16,0(sp)
   4851c:	00c003c4 	movi	r3,15
   48520:	2005883a 	mov	r2,r4
   48524:	1980452e 	bgeu	r3,r6,4863c <memcpy+0x130>
   48528:	2906b03a 	or	r3,r5,r4
   4852c:	18c000cc 	andi	r3,r3,3
   48530:	1800441e 	bne	r3,zero,48644 <memcpy+0x138>
   48534:	347ffc04 	addi	r17,r6,-16
   48538:	8822d13a 	srli	r17,r17,4
   4853c:	28c00104 	addi	r3,r5,4
   48540:	23400104 	addi	r13,r4,4
   48544:	8820913a 	slli	r16,r17,4
   48548:	2b000204 	addi	r12,r5,8
   4854c:	22c00204 	addi	r11,r4,8
   48550:	84000504 	addi	r16,r16,20
   48554:	2a800304 	addi	r10,r5,12
   48558:	22400304 	addi	r9,r4,12
   4855c:	2c21883a 	add	r16,r5,r16
   48560:	2811883a 	mov	r8,r5
   48564:	200f883a 	mov	r7,r4
   48568:	41000017 	ldw	r4,0(r8)
   4856c:	1fc00017 	ldw	ra,0(r3)
   48570:	63c00017 	ldw	r15,0(r12)
   48574:	39000015 	stw	r4,0(r7)
   48578:	53800017 	ldw	r14,0(r10)
   4857c:	6fc00015 	stw	ra,0(r13)
   48580:	5bc00015 	stw	r15,0(r11)
   48584:	4b800015 	stw	r14,0(r9)
   48588:	18c00404 	addi	r3,r3,16
   4858c:	39c00404 	addi	r7,r7,16
   48590:	42000404 	addi	r8,r8,16
   48594:	6b400404 	addi	r13,r13,16
   48598:	63000404 	addi	r12,r12,16
   4859c:	5ac00404 	addi	r11,r11,16
   485a0:	52800404 	addi	r10,r10,16
   485a4:	4a400404 	addi	r9,r9,16
   485a8:	1c3fef1e 	bne	r3,r16,48568 <__alt_data_end+0xfffc8568>
   485ac:	89c00044 	addi	r7,r17,1
   485b0:	380e913a 	slli	r7,r7,4
   485b4:	310003cc 	andi	r4,r6,15
   485b8:	02c000c4 	movi	r11,3
   485bc:	11c7883a 	add	r3,r2,r7
   485c0:	29cb883a 	add	r5,r5,r7
   485c4:	5900212e 	bgeu	r11,r4,4864c <memcpy+0x140>
   485c8:	1813883a 	mov	r9,r3
   485cc:	2811883a 	mov	r8,r5
   485d0:	200f883a 	mov	r7,r4
   485d4:	42800017 	ldw	r10,0(r8)
   485d8:	4a400104 	addi	r9,r9,4
   485dc:	39ffff04 	addi	r7,r7,-4
   485e0:	4abfff15 	stw	r10,-4(r9)
   485e4:	42000104 	addi	r8,r8,4
   485e8:	59fffa36 	bltu	r11,r7,485d4 <__alt_data_end+0xfffc85d4>
   485ec:	213fff04 	addi	r4,r4,-4
   485f0:	2008d0ba 	srli	r4,r4,2
   485f4:	318000cc 	andi	r6,r6,3
   485f8:	21000044 	addi	r4,r4,1
   485fc:	2109883a 	add	r4,r4,r4
   48600:	2109883a 	add	r4,r4,r4
   48604:	1907883a 	add	r3,r3,r4
   48608:	290b883a 	add	r5,r5,r4
   4860c:	30000626 	beq	r6,zero,48628 <memcpy+0x11c>
   48610:	198d883a 	add	r6,r3,r6
   48614:	29c00003 	ldbu	r7,0(r5)
   48618:	18c00044 	addi	r3,r3,1
   4861c:	29400044 	addi	r5,r5,1
   48620:	19ffffc5 	stb	r7,-1(r3)
   48624:	19bffb1e 	bne	r3,r6,48614 <__alt_data_end+0xfffc8614>
   48628:	dfc00217 	ldw	ra,8(sp)
   4862c:	dc400117 	ldw	r17,4(sp)
   48630:	dc000017 	ldw	r16,0(sp)
   48634:	dec00304 	addi	sp,sp,12
   48638:	f800283a 	ret
   4863c:	2007883a 	mov	r3,r4
   48640:	003ff206 	br	4860c <__alt_data_end+0xfffc860c>
   48644:	2007883a 	mov	r3,r4
   48648:	003ff106 	br	48610 <__alt_data_end+0xfffc8610>
   4864c:	200d883a 	mov	r6,r4
   48650:	003fee06 	br	4860c <__alt_data_end+0xfffc860c>

00048654 <memset>:
   48654:	20c000cc 	andi	r3,r4,3
   48658:	2005883a 	mov	r2,r4
   4865c:	18004426 	beq	r3,zero,48770 <memset+0x11c>
   48660:	31ffffc4 	addi	r7,r6,-1
   48664:	30004026 	beq	r6,zero,48768 <memset+0x114>
   48668:	2813883a 	mov	r9,r5
   4866c:	200d883a 	mov	r6,r4
   48670:	2007883a 	mov	r3,r4
   48674:	00000406 	br	48688 <memset+0x34>
   48678:	3a3fffc4 	addi	r8,r7,-1
   4867c:	31800044 	addi	r6,r6,1
   48680:	38003926 	beq	r7,zero,48768 <memset+0x114>
   48684:	400f883a 	mov	r7,r8
   48688:	18c00044 	addi	r3,r3,1
   4868c:	32400005 	stb	r9,0(r6)
   48690:	1a0000cc 	andi	r8,r3,3
   48694:	403ff81e 	bne	r8,zero,48678 <__alt_data_end+0xfffc8678>
   48698:	010000c4 	movi	r4,3
   4869c:	21c02d2e 	bgeu	r4,r7,48754 <memset+0x100>
   486a0:	29003fcc 	andi	r4,r5,255
   486a4:	200c923a 	slli	r6,r4,8
   486a8:	3108b03a 	or	r4,r6,r4
   486ac:	200c943a 	slli	r6,r4,16
   486b0:	218cb03a 	or	r6,r4,r6
   486b4:	010003c4 	movi	r4,15
   486b8:	21c0182e 	bgeu	r4,r7,4871c <memset+0xc8>
   486bc:	3b3ffc04 	addi	r12,r7,-16
   486c0:	6018d13a 	srli	r12,r12,4
   486c4:	1a000104 	addi	r8,r3,4
   486c8:	1ac00204 	addi	r11,r3,8
   486cc:	6008913a 	slli	r4,r12,4
   486d0:	1a800304 	addi	r10,r3,12
   486d4:	1813883a 	mov	r9,r3
   486d8:	21000504 	addi	r4,r4,20
   486dc:	1909883a 	add	r4,r3,r4
   486e0:	49800015 	stw	r6,0(r9)
   486e4:	41800015 	stw	r6,0(r8)
   486e8:	59800015 	stw	r6,0(r11)
   486ec:	51800015 	stw	r6,0(r10)
   486f0:	42000404 	addi	r8,r8,16
   486f4:	4a400404 	addi	r9,r9,16
   486f8:	5ac00404 	addi	r11,r11,16
   486fc:	52800404 	addi	r10,r10,16
   48700:	413ff71e 	bne	r8,r4,486e0 <__alt_data_end+0xfffc86e0>
   48704:	63000044 	addi	r12,r12,1
   48708:	6018913a 	slli	r12,r12,4
   4870c:	39c003cc 	andi	r7,r7,15
   48710:	010000c4 	movi	r4,3
   48714:	1b07883a 	add	r3,r3,r12
   48718:	21c00e2e 	bgeu	r4,r7,48754 <memset+0x100>
   4871c:	1813883a 	mov	r9,r3
   48720:	3811883a 	mov	r8,r7
   48724:	010000c4 	movi	r4,3
   48728:	49800015 	stw	r6,0(r9)
   4872c:	423fff04 	addi	r8,r8,-4
   48730:	4a400104 	addi	r9,r9,4
   48734:	223ffc36 	bltu	r4,r8,48728 <__alt_data_end+0xfffc8728>
   48738:	393fff04 	addi	r4,r7,-4
   4873c:	2008d0ba 	srli	r4,r4,2
   48740:	39c000cc 	andi	r7,r7,3
   48744:	21000044 	addi	r4,r4,1
   48748:	2109883a 	add	r4,r4,r4
   4874c:	2109883a 	add	r4,r4,r4
   48750:	1907883a 	add	r3,r3,r4
   48754:	38000526 	beq	r7,zero,4876c <memset+0x118>
   48758:	19cf883a 	add	r7,r3,r7
   4875c:	19400005 	stb	r5,0(r3)
   48760:	18c00044 	addi	r3,r3,1
   48764:	38fffd1e 	bne	r7,r3,4875c <__alt_data_end+0xfffc875c>
   48768:	f800283a 	ret
   4876c:	f800283a 	ret
   48770:	2007883a 	mov	r3,r4
   48774:	300f883a 	mov	r7,r6
   48778:	003fc706 	br	48698 <__alt_data_end+0xfffc8698>

0004877c <_Balloc>:
   4877c:	20801317 	ldw	r2,76(r4)
   48780:	defffc04 	addi	sp,sp,-16
   48784:	dc400115 	stw	r17,4(sp)
   48788:	dc000015 	stw	r16,0(sp)
   4878c:	dfc00315 	stw	ra,12(sp)
   48790:	dc800215 	stw	r18,8(sp)
   48794:	2023883a 	mov	r17,r4
   48798:	2821883a 	mov	r16,r5
   4879c:	10000f26 	beq	r2,zero,487dc <_Balloc+0x60>
   487a0:	8407883a 	add	r3,r16,r16
   487a4:	18c7883a 	add	r3,r3,r3
   487a8:	10c7883a 	add	r3,r2,r3
   487ac:	18800017 	ldw	r2,0(r3)
   487b0:	10001126 	beq	r2,zero,487f8 <_Balloc+0x7c>
   487b4:	11000017 	ldw	r4,0(r2)
   487b8:	19000015 	stw	r4,0(r3)
   487bc:	10000415 	stw	zero,16(r2)
   487c0:	10000315 	stw	zero,12(r2)
   487c4:	dfc00317 	ldw	ra,12(sp)
   487c8:	dc800217 	ldw	r18,8(sp)
   487cc:	dc400117 	ldw	r17,4(sp)
   487d0:	dc000017 	ldw	r16,0(sp)
   487d4:	dec00404 	addi	sp,sp,16
   487d8:	f800283a 	ret
   487dc:	01800844 	movi	r6,33
   487e0:	01400104 	movi	r5,4
   487e4:	004b1ec0 	call	4b1ec <_calloc_r>
   487e8:	88801315 	stw	r2,76(r17)
   487ec:	103fec1e 	bne	r2,zero,487a0 <__alt_data_end+0xfffc87a0>
   487f0:	0005883a 	mov	r2,zero
   487f4:	003ff306 	br	487c4 <__alt_data_end+0xfffc87c4>
   487f8:	01400044 	movi	r5,1
   487fc:	2c24983a 	sll	r18,r5,r16
   48800:	8809883a 	mov	r4,r17
   48804:	91800144 	addi	r6,r18,5
   48808:	318d883a 	add	r6,r6,r6
   4880c:	318d883a 	add	r6,r6,r6
   48810:	004b1ec0 	call	4b1ec <_calloc_r>
   48814:	103ff626 	beq	r2,zero,487f0 <__alt_data_end+0xfffc87f0>
   48818:	14000115 	stw	r16,4(r2)
   4881c:	14800215 	stw	r18,8(r2)
   48820:	003fe606 	br	487bc <__alt_data_end+0xfffc87bc>

00048824 <_Bfree>:
   48824:	28000826 	beq	r5,zero,48848 <_Bfree+0x24>
   48828:	28c00117 	ldw	r3,4(r5)
   4882c:	20801317 	ldw	r2,76(r4)
   48830:	18c7883a 	add	r3,r3,r3
   48834:	18c7883a 	add	r3,r3,r3
   48838:	10c5883a 	add	r2,r2,r3
   4883c:	10c00017 	ldw	r3,0(r2)
   48840:	28c00015 	stw	r3,0(r5)
   48844:	11400015 	stw	r5,0(r2)
   48848:	f800283a 	ret

0004884c <__multadd>:
   4884c:	defffa04 	addi	sp,sp,-24
   48850:	dc800315 	stw	r18,12(sp)
   48854:	dc400215 	stw	r17,8(sp)
   48858:	dc000115 	stw	r16,4(sp)
   4885c:	2823883a 	mov	r17,r5
   48860:	2c000417 	ldw	r16,16(r5)
   48864:	dfc00515 	stw	ra,20(sp)
   48868:	dcc00415 	stw	r19,16(sp)
   4886c:	2025883a 	mov	r18,r4
   48870:	29400504 	addi	r5,r5,20
   48874:	0011883a 	mov	r8,zero
   48878:	28c00017 	ldw	r3,0(r5)
   4887c:	29400104 	addi	r5,r5,4
   48880:	42000044 	addi	r8,r8,1
   48884:	18bfffcc 	andi	r2,r3,65535
   48888:	1185383a 	mul	r2,r2,r6
   4888c:	1806d43a 	srli	r3,r3,16
   48890:	11cf883a 	add	r7,r2,r7
   48894:	3808d43a 	srli	r4,r7,16
   48898:	1987383a 	mul	r3,r3,r6
   4889c:	38bfffcc 	andi	r2,r7,65535
   488a0:	1907883a 	add	r3,r3,r4
   488a4:	1808943a 	slli	r4,r3,16
   488a8:	180ed43a 	srli	r7,r3,16
   488ac:	2085883a 	add	r2,r4,r2
   488b0:	28bfff15 	stw	r2,-4(r5)
   488b4:	443ff016 	blt	r8,r16,48878 <__alt_data_end+0xfffc8878>
   488b8:	38000926 	beq	r7,zero,488e0 <__multadd+0x94>
   488bc:	88800217 	ldw	r2,8(r17)
   488c0:	80800f0e 	bge	r16,r2,48900 <__multadd+0xb4>
   488c4:	80800144 	addi	r2,r16,5
   488c8:	1085883a 	add	r2,r2,r2
   488cc:	1085883a 	add	r2,r2,r2
   488d0:	8885883a 	add	r2,r17,r2
   488d4:	11c00015 	stw	r7,0(r2)
   488d8:	84000044 	addi	r16,r16,1
   488dc:	8c000415 	stw	r16,16(r17)
   488e0:	8805883a 	mov	r2,r17
   488e4:	dfc00517 	ldw	ra,20(sp)
   488e8:	dcc00417 	ldw	r19,16(sp)
   488ec:	dc800317 	ldw	r18,12(sp)
   488f0:	dc400217 	ldw	r17,8(sp)
   488f4:	dc000117 	ldw	r16,4(sp)
   488f8:	dec00604 	addi	sp,sp,24
   488fc:	f800283a 	ret
   48900:	89400117 	ldw	r5,4(r17)
   48904:	9009883a 	mov	r4,r18
   48908:	d9c00015 	stw	r7,0(sp)
   4890c:	29400044 	addi	r5,r5,1
   48910:	004877c0 	call	4877c <_Balloc>
   48914:	89800417 	ldw	r6,16(r17)
   48918:	89400304 	addi	r5,r17,12
   4891c:	11000304 	addi	r4,r2,12
   48920:	31800084 	addi	r6,r6,2
   48924:	318d883a 	add	r6,r6,r6
   48928:	318d883a 	add	r6,r6,r6
   4892c:	1027883a 	mov	r19,r2
   48930:	004850c0 	call	4850c <memcpy>
   48934:	d9c00017 	ldw	r7,0(sp)
   48938:	88000a26 	beq	r17,zero,48964 <__multadd+0x118>
   4893c:	88c00117 	ldw	r3,4(r17)
   48940:	90801317 	ldw	r2,76(r18)
   48944:	18c7883a 	add	r3,r3,r3
   48948:	18c7883a 	add	r3,r3,r3
   4894c:	10c5883a 	add	r2,r2,r3
   48950:	10c00017 	ldw	r3,0(r2)
   48954:	88c00015 	stw	r3,0(r17)
   48958:	14400015 	stw	r17,0(r2)
   4895c:	9823883a 	mov	r17,r19
   48960:	003fd806 	br	488c4 <__alt_data_end+0xfffc88c4>
   48964:	9823883a 	mov	r17,r19
   48968:	003fd606 	br	488c4 <__alt_data_end+0xfffc88c4>

0004896c <__s2b>:
   4896c:	defff904 	addi	sp,sp,-28
   48970:	dc400115 	stw	r17,4(sp)
   48974:	dc000015 	stw	r16,0(sp)
   48978:	2023883a 	mov	r17,r4
   4897c:	2821883a 	mov	r16,r5
   48980:	39000204 	addi	r4,r7,8
   48984:	01400244 	movi	r5,9
   48988:	dcc00315 	stw	r19,12(sp)
   4898c:	dc800215 	stw	r18,8(sp)
   48990:	dfc00615 	stw	ra,24(sp)
   48994:	dd400515 	stw	r21,20(sp)
   48998:	dd000415 	stw	r20,16(sp)
   4899c:	3825883a 	mov	r18,r7
   489a0:	3027883a 	mov	r19,r6
   489a4:	00409ec0 	call	409ec <__divsi3>
   489a8:	00c00044 	movi	r3,1
   489ac:	000b883a 	mov	r5,zero
   489b0:	1880030e 	bge	r3,r2,489c0 <__s2b+0x54>
   489b4:	18c7883a 	add	r3,r3,r3
   489b8:	29400044 	addi	r5,r5,1
   489bc:	18bffd16 	blt	r3,r2,489b4 <__alt_data_end+0xfffc89b4>
   489c0:	8809883a 	mov	r4,r17
   489c4:	004877c0 	call	4877c <_Balloc>
   489c8:	d8c00717 	ldw	r3,28(sp)
   489cc:	10c00515 	stw	r3,20(r2)
   489d0:	00c00044 	movi	r3,1
   489d4:	10c00415 	stw	r3,16(r2)
   489d8:	00c00244 	movi	r3,9
   489dc:	1cc0210e 	bge	r3,r19,48a64 <__s2b+0xf8>
   489e0:	80eb883a 	add	r21,r16,r3
   489e4:	a829883a 	mov	r20,r21
   489e8:	84e1883a 	add	r16,r16,r19
   489ec:	a1c00007 	ldb	r7,0(r20)
   489f0:	01800284 	movi	r6,10
   489f4:	a5000044 	addi	r20,r20,1
   489f8:	100b883a 	mov	r5,r2
   489fc:	39fff404 	addi	r7,r7,-48
   48a00:	8809883a 	mov	r4,r17
   48a04:	004884c0 	call	4884c <__multadd>
   48a08:	a43ff81e 	bne	r20,r16,489ec <__alt_data_end+0xfffc89ec>
   48a0c:	ace1883a 	add	r16,r21,r19
   48a10:	843ffe04 	addi	r16,r16,-8
   48a14:	9c800a0e 	bge	r19,r18,48a40 <__s2b+0xd4>
   48a18:	94e5c83a 	sub	r18,r18,r19
   48a1c:	84a5883a 	add	r18,r16,r18
   48a20:	81c00007 	ldb	r7,0(r16)
   48a24:	01800284 	movi	r6,10
   48a28:	84000044 	addi	r16,r16,1
   48a2c:	100b883a 	mov	r5,r2
   48a30:	39fff404 	addi	r7,r7,-48
   48a34:	8809883a 	mov	r4,r17
   48a38:	004884c0 	call	4884c <__multadd>
   48a3c:	84bff81e 	bne	r16,r18,48a20 <__alt_data_end+0xfffc8a20>
   48a40:	dfc00617 	ldw	ra,24(sp)
   48a44:	dd400517 	ldw	r21,20(sp)
   48a48:	dd000417 	ldw	r20,16(sp)
   48a4c:	dcc00317 	ldw	r19,12(sp)
   48a50:	dc800217 	ldw	r18,8(sp)
   48a54:	dc400117 	ldw	r17,4(sp)
   48a58:	dc000017 	ldw	r16,0(sp)
   48a5c:	dec00704 	addi	sp,sp,28
   48a60:	f800283a 	ret
   48a64:	84000284 	addi	r16,r16,10
   48a68:	1827883a 	mov	r19,r3
   48a6c:	003fe906 	br	48a14 <__alt_data_end+0xfffc8a14>

00048a70 <__hi0bits>:
   48a70:	20bfffec 	andhi	r2,r4,65535
   48a74:	1000141e 	bne	r2,zero,48ac8 <__hi0bits+0x58>
   48a78:	2008943a 	slli	r4,r4,16
   48a7c:	00800404 	movi	r2,16
   48a80:	20ffc02c 	andhi	r3,r4,65280
   48a84:	1800021e 	bne	r3,zero,48a90 <__hi0bits+0x20>
   48a88:	2008923a 	slli	r4,r4,8
   48a8c:	10800204 	addi	r2,r2,8
   48a90:	20fc002c 	andhi	r3,r4,61440
   48a94:	1800021e 	bne	r3,zero,48aa0 <__hi0bits+0x30>
   48a98:	2008913a 	slli	r4,r4,4
   48a9c:	10800104 	addi	r2,r2,4
   48aa0:	20f0002c 	andhi	r3,r4,49152
   48aa4:	1800031e 	bne	r3,zero,48ab4 <__hi0bits+0x44>
   48aa8:	2109883a 	add	r4,r4,r4
   48aac:	10800084 	addi	r2,r2,2
   48ab0:	2109883a 	add	r4,r4,r4
   48ab4:	20000316 	blt	r4,zero,48ac4 <__hi0bits+0x54>
   48ab8:	2110002c 	andhi	r4,r4,16384
   48abc:	2000041e 	bne	r4,zero,48ad0 <__hi0bits+0x60>
   48ac0:	00800804 	movi	r2,32
   48ac4:	f800283a 	ret
   48ac8:	0005883a 	mov	r2,zero
   48acc:	003fec06 	br	48a80 <__alt_data_end+0xfffc8a80>
   48ad0:	10800044 	addi	r2,r2,1
   48ad4:	f800283a 	ret

00048ad8 <__lo0bits>:
   48ad8:	20c00017 	ldw	r3,0(r4)
   48adc:	188001cc 	andi	r2,r3,7
   48ae0:	10000826 	beq	r2,zero,48b04 <__lo0bits+0x2c>
   48ae4:	1880004c 	andi	r2,r3,1
   48ae8:	1000211e 	bne	r2,zero,48b70 <__lo0bits+0x98>
   48aec:	1880008c 	andi	r2,r3,2
   48af0:	1000211e 	bne	r2,zero,48b78 <__lo0bits+0xa0>
   48af4:	1806d0ba 	srli	r3,r3,2
   48af8:	00800084 	movi	r2,2
   48afc:	20c00015 	stw	r3,0(r4)
   48b00:	f800283a 	ret
   48b04:	18bfffcc 	andi	r2,r3,65535
   48b08:	10001326 	beq	r2,zero,48b58 <__lo0bits+0x80>
   48b0c:	0005883a 	mov	r2,zero
   48b10:	19403fcc 	andi	r5,r3,255
   48b14:	2800021e 	bne	r5,zero,48b20 <__lo0bits+0x48>
   48b18:	1806d23a 	srli	r3,r3,8
   48b1c:	10800204 	addi	r2,r2,8
   48b20:	194003cc 	andi	r5,r3,15
   48b24:	2800021e 	bne	r5,zero,48b30 <__lo0bits+0x58>
   48b28:	1806d13a 	srli	r3,r3,4
   48b2c:	10800104 	addi	r2,r2,4
   48b30:	194000cc 	andi	r5,r3,3
   48b34:	2800021e 	bne	r5,zero,48b40 <__lo0bits+0x68>
   48b38:	1806d0ba 	srli	r3,r3,2
   48b3c:	10800084 	addi	r2,r2,2
   48b40:	1940004c 	andi	r5,r3,1
   48b44:	2800081e 	bne	r5,zero,48b68 <__lo0bits+0x90>
   48b48:	1806d07a 	srli	r3,r3,1
   48b4c:	1800051e 	bne	r3,zero,48b64 <__lo0bits+0x8c>
   48b50:	00800804 	movi	r2,32
   48b54:	f800283a 	ret
   48b58:	1806d43a 	srli	r3,r3,16
   48b5c:	00800404 	movi	r2,16
   48b60:	003feb06 	br	48b10 <__alt_data_end+0xfffc8b10>
   48b64:	10800044 	addi	r2,r2,1
   48b68:	20c00015 	stw	r3,0(r4)
   48b6c:	f800283a 	ret
   48b70:	0005883a 	mov	r2,zero
   48b74:	f800283a 	ret
   48b78:	1806d07a 	srli	r3,r3,1
   48b7c:	00800044 	movi	r2,1
   48b80:	20c00015 	stw	r3,0(r4)
   48b84:	f800283a 	ret

00048b88 <__i2b>:
   48b88:	defffd04 	addi	sp,sp,-12
   48b8c:	dc000015 	stw	r16,0(sp)
   48b90:	04000044 	movi	r16,1
   48b94:	dc400115 	stw	r17,4(sp)
   48b98:	2823883a 	mov	r17,r5
   48b9c:	800b883a 	mov	r5,r16
   48ba0:	dfc00215 	stw	ra,8(sp)
   48ba4:	004877c0 	call	4877c <_Balloc>
   48ba8:	14400515 	stw	r17,20(r2)
   48bac:	14000415 	stw	r16,16(r2)
   48bb0:	dfc00217 	ldw	ra,8(sp)
   48bb4:	dc400117 	ldw	r17,4(sp)
   48bb8:	dc000017 	ldw	r16,0(sp)
   48bbc:	dec00304 	addi	sp,sp,12
   48bc0:	f800283a 	ret

00048bc4 <__multiply>:
   48bc4:	defffa04 	addi	sp,sp,-24
   48bc8:	dcc00315 	stw	r19,12(sp)
   48bcc:	dc800215 	stw	r18,8(sp)
   48bd0:	34c00417 	ldw	r19,16(r6)
   48bd4:	2c800417 	ldw	r18,16(r5)
   48bd8:	dd000415 	stw	r20,16(sp)
   48bdc:	dc400115 	stw	r17,4(sp)
   48be0:	dfc00515 	stw	ra,20(sp)
   48be4:	dc000015 	stw	r16,0(sp)
   48be8:	2829883a 	mov	r20,r5
   48bec:	3023883a 	mov	r17,r6
   48bf0:	94c0050e 	bge	r18,r19,48c08 <__multiply+0x44>
   48bf4:	9007883a 	mov	r3,r18
   48bf8:	3029883a 	mov	r20,r6
   48bfc:	9825883a 	mov	r18,r19
   48c00:	2823883a 	mov	r17,r5
   48c04:	1827883a 	mov	r19,r3
   48c08:	a0800217 	ldw	r2,8(r20)
   48c0c:	94e1883a 	add	r16,r18,r19
   48c10:	a1400117 	ldw	r5,4(r20)
   48c14:	1400010e 	bge	r2,r16,48c1c <__multiply+0x58>
   48c18:	29400044 	addi	r5,r5,1
   48c1c:	004877c0 	call	4877c <_Balloc>
   48c20:	8415883a 	add	r10,r16,r16
   48c24:	12c00504 	addi	r11,r2,20
   48c28:	5295883a 	add	r10,r10,r10
   48c2c:	5a95883a 	add	r10,r11,r10
   48c30:	5807883a 	mov	r3,r11
   48c34:	5a80032e 	bgeu	r11,r10,48c44 <__multiply+0x80>
   48c38:	18000015 	stw	zero,0(r3)
   48c3c:	18c00104 	addi	r3,r3,4
   48c40:	1abffd36 	bltu	r3,r10,48c38 <__alt_data_end+0xfffc8c38>
   48c44:	9ce7883a 	add	r19,r19,r19
   48c48:	94a5883a 	add	r18,r18,r18
   48c4c:	89800504 	addi	r6,r17,20
   48c50:	9ce7883a 	add	r19,r19,r19
   48c54:	a3400504 	addi	r13,r20,20
   48c58:	94a5883a 	add	r18,r18,r18
   48c5c:	34d9883a 	add	r12,r6,r19
   48c60:	6c93883a 	add	r9,r13,r18
   48c64:	3300422e 	bgeu	r6,r12,48d70 <__multiply+0x1ac>
   48c68:	37c00017 	ldw	ra,0(r6)
   48c6c:	fbffffcc 	andi	r15,ra,65535
   48c70:	78001b26 	beq	r15,zero,48ce0 <__multiply+0x11c>
   48c74:	5811883a 	mov	r8,r11
   48c78:	681d883a 	mov	r14,r13
   48c7c:	000f883a 	mov	r7,zero
   48c80:	71000017 	ldw	r4,0(r14)
   48c84:	40c00017 	ldw	r3,0(r8)
   48c88:	73800104 	addi	r14,r14,4
   48c8c:	217fffcc 	andi	r5,r4,65535
   48c90:	2bcb383a 	mul	r5,r5,r15
   48c94:	2008d43a 	srli	r4,r4,16
   48c98:	1c7fffcc 	andi	r17,r3,65535
   48c9c:	2c4b883a 	add	r5,r5,r17
   48ca0:	29cb883a 	add	r5,r5,r7
   48ca4:	23c9383a 	mul	r4,r4,r15
   48ca8:	1806d43a 	srli	r3,r3,16
   48cac:	280ed43a 	srli	r7,r5,16
   48cb0:	297fffcc 	andi	r5,r5,65535
   48cb4:	20c7883a 	add	r3,r4,r3
   48cb8:	19c7883a 	add	r3,r3,r7
   48cbc:	1808943a 	slli	r4,r3,16
   48cc0:	4023883a 	mov	r17,r8
   48cc4:	180ed43a 	srli	r7,r3,16
   48cc8:	214ab03a 	or	r5,r4,r5
   48ccc:	41400015 	stw	r5,0(r8)
   48cd0:	42000104 	addi	r8,r8,4
   48cd4:	727fea36 	bltu	r14,r9,48c80 <__alt_data_end+0xfffc8c80>
   48cd8:	89c00115 	stw	r7,4(r17)
   48cdc:	37c00017 	ldw	ra,0(r6)
   48ce0:	f83ed43a 	srli	ra,ra,16
   48ce4:	f8001f26 	beq	ra,zero,48d64 <__multiply+0x1a0>
   48ce8:	58c00017 	ldw	r3,0(r11)
   48cec:	681d883a 	mov	r14,r13
   48cf0:	581f883a 	mov	r15,r11
   48cf4:	1811883a 	mov	r8,r3
   48cf8:	5825883a 	mov	r18,r11
   48cfc:	000f883a 	mov	r7,zero
   48d00:	00000106 	br	48d08 <__multiply+0x144>
   48d04:	8825883a 	mov	r18,r17
   48d08:	7140000b 	ldhu	r5,0(r14)
   48d0c:	4010d43a 	srli	r8,r8,16
   48d10:	193fffcc 	andi	r4,r3,65535
   48d14:	2fcb383a 	mul	r5,r5,ra
   48d18:	7bc00104 	addi	r15,r15,4
   48d1c:	73800104 	addi	r14,r14,4
   48d20:	2a0b883a 	add	r5,r5,r8
   48d24:	29cb883a 	add	r5,r5,r7
   48d28:	2806943a 	slli	r3,r5,16
   48d2c:	94400104 	addi	r17,r18,4
   48d30:	280ad43a 	srli	r5,r5,16
   48d34:	1908b03a 	or	r4,r3,r4
   48d38:	793fff15 	stw	r4,-4(r15)
   48d3c:	70ffff17 	ldw	r3,-4(r14)
   48d40:	8a000017 	ldw	r8,0(r17)
   48d44:	1806d43a 	srli	r3,r3,16
   48d48:	413fffcc 	andi	r4,r8,65535
   48d4c:	1fc7383a 	mul	r3,r3,ra
   48d50:	1907883a 	add	r3,r3,r4
   48d54:	1947883a 	add	r3,r3,r5
   48d58:	180ed43a 	srli	r7,r3,16
   48d5c:	727fe936 	bltu	r14,r9,48d04 <__alt_data_end+0xfffc8d04>
   48d60:	90c00115 	stw	r3,4(r18)
   48d64:	31800104 	addi	r6,r6,4
   48d68:	5ac00104 	addi	r11,r11,4
   48d6c:	333fbe36 	bltu	r6,r12,48c68 <__alt_data_end+0xfffc8c68>
   48d70:	0400090e 	bge	zero,r16,48d98 <__multiply+0x1d4>
   48d74:	50ffff17 	ldw	r3,-4(r10)
   48d78:	52bfff04 	addi	r10,r10,-4
   48d7c:	18000326 	beq	r3,zero,48d8c <__multiply+0x1c8>
   48d80:	00000506 	br	48d98 <__multiply+0x1d4>
   48d84:	50c00017 	ldw	r3,0(r10)
   48d88:	1800031e 	bne	r3,zero,48d98 <__multiply+0x1d4>
   48d8c:	843fffc4 	addi	r16,r16,-1
   48d90:	52bfff04 	addi	r10,r10,-4
   48d94:	803ffb1e 	bne	r16,zero,48d84 <__alt_data_end+0xfffc8d84>
   48d98:	14000415 	stw	r16,16(r2)
   48d9c:	dfc00517 	ldw	ra,20(sp)
   48da0:	dd000417 	ldw	r20,16(sp)
   48da4:	dcc00317 	ldw	r19,12(sp)
   48da8:	dc800217 	ldw	r18,8(sp)
   48dac:	dc400117 	ldw	r17,4(sp)
   48db0:	dc000017 	ldw	r16,0(sp)
   48db4:	dec00604 	addi	sp,sp,24
   48db8:	f800283a 	ret

00048dbc <__pow5mult>:
   48dbc:	defffa04 	addi	sp,sp,-24
   48dc0:	dcc00315 	stw	r19,12(sp)
   48dc4:	dc000015 	stw	r16,0(sp)
   48dc8:	dfc00515 	stw	ra,20(sp)
   48dcc:	dd000415 	stw	r20,16(sp)
   48dd0:	dc800215 	stw	r18,8(sp)
   48dd4:	dc400115 	stw	r17,4(sp)
   48dd8:	308000cc 	andi	r2,r6,3
   48ddc:	3021883a 	mov	r16,r6
   48de0:	2027883a 	mov	r19,r4
   48de4:	10002f1e 	bne	r2,zero,48ea4 <__pow5mult+0xe8>
   48de8:	2825883a 	mov	r18,r5
   48dec:	8021d0ba 	srai	r16,r16,2
   48df0:	80001a26 	beq	r16,zero,48e5c <__pow5mult+0xa0>
   48df4:	9c401217 	ldw	r17,72(r19)
   48df8:	8800061e 	bne	r17,zero,48e14 <__pow5mult+0x58>
   48dfc:	00003406 	br	48ed0 <__pow5mult+0x114>
   48e00:	8021d07a 	srai	r16,r16,1
   48e04:	80001526 	beq	r16,zero,48e5c <__pow5mult+0xa0>
   48e08:	88800017 	ldw	r2,0(r17)
   48e0c:	10001c26 	beq	r2,zero,48e80 <__pow5mult+0xc4>
   48e10:	1023883a 	mov	r17,r2
   48e14:	8080004c 	andi	r2,r16,1
   48e18:	103ff926 	beq	r2,zero,48e00 <__alt_data_end+0xfffc8e00>
   48e1c:	880d883a 	mov	r6,r17
   48e20:	900b883a 	mov	r5,r18
   48e24:	9809883a 	mov	r4,r19
   48e28:	0048bc40 	call	48bc4 <__multiply>
   48e2c:	90001b26 	beq	r18,zero,48e9c <__pow5mult+0xe0>
   48e30:	91000117 	ldw	r4,4(r18)
   48e34:	98c01317 	ldw	r3,76(r19)
   48e38:	8021d07a 	srai	r16,r16,1
   48e3c:	2109883a 	add	r4,r4,r4
   48e40:	2109883a 	add	r4,r4,r4
   48e44:	1907883a 	add	r3,r3,r4
   48e48:	19000017 	ldw	r4,0(r3)
   48e4c:	91000015 	stw	r4,0(r18)
   48e50:	1c800015 	stw	r18,0(r3)
   48e54:	1025883a 	mov	r18,r2
   48e58:	803feb1e 	bne	r16,zero,48e08 <__alt_data_end+0xfffc8e08>
   48e5c:	9005883a 	mov	r2,r18
   48e60:	dfc00517 	ldw	ra,20(sp)
   48e64:	dd000417 	ldw	r20,16(sp)
   48e68:	dcc00317 	ldw	r19,12(sp)
   48e6c:	dc800217 	ldw	r18,8(sp)
   48e70:	dc400117 	ldw	r17,4(sp)
   48e74:	dc000017 	ldw	r16,0(sp)
   48e78:	dec00604 	addi	sp,sp,24
   48e7c:	f800283a 	ret
   48e80:	880d883a 	mov	r6,r17
   48e84:	880b883a 	mov	r5,r17
   48e88:	9809883a 	mov	r4,r19
   48e8c:	0048bc40 	call	48bc4 <__multiply>
   48e90:	88800015 	stw	r2,0(r17)
   48e94:	10000015 	stw	zero,0(r2)
   48e98:	003fdd06 	br	48e10 <__alt_data_end+0xfffc8e10>
   48e9c:	1025883a 	mov	r18,r2
   48ea0:	003fd706 	br	48e00 <__alt_data_end+0xfffc8e00>
   48ea4:	10bfffc4 	addi	r2,r2,-1
   48ea8:	1085883a 	add	r2,r2,r2
   48eac:	00c00174 	movhi	r3,5
   48eb0:	18c43c04 	addi	r3,r3,4336
   48eb4:	1085883a 	add	r2,r2,r2
   48eb8:	1885883a 	add	r2,r3,r2
   48ebc:	11800017 	ldw	r6,0(r2)
   48ec0:	000f883a 	mov	r7,zero
   48ec4:	004884c0 	call	4884c <__multadd>
   48ec8:	1025883a 	mov	r18,r2
   48ecc:	003fc706 	br	48dec <__alt_data_end+0xfffc8dec>
   48ed0:	05000044 	movi	r20,1
   48ed4:	a00b883a 	mov	r5,r20
   48ed8:	9809883a 	mov	r4,r19
   48edc:	004877c0 	call	4877c <_Balloc>
   48ee0:	1023883a 	mov	r17,r2
   48ee4:	00809c44 	movi	r2,625
   48ee8:	88800515 	stw	r2,20(r17)
   48eec:	8d000415 	stw	r20,16(r17)
   48ef0:	9c401215 	stw	r17,72(r19)
   48ef4:	88000015 	stw	zero,0(r17)
   48ef8:	003fc606 	br	48e14 <__alt_data_end+0xfffc8e14>

00048efc <__lshift>:
   48efc:	defff904 	addi	sp,sp,-28
   48f00:	dd400515 	stw	r21,20(sp)
   48f04:	dcc00315 	stw	r19,12(sp)
   48f08:	302bd17a 	srai	r21,r6,5
   48f0c:	2cc00417 	ldw	r19,16(r5)
   48f10:	28800217 	ldw	r2,8(r5)
   48f14:	dd000415 	stw	r20,16(sp)
   48f18:	ace7883a 	add	r19,r21,r19
   48f1c:	dc800215 	stw	r18,8(sp)
   48f20:	dc400115 	stw	r17,4(sp)
   48f24:	dc000015 	stw	r16,0(sp)
   48f28:	dfc00615 	stw	ra,24(sp)
   48f2c:	9c000044 	addi	r16,r19,1
   48f30:	2823883a 	mov	r17,r5
   48f34:	3029883a 	mov	r20,r6
   48f38:	2025883a 	mov	r18,r4
   48f3c:	29400117 	ldw	r5,4(r5)
   48f40:	1400030e 	bge	r2,r16,48f50 <__lshift+0x54>
   48f44:	1085883a 	add	r2,r2,r2
   48f48:	29400044 	addi	r5,r5,1
   48f4c:	143ffd16 	blt	r2,r16,48f44 <__alt_data_end+0xfffc8f44>
   48f50:	9009883a 	mov	r4,r18
   48f54:	004877c0 	call	4877c <_Balloc>
   48f58:	10c00504 	addi	r3,r2,20
   48f5c:	0540070e 	bge	zero,r21,48f7c <__lshift+0x80>
   48f60:	ad6b883a 	add	r21,r21,r21
   48f64:	ad6b883a 	add	r21,r21,r21
   48f68:	1809883a 	mov	r4,r3
   48f6c:	1d47883a 	add	r3,r3,r21
   48f70:	20000015 	stw	zero,0(r4)
   48f74:	21000104 	addi	r4,r4,4
   48f78:	193ffd1e 	bne	r3,r4,48f70 <__alt_data_end+0xfffc8f70>
   48f7c:	8a000417 	ldw	r8,16(r17)
   48f80:	89000504 	addi	r4,r17,20
   48f84:	a18007cc 	andi	r6,r20,31
   48f88:	4211883a 	add	r8,r8,r8
   48f8c:	4211883a 	add	r8,r8,r8
   48f90:	2211883a 	add	r8,r4,r8
   48f94:	30002326 	beq	r6,zero,49024 <__lshift+0x128>
   48f98:	02400804 	movi	r9,32
   48f9c:	4993c83a 	sub	r9,r9,r6
   48fa0:	000b883a 	mov	r5,zero
   48fa4:	21c00017 	ldw	r7,0(r4)
   48fa8:	1815883a 	mov	r10,r3
   48fac:	18c00104 	addi	r3,r3,4
   48fb0:	398e983a 	sll	r7,r7,r6
   48fb4:	21000104 	addi	r4,r4,4
   48fb8:	394ab03a 	or	r5,r7,r5
   48fbc:	197fff15 	stw	r5,-4(r3)
   48fc0:	217fff17 	ldw	r5,-4(r4)
   48fc4:	2a4ad83a 	srl	r5,r5,r9
   48fc8:	223ff636 	bltu	r4,r8,48fa4 <__alt_data_end+0xfffc8fa4>
   48fcc:	51400115 	stw	r5,4(r10)
   48fd0:	28001a1e 	bne	r5,zero,4903c <__lshift+0x140>
   48fd4:	843fffc4 	addi	r16,r16,-1
   48fd8:	14000415 	stw	r16,16(r2)
   48fdc:	88000826 	beq	r17,zero,49000 <__lshift+0x104>
   48fe0:	89000117 	ldw	r4,4(r17)
   48fe4:	90c01317 	ldw	r3,76(r18)
   48fe8:	2109883a 	add	r4,r4,r4
   48fec:	2109883a 	add	r4,r4,r4
   48ff0:	1907883a 	add	r3,r3,r4
   48ff4:	19000017 	ldw	r4,0(r3)
   48ff8:	89000015 	stw	r4,0(r17)
   48ffc:	1c400015 	stw	r17,0(r3)
   49000:	dfc00617 	ldw	ra,24(sp)
   49004:	dd400517 	ldw	r21,20(sp)
   49008:	dd000417 	ldw	r20,16(sp)
   4900c:	dcc00317 	ldw	r19,12(sp)
   49010:	dc800217 	ldw	r18,8(sp)
   49014:	dc400117 	ldw	r17,4(sp)
   49018:	dc000017 	ldw	r16,0(sp)
   4901c:	dec00704 	addi	sp,sp,28
   49020:	f800283a 	ret
   49024:	21400017 	ldw	r5,0(r4)
   49028:	18c00104 	addi	r3,r3,4
   4902c:	21000104 	addi	r4,r4,4
   49030:	197fff15 	stw	r5,-4(r3)
   49034:	223ffb36 	bltu	r4,r8,49024 <__alt_data_end+0xfffc9024>
   49038:	003fe606 	br	48fd4 <__alt_data_end+0xfffc8fd4>
   4903c:	9c000084 	addi	r16,r19,2
   49040:	003fe406 	br	48fd4 <__alt_data_end+0xfffc8fd4>

00049044 <__mcmp>:
   49044:	20800417 	ldw	r2,16(r4)
   49048:	28c00417 	ldw	r3,16(r5)
   4904c:	10c5c83a 	sub	r2,r2,r3
   49050:	1000111e 	bne	r2,zero,49098 <__mcmp+0x54>
   49054:	18c7883a 	add	r3,r3,r3
   49058:	18c7883a 	add	r3,r3,r3
   4905c:	21000504 	addi	r4,r4,20
   49060:	29400504 	addi	r5,r5,20
   49064:	20c5883a 	add	r2,r4,r3
   49068:	28cb883a 	add	r5,r5,r3
   4906c:	00000106 	br	49074 <__mcmp+0x30>
   49070:	20800a2e 	bgeu	r4,r2,4909c <__mcmp+0x58>
   49074:	10bfff04 	addi	r2,r2,-4
   49078:	297fff04 	addi	r5,r5,-4
   4907c:	11800017 	ldw	r6,0(r2)
   49080:	28c00017 	ldw	r3,0(r5)
   49084:	30fffa26 	beq	r6,r3,49070 <__alt_data_end+0xfffc9070>
   49088:	30c00236 	bltu	r6,r3,49094 <__mcmp+0x50>
   4908c:	00800044 	movi	r2,1
   49090:	f800283a 	ret
   49094:	00bfffc4 	movi	r2,-1
   49098:	f800283a 	ret
   4909c:	0005883a 	mov	r2,zero
   490a0:	f800283a 	ret

000490a4 <__mdiff>:
   490a4:	28c00417 	ldw	r3,16(r5)
   490a8:	30800417 	ldw	r2,16(r6)
   490ac:	defffa04 	addi	sp,sp,-24
   490b0:	dcc00315 	stw	r19,12(sp)
   490b4:	dc800215 	stw	r18,8(sp)
   490b8:	dfc00515 	stw	ra,20(sp)
   490bc:	dd000415 	stw	r20,16(sp)
   490c0:	dc400115 	stw	r17,4(sp)
   490c4:	dc000015 	stw	r16,0(sp)
   490c8:	1887c83a 	sub	r3,r3,r2
   490cc:	2825883a 	mov	r18,r5
   490d0:	3027883a 	mov	r19,r6
   490d4:	1800141e 	bne	r3,zero,49128 <__mdiff+0x84>
   490d8:	1085883a 	add	r2,r2,r2
   490dc:	1085883a 	add	r2,r2,r2
   490e0:	2a000504 	addi	r8,r5,20
   490e4:	34000504 	addi	r16,r6,20
   490e8:	4087883a 	add	r3,r8,r2
   490ec:	8085883a 	add	r2,r16,r2
   490f0:	00000106 	br	490f8 <__mdiff+0x54>
   490f4:	40c0592e 	bgeu	r8,r3,4925c <__mdiff+0x1b8>
   490f8:	18ffff04 	addi	r3,r3,-4
   490fc:	10bfff04 	addi	r2,r2,-4
   49100:	19c00017 	ldw	r7,0(r3)
   49104:	11400017 	ldw	r5,0(r2)
   49108:	397ffa26 	beq	r7,r5,490f4 <__alt_data_end+0xfffc90f4>
   4910c:	3940592e 	bgeu	r7,r5,49274 <__mdiff+0x1d0>
   49110:	9005883a 	mov	r2,r18
   49114:	4023883a 	mov	r17,r8
   49118:	9825883a 	mov	r18,r19
   4911c:	05000044 	movi	r20,1
   49120:	1027883a 	mov	r19,r2
   49124:	00000406 	br	49138 <__mdiff+0x94>
   49128:	18005616 	blt	r3,zero,49284 <__mdiff+0x1e0>
   4912c:	34400504 	addi	r17,r6,20
   49130:	2c000504 	addi	r16,r5,20
   49134:	0029883a 	mov	r20,zero
   49138:	91400117 	ldw	r5,4(r18)
   4913c:	004877c0 	call	4877c <_Balloc>
   49140:	92400417 	ldw	r9,16(r18)
   49144:	9b000417 	ldw	r12,16(r19)
   49148:	12c00504 	addi	r11,r2,20
   4914c:	4a51883a 	add	r8,r9,r9
   49150:	6319883a 	add	r12,r12,r12
   49154:	4211883a 	add	r8,r8,r8
   49158:	6319883a 	add	r12,r12,r12
   4915c:	15000315 	stw	r20,12(r2)
   49160:	8211883a 	add	r8,r16,r8
   49164:	8b19883a 	add	r12,r17,r12
   49168:	0007883a 	mov	r3,zero
   4916c:	81400017 	ldw	r5,0(r16)
   49170:	89c00017 	ldw	r7,0(r17)
   49174:	59800104 	addi	r6,r11,4
   49178:	293fffcc 	andi	r4,r5,65535
   4917c:	20c7883a 	add	r3,r4,r3
   49180:	393fffcc 	andi	r4,r7,65535
   49184:	1909c83a 	sub	r4,r3,r4
   49188:	280ad43a 	srli	r5,r5,16
   4918c:	380ed43a 	srli	r7,r7,16
   49190:	2007d43a 	srai	r3,r4,16
   49194:	213fffcc 	andi	r4,r4,65535
   49198:	29cbc83a 	sub	r5,r5,r7
   4919c:	28c7883a 	add	r3,r5,r3
   491a0:	180a943a 	slli	r5,r3,16
   491a4:	8c400104 	addi	r17,r17,4
   491a8:	84000104 	addi	r16,r16,4
   491ac:	2908b03a 	or	r4,r5,r4
   491b0:	59000015 	stw	r4,0(r11)
   491b4:	1807d43a 	srai	r3,r3,16
   491b8:	3015883a 	mov	r10,r6
   491bc:	3017883a 	mov	r11,r6
   491c0:	8b3fea36 	bltu	r17,r12,4916c <__alt_data_end+0xfffc916c>
   491c4:	8200162e 	bgeu	r16,r8,49220 <__mdiff+0x17c>
   491c8:	8017883a 	mov	r11,r16
   491cc:	59400017 	ldw	r5,0(r11)
   491d0:	31800104 	addi	r6,r6,4
   491d4:	5ac00104 	addi	r11,r11,4
   491d8:	293fffcc 	andi	r4,r5,65535
   491dc:	20c7883a 	add	r3,r4,r3
   491e0:	280ed43a 	srli	r7,r5,16
   491e4:	180bd43a 	srai	r5,r3,16
   491e8:	193fffcc 	andi	r4,r3,65535
   491ec:	3947883a 	add	r3,r7,r5
   491f0:	180a943a 	slli	r5,r3,16
   491f4:	1807d43a 	srai	r3,r3,16
   491f8:	2908b03a 	or	r4,r5,r4
   491fc:	313fff15 	stw	r4,-4(r6)
   49200:	5a3ff236 	bltu	r11,r8,491cc <__alt_data_end+0xfffc91cc>
   49204:	0406303a 	nor	r3,zero,r16
   49208:	1a07883a 	add	r3,r3,r8
   4920c:	1806d0ba 	srli	r3,r3,2
   49210:	18c00044 	addi	r3,r3,1
   49214:	18c7883a 	add	r3,r3,r3
   49218:	18c7883a 	add	r3,r3,r3
   4921c:	50d5883a 	add	r10,r10,r3
   49220:	50ffff04 	addi	r3,r10,-4
   49224:	2000041e 	bne	r4,zero,49238 <__mdiff+0x194>
   49228:	18ffff04 	addi	r3,r3,-4
   4922c:	19000017 	ldw	r4,0(r3)
   49230:	4a7fffc4 	addi	r9,r9,-1
   49234:	203ffc26 	beq	r4,zero,49228 <__alt_data_end+0xfffc9228>
   49238:	12400415 	stw	r9,16(r2)
   4923c:	dfc00517 	ldw	ra,20(sp)
   49240:	dd000417 	ldw	r20,16(sp)
   49244:	dcc00317 	ldw	r19,12(sp)
   49248:	dc800217 	ldw	r18,8(sp)
   4924c:	dc400117 	ldw	r17,4(sp)
   49250:	dc000017 	ldw	r16,0(sp)
   49254:	dec00604 	addi	sp,sp,24
   49258:	f800283a 	ret
   4925c:	000b883a 	mov	r5,zero
   49260:	004877c0 	call	4877c <_Balloc>
   49264:	00c00044 	movi	r3,1
   49268:	10c00415 	stw	r3,16(r2)
   4926c:	10000515 	stw	zero,20(r2)
   49270:	003ff206 	br	4923c <__alt_data_end+0xfffc923c>
   49274:	8023883a 	mov	r17,r16
   49278:	0029883a 	mov	r20,zero
   4927c:	4021883a 	mov	r16,r8
   49280:	003fad06 	br	49138 <__alt_data_end+0xfffc9138>
   49284:	9005883a 	mov	r2,r18
   49288:	94400504 	addi	r17,r18,20
   4928c:	9c000504 	addi	r16,r19,20
   49290:	9825883a 	mov	r18,r19
   49294:	05000044 	movi	r20,1
   49298:	1027883a 	mov	r19,r2
   4929c:	003fa606 	br	49138 <__alt_data_end+0xfffc9138>

000492a0 <__ulp>:
   492a0:	295ffc2c 	andhi	r5,r5,32752
   492a4:	00bf3034 	movhi	r2,64704
   492a8:	2887883a 	add	r3,r5,r2
   492ac:	00c0020e 	bge	zero,r3,492b8 <__ulp+0x18>
   492b0:	0005883a 	mov	r2,zero
   492b4:	f800283a 	ret
   492b8:	00c7c83a 	sub	r3,zero,r3
   492bc:	1807d53a 	srai	r3,r3,20
   492c0:	008004c4 	movi	r2,19
   492c4:	10c00b0e 	bge	r2,r3,492f4 <__ulp+0x54>
   492c8:	18bffb04 	addi	r2,r3,-20
   492cc:	01000784 	movi	r4,30
   492d0:	0007883a 	mov	r3,zero
   492d4:	20800516 	blt	r4,r2,492ec <__ulp+0x4c>
   492d8:	010007c4 	movi	r4,31
   492dc:	2089c83a 	sub	r4,r4,r2
   492e0:	00800044 	movi	r2,1
   492e4:	1104983a 	sll	r2,r2,r4
   492e8:	f800283a 	ret
   492ec:	00800044 	movi	r2,1
   492f0:	f800283a 	ret
   492f4:	01400234 	movhi	r5,8
   492f8:	28c7d83a 	sra	r3,r5,r3
   492fc:	0005883a 	mov	r2,zero
   49300:	f800283a 	ret

00049304 <__b2d>:
   49304:	defffa04 	addi	sp,sp,-24
   49308:	dc000015 	stw	r16,0(sp)
   4930c:	24000417 	ldw	r16,16(r4)
   49310:	dc400115 	stw	r17,4(sp)
   49314:	24400504 	addi	r17,r4,20
   49318:	8421883a 	add	r16,r16,r16
   4931c:	8421883a 	add	r16,r16,r16
   49320:	8c21883a 	add	r16,r17,r16
   49324:	dc800215 	stw	r18,8(sp)
   49328:	84bfff17 	ldw	r18,-4(r16)
   4932c:	dd000415 	stw	r20,16(sp)
   49330:	dcc00315 	stw	r19,12(sp)
   49334:	9009883a 	mov	r4,r18
   49338:	2829883a 	mov	r20,r5
   4933c:	dfc00515 	stw	ra,20(sp)
   49340:	0048a700 	call	48a70 <__hi0bits>
   49344:	00c00804 	movi	r3,32
   49348:	1889c83a 	sub	r4,r3,r2
   4934c:	a1000015 	stw	r4,0(r20)
   49350:	01000284 	movi	r4,10
   49354:	84ffff04 	addi	r19,r16,-4
   49358:	20801216 	blt	r4,r2,493a4 <__b2d+0xa0>
   4935c:	018002c4 	movi	r6,11
   49360:	308dc83a 	sub	r6,r6,r2
   49364:	9186d83a 	srl	r3,r18,r6
   49368:	18cffc34 	orhi	r3,r3,16368
   4936c:	8cc0212e 	bgeu	r17,r19,493f4 <__b2d+0xf0>
   49370:	813ffe17 	ldw	r4,-8(r16)
   49374:	218cd83a 	srl	r6,r4,r6
   49378:	10800544 	addi	r2,r2,21
   4937c:	9084983a 	sll	r2,r18,r2
   49380:	1184b03a 	or	r2,r2,r6
   49384:	dfc00517 	ldw	ra,20(sp)
   49388:	dd000417 	ldw	r20,16(sp)
   4938c:	dcc00317 	ldw	r19,12(sp)
   49390:	dc800217 	ldw	r18,8(sp)
   49394:	dc400117 	ldw	r17,4(sp)
   49398:	dc000017 	ldw	r16,0(sp)
   4939c:	dec00604 	addi	sp,sp,24
   493a0:	f800283a 	ret
   493a4:	8cc00f2e 	bgeu	r17,r19,493e4 <__b2d+0xe0>
   493a8:	117ffd44 	addi	r5,r2,-11
   493ac:	80bffe17 	ldw	r2,-8(r16)
   493b0:	28000e26 	beq	r5,zero,493ec <__b2d+0xe8>
   493b4:	1949c83a 	sub	r4,r3,r5
   493b8:	9164983a 	sll	r18,r18,r5
   493bc:	1106d83a 	srl	r3,r2,r4
   493c0:	81bffe04 	addi	r6,r16,-8
   493c4:	948ffc34 	orhi	r18,r18,16368
   493c8:	90c6b03a 	or	r3,r18,r3
   493cc:	89800e2e 	bgeu	r17,r6,49408 <__b2d+0x104>
   493d0:	81bffd17 	ldw	r6,-12(r16)
   493d4:	1144983a 	sll	r2,r2,r5
   493d8:	310ad83a 	srl	r5,r6,r4
   493dc:	2884b03a 	or	r2,r5,r2
   493e0:	003fe806 	br	49384 <__alt_data_end+0xfffc9384>
   493e4:	10bffd44 	addi	r2,r2,-11
   493e8:	1000041e 	bne	r2,zero,493fc <__b2d+0xf8>
   493ec:	90cffc34 	orhi	r3,r18,16368
   493f0:	003fe406 	br	49384 <__alt_data_end+0xfffc9384>
   493f4:	000d883a 	mov	r6,zero
   493f8:	003fdf06 	br	49378 <__alt_data_end+0xfffc9378>
   493fc:	90a4983a 	sll	r18,r18,r2
   49400:	0005883a 	mov	r2,zero
   49404:	003ff906 	br	493ec <__alt_data_end+0xfffc93ec>
   49408:	1144983a 	sll	r2,r2,r5
   4940c:	003fdd06 	br	49384 <__alt_data_end+0xfffc9384>

00049410 <__d2b>:
   49410:	defff804 	addi	sp,sp,-32
   49414:	dc000215 	stw	r16,8(sp)
   49418:	3021883a 	mov	r16,r6
   4941c:	dc400315 	stw	r17,12(sp)
   49420:	8022907a 	slli	r17,r16,1
   49424:	dd000615 	stw	r20,24(sp)
   49428:	2829883a 	mov	r20,r5
   4942c:	01400044 	movi	r5,1
   49430:	dcc00515 	stw	r19,20(sp)
   49434:	dc800415 	stw	r18,16(sp)
   49438:	dfc00715 	stw	ra,28(sp)
   4943c:	3825883a 	mov	r18,r7
   49440:	8822d57a 	srli	r17,r17,21
   49444:	004877c0 	call	4877c <_Balloc>
   49448:	1027883a 	mov	r19,r2
   4944c:	00800434 	movhi	r2,16
   49450:	10bfffc4 	addi	r2,r2,-1
   49454:	808c703a 	and	r6,r16,r2
   49458:	88000126 	beq	r17,zero,49460 <__d2b+0x50>
   4945c:	31800434 	orhi	r6,r6,16
   49460:	d9800015 	stw	r6,0(sp)
   49464:	a0002426 	beq	r20,zero,494f8 <__d2b+0xe8>
   49468:	d9000104 	addi	r4,sp,4
   4946c:	dd000115 	stw	r20,4(sp)
   49470:	0048ad80 	call	48ad8 <__lo0bits>
   49474:	d8c00017 	ldw	r3,0(sp)
   49478:	10002f1e 	bne	r2,zero,49538 <__d2b+0x128>
   4947c:	d9000117 	ldw	r4,4(sp)
   49480:	99000515 	stw	r4,20(r19)
   49484:	1821003a 	cmpeq	r16,r3,zero
   49488:	01000084 	movi	r4,2
   4948c:	2421c83a 	sub	r16,r4,r16
   49490:	98c00615 	stw	r3,24(r19)
   49494:	9c000415 	stw	r16,16(r19)
   49498:	88001f1e 	bne	r17,zero,49518 <__d2b+0x108>
   4949c:	10bef384 	addi	r2,r2,-1074
   494a0:	90800015 	stw	r2,0(r18)
   494a4:	00900034 	movhi	r2,16384
   494a8:	10bfffc4 	addi	r2,r2,-1
   494ac:	8085883a 	add	r2,r16,r2
   494b0:	1085883a 	add	r2,r2,r2
   494b4:	1085883a 	add	r2,r2,r2
   494b8:	9885883a 	add	r2,r19,r2
   494bc:	11000517 	ldw	r4,20(r2)
   494c0:	8020917a 	slli	r16,r16,5
   494c4:	0048a700 	call	48a70 <__hi0bits>
   494c8:	d8c00817 	ldw	r3,32(sp)
   494cc:	8085c83a 	sub	r2,r16,r2
   494d0:	18800015 	stw	r2,0(r3)
   494d4:	9805883a 	mov	r2,r19
   494d8:	dfc00717 	ldw	ra,28(sp)
   494dc:	dd000617 	ldw	r20,24(sp)
   494e0:	dcc00517 	ldw	r19,20(sp)
   494e4:	dc800417 	ldw	r18,16(sp)
   494e8:	dc400317 	ldw	r17,12(sp)
   494ec:	dc000217 	ldw	r16,8(sp)
   494f0:	dec00804 	addi	sp,sp,32
   494f4:	f800283a 	ret
   494f8:	d809883a 	mov	r4,sp
   494fc:	0048ad80 	call	48ad8 <__lo0bits>
   49500:	d8c00017 	ldw	r3,0(sp)
   49504:	04000044 	movi	r16,1
   49508:	9c000415 	stw	r16,16(r19)
   4950c:	98c00515 	stw	r3,20(r19)
   49510:	10800804 	addi	r2,r2,32
   49514:	883fe126 	beq	r17,zero,4949c <__alt_data_end+0xfffc949c>
   49518:	00c00d44 	movi	r3,53
   4951c:	8c7ef344 	addi	r17,r17,-1075
   49520:	88a3883a 	add	r17,r17,r2
   49524:	1885c83a 	sub	r2,r3,r2
   49528:	d8c00817 	ldw	r3,32(sp)
   4952c:	94400015 	stw	r17,0(r18)
   49530:	18800015 	stw	r2,0(r3)
   49534:	003fe706 	br	494d4 <__alt_data_end+0xfffc94d4>
   49538:	01000804 	movi	r4,32
   4953c:	2089c83a 	sub	r4,r4,r2
   49540:	1908983a 	sll	r4,r3,r4
   49544:	d9400117 	ldw	r5,4(sp)
   49548:	1886d83a 	srl	r3,r3,r2
   4954c:	2148b03a 	or	r4,r4,r5
   49550:	99000515 	stw	r4,20(r19)
   49554:	d8c00015 	stw	r3,0(sp)
   49558:	003fca06 	br	49484 <__alt_data_end+0xfffc9484>

0004955c <__ratio>:
   4955c:	defff904 	addi	sp,sp,-28
   49560:	dc400315 	stw	r17,12(sp)
   49564:	2823883a 	mov	r17,r5
   49568:	d9400104 	addi	r5,sp,4
   4956c:	dfc00615 	stw	ra,24(sp)
   49570:	dcc00515 	stw	r19,20(sp)
   49574:	dc800415 	stw	r18,16(sp)
   49578:	2027883a 	mov	r19,r4
   4957c:	dc000215 	stw	r16,8(sp)
   49580:	00493040 	call	49304 <__b2d>
   49584:	d80b883a 	mov	r5,sp
   49588:	8809883a 	mov	r4,r17
   4958c:	1025883a 	mov	r18,r2
   49590:	1821883a 	mov	r16,r3
   49594:	00493040 	call	49304 <__b2d>
   49598:	8a000417 	ldw	r8,16(r17)
   4959c:	99000417 	ldw	r4,16(r19)
   495a0:	d9400117 	ldw	r5,4(sp)
   495a4:	2209c83a 	sub	r4,r4,r8
   495a8:	2010917a 	slli	r8,r4,5
   495ac:	d9000017 	ldw	r4,0(sp)
   495b0:	2909c83a 	sub	r4,r5,r4
   495b4:	4109883a 	add	r4,r8,r4
   495b8:	01000e0e 	bge	zero,r4,495f4 <__ratio+0x98>
   495bc:	2008953a 	slli	r4,r4,20
   495c0:	2421883a 	add	r16,r4,r16
   495c4:	100d883a 	mov	r6,r2
   495c8:	180f883a 	mov	r7,r3
   495cc:	9009883a 	mov	r4,r18
   495d0:	800b883a 	mov	r5,r16
   495d4:	004d0980 	call	4d098 <__divdf3>
   495d8:	dfc00617 	ldw	ra,24(sp)
   495dc:	dcc00517 	ldw	r19,20(sp)
   495e0:	dc800417 	ldw	r18,16(sp)
   495e4:	dc400317 	ldw	r17,12(sp)
   495e8:	dc000217 	ldw	r16,8(sp)
   495ec:	dec00704 	addi	sp,sp,28
   495f0:	f800283a 	ret
   495f4:	2008953a 	slli	r4,r4,20
   495f8:	1907c83a 	sub	r3,r3,r4
   495fc:	003ff106 	br	495c4 <__alt_data_end+0xfffc95c4>

00049600 <_mprec_log10>:
   49600:	defffe04 	addi	sp,sp,-8
   49604:	dc000015 	stw	r16,0(sp)
   49608:	dfc00115 	stw	ra,4(sp)
   4960c:	008005c4 	movi	r2,23
   49610:	2021883a 	mov	r16,r4
   49614:	11000d0e 	bge	r2,r4,4964c <_mprec_log10+0x4c>
   49618:	0005883a 	mov	r2,zero
   4961c:	00cffc34 	movhi	r3,16368
   49620:	843fffc4 	addi	r16,r16,-1
   49624:	000d883a 	mov	r6,zero
   49628:	01d00934 	movhi	r7,16420
   4962c:	1009883a 	mov	r4,r2
   49630:	180b883a 	mov	r5,r3
   49634:	00426340 	call	42634 <__muldf3>
   49638:	803ff91e 	bne	r16,zero,49620 <__alt_data_end+0xfffc9620>
   4963c:	dfc00117 	ldw	ra,4(sp)
   49640:	dc000017 	ldw	r16,0(sp)
   49644:	dec00204 	addi	sp,sp,8
   49648:	f800283a 	ret
   4964c:	202090fa 	slli	r16,r4,3
   49650:	00800174 	movhi	r2,5
   49654:	10845304 	addi	r2,r2,4428
   49658:	1421883a 	add	r16,r2,r16
   4965c:	80800017 	ldw	r2,0(r16)
   49660:	80c00117 	ldw	r3,4(r16)
   49664:	dfc00117 	ldw	ra,4(sp)
   49668:	dc000017 	ldw	r16,0(sp)
   4966c:	dec00204 	addi	sp,sp,8
   49670:	f800283a 	ret

00049674 <__copybits>:
   49674:	297fffc4 	addi	r5,r5,-1
   49678:	280fd17a 	srai	r7,r5,5
   4967c:	30c00417 	ldw	r3,16(r6)
   49680:	30800504 	addi	r2,r6,20
   49684:	39c00044 	addi	r7,r7,1
   49688:	18c7883a 	add	r3,r3,r3
   4968c:	39cf883a 	add	r7,r7,r7
   49690:	18c7883a 	add	r3,r3,r3
   49694:	39cf883a 	add	r7,r7,r7
   49698:	10c7883a 	add	r3,r2,r3
   4969c:	21cf883a 	add	r7,r4,r7
   496a0:	10c00d2e 	bgeu	r2,r3,496d8 <__copybits+0x64>
   496a4:	200b883a 	mov	r5,r4
   496a8:	12000017 	ldw	r8,0(r2)
   496ac:	29400104 	addi	r5,r5,4
   496b0:	10800104 	addi	r2,r2,4
   496b4:	2a3fff15 	stw	r8,-4(r5)
   496b8:	10fffb36 	bltu	r2,r3,496a8 <__alt_data_end+0xfffc96a8>
   496bc:	1985c83a 	sub	r2,r3,r6
   496c0:	10bffac4 	addi	r2,r2,-21
   496c4:	1004d0ba 	srli	r2,r2,2
   496c8:	10800044 	addi	r2,r2,1
   496cc:	1085883a 	add	r2,r2,r2
   496d0:	1085883a 	add	r2,r2,r2
   496d4:	2089883a 	add	r4,r4,r2
   496d8:	21c0032e 	bgeu	r4,r7,496e8 <__copybits+0x74>
   496dc:	20000015 	stw	zero,0(r4)
   496e0:	21000104 	addi	r4,r4,4
   496e4:	21fffd36 	bltu	r4,r7,496dc <__alt_data_end+0xfffc96dc>
   496e8:	f800283a 	ret

000496ec <__any_on>:
   496ec:	20c00417 	ldw	r3,16(r4)
   496f0:	2805d17a 	srai	r2,r5,5
   496f4:	21000504 	addi	r4,r4,20
   496f8:	18800d0e 	bge	r3,r2,49730 <__any_on+0x44>
   496fc:	18c7883a 	add	r3,r3,r3
   49700:	18c7883a 	add	r3,r3,r3
   49704:	20c7883a 	add	r3,r4,r3
   49708:	20c0192e 	bgeu	r4,r3,49770 <__any_on+0x84>
   4970c:	18bfff17 	ldw	r2,-4(r3)
   49710:	18ffff04 	addi	r3,r3,-4
   49714:	1000041e 	bne	r2,zero,49728 <__any_on+0x3c>
   49718:	20c0142e 	bgeu	r4,r3,4976c <__any_on+0x80>
   4971c:	18ffff04 	addi	r3,r3,-4
   49720:	19400017 	ldw	r5,0(r3)
   49724:	283ffc26 	beq	r5,zero,49718 <__alt_data_end+0xfffc9718>
   49728:	00800044 	movi	r2,1
   4972c:	f800283a 	ret
   49730:	10c00a0e 	bge	r2,r3,4975c <__any_on+0x70>
   49734:	1085883a 	add	r2,r2,r2
   49738:	1085883a 	add	r2,r2,r2
   4973c:	294007cc 	andi	r5,r5,31
   49740:	2087883a 	add	r3,r4,r2
   49744:	283ff026 	beq	r5,zero,49708 <__alt_data_end+0xfffc9708>
   49748:	19800017 	ldw	r6,0(r3)
   4974c:	3144d83a 	srl	r2,r6,r5
   49750:	114a983a 	sll	r5,r2,r5
   49754:	317ff41e 	bne	r6,r5,49728 <__alt_data_end+0xfffc9728>
   49758:	003feb06 	br	49708 <__alt_data_end+0xfffc9708>
   4975c:	1085883a 	add	r2,r2,r2
   49760:	1085883a 	add	r2,r2,r2
   49764:	2087883a 	add	r3,r4,r2
   49768:	003fe706 	br	49708 <__alt_data_end+0xfffc9708>
   4976c:	f800283a 	ret
   49770:	0005883a 	mov	r2,zero
   49774:	f800283a 	ret

00049778 <__fpclassifyd>:
   49778:	00a00034 	movhi	r2,32768
   4977c:	10bfffc4 	addi	r2,r2,-1
   49780:	2884703a 	and	r2,r5,r2
   49784:	10000726 	beq	r2,zero,497a4 <__fpclassifyd+0x2c>
   49788:	00fffc34 	movhi	r3,65520
   4978c:	019ff834 	movhi	r6,32736
   49790:	28c7883a 	add	r3,r5,r3
   49794:	31bfffc4 	addi	r6,r6,-1
   49798:	30c00536 	bltu	r6,r3,497b0 <__fpclassifyd+0x38>
   4979c:	00800104 	movi	r2,4
   497a0:	f800283a 	ret
   497a4:	2000021e 	bne	r4,zero,497b0 <__fpclassifyd+0x38>
   497a8:	00800084 	movi	r2,2
   497ac:	f800283a 	ret
   497b0:	00dffc34 	movhi	r3,32752
   497b4:	019ff834 	movhi	r6,32736
   497b8:	28cb883a 	add	r5,r5,r3
   497bc:	31bfffc4 	addi	r6,r6,-1
   497c0:	317ff62e 	bgeu	r6,r5,4979c <__alt_data_end+0xfffc979c>
   497c4:	01400434 	movhi	r5,16
   497c8:	297fffc4 	addi	r5,r5,-1
   497cc:	28800236 	bltu	r5,r2,497d8 <__fpclassifyd+0x60>
   497d0:	008000c4 	movi	r2,3
   497d4:	f800283a 	ret
   497d8:	10c00226 	beq	r2,r3,497e4 <__fpclassifyd+0x6c>
   497dc:	0005883a 	mov	r2,zero
   497e0:	f800283a 	ret
   497e4:	2005003a 	cmpeq	r2,r4,zero
   497e8:	f800283a 	ret

000497ec <_sbrk_r>:
   497ec:	defffd04 	addi	sp,sp,-12
   497f0:	dc000015 	stw	r16,0(sp)
   497f4:	04000174 	movhi	r16,5
   497f8:	dc400115 	stw	r17,4(sp)
   497fc:	84126a04 	addi	r16,r16,18856
   49800:	2023883a 	mov	r17,r4
   49804:	2809883a 	mov	r4,r5
   49808:	dfc00215 	stw	ra,8(sp)
   4980c:	80000015 	stw	zero,0(r16)
   49810:	004ee380 	call	4ee38 <sbrk>
   49814:	00ffffc4 	movi	r3,-1
   49818:	10c00526 	beq	r2,r3,49830 <_sbrk_r+0x44>
   4981c:	dfc00217 	ldw	ra,8(sp)
   49820:	dc400117 	ldw	r17,4(sp)
   49824:	dc000017 	ldw	r16,0(sp)
   49828:	dec00304 	addi	sp,sp,12
   4982c:	f800283a 	ret
   49830:	80c00017 	ldw	r3,0(r16)
   49834:	183ff926 	beq	r3,zero,4981c <__alt_data_end+0xfffc981c>
   49838:	88c00015 	stw	r3,0(r17)
   4983c:	003ff706 	br	4981c <__alt_data_end+0xfffc981c>

00049840 <__sread>:
   49840:	defffe04 	addi	sp,sp,-8
   49844:	dc000015 	stw	r16,0(sp)
   49848:	2821883a 	mov	r16,r5
   4984c:	2940038f 	ldh	r5,14(r5)
   49850:	dfc00115 	stw	ra,4(sp)
   49854:	004bce40 	call	4bce4 <_read_r>
   49858:	10000716 	blt	r2,zero,49878 <__sread+0x38>
   4985c:	80c01417 	ldw	r3,80(r16)
   49860:	1887883a 	add	r3,r3,r2
   49864:	80c01415 	stw	r3,80(r16)
   49868:	dfc00117 	ldw	ra,4(sp)
   4986c:	dc000017 	ldw	r16,0(sp)
   49870:	dec00204 	addi	sp,sp,8
   49874:	f800283a 	ret
   49878:	80c0030b 	ldhu	r3,12(r16)
   4987c:	18fbffcc 	andi	r3,r3,61439
   49880:	80c0030d 	sth	r3,12(r16)
   49884:	dfc00117 	ldw	ra,4(sp)
   49888:	dc000017 	ldw	r16,0(sp)
   4988c:	dec00204 	addi	sp,sp,8
   49890:	f800283a 	ret

00049894 <__seofread>:
   49894:	0005883a 	mov	r2,zero
   49898:	f800283a 	ret

0004989c <__swrite>:
   4989c:	2880030b 	ldhu	r2,12(r5)
   498a0:	defffb04 	addi	sp,sp,-20
   498a4:	dcc00315 	stw	r19,12(sp)
   498a8:	dc800215 	stw	r18,8(sp)
   498ac:	dc400115 	stw	r17,4(sp)
   498b0:	dc000015 	stw	r16,0(sp)
   498b4:	dfc00415 	stw	ra,16(sp)
   498b8:	10c0400c 	andi	r3,r2,256
   498bc:	2821883a 	mov	r16,r5
   498c0:	2023883a 	mov	r17,r4
   498c4:	3025883a 	mov	r18,r6
   498c8:	3827883a 	mov	r19,r7
   498cc:	18000526 	beq	r3,zero,498e4 <__swrite+0x48>
   498d0:	2940038f 	ldh	r5,14(r5)
   498d4:	01c00084 	movi	r7,2
   498d8:	000d883a 	mov	r6,zero
   498dc:	004bb280 	call	4bb28 <_lseek_r>
   498e0:	8080030b 	ldhu	r2,12(r16)
   498e4:	8140038f 	ldh	r5,14(r16)
   498e8:	10bbffcc 	andi	r2,r2,61439
   498ec:	980f883a 	mov	r7,r19
   498f0:	900d883a 	mov	r6,r18
   498f4:	8809883a 	mov	r4,r17
   498f8:	8080030d 	sth	r2,12(r16)
   498fc:	dfc00417 	ldw	ra,16(sp)
   49900:	dcc00317 	ldw	r19,12(sp)
   49904:	dc800217 	ldw	r18,8(sp)
   49908:	dc400117 	ldw	r17,4(sp)
   4990c:	dc000017 	ldw	r16,0(sp)
   49910:	dec00504 	addi	sp,sp,20
   49914:	004b1381 	jmpi	4b138 <_write_r>

00049918 <__sseek>:
   49918:	defffe04 	addi	sp,sp,-8
   4991c:	dc000015 	stw	r16,0(sp)
   49920:	2821883a 	mov	r16,r5
   49924:	2940038f 	ldh	r5,14(r5)
   49928:	dfc00115 	stw	ra,4(sp)
   4992c:	004bb280 	call	4bb28 <_lseek_r>
   49930:	00ffffc4 	movi	r3,-1
   49934:	10c00826 	beq	r2,r3,49958 <__sseek+0x40>
   49938:	80c0030b 	ldhu	r3,12(r16)
   4993c:	80801415 	stw	r2,80(r16)
   49940:	18c40014 	ori	r3,r3,4096
   49944:	80c0030d 	sth	r3,12(r16)
   49948:	dfc00117 	ldw	ra,4(sp)
   4994c:	dc000017 	ldw	r16,0(sp)
   49950:	dec00204 	addi	sp,sp,8
   49954:	f800283a 	ret
   49958:	80c0030b 	ldhu	r3,12(r16)
   4995c:	18fbffcc 	andi	r3,r3,61439
   49960:	80c0030d 	sth	r3,12(r16)
   49964:	dfc00117 	ldw	ra,4(sp)
   49968:	dc000017 	ldw	r16,0(sp)
   4996c:	dec00204 	addi	sp,sp,8
   49970:	f800283a 	ret

00049974 <__sclose>:
   49974:	2940038f 	ldh	r5,14(r5)
   49978:	004b1981 	jmpi	4b198 <_close_r>

0004997c <strcmp>:
   4997c:	2144b03a 	or	r2,r4,r5
   49980:	108000cc 	andi	r2,r2,3
   49984:	1000171e 	bne	r2,zero,499e4 <strcmp+0x68>
   49988:	20800017 	ldw	r2,0(r4)
   4998c:	28c00017 	ldw	r3,0(r5)
   49990:	10c0141e 	bne	r2,r3,499e4 <strcmp+0x68>
   49994:	027fbff4 	movhi	r9,65279
   49998:	4a7fbfc4 	addi	r9,r9,-257
   4999c:	0086303a 	nor	r3,zero,r2
   499a0:	02202074 	movhi	r8,32897
   499a4:	1245883a 	add	r2,r2,r9
   499a8:	42202004 	addi	r8,r8,-32640
   499ac:	10c4703a 	and	r2,r2,r3
   499b0:	1204703a 	and	r2,r2,r8
   499b4:	10000226 	beq	r2,zero,499c0 <strcmp+0x44>
   499b8:	00002306 	br	49a48 <strcmp+0xcc>
   499bc:	1000221e 	bne	r2,zero,49a48 <strcmp+0xcc>
   499c0:	21000104 	addi	r4,r4,4
   499c4:	20c00017 	ldw	r3,0(r4)
   499c8:	29400104 	addi	r5,r5,4
   499cc:	29800017 	ldw	r6,0(r5)
   499d0:	1a4f883a 	add	r7,r3,r9
   499d4:	00c4303a 	nor	r2,zero,r3
   499d8:	3884703a 	and	r2,r7,r2
   499dc:	1204703a 	and	r2,r2,r8
   499e0:	19bff626 	beq	r3,r6,499bc <__alt_data_end+0xfffc99bc>
   499e4:	20800003 	ldbu	r2,0(r4)
   499e8:	10c03fcc 	andi	r3,r2,255
   499ec:	18c0201c 	xori	r3,r3,128
   499f0:	18ffe004 	addi	r3,r3,-128
   499f4:	18000c26 	beq	r3,zero,49a28 <strcmp+0xac>
   499f8:	29800007 	ldb	r6,0(r5)
   499fc:	19800326 	beq	r3,r6,49a0c <strcmp+0x90>
   49a00:	00001306 	br	49a50 <strcmp+0xd4>
   49a04:	29800007 	ldb	r6,0(r5)
   49a08:	11800b1e 	bne	r2,r6,49a38 <strcmp+0xbc>
   49a0c:	21000044 	addi	r4,r4,1
   49a10:	20c00003 	ldbu	r3,0(r4)
   49a14:	29400044 	addi	r5,r5,1
   49a18:	18803fcc 	andi	r2,r3,255
   49a1c:	1080201c 	xori	r2,r2,128
   49a20:	10bfe004 	addi	r2,r2,-128
   49a24:	103ff71e 	bne	r2,zero,49a04 <__alt_data_end+0xfffc9a04>
   49a28:	0007883a 	mov	r3,zero
   49a2c:	28800003 	ldbu	r2,0(r5)
   49a30:	1885c83a 	sub	r2,r3,r2
   49a34:	f800283a 	ret
   49a38:	28800003 	ldbu	r2,0(r5)
   49a3c:	18c03fcc 	andi	r3,r3,255
   49a40:	1885c83a 	sub	r2,r3,r2
   49a44:	f800283a 	ret
   49a48:	0005883a 	mov	r2,zero
   49a4c:	f800283a 	ret
   49a50:	10c03fcc 	andi	r3,r2,255
   49a54:	003ff506 	br	49a2c <__alt_data_end+0xfffc9a2c>

00049a58 <strlen>:
   49a58:	208000cc 	andi	r2,r4,3
   49a5c:	10002026 	beq	r2,zero,49ae0 <strlen+0x88>
   49a60:	20800007 	ldb	r2,0(r4)
   49a64:	10002026 	beq	r2,zero,49ae8 <strlen+0x90>
   49a68:	2005883a 	mov	r2,r4
   49a6c:	00000206 	br	49a78 <strlen+0x20>
   49a70:	10c00007 	ldb	r3,0(r2)
   49a74:	18001826 	beq	r3,zero,49ad8 <strlen+0x80>
   49a78:	10800044 	addi	r2,r2,1
   49a7c:	10c000cc 	andi	r3,r2,3
   49a80:	183ffb1e 	bne	r3,zero,49a70 <__alt_data_end+0xfffc9a70>
   49a84:	10c00017 	ldw	r3,0(r2)
   49a88:	01ffbff4 	movhi	r7,65279
   49a8c:	39ffbfc4 	addi	r7,r7,-257
   49a90:	00ca303a 	nor	r5,zero,r3
   49a94:	01a02074 	movhi	r6,32897
   49a98:	19c7883a 	add	r3,r3,r7
   49a9c:	31a02004 	addi	r6,r6,-32640
   49aa0:	1946703a 	and	r3,r3,r5
   49aa4:	1986703a 	and	r3,r3,r6
   49aa8:	1800091e 	bne	r3,zero,49ad0 <strlen+0x78>
   49aac:	10800104 	addi	r2,r2,4
   49ab0:	10c00017 	ldw	r3,0(r2)
   49ab4:	19cb883a 	add	r5,r3,r7
   49ab8:	00c6303a 	nor	r3,zero,r3
   49abc:	28c6703a 	and	r3,r5,r3
   49ac0:	1986703a 	and	r3,r3,r6
   49ac4:	183ff926 	beq	r3,zero,49aac <__alt_data_end+0xfffc9aac>
   49ac8:	00000106 	br	49ad0 <strlen+0x78>
   49acc:	10800044 	addi	r2,r2,1
   49ad0:	10c00007 	ldb	r3,0(r2)
   49ad4:	183ffd1e 	bne	r3,zero,49acc <__alt_data_end+0xfffc9acc>
   49ad8:	1105c83a 	sub	r2,r2,r4
   49adc:	f800283a 	ret
   49ae0:	2005883a 	mov	r2,r4
   49ae4:	003fe706 	br	49a84 <__alt_data_end+0xfffc9a84>
   49ae8:	0005883a 	mov	r2,zero
   49aec:	f800283a 	ret

00049af0 <__sprint_r.part.0>:
   49af0:	28801917 	ldw	r2,100(r5)
   49af4:	defff604 	addi	sp,sp,-40
   49af8:	dd400515 	stw	r21,20(sp)
   49afc:	dfc00915 	stw	ra,36(sp)
   49b00:	df000815 	stw	fp,32(sp)
   49b04:	ddc00715 	stw	r23,28(sp)
   49b08:	dd800615 	stw	r22,24(sp)
   49b0c:	dd000415 	stw	r20,16(sp)
   49b10:	dcc00315 	stw	r19,12(sp)
   49b14:	dc800215 	stw	r18,8(sp)
   49b18:	dc400115 	stw	r17,4(sp)
   49b1c:	dc000015 	stw	r16,0(sp)
   49b20:	1088000c 	andi	r2,r2,8192
   49b24:	302b883a 	mov	r21,r6
   49b28:	10002e26 	beq	r2,zero,49be4 <__sprint_r.part.0+0xf4>
   49b2c:	30800217 	ldw	r2,8(r6)
   49b30:	35800017 	ldw	r22,0(r6)
   49b34:	10002926 	beq	r2,zero,49bdc <__sprint_r.part.0+0xec>
   49b38:	2827883a 	mov	r19,r5
   49b3c:	2029883a 	mov	r20,r4
   49b40:	b5c00104 	addi	r23,r22,4
   49b44:	04bfffc4 	movi	r18,-1
   49b48:	bc400017 	ldw	r17,0(r23)
   49b4c:	b4000017 	ldw	r16,0(r22)
   49b50:	0039883a 	mov	fp,zero
   49b54:	8822d0ba 	srli	r17,r17,2
   49b58:	8800031e 	bne	r17,zero,49b68 <__sprint_r.part.0+0x78>
   49b5c:	00001806 	br	49bc0 <__sprint_r.part.0+0xd0>
   49b60:	84000104 	addi	r16,r16,4
   49b64:	8f001526 	beq	r17,fp,49bbc <__sprint_r.part.0+0xcc>
   49b68:	81400017 	ldw	r5,0(r16)
   49b6c:	980d883a 	mov	r6,r19
   49b70:	a009883a 	mov	r4,r20
   49b74:	004b5180 	call	4b518 <_fputwc_r>
   49b78:	e7000044 	addi	fp,fp,1
   49b7c:	14bff81e 	bne	r2,r18,49b60 <__alt_data_end+0xfffc9b60>
   49b80:	9005883a 	mov	r2,r18
   49b84:	a8000215 	stw	zero,8(r21)
   49b88:	a8000115 	stw	zero,4(r21)
   49b8c:	dfc00917 	ldw	ra,36(sp)
   49b90:	df000817 	ldw	fp,32(sp)
   49b94:	ddc00717 	ldw	r23,28(sp)
   49b98:	dd800617 	ldw	r22,24(sp)
   49b9c:	dd400517 	ldw	r21,20(sp)
   49ba0:	dd000417 	ldw	r20,16(sp)
   49ba4:	dcc00317 	ldw	r19,12(sp)
   49ba8:	dc800217 	ldw	r18,8(sp)
   49bac:	dc400117 	ldw	r17,4(sp)
   49bb0:	dc000017 	ldw	r16,0(sp)
   49bb4:	dec00a04 	addi	sp,sp,40
   49bb8:	f800283a 	ret
   49bbc:	a8800217 	ldw	r2,8(r21)
   49bc0:	8c63883a 	add	r17,r17,r17
   49bc4:	8c63883a 	add	r17,r17,r17
   49bc8:	1445c83a 	sub	r2,r2,r17
   49bcc:	a8800215 	stw	r2,8(r21)
   49bd0:	b5800204 	addi	r22,r22,8
   49bd4:	bdc00204 	addi	r23,r23,8
   49bd8:	103fdb1e 	bne	r2,zero,49b48 <__alt_data_end+0xfffc9b48>
   49bdc:	0005883a 	mov	r2,zero
   49be0:	003fe806 	br	49b84 <__alt_data_end+0xfffc9b84>
   49be4:	004b6180 	call	4b618 <__sfvwrite_r>
   49be8:	003fe606 	br	49b84 <__alt_data_end+0xfffc9b84>

00049bec <__sprint_r>:
   49bec:	30c00217 	ldw	r3,8(r6)
   49bf0:	18000126 	beq	r3,zero,49bf8 <__sprint_r+0xc>
   49bf4:	0049af01 	jmpi	49af0 <__sprint_r.part.0>
   49bf8:	30000115 	stw	zero,4(r6)
   49bfc:	0005883a 	mov	r2,zero
   49c00:	f800283a 	ret

00049c04 <___vfiprintf_internal_r>:
   49c04:	deffc904 	addi	sp,sp,-220
   49c08:	df003515 	stw	fp,212(sp)
   49c0c:	dd003115 	stw	r20,196(sp)
   49c10:	dfc03615 	stw	ra,216(sp)
   49c14:	ddc03415 	stw	r23,208(sp)
   49c18:	dd803315 	stw	r22,204(sp)
   49c1c:	dd403215 	stw	r21,200(sp)
   49c20:	dcc03015 	stw	r19,192(sp)
   49c24:	dc802f15 	stw	r18,188(sp)
   49c28:	dc402e15 	stw	r17,184(sp)
   49c2c:	dc002d15 	stw	r16,180(sp)
   49c30:	d9002015 	stw	r4,128(sp)
   49c34:	d9c02215 	stw	r7,136(sp)
   49c38:	2829883a 	mov	r20,r5
   49c3c:	3039883a 	mov	fp,r6
   49c40:	20000226 	beq	r4,zero,49c4c <___vfiprintf_internal_r+0x48>
   49c44:	20800e17 	ldw	r2,56(r4)
   49c48:	1000cf26 	beq	r2,zero,49f88 <___vfiprintf_internal_r+0x384>
   49c4c:	a080030b 	ldhu	r2,12(r20)
   49c50:	10c8000c 	andi	r3,r2,8192
   49c54:	1800061e 	bne	r3,zero,49c70 <___vfiprintf_internal_r+0x6c>
   49c58:	a1001917 	ldw	r4,100(r20)
   49c5c:	00f7ffc4 	movi	r3,-8193
   49c60:	10880014 	ori	r2,r2,8192
   49c64:	20c6703a 	and	r3,r4,r3
   49c68:	a080030d 	sth	r2,12(r20)
   49c6c:	a0c01915 	stw	r3,100(r20)
   49c70:	10c0020c 	andi	r3,r2,8
   49c74:	1800a926 	beq	r3,zero,49f1c <___vfiprintf_internal_r+0x318>
   49c78:	a0c00417 	ldw	r3,16(r20)
   49c7c:	1800a726 	beq	r3,zero,49f1c <___vfiprintf_internal_r+0x318>
   49c80:	1080068c 	andi	r2,r2,26
   49c84:	00c00284 	movi	r3,10
   49c88:	10c0ac26 	beq	r2,r3,49f3c <___vfiprintf_internal_r+0x338>
   49c8c:	da801a04 	addi	r10,sp,104
   49c90:	da801e15 	stw	r10,120(sp)
   49c94:	d8801e17 	ldw	r2,120(sp)
   49c98:	da8019c4 	addi	r10,sp,103
   49c9c:	05800174 	movhi	r22,5
   49ca0:	05c00174 	movhi	r23,5
   49ca4:	da801f15 	stw	r10,124(sp)
   49ca8:	1295c83a 	sub	r10,r2,r10
   49cac:	b5848904 	addi	r22,r22,4644
   49cb0:	bdc48504 	addi	r23,r23,4628
   49cb4:	dec01a15 	stw	sp,104(sp)
   49cb8:	d8001c15 	stw	zero,112(sp)
   49cbc:	d8001b15 	stw	zero,108(sp)
   49cc0:	d8002615 	stw	zero,152(sp)
   49cc4:	d8002315 	stw	zero,140(sp)
   49cc8:	da802715 	stw	r10,156(sp)
   49ccc:	d811883a 	mov	r8,sp
   49cd0:	dd002115 	stw	r20,132(sp)
   49cd4:	e021883a 	mov	r16,fp
   49cd8:	80800007 	ldb	r2,0(r16)
   49cdc:	1003ea26 	beq	r2,zero,4ac88 <___vfiprintf_internal_r+0x1084>
   49ce0:	00c00944 	movi	r3,37
   49ce4:	8025883a 	mov	r18,r16
   49ce8:	10c0021e 	bne	r2,r3,49cf4 <___vfiprintf_internal_r+0xf0>
   49cec:	00001606 	br	49d48 <___vfiprintf_internal_r+0x144>
   49cf0:	10c00326 	beq	r2,r3,49d00 <___vfiprintf_internal_r+0xfc>
   49cf4:	94800044 	addi	r18,r18,1
   49cf8:	90800007 	ldb	r2,0(r18)
   49cfc:	103ffc1e 	bne	r2,zero,49cf0 <__alt_data_end+0xfffc9cf0>
   49d00:	9423c83a 	sub	r17,r18,r16
   49d04:	88001026 	beq	r17,zero,49d48 <___vfiprintf_internal_r+0x144>
   49d08:	d8c01c17 	ldw	r3,112(sp)
   49d0c:	d8801b17 	ldw	r2,108(sp)
   49d10:	44000015 	stw	r16,0(r8)
   49d14:	88c7883a 	add	r3,r17,r3
   49d18:	10800044 	addi	r2,r2,1
   49d1c:	44400115 	stw	r17,4(r8)
   49d20:	d8c01c15 	stw	r3,112(sp)
   49d24:	d8801b15 	stw	r2,108(sp)
   49d28:	010001c4 	movi	r4,7
   49d2c:	2080760e 	bge	r4,r2,49f08 <___vfiprintf_internal_r+0x304>
   49d30:	1803821e 	bne	r3,zero,4ab3c <___vfiprintf_internal_r+0xf38>
   49d34:	da802317 	ldw	r10,140(sp)
   49d38:	d8001b15 	stw	zero,108(sp)
   49d3c:	d811883a 	mov	r8,sp
   49d40:	5455883a 	add	r10,r10,r17
   49d44:	da802315 	stw	r10,140(sp)
   49d48:	90800007 	ldb	r2,0(r18)
   49d4c:	10044626 	beq	r2,zero,4ae68 <___vfiprintf_internal_r+0x1264>
   49d50:	90c00047 	ldb	r3,1(r18)
   49d54:	94000044 	addi	r16,r18,1
   49d58:	d8001d85 	stb	zero,118(sp)
   49d5c:	0009883a 	mov	r4,zero
   49d60:	000f883a 	mov	r7,zero
   49d64:	027fffc4 	movi	r9,-1
   49d68:	0023883a 	mov	r17,zero
   49d6c:	0029883a 	mov	r20,zero
   49d70:	01401604 	movi	r5,88
   49d74:	01800244 	movi	r6,9
   49d78:	03400a84 	movi	r13,42
   49d7c:	03001b04 	movi	r12,108
   49d80:	84000044 	addi	r16,r16,1
   49d84:	18bff804 	addi	r2,r3,-32
   49d88:	28827336 	bltu	r5,r2,4a758 <___vfiprintf_internal_r+0xb54>
   49d8c:	100490ba 	slli	r2,r2,2
   49d90:	02800174 	movhi	r10,5
   49d94:	52a76904 	addi	r10,r10,-25180
   49d98:	1285883a 	add	r2,r2,r10
   49d9c:	10800017 	ldw	r2,0(r2)
   49da0:	1000683a 	jmp	r2
   49da4:	0004a48c 	andi	zero,zero,4754
   49da8:	0004a758 	cmpnei	zero,zero,4765
   49dac:	0004a758 	cmpnei	zero,zero,4765
   49db0:	0004a4ac 	andhi	zero,zero,4754
   49db4:	0004a758 	cmpnei	zero,zero,4765
   49db8:	0004a758 	cmpnei	zero,zero,4765
   49dbc:	0004a758 	cmpnei	zero,zero,4765
   49dc0:	0004a758 	cmpnei	zero,zero,4765
   49dc4:	0004a758 	cmpnei	zero,zero,4765
   49dc8:	0004a758 	cmpnei	zero,zero,4765
   49dcc:	0004a694 	movui	zero,4762
   49dd0:	0004a6b0 	cmpltui	zero,zero,4762
   49dd4:	0004a758 	cmpnei	zero,zero,4765
   49dd8:	00049f98 	cmpnei	zero,zero,4734
   49ddc:	0004a6c0 	call	4a6c <__alt_mem_onchip_memory2_0-0x3b594>
   49de0:	0004a758 	cmpnei	zero,zero,4765
   49de4:	0004a4b8 	rdprs	zero,zero,4754
   49de8:	0004a4c4 	movi	zero,4755
   49dec:	0004a4c4 	movi	zero,4755
   49df0:	0004a4c4 	movi	zero,4755
   49df4:	0004a4c4 	movi	zero,4755
   49df8:	0004a4c4 	movi	zero,4755
   49dfc:	0004a4c4 	movi	zero,4755
   49e00:	0004a4c4 	movi	zero,4755
   49e04:	0004a4c4 	movi	zero,4755
   49e08:	0004a4c4 	movi	zero,4755
   49e0c:	0004a758 	cmpnei	zero,zero,4765
   49e10:	0004a758 	cmpnei	zero,zero,4765
   49e14:	0004a758 	cmpnei	zero,zero,4765
   49e18:	0004a758 	cmpnei	zero,zero,4765
   49e1c:	0004a758 	cmpnei	zero,zero,4765
   49e20:	0004a758 	cmpnei	zero,zero,4765
   49e24:	0004a758 	cmpnei	zero,zero,4765
   49e28:	0004a758 	cmpnei	zero,zero,4765
   49e2c:	0004a758 	cmpnei	zero,zero,4765
   49e30:	0004a758 	cmpnei	zero,zero,4765
   49e34:	0004a4f0 	cmpltui	zero,zero,4755
   49e38:	0004a758 	cmpnei	zero,zero,4765
   49e3c:	0004a758 	cmpnei	zero,zero,4765
   49e40:	0004a758 	cmpnei	zero,zero,4765
   49e44:	0004a758 	cmpnei	zero,zero,4765
   49e48:	0004a758 	cmpnei	zero,zero,4765
   49e4c:	0004a758 	cmpnei	zero,zero,4765
   49e50:	0004a758 	cmpnei	zero,zero,4765
   49e54:	0004a758 	cmpnei	zero,zero,4765
   49e58:	0004a758 	cmpnei	zero,zero,4765
   49e5c:	0004a758 	cmpnei	zero,zero,4765
   49e60:	0004a528 	cmpgeui	zero,zero,4756
   49e64:	0004a758 	cmpnei	zero,zero,4765
   49e68:	0004a758 	cmpnei	zero,zero,4765
   49e6c:	0004a758 	cmpnei	zero,zero,4765
   49e70:	0004a758 	cmpnei	zero,zero,4765
   49e74:	0004a758 	cmpnei	zero,zero,4765
   49e78:	0004a580 	call	4a58 <__alt_mem_onchip_memory2_0-0x3b5a8>
   49e7c:	0004a758 	cmpnei	zero,zero,4765
   49e80:	0004a758 	cmpnei	zero,zero,4765
   49e84:	0004a5f0 	cmpltui	zero,zero,4759
   49e88:	0004a758 	cmpnei	zero,zero,4765
   49e8c:	0004a758 	cmpnei	zero,zero,4765
   49e90:	0004a758 	cmpnei	zero,zero,4765
   49e94:	0004a758 	cmpnei	zero,zero,4765
   49e98:	0004a758 	cmpnei	zero,zero,4765
   49e9c:	0004a758 	cmpnei	zero,zero,4765
   49ea0:	0004a758 	cmpnei	zero,zero,4765
   49ea4:	0004a758 	cmpnei	zero,zero,4765
   49ea8:	0004a758 	cmpnei	zero,zero,4765
   49eac:	0004a758 	cmpnei	zero,zero,4765
   49eb0:	0004a39c 	xori	zero,zero,4750
   49eb4:	0004a3c8 	cmpgei	zero,zero,4751
   49eb8:	0004a758 	cmpnei	zero,zero,4765
   49ebc:	0004a758 	cmpnei	zero,zero,4765
   49ec0:	0004a758 	cmpnei	zero,zero,4765
   49ec4:	0004a700 	call	4a70 <__alt_mem_onchip_memory2_0-0x3b590>
   49ec8:	0004a3c8 	cmpgei	zero,zero,4751
   49ecc:	0004a758 	cmpnei	zero,zero,4765
   49ed0:	0004a758 	cmpnei	zero,zero,4765
   49ed4:	0004a25c 	xori	zero,zero,4745
   49ed8:	0004a758 	cmpnei	zero,zero,4765
   49edc:	0004a26c 	andhi	zero,zero,4745
   49ee0:	0004a2a8 	cmpgeui	zero,zero,4746
   49ee4:	00049fa4 	muli	zero,zero,4734
   49ee8:	0004a250 	cmplti	zero,zero,4745
   49eec:	0004a758 	cmpnei	zero,zero,4765
   49ef0:	0004a62c 	andhi	zero,zero,4760
   49ef4:	0004a758 	cmpnei	zero,zero,4765
   49ef8:	0004a684 	movi	zero,4762
   49efc:	0004a758 	cmpnei	zero,zero,4765
   49f00:	0004a758 	cmpnei	zero,zero,4765
   49f04:	0004a348 	cmpgei	zero,zero,4749
   49f08:	42000204 	addi	r8,r8,8
   49f0c:	da802317 	ldw	r10,140(sp)
   49f10:	5455883a 	add	r10,r10,r17
   49f14:	da802315 	stw	r10,140(sp)
   49f18:	003f8b06 	br	49d48 <__alt_data_end+0xfffc9d48>
   49f1c:	d9002017 	ldw	r4,128(sp)
   49f20:	a00b883a 	mov	r5,r20
   49f24:	00453a40 	call	453a4 <__swsetup_r>
   49f28:	1003b11e 	bne	r2,zero,4adf0 <___vfiprintf_internal_r+0x11ec>
   49f2c:	a080030b 	ldhu	r2,12(r20)
   49f30:	00c00284 	movi	r3,10
   49f34:	1080068c 	andi	r2,r2,26
   49f38:	10ff541e 	bne	r2,r3,49c8c <__alt_data_end+0xfffc9c8c>
   49f3c:	a080038f 	ldh	r2,14(r20)
   49f40:	103f5216 	blt	r2,zero,49c8c <__alt_data_end+0xfffc9c8c>
   49f44:	d9c02217 	ldw	r7,136(sp)
   49f48:	d9002017 	ldw	r4,128(sp)
   49f4c:	e00d883a 	mov	r6,fp
   49f50:	a00b883a 	mov	r5,r20
   49f54:	004b07c0 	call	4b07c <__sbprintf>
   49f58:	dfc03617 	ldw	ra,216(sp)
   49f5c:	df003517 	ldw	fp,212(sp)
   49f60:	ddc03417 	ldw	r23,208(sp)
   49f64:	dd803317 	ldw	r22,204(sp)
   49f68:	dd403217 	ldw	r21,200(sp)
   49f6c:	dd003117 	ldw	r20,196(sp)
   49f70:	dcc03017 	ldw	r19,192(sp)
   49f74:	dc802f17 	ldw	r18,188(sp)
   49f78:	dc402e17 	ldw	r17,184(sp)
   49f7c:	dc002d17 	ldw	r16,180(sp)
   49f80:	dec03704 	addi	sp,sp,220
   49f84:	f800283a 	ret
   49f88:	00473780 	call	47378 <__sinit>
   49f8c:	003f2f06 	br	49c4c <__alt_data_end+0xfffc9c4c>
   49f90:	0463c83a 	sub	r17,zero,r17
   49f94:	d8802215 	stw	r2,136(sp)
   49f98:	a5000114 	ori	r20,r20,4
   49f9c:	80c00007 	ldb	r3,0(r16)
   49fa0:	003f7706 	br	49d80 <__alt_data_end+0xfffc9d80>
   49fa4:	00800c04 	movi	r2,48
   49fa8:	da802217 	ldw	r10,136(sp)
   49fac:	d8801d05 	stb	r2,116(sp)
   49fb0:	00801e04 	movi	r2,120
   49fb4:	d8801d45 	stb	r2,117(sp)
   49fb8:	d8001d85 	stb	zero,118(sp)
   49fbc:	50c00104 	addi	r3,r10,4
   49fc0:	54800017 	ldw	r18,0(r10)
   49fc4:	0027883a 	mov	r19,zero
   49fc8:	a0800094 	ori	r2,r20,2
   49fcc:	48030b16 	blt	r9,zero,4abfc <___vfiprintf_internal_r+0xff8>
   49fd0:	00bfdfc4 	movi	r2,-129
   49fd4:	a096703a 	and	r11,r20,r2
   49fd8:	d8c02215 	stw	r3,136(sp)
   49fdc:	5d000094 	ori	r20,r11,2
   49fe0:	90032b1e 	bne	r18,zero,4ac90 <___vfiprintf_internal_r+0x108c>
   49fe4:	00800174 	movhi	r2,5
   49fe8:	10842404 	addi	r2,r2,4240
   49fec:	d8802615 	stw	r2,152(sp)
   49ff0:	0039883a 	mov	fp,zero
   49ff4:	48017b1e 	bne	r9,zero,4a5e4 <___vfiprintf_internal_r+0x9e0>
   49ff8:	0013883a 	mov	r9,zero
   49ffc:	0027883a 	mov	r19,zero
   4a000:	dd401a04 	addi	r21,sp,104
   4a004:	4825883a 	mov	r18,r9
   4a008:	4cc0010e 	bge	r9,r19,4a010 <___vfiprintf_internal_r+0x40c>
   4a00c:	9825883a 	mov	r18,r19
   4a010:	e7003fcc 	andi	fp,fp,255
   4a014:	e700201c 	xori	fp,fp,128
   4a018:	e73fe004 	addi	fp,fp,-128
   4a01c:	e0000126 	beq	fp,zero,4a024 <___vfiprintf_internal_r+0x420>
   4a020:	94800044 	addi	r18,r18,1
   4a024:	a380008c 	andi	r14,r20,2
   4a028:	70000126 	beq	r14,zero,4a030 <___vfiprintf_internal_r+0x42c>
   4a02c:	94800084 	addi	r18,r18,2
   4a030:	a700210c 	andi	fp,r20,132
   4a034:	e001df1e 	bne	fp,zero,4a7b4 <___vfiprintf_internal_r+0xbb0>
   4a038:	8c87c83a 	sub	r3,r17,r18
   4a03c:	00c1dd0e 	bge	zero,r3,4a7b4 <___vfiprintf_internal_r+0xbb0>
   4a040:	01c00404 	movi	r7,16
   4a044:	d8801c17 	ldw	r2,112(sp)
   4a048:	38c3ad0e 	bge	r7,r3,4af00 <___vfiprintf_internal_r+0x12fc>
   4a04c:	02800174 	movhi	r10,5
   4a050:	52848904 	addi	r10,r10,4644
   4a054:	dc002915 	stw	r16,164(sp)
   4a058:	d9801b17 	ldw	r6,108(sp)
   4a05c:	da802415 	stw	r10,144(sp)
   4a060:	03c001c4 	movi	r15,7
   4a064:	da402515 	stw	r9,148(sp)
   4a068:	db802815 	stw	r14,160(sp)
   4a06c:	1821883a 	mov	r16,r3
   4a070:	00000506 	br	4a088 <___vfiprintf_internal_r+0x484>
   4a074:	31400084 	addi	r5,r6,2
   4a078:	42000204 	addi	r8,r8,8
   4a07c:	200d883a 	mov	r6,r4
   4a080:	843ffc04 	addi	r16,r16,-16
   4a084:	3c000d0e 	bge	r7,r16,4a0bc <___vfiprintf_internal_r+0x4b8>
   4a088:	10800404 	addi	r2,r2,16
   4a08c:	31000044 	addi	r4,r6,1
   4a090:	45800015 	stw	r22,0(r8)
   4a094:	41c00115 	stw	r7,4(r8)
   4a098:	d8801c15 	stw	r2,112(sp)
   4a09c:	d9001b15 	stw	r4,108(sp)
   4a0a0:	793ff40e 	bge	r15,r4,4a074 <__alt_data_end+0xfffca074>
   4a0a4:	1001b51e 	bne	r2,zero,4a77c <___vfiprintf_internal_r+0xb78>
   4a0a8:	843ffc04 	addi	r16,r16,-16
   4a0ac:	000d883a 	mov	r6,zero
   4a0b0:	01400044 	movi	r5,1
   4a0b4:	d811883a 	mov	r8,sp
   4a0b8:	3c3ff316 	blt	r7,r16,4a088 <__alt_data_end+0xfffca088>
   4a0bc:	8007883a 	mov	r3,r16
   4a0c0:	da402517 	ldw	r9,148(sp)
   4a0c4:	db802817 	ldw	r14,160(sp)
   4a0c8:	dc002917 	ldw	r16,164(sp)
   4a0cc:	da802417 	ldw	r10,144(sp)
   4a0d0:	1885883a 	add	r2,r3,r2
   4a0d4:	40c00115 	stw	r3,4(r8)
   4a0d8:	42800015 	stw	r10,0(r8)
   4a0dc:	d8801c15 	stw	r2,112(sp)
   4a0e0:	d9401b15 	stw	r5,108(sp)
   4a0e4:	00c001c4 	movi	r3,7
   4a0e8:	19426016 	blt	r3,r5,4aa6c <___vfiprintf_internal_r+0xe68>
   4a0ec:	d8c01d87 	ldb	r3,118(sp)
   4a0f0:	42000204 	addi	r8,r8,8
   4a0f4:	29000044 	addi	r4,r5,1
   4a0f8:	1801b31e 	bne	r3,zero,4a7c8 <___vfiprintf_internal_r+0xbc4>
   4a0fc:	7001c026 	beq	r14,zero,4a800 <___vfiprintf_internal_r+0xbfc>
   4a100:	d8c01d04 	addi	r3,sp,116
   4a104:	10800084 	addi	r2,r2,2
   4a108:	40c00015 	stw	r3,0(r8)
   4a10c:	00c00084 	movi	r3,2
   4a110:	40c00115 	stw	r3,4(r8)
   4a114:	d8801c15 	stw	r2,112(sp)
   4a118:	d9001b15 	stw	r4,108(sp)
   4a11c:	00c001c4 	movi	r3,7
   4a120:	1902650e 	bge	r3,r4,4aab8 <___vfiprintf_internal_r+0xeb4>
   4a124:	10029a1e 	bne	r2,zero,4ab90 <___vfiprintf_internal_r+0xf8c>
   4a128:	00c02004 	movi	r3,128
   4a12c:	01000044 	movi	r4,1
   4a130:	000b883a 	mov	r5,zero
   4a134:	d811883a 	mov	r8,sp
   4a138:	e0c1b31e 	bne	fp,r3,4a808 <___vfiprintf_internal_r+0xc04>
   4a13c:	8cb9c83a 	sub	fp,r17,r18
   4a140:	0701b10e 	bge	zero,fp,4a808 <___vfiprintf_internal_r+0xc04>
   4a144:	01c00404 	movi	r7,16
   4a148:	3f03890e 	bge	r7,fp,4af70 <___vfiprintf_internal_r+0x136c>
   4a14c:	00c00174 	movhi	r3,5
   4a150:	18c48504 	addi	r3,r3,4628
   4a154:	d8c02415 	stw	r3,144(sp)
   4a158:	8007883a 	mov	r3,r16
   4a15c:	034001c4 	movi	r13,7
   4a160:	e021883a 	mov	r16,fp
   4a164:	da402515 	stw	r9,148(sp)
   4a168:	1839883a 	mov	fp,r3
   4a16c:	00000506 	br	4a184 <___vfiprintf_internal_r+0x580>
   4a170:	29800084 	addi	r6,r5,2
   4a174:	42000204 	addi	r8,r8,8
   4a178:	180b883a 	mov	r5,r3
   4a17c:	843ffc04 	addi	r16,r16,-16
   4a180:	3c000d0e 	bge	r7,r16,4a1b8 <___vfiprintf_internal_r+0x5b4>
   4a184:	10800404 	addi	r2,r2,16
   4a188:	28c00044 	addi	r3,r5,1
   4a18c:	45c00015 	stw	r23,0(r8)
   4a190:	41c00115 	stw	r7,4(r8)
   4a194:	d8801c15 	stw	r2,112(sp)
   4a198:	d8c01b15 	stw	r3,108(sp)
   4a19c:	68fff40e 	bge	r13,r3,4a170 <__alt_data_end+0xfffca170>
   4a1a0:	1002241e 	bne	r2,zero,4aa34 <___vfiprintf_internal_r+0xe30>
   4a1a4:	843ffc04 	addi	r16,r16,-16
   4a1a8:	01800044 	movi	r6,1
   4a1ac:	000b883a 	mov	r5,zero
   4a1b0:	d811883a 	mov	r8,sp
   4a1b4:	3c3ff316 	blt	r7,r16,4a184 <__alt_data_end+0xfffca184>
   4a1b8:	da402517 	ldw	r9,148(sp)
   4a1bc:	e007883a 	mov	r3,fp
   4a1c0:	8039883a 	mov	fp,r16
   4a1c4:	1821883a 	mov	r16,r3
   4a1c8:	d8c02417 	ldw	r3,144(sp)
   4a1cc:	1705883a 	add	r2,r2,fp
   4a1d0:	47000115 	stw	fp,4(r8)
   4a1d4:	40c00015 	stw	r3,0(r8)
   4a1d8:	d8801c15 	stw	r2,112(sp)
   4a1dc:	d9801b15 	stw	r6,108(sp)
   4a1e0:	00c001c4 	movi	r3,7
   4a1e4:	19827616 	blt	r3,r6,4abc0 <___vfiprintf_internal_r+0xfbc>
   4a1e8:	4cf9c83a 	sub	fp,r9,r19
   4a1ec:	42000204 	addi	r8,r8,8
   4a1f0:	31000044 	addi	r4,r6,1
   4a1f4:	300b883a 	mov	r5,r6
   4a1f8:	07018516 	blt	zero,fp,4a810 <___vfiprintf_internal_r+0xc0c>
   4a1fc:	9885883a 	add	r2,r19,r2
   4a200:	45400015 	stw	r21,0(r8)
   4a204:	44c00115 	stw	r19,4(r8)
   4a208:	d8801c15 	stw	r2,112(sp)
   4a20c:	d9001b15 	stw	r4,108(sp)
   4a210:	00c001c4 	movi	r3,7
   4a214:	1901dd0e 	bge	r3,r4,4a98c <___vfiprintf_internal_r+0xd88>
   4a218:	1002401e 	bne	r2,zero,4ab1c <___vfiprintf_internal_r+0xf18>
   4a21c:	d8001b15 	stw	zero,108(sp)
   4a220:	a2c0010c 	andi	r11,r20,4
   4a224:	58000226 	beq	r11,zero,4a230 <___vfiprintf_internal_r+0x62c>
   4a228:	8ca7c83a 	sub	r19,r17,r18
   4a22c:	04c2f216 	blt	zero,r19,4adf8 <___vfiprintf_internal_r+0x11f4>
   4a230:	8c80010e 	bge	r17,r18,4a238 <___vfiprintf_internal_r+0x634>
   4a234:	9023883a 	mov	r17,r18
   4a238:	da802317 	ldw	r10,140(sp)
   4a23c:	5455883a 	add	r10,r10,r17
   4a240:	da802315 	stw	r10,140(sp)
   4a244:	d8001b15 	stw	zero,108(sp)
   4a248:	d811883a 	mov	r8,sp
   4a24c:	003ea206 	br	49cd8 <__alt_data_end+0xfffc9cd8>
   4a250:	a5000814 	ori	r20,r20,32
   4a254:	80c00007 	ldb	r3,0(r16)
   4a258:	003ec906 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a25c:	80c00007 	ldb	r3,0(r16)
   4a260:	1b030926 	beq	r3,r12,4ae88 <___vfiprintf_internal_r+0x1284>
   4a264:	a5000414 	ori	r20,r20,16
   4a268:	003ec506 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a26c:	21003fcc 	andi	r4,r4,255
   4a270:	20035e1e 	bne	r4,zero,4afec <___vfiprintf_internal_r+0x13e8>
   4a274:	a080080c 	andi	r2,r20,32
   4a278:	1002a526 	beq	r2,zero,4ad10 <___vfiprintf_internal_r+0x110c>
   4a27c:	da802217 	ldw	r10,136(sp)
   4a280:	50800017 	ldw	r2,0(r10)
   4a284:	da802317 	ldw	r10,140(sp)
   4a288:	5007d7fa 	srai	r3,r10,31
   4a28c:	da802217 	ldw	r10,136(sp)
   4a290:	10c00115 	stw	r3,4(r2)
   4a294:	52800104 	addi	r10,r10,4
   4a298:	da802215 	stw	r10,136(sp)
   4a29c:	da802317 	ldw	r10,140(sp)
   4a2a0:	12800015 	stw	r10,0(r2)
   4a2a4:	003e8c06 	br	49cd8 <__alt_data_end+0xfffc9cd8>
   4a2a8:	21003fcc 	andi	r4,r4,255
   4a2ac:	2003511e 	bne	r4,zero,4aff4 <___vfiprintf_internal_r+0x13f0>
   4a2b0:	a080080c 	andi	r2,r20,32
   4a2b4:	1000a126 	beq	r2,zero,4a53c <___vfiprintf_internal_r+0x938>
   4a2b8:	da802217 	ldw	r10,136(sp)
   4a2bc:	d8001d85 	stb	zero,118(sp)
   4a2c0:	50800204 	addi	r2,r10,8
   4a2c4:	54800017 	ldw	r18,0(r10)
   4a2c8:	54c00117 	ldw	r19,4(r10)
   4a2cc:	4802b416 	blt	r9,zero,4ada0 <___vfiprintf_internal_r+0x119c>
   4a2d0:	013fdfc4 	movi	r4,-129
   4a2d4:	94c6b03a 	or	r3,r18,r19
   4a2d8:	d8802215 	stw	r2,136(sp)
   4a2dc:	a128703a 	and	r20,r20,r4
   4a2e0:	1800a226 	beq	r3,zero,4a56c <___vfiprintf_internal_r+0x968>
   4a2e4:	0039883a 	mov	fp,zero
   4a2e8:	dd401a04 	addi	r21,sp,104
   4a2ec:	9006d0fa 	srli	r3,r18,3
   4a2f0:	9808977a 	slli	r4,r19,29
   4a2f4:	9826d0fa 	srli	r19,r19,3
   4a2f8:	948001cc 	andi	r18,r18,7
   4a2fc:	90800c04 	addi	r2,r18,48
   4a300:	ad7fffc4 	addi	r21,r21,-1
   4a304:	20e4b03a 	or	r18,r4,r3
   4a308:	a8800005 	stb	r2,0(r21)
   4a30c:	94c6b03a 	or	r3,r18,r19
   4a310:	183ff61e 	bne	r3,zero,4a2ec <__alt_data_end+0xfffca2ec>
   4a314:	a0c0004c 	andi	r3,r20,1
   4a318:	18005926 	beq	r3,zero,4a480 <___vfiprintf_internal_r+0x87c>
   4a31c:	10803fcc 	andi	r2,r2,255
   4a320:	1080201c 	xori	r2,r2,128
   4a324:	10bfe004 	addi	r2,r2,-128
   4a328:	00c00c04 	movi	r3,48
   4a32c:	10c05426 	beq	r2,r3,4a480 <___vfiprintf_internal_r+0x87c>
   4a330:	da801e17 	ldw	r10,120(sp)
   4a334:	a8bfffc4 	addi	r2,r21,-1
   4a338:	a8ffffc5 	stb	r3,-1(r21)
   4a33c:	50a7c83a 	sub	r19,r10,r2
   4a340:	102b883a 	mov	r21,r2
   4a344:	003f2f06 	br	4a004 <__alt_data_end+0xfffca004>
   4a348:	21003fcc 	andi	r4,r4,255
   4a34c:	2003421e 	bne	r4,zero,4b058 <___vfiprintf_internal_r+0x1454>
   4a350:	00800174 	movhi	r2,5
   4a354:	10842404 	addi	r2,r2,4240
   4a358:	d8802615 	stw	r2,152(sp)
   4a35c:	a080080c 	andi	r2,r20,32
   4a360:	1000aa26 	beq	r2,zero,4a60c <___vfiprintf_internal_r+0xa08>
   4a364:	da802217 	ldw	r10,136(sp)
   4a368:	54800017 	ldw	r18,0(r10)
   4a36c:	54c00117 	ldw	r19,4(r10)
   4a370:	52800204 	addi	r10,r10,8
   4a374:	da802215 	stw	r10,136(sp)
   4a378:	a080004c 	andi	r2,r20,1
   4a37c:	1001d226 	beq	r2,zero,4aac8 <___vfiprintf_internal_r+0xec4>
   4a380:	94c4b03a 	or	r2,r18,r19
   4a384:	1002351e 	bne	r2,zero,4ac5c <___vfiprintf_internal_r+0x1058>
   4a388:	d8001d85 	stb	zero,118(sp)
   4a38c:	48022216 	blt	r9,zero,4ac18 <___vfiprintf_internal_r+0x1014>
   4a390:	00bfdfc4 	movi	r2,-129
   4a394:	a0a8703a 	and	r20,r20,r2
   4a398:	003f1506 	br	49ff0 <__alt_data_end+0xfffc9ff0>
   4a39c:	da802217 	ldw	r10,136(sp)
   4a3a0:	04800044 	movi	r18,1
   4a3a4:	d8001d85 	stb	zero,118(sp)
   4a3a8:	50800017 	ldw	r2,0(r10)
   4a3ac:	52800104 	addi	r10,r10,4
   4a3b0:	da802215 	stw	r10,136(sp)
   4a3b4:	d8801005 	stb	r2,64(sp)
   4a3b8:	9027883a 	mov	r19,r18
   4a3bc:	dd401004 	addi	r21,sp,64
   4a3c0:	0013883a 	mov	r9,zero
   4a3c4:	003f1706 	br	4a024 <__alt_data_end+0xfffca024>
   4a3c8:	21003fcc 	andi	r4,r4,255
   4a3cc:	2003201e 	bne	r4,zero,4b050 <___vfiprintf_internal_r+0x144c>
   4a3d0:	a080080c 	andi	r2,r20,32
   4a3d4:	10004b26 	beq	r2,zero,4a504 <___vfiprintf_internal_r+0x900>
   4a3d8:	da802217 	ldw	r10,136(sp)
   4a3dc:	50800117 	ldw	r2,4(r10)
   4a3e0:	54800017 	ldw	r18,0(r10)
   4a3e4:	52800204 	addi	r10,r10,8
   4a3e8:	da802215 	stw	r10,136(sp)
   4a3ec:	1027883a 	mov	r19,r2
   4a3f0:	10022c16 	blt	r2,zero,4aca4 <___vfiprintf_internal_r+0x10a0>
   4a3f4:	df001d83 	ldbu	fp,118(sp)
   4a3f8:	48007216 	blt	r9,zero,4a5c4 <___vfiprintf_internal_r+0x9c0>
   4a3fc:	00ffdfc4 	movi	r3,-129
   4a400:	94c4b03a 	or	r2,r18,r19
   4a404:	a0e8703a 	and	r20,r20,r3
   4a408:	1000cc26 	beq	r2,zero,4a73c <___vfiprintf_internal_r+0xb38>
   4a40c:	98021026 	beq	r19,zero,4ac50 <___vfiprintf_internal_r+0x104c>
   4a410:	dc402415 	stw	r17,144(sp)
   4a414:	dc002515 	stw	r16,148(sp)
   4a418:	9823883a 	mov	r17,r19
   4a41c:	9021883a 	mov	r16,r18
   4a420:	dd401a04 	addi	r21,sp,104
   4a424:	4825883a 	mov	r18,r9
   4a428:	4027883a 	mov	r19,r8
   4a42c:	8009883a 	mov	r4,r16
   4a430:	880b883a 	mov	r5,r17
   4a434:	01800284 	movi	r6,10
   4a438:	000f883a 	mov	r7,zero
   4a43c:	004cb600 	call	4cb60 <__umoddi3>
   4a440:	10800c04 	addi	r2,r2,48
   4a444:	ad7fffc4 	addi	r21,r21,-1
   4a448:	8009883a 	mov	r4,r16
   4a44c:	880b883a 	mov	r5,r17
   4a450:	a8800005 	stb	r2,0(r21)
   4a454:	01800284 	movi	r6,10
   4a458:	000f883a 	mov	r7,zero
   4a45c:	004c5e80 	call	4c5e8 <__udivdi3>
   4a460:	1021883a 	mov	r16,r2
   4a464:	10c4b03a 	or	r2,r2,r3
   4a468:	1823883a 	mov	r17,r3
   4a46c:	103fef1e 	bne	r2,zero,4a42c <__alt_data_end+0xfffca42c>
   4a470:	dc402417 	ldw	r17,144(sp)
   4a474:	dc002517 	ldw	r16,148(sp)
   4a478:	9013883a 	mov	r9,r18
   4a47c:	9811883a 	mov	r8,r19
   4a480:	da801e17 	ldw	r10,120(sp)
   4a484:	5567c83a 	sub	r19,r10,r21
   4a488:	003ede06 	br	4a004 <__alt_data_end+0xfffca004>
   4a48c:	38803fcc 	andi	r2,r7,255
   4a490:	1080201c 	xori	r2,r2,128
   4a494:	10bfe004 	addi	r2,r2,-128
   4a498:	1002371e 	bne	r2,zero,4ad78 <___vfiprintf_internal_r+0x1174>
   4a49c:	01000044 	movi	r4,1
   4a4a0:	01c00804 	movi	r7,32
   4a4a4:	80c00007 	ldb	r3,0(r16)
   4a4a8:	003e3506 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a4ac:	a5000054 	ori	r20,r20,1
   4a4b0:	80c00007 	ldb	r3,0(r16)
   4a4b4:	003e3206 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a4b8:	a5002014 	ori	r20,r20,128
   4a4bc:	80c00007 	ldb	r3,0(r16)
   4a4c0:	003e2f06 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a4c4:	8015883a 	mov	r10,r16
   4a4c8:	0023883a 	mov	r17,zero
   4a4cc:	18bff404 	addi	r2,r3,-48
   4a4d0:	50c00007 	ldb	r3,0(r10)
   4a4d4:	8c4002a4 	muli	r17,r17,10
   4a4d8:	84000044 	addi	r16,r16,1
   4a4dc:	8015883a 	mov	r10,r16
   4a4e0:	1463883a 	add	r17,r2,r17
   4a4e4:	18bff404 	addi	r2,r3,-48
   4a4e8:	30bff92e 	bgeu	r6,r2,4a4d0 <__alt_data_end+0xfffca4d0>
   4a4ec:	003e2506 	br	49d84 <__alt_data_end+0xfffc9d84>
   4a4f0:	21003fcc 	andi	r4,r4,255
   4a4f4:	2002d41e 	bne	r4,zero,4b048 <___vfiprintf_internal_r+0x1444>
   4a4f8:	a5000414 	ori	r20,r20,16
   4a4fc:	a080080c 	andi	r2,r20,32
   4a500:	103fb51e 	bne	r2,zero,4a3d8 <__alt_data_end+0xfffca3d8>
   4a504:	a080040c 	andi	r2,r20,16
   4a508:	1001f826 	beq	r2,zero,4acec <___vfiprintf_internal_r+0x10e8>
   4a50c:	da802217 	ldw	r10,136(sp)
   4a510:	54800017 	ldw	r18,0(r10)
   4a514:	52800104 	addi	r10,r10,4
   4a518:	da802215 	stw	r10,136(sp)
   4a51c:	9027d7fa 	srai	r19,r18,31
   4a520:	9805883a 	mov	r2,r19
   4a524:	003fb206 	br	4a3f0 <__alt_data_end+0xfffca3f0>
   4a528:	21003fcc 	andi	r4,r4,255
   4a52c:	2002c41e 	bne	r4,zero,4b040 <___vfiprintf_internal_r+0x143c>
   4a530:	a5000414 	ori	r20,r20,16
   4a534:	a080080c 	andi	r2,r20,32
   4a538:	103f5f1e 	bne	r2,zero,4a2b8 <__alt_data_end+0xfffca2b8>
   4a53c:	a080040c 	andi	r2,r20,16
   4a540:	10020f26 	beq	r2,zero,4ad80 <___vfiprintf_internal_r+0x117c>
   4a544:	da802217 	ldw	r10,136(sp)
   4a548:	d8001d85 	stb	zero,118(sp)
   4a54c:	0027883a 	mov	r19,zero
   4a550:	50800104 	addi	r2,r10,4
   4a554:	54800017 	ldw	r18,0(r10)
   4a558:	48021116 	blt	r9,zero,4ada0 <___vfiprintf_internal_r+0x119c>
   4a55c:	00ffdfc4 	movi	r3,-129
   4a560:	d8802215 	stw	r2,136(sp)
   4a564:	a0e8703a 	and	r20,r20,r3
   4a568:	903f5e1e 	bne	r18,zero,4a2e4 <__alt_data_end+0xfffca2e4>
   4a56c:	0039883a 	mov	fp,zero
   4a570:	4802a626 	beq	r9,zero,4b00c <___vfiprintf_internal_r+0x1408>
   4a574:	0025883a 	mov	r18,zero
   4a578:	0027883a 	mov	r19,zero
   4a57c:	003f5a06 	br	4a2e8 <__alt_data_end+0xfffca2e8>
   4a580:	21003fcc 	andi	r4,r4,255
   4a584:	20029f1e 	bne	r4,zero,4b004 <___vfiprintf_internal_r+0x1400>
   4a588:	a5000414 	ori	r20,r20,16
   4a58c:	a080080c 	andi	r2,r20,32
   4a590:	10005e1e 	bne	r2,zero,4a70c <___vfiprintf_internal_r+0xb08>
   4a594:	a080040c 	andi	r2,r20,16
   4a598:	1001a21e 	bne	r2,zero,4ac24 <___vfiprintf_internal_r+0x1020>
   4a59c:	a080100c 	andi	r2,r20,64
   4a5a0:	d8001d85 	stb	zero,118(sp)
   4a5a4:	da802217 	ldw	r10,136(sp)
   4a5a8:	1002231e 	bne	r2,zero,4ae38 <___vfiprintf_internal_r+0x1234>
   4a5ac:	50800104 	addi	r2,r10,4
   4a5b0:	54800017 	ldw	r18,0(r10)
   4a5b4:	0027883a 	mov	r19,zero
   4a5b8:	4801a00e 	bge	r9,zero,4ac3c <___vfiprintf_internal_r+0x1038>
   4a5bc:	d8802215 	stw	r2,136(sp)
   4a5c0:	0039883a 	mov	fp,zero
   4a5c4:	94c4b03a 	or	r2,r18,r19
   4a5c8:	103f901e 	bne	r2,zero,4a40c <__alt_data_end+0xfffca40c>
   4a5cc:	00800044 	movi	r2,1
   4a5d0:	10803fcc 	andi	r2,r2,255
   4a5d4:	00c00044 	movi	r3,1
   4a5d8:	10c05926 	beq	r2,r3,4a740 <___vfiprintf_internal_r+0xb3c>
   4a5dc:	00c00084 	movi	r3,2
   4a5e0:	10ffe41e 	bne	r2,r3,4a574 <__alt_data_end+0xfffca574>
   4a5e4:	0025883a 	mov	r18,zero
   4a5e8:	0027883a 	mov	r19,zero
   4a5ec:	00013d06 	br	4aae4 <___vfiprintf_internal_r+0xee0>
   4a5f0:	21003fcc 	andi	r4,r4,255
   4a5f4:	2002811e 	bne	r4,zero,4affc <___vfiprintf_internal_r+0x13f8>
   4a5f8:	00800174 	movhi	r2,5
   4a5fc:	10841f04 	addi	r2,r2,4220
   4a600:	d8802615 	stw	r2,152(sp)
   4a604:	a080080c 	andi	r2,r20,32
   4a608:	103f561e 	bne	r2,zero,4a364 <__alt_data_end+0xfffca364>
   4a60c:	a080040c 	andi	r2,r20,16
   4a610:	1001d126 	beq	r2,zero,4ad58 <___vfiprintf_internal_r+0x1154>
   4a614:	da802217 	ldw	r10,136(sp)
   4a618:	0027883a 	mov	r19,zero
   4a61c:	54800017 	ldw	r18,0(r10)
   4a620:	52800104 	addi	r10,r10,4
   4a624:	da802215 	stw	r10,136(sp)
   4a628:	003f5306 	br	4a378 <__alt_data_end+0xfffca378>
   4a62c:	da802217 	ldw	r10,136(sp)
   4a630:	d8001d85 	stb	zero,118(sp)
   4a634:	55400017 	ldw	r21,0(r10)
   4a638:	50c00104 	addi	r3,r10,4
   4a63c:	a8024226 	beq	r21,zero,4af48 <___vfiprintf_internal_r+0x1344>
   4a640:	48021816 	blt	r9,zero,4aea4 <___vfiprintf_internal_r+0x12a0>
   4a644:	480d883a 	mov	r6,r9
   4a648:	000b883a 	mov	r5,zero
   4a64c:	a809883a 	mov	r4,r21
   4a650:	d8c02a15 	stw	r3,168(sp)
   4a654:	da002b15 	stw	r8,172(sp)
   4a658:	da402c15 	stw	r9,176(sp)
   4a65c:	00484280 	call	48428 <memchr>
   4a660:	d8c02a17 	ldw	r3,168(sp)
   4a664:	da002b17 	ldw	r8,172(sp)
   4a668:	da402c17 	ldw	r9,176(sp)
   4a66c:	10024826 	beq	r2,zero,4af90 <___vfiprintf_internal_r+0x138c>
   4a670:	1567c83a 	sub	r19,r2,r21
   4a674:	df001d83 	ldbu	fp,118(sp)
   4a678:	d8c02215 	stw	r3,136(sp)
   4a67c:	0013883a 	mov	r9,zero
   4a680:	003e6006 	br	4a004 <__alt_data_end+0xfffca004>
   4a684:	21003fcc 	andi	r4,r4,255
   4a688:	203fc026 	beq	r4,zero,4a58c <__alt_data_end+0xfffca58c>
   4a68c:	d9c01d85 	stb	r7,118(sp)
   4a690:	003fbe06 	br	4a58c <__alt_data_end+0xfffca58c>
   4a694:	da802217 	ldw	r10,136(sp)
   4a698:	54400017 	ldw	r17,0(r10)
   4a69c:	50800104 	addi	r2,r10,4
   4a6a0:	883e3b16 	blt	r17,zero,49f90 <__alt_data_end+0xfffc9f90>
   4a6a4:	d8802215 	stw	r2,136(sp)
   4a6a8:	80c00007 	ldb	r3,0(r16)
   4a6ac:	003db406 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a6b0:	01000044 	movi	r4,1
   4a6b4:	01c00ac4 	movi	r7,43
   4a6b8:	80c00007 	ldb	r3,0(r16)
   4a6bc:	003db006 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a6c0:	80c00007 	ldb	r3,0(r16)
   4a6c4:	82800044 	addi	r10,r16,1
   4a6c8:	1b423c26 	beq	r3,r13,4afbc <___vfiprintf_internal_r+0x13b8>
   4a6cc:	18bff404 	addi	r2,r3,-48
   4a6d0:	0013883a 	mov	r9,zero
   4a6d4:	30822b36 	bltu	r6,r2,4af84 <___vfiprintf_internal_r+0x1380>
   4a6d8:	50c00007 	ldb	r3,0(r10)
   4a6dc:	4a4002a4 	muli	r9,r9,10
   4a6e0:	54000044 	addi	r16,r10,1
   4a6e4:	8015883a 	mov	r10,r16
   4a6e8:	4893883a 	add	r9,r9,r2
   4a6ec:	18bff404 	addi	r2,r3,-48
   4a6f0:	30bff92e 	bgeu	r6,r2,4a6d8 <__alt_data_end+0xfffca6d8>
   4a6f4:	483da30e 	bge	r9,zero,49d84 <__alt_data_end+0xfffc9d84>
   4a6f8:	027fffc4 	movi	r9,-1
   4a6fc:	003da106 	br	49d84 <__alt_data_end+0xfffc9d84>
   4a700:	a5001014 	ori	r20,r20,64
   4a704:	80c00007 	ldb	r3,0(r16)
   4a708:	003d9d06 	br	49d80 <__alt_data_end+0xfffc9d80>
   4a70c:	da802217 	ldw	r10,136(sp)
   4a710:	d8001d85 	stb	zero,118(sp)
   4a714:	50c00204 	addi	r3,r10,8
   4a718:	54800017 	ldw	r18,0(r10)
   4a71c:	54c00117 	ldw	r19,4(r10)
   4a720:	4801ca16 	blt	r9,zero,4ae4c <___vfiprintf_internal_r+0x1248>
   4a724:	013fdfc4 	movi	r4,-129
   4a728:	94c4b03a 	or	r2,r18,r19
   4a72c:	d8c02215 	stw	r3,136(sp)
   4a730:	a128703a 	and	r20,r20,r4
   4a734:	0039883a 	mov	fp,zero
   4a738:	103f341e 	bne	r2,zero,4a40c <__alt_data_end+0xfffca40c>
   4a73c:	483e2e26 	beq	r9,zero,49ff8 <__alt_data_end+0xfffc9ff8>
   4a740:	0025883a 	mov	r18,zero
   4a744:	94800c04 	addi	r18,r18,48
   4a748:	dc8019c5 	stb	r18,103(sp)
   4a74c:	dcc02717 	ldw	r19,156(sp)
   4a750:	dd4019c4 	addi	r21,sp,103
   4a754:	003e2b06 	br	4a004 <__alt_data_end+0xfffca004>
   4a758:	21003fcc 	andi	r4,r4,255
   4a75c:	2002361e 	bne	r4,zero,4b038 <___vfiprintf_internal_r+0x1434>
   4a760:	1801c126 	beq	r3,zero,4ae68 <___vfiprintf_internal_r+0x1264>
   4a764:	04800044 	movi	r18,1
   4a768:	d8c01005 	stb	r3,64(sp)
   4a76c:	d8001d85 	stb	zero,118(sp)
   4a770:	9027883a 	mov	r19,r18
   4a774:	dd401004 	addi	r21,sp,64
   4a778:	003f1106 	br	4a3c0 <__alt_data_end+0xfffca3c0>
   4a77c:	d9402117 	ldw	r5,132(sp)
   4a780:	d9002017 	ldw	r4,128(sp)
   4a784:	d9801a04 	addi	r6,sp,104
   4a788:	d9c02b15 	stw	r7,172(sp)
   4a78c:	dbc02a15 	stw	r15,168(sp)
   4a790:	0049af00 	call	49af0 <__sprint_r.part.0>
   4a794:	d9c02b17 	ldw	r7,172(sp)
   4a798:	dbc02a17 	ldw	r15,168(sp)
   4a79c:	10006d1e 	bne	r2,zero,4a954 <___vfiprintf_internal_r+0xd50>
   4a7a0:	d9801b17 	ldw	r6,108(sp)
   4a7a4:	d8801c17 	ldw	r2,112(sp)
   4a7a8:	d811883a 	mov	r8,sp
   4a7ac:	31400044 	addi	r5,r6,1
   4a7b0:	003e3306 	br	4a080 <__alt_data_end+0xfffca080>
   4a7b4:	d9401b17 	ldw	r5,108(sp)
   4a7b8:	d8801c17 	ldw	r2,112(sp)
   4a7bc:	29000044 	addi	r4,r5,1
   4a7c0:	d8c01d87 	ldb	r3,118(sp)
   4a7c4:	183e4d26 	beq	r3,zero,4a0fc <__alt_data_end+0xfffca0fc>
   4a7c8:	00c00044 	movi	r3,1
   4a7cc:	d9401d84 	addi	r5,sp,118
   4a7d0:	10c5883a 	add	r2,r2,r3
   4a7d4:	41400015 	stw	r5,0(r8)
   4a7d8:	40c00115 	stw	r3,4(r8)
   4a7dc:	d8801c15 	stw	r2,112(sp)
   4a7e0:	d9001b15 	stw	r4,108(sp)
   4a7e4:	014001c4 	movi	r5,7
   4a7e8:	2900a90e 	bge	r5,r4,4aa90 <___vfiprintf_internal_r+0xe8c>
   4a7ec:	1000da1e 	bne	r2,zero,4ab58 <___vfiprintf_internal_r+0xf54>
   4a7f0:	7000ab1e 	bne	r14,zero,4aaa0 <___vfiprintf_internal_r+0xe9c>
   4a7f4:	000b883a 	mov	r5,zero
   4a7f8:	1809883a 	mov	r4,r3
   4a7fc:	d811883a 	mov	r8,sp
   4a800:	00c02004 	movi	r3,128
   4a804:	e0fe4d26 	beq	fp,r3,4a13c <__alt_data_end+0xfffca13c>
   4a808:	4cf9c83a 	sub	fp,r9,r19
   4a80c:	073e7b0e 	bge	zero,fp,4a1fc <__alt_data_end+0xfffca1fc>
   4a810:	01c00404 	movi	r7,16
   4a814:	3f01900e 	bge	r7,fp,4ae58 <___vfiprintf_internal_r+0x1254>
   4a818:	00c00174 	movhi	r3,5
   4a81c:	18c48504 	addi	r3,r3,4628
   4a820:	d8c02415 	stw	r3,144(sp)
   4a824:	034001c4 	movi	r13,7
   4a828:	00000506 	br	4a840 <___vfiprintf_internal_r+0xc3c>
   4a82c:	29000084 	addi	r4,r5,2
   4a830:	42000204 	addi	r8,r8,8
   4a834:	180b883a 	mov	r5,r3
   4a838:	e73ffc04 	addi	fp,fp,-16
   4a83c:	3f000d0e 	bge	r7,fp,4a874 <___vfiprintf_internal_r+0xc70>
   4a840:	10800404 	addi	r2,r2,16
   4a844:	28c00044 	addi	r3,r5,1
   4a848:	45c00015 	stw	r23,0(r8)
   4a84c:	41c00115 	stw	r7,4(r8)
   4a850:	d8801c15 	stw	r2,112(sp)
   4a854:	d8c01b15 	stw	r3,108(sp)
   4a858:	68fff40e 	bge	r13,r3,4a82c <__alt_data_end+0xfffca82c>
   4a85c:	1000101e 	bne	r2,zero,4a8a0 <___vfiprintf_internal_r+0xc9c>
   4a860:	e73ffc04 	addi	fp,fp,-16
   4a864:	01000044 	movi	r4,1
   4a868:	000b883a 	mov	r5,zero
   4a86c:	d811883a 	mov	r8,sp
   4a870:	3f3ff316 	blt	r7,fp,4a840 <__alt_data_end+0xfffca840>
   4a874:	da802417 	ldw	r10,144(sp)
   4a878:	1705883a 	add	r2,r2,fp
   4a87c:	47000115 	stw	fp,4(r8)
   4a880:	42800015 	stw	r10,0(r8)
   4a884:	d8801c15 	stw	r2,112(sp)
   4a888:	d9001b15 	stw	r4,108(sp)
   4a88c:	00c001c4 	movi	r3,7
   4a890:	19003616 	blt	r3,r4,4a96c <___vfiprintf_internal_r+0xd68>
   4a894:	42000204 	addi	r8,r8,8
   4a898:	21000044 	addi	r4,r4,1
   4a89c:	003e5706 	br	4a1fc <__alt_data_end+0xfffca1fc>
   4a8a0:	d9402117 	ldw	r5,132(sp)
   4a8a4:	d9002017 	ldw	r4,128(sp)
   4a8a8:	d9801a04 	addi	r6,sp,104
   4a8ac:	d9c02b15 	stw	r7,172(sp)
   4a8b0:	db402a15 	stw	r13,168(sp)
   4a8b4:	0049af00 	call	49af0 <__sprint_r.part.0>
   4a8b8:	d9c02b17 	ldw	r7,172(sp)
   4a8bc:	db402a17 	ldw	r13,168(sp)
   4a8c0:	1000241e 	bne	r2,zero,4a954 <___vfiprintf_internal_r+0xd50>
   4a8c4:	d9401b17 	ldw	r5,108(sp)
   4a8c8:	d8801c17 	ldw	r2,112(sp)
   4a8cc:	d811883a 	mov	r8,sp
   4a8d0:	29000044 	addi	r4,r5,1
   4a8d4:	003fd806 	br	4a838 <__alt_data_end+0xfffca838>
   4a8d8:	d9401b17 	ldw	r5,108(sp)
   4a8dc:	00c00174 	movhi	r3,5
   4a8e0:	18c48904 	addi	r3,r3,4644
   4a8e4:	d8c02415 	stw	r3,144(sp)
   4a8e8:	29400044 	addi	r5,r5,1
   4a8ec:	d8c02417 	ldw	r3,144(sp)
   4a8f0:	14c5883a 	add	r2,r2,r19
   4a8f4:	44c00115 	stw	r19,4(r8)
   4a8f8:	40c00015 	stw	r3,0(r8)
   4a8fc:	d8801c15 	stw	r2,112(sp)
   4a900:	d9401b15 	stw	r5,108(sp)
   4a904:	00c001c4 	movi	r3,7
   4a908:	1940070e 	bge	r3,r5,4a928 <___vfiprintf_internal_r+0xd24>
   4a90c:	103e4826 	beq	r2,zero,4a230 <__alt_data_end+0xfffca230>
   4a910:	d9402117 	ldw	r5,132(sp)
   4a914:	d9002017 	ldw	r4,128(sp)
   4a918:	d9801a04 	addi	r6,sp,104
   4a91c:	0049af00 	call	49af0 <__sprint_r.part.0>
   4a920:	10000c1e 	bne	r2,zero,4a954 <___vfiprintf_internal_r+0xd50>
   4a924:	d8801c17 	ldw	r2,112(sp)
   4a928:	8c80010e 	bge	r17,r18,4a930 <___vfiprintf_internal_r+0xd2c>
   4a92c:	9023883a 	mov	r17,r18
   4a930:	da802317 	ldw	r10,140(sp)
   4a934:	5455883a 	add	r10,r10,r17
   4a938:	da802315 	stw	r10,140(sp)
   4a93c:	103e4126 	beq	r2,zero,4a244 <__alt_data_end+0xfffca244>
   4a940:	d9402117 	ldw	r5,132(sp)
   4a944:	d9002017 	ldw	r4,128(sp)
   4a948:	d9801a04 	addi	r6,sp,104
   4a94c:	0049af00 	call	49af0 <__sprint_r.part.0>
   4a950:	103e3c26 	beq	r2,zero,4a244 <__alt_data_end+0xfffca244>
   4a954:	dd002117 	ldw	r20,132(sp)
   4a958:	a080030b 	ldhu	r2,12(r20)
   4a95c:	1080100c 	andi	r2,r2,64
   4a960:	1001231e 	bne	r2,zero,4adf0 <___vfiprintf_internal_r+0x11ec>
   4a964:	d8802317 	ldw	r2,140(sp)
   4a968:	003d7b06 	br	49f58 <__alt_data_end+0xfffc9f58>
   4a96c:	1000991e 	bne	r2,zero,4abd4 <___vfiprintf_internal_r+0xfd0>
   4a970:	00c00044 	movi	r3,1
   4a974:	9805883a 	mov	r2,r19
   4a978:	dd400015 	stw	r21,0(sp)
   4a97c:	dcc00115 	stw	r19,4(sp)
   4a980:	dcc01c15 	stw	r19,112(sp)
   4a984:	d8c01b15 	stw	r3,108(sp)
   4a988:	d811883a 	mov	r8,sp
   4a98c:	42000204 	addi	r8,r8,8
   4a990:	a2c0010c 	andi	r11,r20,4
   4a994:	583fe426 	beq	r11,zero,4a928 <__alt_data_end+0xfffca928>
   4a998:	8ca7c83a 	sub	r19,r17,r18
   4a99c:	04ffe20e 	bge	zero,r19,4a928 <__alt_data_end+0xfffca928>
   4a9a0:	01c00404 	movi	r7,16
   4a9a4:	3cffcc0e 	bge	r7,r19,4a8d8 <__alt_data_end+0xfffca8d8>
   4a9a8:	02800174 	movhi	r10,5
   4a9ac:	52848904 	addi	r10,r10,4644
   4a9b0:	d9001b17 	ldw	r4,108(sp)
   4a9b4:	da802415 	stw	r10,144(sp)
   4a9b8:	382b883a 	mov	r21,r7
   4a9bc:	050001c4 	movi	r20,7
   4a9c0:	df002017 	ldw	fp,128(sp)
   4a9c4:	00000506 	br	4a9dc <___vfiprintf_internal_r+0xdd8>
   4a9c8:	21400084 	addi	r5,r4,2
   4a9cc:	42000204 	addi	r8,r8,8
   4a9d0:	1809883a 	mov	r4,r3
   4a9d4:	9cfffc04 	addi	r19,r19,-16
   4a9d8:	acffc40e 	bge	r21,r19,4a8ec <__alt_data_end+0xfffca8ec>
   4a9dc:	10800404 	addi	r2,r2,16
   4a9e0:	20c00044 	addi	r3,r4,1
   4a9e4:	45800015 	stw	r22,0(r8)
   4a9e8:	45400115 	stw	r21,4(r8)
   4a9ec:	d8801c15 	stw	r2,112(sp)
   4a9f0:	d8c01b15 	stw	r3,108(sp)
   4a9f4:	a0fff40e 	bge	r20,r3,4a9c8 <__alt_data_end+0xfffca9c8>
   4a9f8:	1000041e 	bne	r2,zero,4aa0c <___vfiprintf_internal_r+0xe08>
   4a9fc:	01400044 	movi	r5,1
   4aa00:	0009883a 	mov	r4,zero
   4aa04:	d811883a 	mov	r8,sp
   4aa08:	003ff206 	br	4a9d4 <__alt_data_end+0xfffca9d4>
   4aa0c:	d9402117 	ldw	r5,132(sp)
   4aa10:	d9801a04 	addi	r6,sp,104
   4aa14:	e009883a 	mov	r4,fp
   4aa18:	0049af00 	call	49af0 <__sprint_r.part.0>
   4aa1c:	103fcd1e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4aa20:	d9001b17 	ldw	r4,108(sp)
   4aa24:	d8801c17 	ldw	r2,112(sp)
   4aa28:	d811883a 	mov	r8,sp
   4aa2c:	21400044 	addi	r5,r4,1
   4aa30:	003fe806 	br	4a9d4 <__alt_data_end+0xfffca9d4>
   4aa34:	d9402117 	ldw	r5,132(sp)
   4aa38:	d9002017 	ldw	r4,128(sp)
   4aa3c:	d9801a04 	addi	r6,sp,104
   4aa40:	d9c02b15 	stw	r7,172(sp)
   4aa44:	db402a15 	stw	r13,168(sp)
   4aa48:	0049af00 	call	49af0 <__sprint_r.part.0>
   4aa4c:	d9c02b17 	ldw	r7,172(sp)
   4aa50:	db402a17 	ldw	r13,168(sp)
   4aa54:	103fbf1e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4aa58:	d9401b17 	ldw	r5,108(sp)
   4aa5c:	d8801c17 	ldw	r2,112(sp)
   4aa60:	d811883a 	mov	r8,sp
   4aa64:	29800044 	addi	r6,r5,1
   4aa68:	003dc406 	br	4a17c <__alt_data_end+0xfffca17c>
   4aa6c:	1000d21e 	bne	r2,zero,4adb8 <___vfiprintf_internal_r+0x11b4>
   4aa70:	d8c01d87 	ldb	r3,118(sp)
   4aa74:	18009526 	beq	r3,zero,4accc <___vfiprintf_internal_r+0x10c8>
   4aa78:	00800044 	movi	r2,1
   4aa7c:	d8c01d84 	addi	r3,sp,118
   4aa80:	1009883a 	mov	r4,r2
   4aa84:	d8c00015 	stw	r3,0(sp)
   4aa88:	d8800115 	stw	r2,4(sp)
   4aa8c:	d811883a 	mov	r8,sp
   4aa90:	200b883a 	mov	r5,r4
   4aa94:	42000204 	addi	r8,r8,8
   4aa98:	21000044 	addi	r4,r4,1
   4aa9c:	003d9706 	br	4a0fc <__alt_data_end+0xfffca0fc>
   4aaa0:	d9001d04 	addi	r4,sp,116
   4aaa4:	00800084 	movi	r2,2
   4aaa8:	d9000015 	stw	r4,0(sp)
   4aaac:	d8800115 	stw	r2,4(sp)
   4aab0:	1809883a 	mov	r4,r3
   4aab4:	d811883a 	mov	r8,sp
   4aab8:	200b883a 	mov	r5,r4
   4aabc:	42000204 	addi	r8,r8,8
   4aac0:	21000044 	addi	r4,r4,1
   4aac4:	003f4e06 	br	4a800 <__alt_data_end+0xfffca800>
   4aac8:	d8001d85 	stb	zero,118(sp)
   4aacc:	48005016 	blt	r9,zero,4ac10 <___vfiprintf_internal_r+0x100c>
   4aad0:	00ffdfc4 	movi	r3,-129
   4aad4:	94c4b03a 	or	r2,r18,r19
   4aad8:	a0e8703a 	and	r20,r20,r3
   4aadc:	103d4426 	beq	r2,zero,49ff0 <__alt_data_end+0xfffc9ff0>
   4aae0:	0039883a 	mov	fp,zero
   4aae4:	d9002617 	ldw	r4,152(sp)
   4aae8:	dd401a04 	addi	r21,sp,104
   4aaec:	908003cc 	andi	r2,r18,15
   4aaf0:	9806973a 	slli	r3,r19,28
   4aaf4:	2085883a 	add	r2,r4,r2
   4aaf8:	9024d13a 	srli	r18,r18,4
   4aafc:	10800003 	ldbu	r2,0(r2)
   4ab00:	9826d13a 	srli	r19,r19,4
   4ab04:	ad7fffc4 	addi	r21,r21,-1
   4ab08:	1ca4b03a 	or	r18,r3,r18
   4ab0c:	a8800005 	stb	r2,0(r21)
   4ab10:	94c4b03a 	or	r2,r18,r19
   4ab14:	103ff51e 	bne	r2,zero,4aaec <__alt_data_end+0xfffcaaec>
   4ab18:	003e5906 	br	4a480 <__alt_data_end+0xfffca480>
   4ab1c:	d9402117 	ldw	r5,132(sp)
   4ab20:	d9002017 	ldw	r4,128(sp)
   4ab24:	d9801a04 	addi	r6,sp,104
   4ab28:	0049af00 	call	49af0 <__sprint_r.part.0>
   4ab2c:	103f891e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4ab30:	d8801c17 	ldw	r2,112(sp)
   4ab34:	d811883a 	mov	r8,sp
   4ab38:	003f9506 	br	4a990 <__alt_data_end+0xfffca990>
   4ab3c:	d9402117 	ldw	r5,132(sp)
   4ab40:	d9002017 	ldw	r4,128(sp)
   4ab44:	d9801a04 	addi	r6,sp,104
   4ab48:	0049af00 	call	49af0 <__sprint_r.part.0>
   4ab4c:	103f811e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4ab50:	d811883a 	mov	r8,sp
   4ab54:	003ced06 	br	49f0c <__alt_data_end+0xfffc9f0c>
   4ab58:	d9402117 	ldw	r5,132(sp)
   4ab5c:	d9002017 	ldw	r4,128(sp)
   4ab60:	d9801a04 	addi	r6,sp,104
   4ab64:	da402c15 	stw	r9,176(sp)
   4ab68:	db802a15 	stw	r14,168(sp)
   4ab6c:	0049af00 	call	49af0 <__sprint_r.part.0>
   4ab70:	da402c17 	ldw	r9,176(sp)
   4ab74:	db802a17 	ldw	r14,168(sp)
   4ab78:	103f761e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4ab7c:	d9401b17 	ldw	r5,108(sp)
   4ab80:	d8801c17 	ldw	r2,112(sp)
   4ab84:	d811883a 	mov	r8,sp
   4ab88:	29000044 	addi	r4,r5,1
   4ab8c:	003d5b06 	br	4a0fc <__alt_data_end+0xfffca0fc>
   4ab90:	d9402117 	ldw	r5,132(sp)
   4ab94:	d9002017 	ldw	r4,128(sp)
   4ab98:	d9801a04 	addi	r6,sp,104
   4ab9c:	da402c15 	stw	r9,176(sp)
   4aba0:	0049af00 	call	49af0 <__sprint_r.part.0>
   4aba4:	da402c17 	ldw	r9,176(sp)
   4aba8:	103f6a1e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4abac:	d9401b17 	ldw	r5,108(sp)
   4abb0:	d8801c17 	ldw	r2,112(sp)
   4abb4:	d811883a 	mov	r8,sp
   4abb8:	29000044 	addi	r4,r5,1
   4abbc:	003f1006 	br	4a800 <__alt_data_end+0xfffca800>
   4abc0:	1000c31e 	bne	r2,zero,4aed0 <___vfiprintf_internal_r+0x12cc>
   4abc4:	01000044 	movi	r4,1
   4abc8:	000b883a 	mov	r5,zero
   4abcc:	d811883a 	mov	r8,sp
   4abd0:	003f0d06 	br	4a808 <__alt_data_end+0xfffca808>
   4abd4:	d9402117 	ldw	r5,132(sp)
   4abd8:	d9002017 	ldw	r4,128(sp)
   4abdc:	d9801a04 	addi	r6,sp,104
   4abe0:	0049af00 	call	49af0 <__sprint_r.part.0>
   4abe4:	103f5b1e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4abe8:	d9001b17 	ldw	r4,108(sp)
   4abec:	d8801c17 	ldw	r2,112(sp)
   4abf0:	d811883a 	mov	r8,sp
   4abf4:	21000044 	addi	r4,r4,1
   4abf8:	003d8006 	br	4a1fc <__alt_data_end+0xfffca1fc>
   4abfc:	01000174 	movhi	r4,5
   4ac00:	21042404 	addi	r4,r4,4240
   4ac04:	d9002615 	stw	r4,152(sp)
   4ac08:	d8c02215 	stw	r3,136(sp)
   4ac0c:	1029883a 	mov	r20,r2
   4ac10:	94c4b03a 	or	r2,r18,r19
   4ac14:	103fb21e 	bne	r2,zero,4aae0 <__alt_data_end+0xfffcaae0>
   4ac18:	0039883a 	mov	fp,zero
   4ac1c:	00800084 	movi	r2,2
   4ac20:	003e6b06 	br	4a5d0 <__alt_data_end+0xfffca5d0>
   4ac24:	da802217 	ldw	r10,136(sp)
   4ac28:	d8001d85 	stb	zero,118(sp)
   4ac2c:	0027883a 	mov	r19,zero
   4ac30:	50800104 	addi	r2,r10,4
   4ac34:	54800017 	ldw	r18,0(r10)
   4ac38:	483e6016 	blt	r9,zero,4a5bc <__alt_data_end+0xfffca5bc>
   4ac3c:	00ffdfc4 	movi	r3,-129
   4ac40:	d8802215 	stw	r2,136(sp)
   4ac44:	a0e8703a 	and	r20,r20,r3
   4ac48:	0039883a 	mov	fp,zero
   4ac4c:	903ebb26 	beq	r18,zero,4a73c <__alt_data_end+0xfffca73c>
   4ac50:	00800244 	movi	r2,9
   4ac54:	14bdee36 	bltu	r2,r18,4a410 <__alt_data_end+0xfffca410>
   4ac58:	003eba06 	br	4a744 <__alt_data_end+0xfffca744>
   4ac5c:	00800c04 	movi	r2,48
   4ac60:	d8c01d45 	stb	r3,117(sp)
   4ac64:	d8801d05 	stb	r2,116(sp)
   4ac68:	d8001d85 	stb	zero,118(sp)
   4ac6c:	a0c00094 	ori	r3,r20,2
   4ac70:	4800a916 	blt	r9,zero,4af18 <___vfiprintf_internal_r+0x1314>
   4ac74:	00bfdfc4 	movi	r2,-129
   4ac78:	a096703a 	and	r11,r20,r2
   4ac7c:	5d000094 	ori	r20,r11,2
   4ac80:	0039883a 	mov	fp,zero
   4ac84:	003f9706 	br	4aae4 <__alt_data_end+0xfffcaae4>
   4ac88:	8025883a 	mov	r18,r16
   4ac8c:	003c2e06 	br	49d48 <__alt_data_end+0xfffc9d48>
   4ac90:	00800174 	movhi	r2,5
   4ac94:	10842404 	addi	r2,r2,4240
   4ac98:	0039883a 	mov	fp,zero
   4ac9c:	d8802615 	stw	r2,152(sp)
   4aca0:	003f9006 	br	4aae4 <__alt_data_end+0xfffcaae4>
   4aca4:	04a5c83a 	sub	r18,zero,r18
   4aca8:	07000b44 	movi	fp,45
   4acac:	9004c03a 	cmpne	r2,r18,zero
   4acb0:	04e7c83a 	sub	r19,zero,r19
   4acb4:	df001d85 	stb	fp,118(sp)
   4acb8:	98a7c83a 	sub	r19,r19,r2
   4acbc:	48009f16 	blt	r9,zero,4af3c <___vfiprintf_internal_r+0x1338>
   4acc0:	00bfdfc4 	movi	r2,-129
   4acc4:	a0a8703a 	and	r20,r20,r2
   4acc8:	003dd006 	br	4a40c <__alt_data_end+0xfffca40c>
   4accc:	70004c26 	beq	r14,zero,4ae00 <___vfiprintf_internal_r+0x11fc>
   4acd0:	00800084 	movi	r2,2
   4acd4:	d8c01d04 	addi	r3,sp,116
   4acd8:	d8c00015 	stw	r3,0(sp)
   4acdc:	d8800115 	stw	r2,4(sp)
   4ace0:	01000044 	movi	r4,1
   4ace4:	d811883a 	mov	r8,sp
   4ace8:	003f7306 	br	4aab8 <__alt_data_end+0xfffcaab8>
   4acec:	a080100c 	andi	r2,r20,64
   4acf0:	da802217 	ldw	r10,136(sp)
   4acf4:	103e0626 	beq	r2,zero,4a510 <__alt_data_end+0xfffca510>
   4acf8:	5480000f 	ldh	r18,0(r10)
   4acfc:	52800104 	addi	r10,r10,4
   4ad00:	da802215 	stw	r10,136(sp)
   4ad04:	9027d7fa 	srai	r19,r18,31
   4ad08:	9805883a 	mov	r2,r19
   4ad0c:	003db806 	br	4a3f0 <__alt_data_end+0xfffca3f0>
   4ad10:	a080040c 	andi	r2,r20,16
   4ad14:	1000091e 	bne	r2,zero,4ad3c <___vfiprintf_internal_r+0x1138>
   4ad18:	a2c0100c 	andi	r11,r20,64
   4ad1c:	58000726 	beq	r11,zero,4ad3c <___vfiprintf_internal_r+0x1138>
   4ad20:	da802217 	ldw	r10,136(sp)
   4ad24:	50800017 	ldw	r2,0(r10)
   4ad28:	52800104 	addi	r10,r10,4
   4ad2c:	da802215 	stw	r10,136(sp)
   4ad30:	da802317 	ldw	r10,140(sp)
   4ad34:	1280000d 	sth	r10,0(r2)
   4ad38:	003be706 	br	49cd8 <__alt_data_end+0xfffc9cd8>
   4ad3c:	da802217 	ldw	r10,136(sp)
   4ad40:	50800017 	ldw	r2,0(r10)
   4ad44:	52800104 	addi	r10,r10,4
   4ad48:	da802215 	stw	r10,136(sp)
   4ad4c:	da802317 	ldw	r10,140(sp)
   4ad50:	12800015 	stw	r10,0(r2)
   4ad54:	003be006 	br	49cd8 <__alt_data_end+0xfffc9cd8>
   4ad58:	a080100c 	andi	r2,r20,64
   4ad5c:	da802217 	ldw	r10,136(sp)
   4ad60:	10003026 	beq	r2,zero,4ae24 <___vfiprintf_internal_r+0x1220>
   4ad64:	5480000b 	ldhu	r18,0(r10)
   4ad68:	52800104 	addi	r10,r10,4
   4ad6c:	0027883a 	mov	r19,zero
   4ad70:	da802215 	stw	r10,136(sp)
   4ad74:	003d8006 	br	4a378 <__alt_data_end+0xfffca378>
   4ad78:	80c00007 	ldb	r3,0(r16)
   4ad7c:	003c0006 	br	49d80 <__alt_data_end+0xfffc9d80>
   4ad80:	a080100c 	andi	r2,r20,64
   4ad84:	d8001d85 	stb	zero,118(sp)
   4ad88:	da802217 	ldw	r10,136(sp)
   4ad8c:	1000201e 	bne	r2,zero,4ae10 <___vfiprintf_internal_r+0x120c>
   4ad90:	50800104 	addi	r2,r10,4
   4ad94:	54800017 	ldw	r18,0(r10)
   4ad98:	0027883a 	mov	r19,zero
   4ad9c:	483def0e 	bge	r9,zero,4a55c <__alt_data_end+0xfffca55c>
   4ada0:	94c6b03a 	or	r3,r18,r19
   4ada4:	d8802215 	stw	r2,136(sp)
   4ada8:	183d4e1e 	bne	r3,zero,4a2e4 <__alt_data_end+0xfffca2e4>
   4adac:	0039883a 	mov	fp,zero
   4adb0:	0005883a 	mov	r2,zero
   4adb4:	003e0606 	br	4a5d0 <__alt_data_end+0xfffca5d0>
   4adb8:	d9402117 	ldw	r5,132(sp)
   4adbc:	d9002017 	ldw	r4,128(sp)
   4adc0:	d9801a04 	addi	r6,sp,104
   4adc4:	da402c15 	stw	r9,176(sp)
   4adc8:	db802a15 	stw	r14,168(sp)
   4adcc:	0049af00 	call	49af0 <__sprint_r.part.0>
   4add0:	da402c17 	ldw	r9,176(sp)
   4add4:	db802a17 	ldw	r14,168(sp)
   4add8:	103ede1e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4addc:	d9401b17 	ldw	r5,108(sp)
   4ade0:	d8801c17 	ldw	r2,112(sp)
   4ade4:	d811883a 	mov	r8,sp
   4ade8:	29000044 	addi	r4,r5,1
   4adec:	003e7406 	br	4a7c0 <__alt_data_end+0xfffca7c0>
   4adf0:	00bfffc4 	movi	r2,-1
   4adf4:	003c5806 	br	49f58 <__alt_data_end+0xfffc9f58>
   4adf8:	d811883a 	mov	r8,sp
   4adfc:	003ee806 	br	4a9a0 <__alt_data_end+0xfffca9a0>
   4ae00:	000b883a 	mov	r5,zero
   4ae04:	01000044 	movi	r4,1
   4ae08:	d811883a 	mov	r8,sp
   4ae0c:	003e7c06 	br	4a800 <__alt_data_end+0xfffca800>
   4ae10:	50800104 	addi	r2,r10,4
   4ae14:	5480000b 	ldhu	r18,0(r10)
   4ae18:	0027883a 	mov	r19,zero
   4ae1c:	483dcf0e 	bge	r9,zero,4a55c <__alt_data_end+0xfffca55c>
   4ae20:	003fdf06 	br	4ada0 <__alt_data_end+0xfffcada0>
   4ae24:	54800017 	ldw	r18,0(r10)
   4ae28:	52800104 	addi	r10,r10,4
   4ae2c:	0027883a 	mov	r19,zero
   4ae30:	da802215 	stw	r10,136(sp)
   4ae34:	003d5006 	br	4a378 <__alt_data_end+0xfffca378>
   4ae38:	50800104 	addi	r2,r10,4
   4ae3c:	5480000b 	ldhu	r18,0(r10)
   4ae40:	0027883a 	mov	r19,zero
   4ae44:	483f7d0e 	bge	r9,zero,4ac3c <__alt_data_end+0xfffcac3c>
   4ae48:	003ddc06 	br	4a5bc <__alt_data_end+0xfffca5bc>
   4ae4c:	d8c02215 	stw	r3,136(sp)
   4ae50:	0039883a 	mov	fp,zero
   4ae54:	003ddb06 	br	4a5c4 <__alt_data_end+0xfffca5c4>
   4ae58:	02800174 	movhi	r10,5
   4ae5c:	52848504 	addi	r10,r10,4628
   4ae60:	da802415 	stw	r10,144(sp)
   4ae64:	003e8306 	br	4a874 <__alt_data_end+0xfffca874>
   4ae68:	d8801c17 	ldw	r2,112(sp)
   4ae6c:	dd002117 	ldw	r20,132(sp)
   4ae70:	103eb926 	beq	r2,zero,4a958 <__alt_data_end+0xfffca958>
   4ae74:	d9002017 	ldw	r4,128(sp)
   4ae78:	d9801a04 	addi	r6,sp,104
   4ae7c:	a00b883a 	mov	r5,r20
   4ae80:	0049af00 	call	49af0 <__sprint_r.part.0>
   4ae84:	003eb406 	br	4a958 <__alt_data_end+0xfffca958>
   4ae88:	80c00043 	ldbu	r3,1(r16)
   4ae8c:	a5000814 	ori	r20,r20,32
   4ae90:	84000044 	addi	r16,r16,1
   4ae94:	18c03fcc 	andi	r3,r3,255
   4ae98:	18c0201c 	xori	r3,r3,128
   4ae9c:	18ffe004 	addi	r3,r3,-128
   4aea0:	003bb706 	br	49d80 <__alt_data_end+0xfffc9d80>
   4aea4:	a809883a 	mov	r4,r21
   4aea8:	d8c02a15 	stw	r3,168(sp)
   4aeac:	da002b15 	stw	r8,172(sp)
   4aeb0:	0049a580 	call	49a58 <strlen>
   4aeb4:	d8c02a17 	ldw	r3,168(sp)
   4aeb8:	1027883a 	mov	r19,r2
   4aebc:	df001d83 	ldbu	fp,118(sp)
   4aec0:	d8c02215 	stw	r3,136(sp)
   4aec4:	0013883a 	mov	r9,zero
   4aec8:	da002b17 	ldw	r8,172(sp)
   4aecc:	003c4d06 	br	4a004 <__alt_data_end+0xfffca004>
   4aed0:	d9402117 	ldw	r5,132(sp)
   4aed4:	d9002017 	ldw	r4,128(sp)
   4aed8:	d9801a04 	addi	r6,sp,104
   4aedc:	da402c15 	stw	r9,176(sp)
   4aee0:	0049af00 	call	49af0 <__sprint_r.part.0>
   4aee4:	da402c17 	ldw	r9,176(sp)
   4aee8:	103e9a1e 	bne	r2,zero,4a954 <__alt_data_end+0xfffca954>
   4aeec:	d9401b17 	ldw	r5,108(sp)
   4aef0:	d8801c17 	ldw	r2,112(sp)
   4aef4:	d811883a 	mov	r8,sp
   4aef8:	29000044 	addi	r4,r5,1
   4aefc:	003e4206 	br	4a808 <__alt_data_end+0xfffca808>
   4af00:	d9401b17 	ldw	r5,108(sp)
   4af04:	01000174 	movhi	r4,5
   4af08:	21048904 	addi	r4,r4,4644
   4af0c:	d9002415 	stw	r4,144(sp)
   4af10:	29400044 	addi	r5,r5,1
   4af14:	003c6d06 	br	4a0cc <__alt_data_end+0xfffca0cc>
   4af18:	0039883a 	mov	fp,zero
   4af1c:	00800084 	movi	r2,2
   4af20:	10803fcc 	andi	r2,r2,255
   4af24:	01000044 	movi	r4,1
   4af28:	11001e26 	beq	r2,r4,4afa4 <___vfiprintf_internal_r+0x13a0>
   4af2c:	01000084 	movi	r4,2
   4af30:	11001e1e 	bne	r2,r4,4afac <___vfiprintf_internal_r+0x13a8>
   4af34:	1829883a 	mov	r20,r3
   4af38:	003eea06 	br	4aae4 <__alt_data_end+0xfffcaae4>
   4af3c:	a007883a 	mov	r3,r20
   4af40:	00800044 	movi	r2,1
   4af44:	003ff606 	br	4af20 <__alt_data_end+0xfffcaf20>
   4af48:	00800184 	movi	r2,6
   4af4c:	1240012e 	bgeu	r2,r9,4af54 <___vfiprintf_internal_r+0x1350>
   4af50:	1013883a 	mov	r9,r2
   4af54:	4827883a 	mov	r19,r9
   4af58:	4825883a 	mov	r18,r9
   4af5c:	48001516 	blt	r9,zero,4afb4 <___vfiprintf_internal_r+0x13b0>
   4af60:	05400174 	movhi	r21,5
   4af64:	d8c02215 	stw	r3,136(sp)
   4af68:	ad442904 	addi	r21,r21,4260
   4af6c:	003d1406 	br	4a3c0 <__alt_data_end+0xfffca3c0>
   4af70:	02800174 	movhi	r10,5
   4af74:	52848504 	addi	r10,r10,4628
   4af78:	da802415 	stw	r10,144(sp)
   4af7c:	200d883a 	mov	r6,r4
   4af80:	003c9106 	br	4a1c8 <__alt_data_end+0xfffca1c8>
   4af84:	5021883a 	mov	r16,r10
   4af88:	0013883a 	mov	r9,zero
   4af8c:	003b7d06 	br	49d84 <__alt_data_end+0xfffc9d84>
   4af90:	4827883a 	mov	r19,r9
   4af94:	df001d83 	ldbu	fp,118(sp)
   4af98:	d8c02215 	stw	r3,136(sp)
   4af9c:	0013883a 	mov	r9,zero
   4afa0:	003c1806 	br	4a004 <__alt_data_end+0xfffca004>
   4afa4:	1829883a 	mov	r20,r3
   4afa8:	003d1806 	br	4a40c <__alt_data_end+0xfffca40c>
   4afac:	1829883a 	mov	r20,r3
   4afb0:	003ccd06 	br	4a2e8 <__alt_data_end+0xfffca2e8>
   4afb4:	0025883a 	mov	r18,zero
   4afb8:	003fe906 	br	4af60 <__alt_data_end+0xfffcaf60>
   4afbc:	d8802217 	ldw	r2,136(sp)
   4afc0:	80c00043 	ldbu	r3,1(r16)
   4afc4:	5021883a 	mov	r16,r10
   4afc8:	12400017 	ldw	r9,0(r2)
   4afcc:	10800104 	addi	r2,r2,4
   4afd0:	d8802215 	stw	r2,136(sp)
   4afd4:	483faf0e 	bge	r9,zero,4ae94 <__alt_data_end+0xfffcae94>
   4afd8:	18c03fcc 	andi	r3,r3,255
   4afdc:	18c0201c 	xori	r3,r3,128
   4afe0:	027fffc4 	movi	r9,-1
   4afe4:	18ffe004 	addi	r3,r3,-128
   4afe8:	003b6506 	br	49d80 <__alt_data_end+0xfffc9d80>
   4afec:	d9c01d85 	stb	r7,118(sp)
   4aff0:	003ca006 	br	4a274 <__alt_data_end+0xfffca274>
   4aff4:	d9c01d85 	stb	r7,118(sp)
   4aff8:	003cad06 	br	4a2b0 <__alt_data_end+0xfffca2b0>
   4affc:	d9c01d85 	stb	r7,118(sp)
   4b000:	003d7d06 	br	4a5f8 <__alt_data_end+0xfffca5f8>
   4b004:	d9c01d85 	stb	r7,118(sp)
   4b008:	003d5f06 	br	4a588 <__alt_data_end+0xfffca588>
   4b00c:	a080004c 	andi	r2,r20,1
   4b010:	0039883a 	mov	fp,zero
   4b014:	10000526 	beq	r2,zero,4b02c <___vfiprintf_internal_r+0x1428>
   4b018:	00800c04 	movi	r2,48
   4b01c:	d88019c5 	stb	r2,103(sp)
   4b020:	dcc02717 	ldw	r19,156(sp)
   4b024:	dd4019c4 	addi	r21,sp,103
   4b028:	003bf606 	br	4a004 <__alt_data_end+0xfffca004>
   4b02c:	0027883a 	mov	r19,zero
   4b030:	dd401a04 	addi	r21,sp,104
   4b034:	003bf306 	br	4a004 <__alt_data_end+0xfffca004>
   4b038:	d9c01d85 	stb	r7,118(sp)
   4b03c:	003dc806 	br	4a760 <__alt_data_end+0xfffca760>
   4b040:	d9c01d85 	stb	r7,118(sp)
   4b044:	003d3a06 	br	4a530 <__alt_data_end+0xfffca530>
   4b048:	d9c01d85 	stb	r7,118(sp)
   4b04c:	003d2a06 	br	4a4f8 <__alt_data_end+0xfffca4f8>
   4b050:	d9c01d85 	stb	r7,118(sp)
   4b054:	003cde06 	br	4a3d0 <__alt_data_end+0xfffca3d0>
   4b058:	d9c01d85 	stb	r7,118(sp)
   4b05c:	003cbc06 	br	4a350 <__alt_data_end+0xfffca350>

0004b060 <__vfiprintf_internal>:
   4b060:	00800174 	movhi	r2,5
   4b064:	108b6e04 	addi	r2,r2,11704
   4b068:	300f883a 	mov	r7,r6
   4b06c:	280d883a 	mov	r6,r5
   4b070:	200b883a 	mov	r5,r4
   4b074:	11000017 	ldw	r4,0(r2)
   4b078:	0049c041 	jmpi	49c04 <___vfiprintf_internal_r>

0004b07c <__sbprintf>:
   4b07c:	2880030b 	ldhu	r2,12(r5)
   4b080:	2ac01917 	ldw	r11,100(r5)
   4b084:	2a80038b 	ldhu	r10,14(r5)
   4b088:	2a400717 	ldw	r9,28(r5)
   4b08c:	2a000917 	ldw	r8,36(r5)
   4b090:	defee204 	addi	sp,sp,-1144
   4b094:	00c10004 	movi	r3,1024
   4b098:	dc011a15 	stw	r16,1128(sp)
   4b09c:	10bfff4c 	andi	r2,r2,65533
   4b0a0:	2821883a 	mov	r16,r5
   4b0a4:	d8cb883a 	add	r5,sp,r3
   4b0a8:	dc811c15 	stw	r18,1136(sp)
   4b0ac:	dc411b15 	stw	r17,1132(sp)
   4b0b0:	dfc11d15 	stw	ra,1140(sp)
   4b0b4:	2025883a 	mov	r18,r4
   4b0b8:	d881030d 	sth	r2,1036(sp)
   4b0bc:	dac11915 	stw	r11,1124(sp)
   4b0c0:	da81038d 	sth	r10,1038(sp)
   4b0c4:	da410715 	stw	r9,1052(sp)
   4b0c8:	da010915 	stw	r8,1060(sp)
   4b0cc:	dec10015 	stw	sp,1024(sp)
   4b0d0:	dec10415 	stw	sp,1040(sp)
   4b0d4:	d8c10215 	stw	r3,1032(sp)
   4b0d8:	d8c10515 	stw	r3,1044(sp)
   4b0dc:	d8010615 	stw	zero,1048(sp)
   4b0e0:	0049c040 	call	49c04 <___vfiprintf_internal_r>
   4b0e4:	1023883a 	mov	r17,r2
   4b0e8:	10000416 	blt	r2,zero,4b0fc <__sbprintf+0x80>
   4b0ec:	d9410004 	addi	r5,sp,1024
   4b0f0:	9009883a 	mov	r4,r18
   4b0f4:	0046f9c0 	call	46f9c <_fflush_r>
   4b0f8:	10000d1e 	bne	r2,zero,4b130 <__sbprintf+0xb4>
   4b0fc:	d881030b 	ldhu	r2,1036(sp)
   4b100:	1080100c 	andi	r2,r2,64
   4b104:	10000326 	beq	r2,zero,4b114 <__sbprintf+0x98>
   4b108:	8080030b 	ldhu	r2,12(r16)
   4b10c:	10801014 	ori	r2,r2,64
   4b110:	8080030d 	sth	r2,12(r16)
   4b114:	8805883a 	mov	r2,r17
   4b118:	dfc11d17 	ldw	ra,1140(sp)
   4b11c:	dc811c17 	ldw	r18,1136(sp)
   4b120:	dc411b17 	ldw	r17,1132(sp)
   4b124:	dc011a17 	ldw	r16,1128(sp)
   4b128:	dec11e04 	addi	sp,sp,1144
   4b12c:	f800283a 	ret
   4b130:	047fffc4 	movi	r17,-1
   4b134:	003ff106 	br	4b0fc <__alt_data_end+0xfffcb0fc>

0004b138 <_write_r>:
   4b138:	defffd04 	addi	sp,sp,-12
   4b13c:	2805883a 	mov	r2,r5
   4b140:	dc000015 	stw	r16,0(sp)
   4b144:	04000174 	movhi	r16,5
   4b148:	dc400115 	stw	r17,4(sp)
   4b14c:	300b883a 	mov	r5,r6
   4b150:	84126a04 	addi	r16,r16,18856
   4b154:	2023883a 	mov	r17,r4
   4b158:	380d883a 	mov	r6,r7
   4b15c:	1009883a 	mov	r4,r2
   4b160:	dfc00215 	stw	ra,8(sp)
   4b164:	80000015 	stw	zero,0(r16)
   4b168:	004ef240 	call	4ef24 <write>
   4b16c:	00ffffc4 	movi	r3,-1
   4b170:	10c00526 	beq	r2,r3,4b188 <_write_r+0x50>
   4b174:	dfc00217 	ldw	ra,8(sp)
   4b178:	dc400117 	ldw	r17,4(sp)
   4b17c:	dc000017 	ldw	r16,0(sp)
   4b180:	dec00304 	addi	sp,sp,12
   4b184:	f800283a 	ret
   4b188:	80c00017 	ldw	r3,0(r16)
   4b18c:	183ff926 	beq	r3,zero,4b174 <__alt_data_end+0xfffcb174>
   4b190:	88c00015 	stw	r3,0(r17)
   4b194:	003ff706 	br	4b174 <__alt_data_end+0xfffcb174>

0004b198 <_close_r>:
   4b198:	defffd04 	addi	sp,sp,-12
   4b19c:	dc000015 	stw	r16,0(sp)
   4b1a0:	04000174 	movhi	r16,5
   4b1a4:	dc400115 	stw	r17,4(sp)
   4b1a8:	84126a04 	addi	r16,r16,18856
   4b1ac:	2023883a 	mov	r17,r4
   4b1b0:	2809883a 	mov	r4,r5
   4b1b4:	dfc00215 	stw	ra,8(sp)
   4b1b8:	80000015 	stw	zero,0(r16)
   4b1bc:	004e7140 	call	4e714 <close>
   4b1c0:	00ffffc4 	movi	r3,-1
   4b1c4:	10c00526 	beq	r2,r3,4b1dc <_close_r+0x44>
   4b1c8:	dfc00217 	ldw	ra,8(sp)
   4b1cc:	dc400117 	ldw	r17,4(sp)
   4b1d0:	dc000017 	ldw	r16,0(sp)
   4b1d4:	dec00304 	addi	sp,sp,12
   4b1d8:	f800283a 	ret
   4b1dc:	80c00017 	ldw	r3,0(r16)
   4b1e0:	183ff926 	beq	r3,zero,4b1c8 <__alt_data_end+0xfffcb1c8>
   4b1e4:	88c00015 	stw	r3,0(r17)
   4b1e8:	003ff706 	br	4b1c8 <__alt_data_end+0xfffcb1c8>

0004b1ec <_calloc_r>:
   4b1ec:	298b383a 	mul	r5,r5,r6
   4b1f0:	defffe04 	addi	sp,sp,-8
   4b1f4:	dfc00115 	stw	ra,4(sp)
   4b1f8:	dc000015 	stw	r16,0(sp)
   4b1fc:	0047c1c0 	call	47c1c <_malloc_r>
   4b200:	10002926 	beq	r2,zero,4b2a8 <_calloc_r+0xbc>
   4b204:	11bfff17 	ldw	r6,-4(r2)
   4b208:	1021883a 	mov	r16,r2
   4b20c:	00bfff04 	movi	r2,-4
   4b210:	308c703a 	and	r6,r6,r2
   4b214:	00c00904 	movi	r3,36
   4b218:	308d883a 	add	r6,r6,r2
   4b21c:	19801636 	bltu	r3,r6,4b278 <_calloc_r+0x8c>
   4b220:	008004c4 	movi	r2,19
   4b224:	11800b2e 	bgeu	r2,r6,4b254 <_calloc_r+0x68>
   4b228:	80000015 	stw	zero,0(r16)
   4b22c:	80000115 	stw	zero,4(r16)
   4b230:	008006c4 	movi	r2,27
   4b234:	11801a2e 	bgeu	r2,r6,4b2a0 <_calloc_r+0xb4>
   4b238:	80000215 	stw	zero,8(r16)
   4b23c:	80000315 	stw	zero,12(r16)
   4b240:	30c0151e 	bne	r6,r3,4b298 <_calloc_r+0xac>
   4b244:	80000415 	stw	zero,16(r16)
   4b248:	80800604 	addi	r2,r16,24
   4b24c:	80000515 	stw	zero,20(r16)
   4b250:	00000106 	br	4b258 <_calloc_r+0x6c>
   4b254:	8005883a 	mov	r2,r16
   4b258:	10000015 	stw	zero,0(r2)
   4b25c:	10000115 	stw	zero,4(r2)
   4b260:	10000215 	stw	zero,8(r2)
   4b264:	8005883a 	mov	r2,r16
   4b268:	dfc00117 	ldw	ra,4(sp)
   4b26c:	dc000017 	ldw	r16,0(sp)
   4b270:	dec00204 	addi	sp,sp,8
   4b274:	f800283a 	ret
   4b278:	000b883a 	mov	r5,zero
   4b27c:	8009883a 	mov	r4,r16
   4b280:	00486540 	call	48654 <memset>
   4b284:	8005883a 	mov	r2,r16
   4b288:	dfc00117 	ldw	ra,4(sp)
   4b28c:	dc000017 	ldw	r16,0(sp)
   4b290:	dec00204 	addi	sp,sp,8
   4b294:	f800283a 	ret
   4b298:	80800404 	addi	r2,r16,16
   4b29c:	003fee06 	br	4b258 <__alt_data_end+0xfffcb258>
   4b2a0:	80800204 	addi	r2,r16,8
   4b2a4:	003fec06 	br	4b258 <__alt_data_end+0xfffcb258>
   4b2a8:	0005883a 	mov	r2,zero
   4b2ac:	003fee06 	br	4b268 <__alt_data_end+0xfffcb268>

0004b2b0 <_fclose_r>:
   4b2b0:	28003926 	beq	r5,zero,4b398 <_fclose_r+0xe8>
   4b2b4:	defffc04 	addi	sp,sp,-16
   4b2b8:	dc400115 	stw	r17,4(sp)
   4b2bc:	dc000015 	stw	r16,0(sp)
   4b2c0:	dfc00315 	stw	ra,12(sp)
   4b2c4:	dc800215 	stw	r18,8(sp)
   4b2c8:	2023883a 	mov	r17,r4
   4b2cc:	2821883a 	mov	r16,r5
   4b2d0:	20000226 	beq	r4,zero,4b2dc <_fclose_r+0x2c>
   4b2d4:	20800e17 	ldw	r2,56(r4)
   4b2d8:	10002726 	beq	r2,zero,4b378 <_fclose_r+0xc8>
   4b2dc:	8080030f 	ldh	r2,12(r16)
   4b2e0:	1000071e 	bne	r2,zero,4b300 <_fclose_r+0x50>
   4b2e4:	0005883a 	mov	r2,zero
   4b2e8:	dfc00317 	ldw	ra,12(sp)
   4b2ec:	dc800217 	ldw	r18,8(sp)
   4b2f0:	dc400117 	ldw	r17,4(sp)
   4b2f4:	dc000017 	ldw	r16,0(sp)
   4b2f8:	dec00404 	addi	sp,sp,16
   4b2fc:	f800283a 	ret
   4b300:	800b883a 	mov	r5,r16
   4b304:	8809883a 	mov	r4,r17
   4b308:	0046d800 	call	46d80 <__sflush_r>
   4b30c:	1025883a 	mov	r18,r2
   4b310:	80800b17 	ldw	r2,44(r16)
   4b314:	10000426 	beq	r2,zero,4b328 <_fclose_r+0x78>
   4b318:	81400717 	ldw	r5,28(r16)
   4b31c:	8809883a 	mov	r4,r17
   4b320:	103ee83a 	callr	r2
   4b324:	10001616 	blt	r2,zero,4b380 <_fclose_r+0xd0>
   4b328:	8080030b 	ldhu	r2,12(r16)
   4b32c:	1080200c 	andi	r2,r2,128
   4b330:	1000151e 	bne	r2,zero,4b388 <_fclose_r+0xd8>
   4b334:	81400c17 	ldw	r5,48(r16)
   4b338:	28000526 	beq	r5,zero,4b350 <_fclose_r+0xa0>
   4b33c:	80801004 	addi	r2,r16,64
   4b340:	28800226 	beq	r5,r2,4b34c <_fclose_r+0x9c>
   4b344:	8809883a 	mov	r4,r17
   4b348:	00474ec0 	call	474ec <_free_r>
   4b34c:	80000c15 	stw	zero,48(r16)
   4b350:	81401117 	ldw	r5,68(r16)
   4b354:	28000326 	beq	r5,zero,4b364 <_fclose_r+0xb4>
   4b358:	8809883a 	mov	r4,r17
   4b35c:	00474ec0 	call	474ec <_free_r>
   4b360:	80001115 	stw	zero,68(r16)
   4b364:	00473880 	call	47388 <__sfp_lock_acquire>
   4b368:	8000030d 	sth	zero,12(r16)
   4b36c:	004738c0 	call	4738c <__sfp_lock_release>
   4b370:	9005883a 	mov	r2,r18
   4b374:	003fdc06 	br	4b2e8 <__alt_data_end+0xfffcb2e8>
   4b378:	00473780 	call	47378 <__sinit>
   4b37c:	003fd706 	br	4b2dc <__alt_data_end+0xfffcb2dc>
   4b380:	04bfffc4 	movi	r18,-1
   4b384:	003fe806 	br	4b328 <__alt_data_end+0xfffcb328>
   4b388:	81400417 	ldw	r5,16(r16)
   4b38c:	8809883a 	mov	r4,r17
   4b390:	00474ec0 	call	474ec <_free_r>
   4b394:	003fe706 	br	4b334 <__alt_data_end+0xfffcb334>
   4b398:	0005883a 	mov	r2,zero
   4b39c:	f800283a 	ret

0004b3a0 <fclose>:
   4b3a0:	00800174 	movhi	r2,5
   4b3a4:	108b6e04 	addi	r2,r2,11704
   4b3a8:	200b883a 	mov	r5,r4
   4b3ac:	11000017 	ldw	r4,0(r2)
   4b3b0:	004b2b01 	jmpi	4b2b0 <_fclose_r>

0004b3b4 <__fputwc>:
   4b3b4:	defff804 	addi	sp,sp,-32
   4b3b8:	dcc00415 	stw	r19,16(sp)
   4b3bc:	dc800315 	stw	r18,12(sp)
   4b3c0:	dc000115 	stw	r16,4(sp)
   4b3c4:	dfc00715 	stw	ra,28(sp)
   4b3c8:	dd400615 	stw	r21,24(sp)
   4b3cc:	dd000515 	stw	r20,20(sp)
   4b3d0:	dc400215 	stw	r17,8(sp)
   4b3d4:	2027883a 	mov	r19,r4
   4b3d8:	2825883a 	mov	r18,r5
   4b3dc:	3021883a 	mov	r16,r6
   4b3e0:	0047a0c0 	call	47a0c <__locale_mb_cur_max>
   4b3e4:	00c00044 	movi	r3,1
   4b3e8:	10c03e26 	beq	r2,r3,4b4e4 <__fputwc+0x130>
   4b3ec:	81c01704 	addi	r7,r16,92
   4b3f0:	900d883a 	mov	r6,r18
   4b3f4:	d80b883a 	mov	r5,sp
   4b3f8:	9809883a 	mov	r4,r19
   4b3fc:	004c4000 	call	4c400 <_wcrtomb_r>
   4b400:	1029883a 	mov	r20,r2
   4b404:	00bfffc4 	movi	r2,-1
   4b408:	a0802026 	beq	r20,r2,4b48c <__fputwc+0xd8>
   4b40c:	d9400003 	ldbu	r5,0(sp)
   4b410:	a0001c26 	beq	r20,zero,4b484 <__fputwc+0xd0>
   4b414:	0023883a 	mov	r17,zero
   4b418:	05400284 	movi	r21,10
   4b41c:	00000906 	br	4b444 <__fputwc+0x90>
   4b420:	80800017 	ldw	r2,0(r16)
   4b424:	11400005 	stb	r5,0(r2)
   4b428:	80c00017 	ldw	r3,0(r16)
   4b42c:	18c00044 	addi	r3,r3,1
   4b430:	80c00015 	stw	r3,0(r16)
   4b434:	8c400044 	addi	r17,r17,1
   4b438:	dc45883a 	add	r2,sp,r17
   4b43c:	8d00112e 	bgeu	r17,r20,4b484 <__fputwc+0xd0>
   4b440:	11400003 	ldbu	r5,0(r2)
   4b444:	80c00217 	ldw	r3,8(r16)
   4b448:	18ffffc4 	addi	r3,r3,-1
   4b44c:	80c00215 	stw	r3,8(r16)
   4b450:	183ff30e 	bge	r3,zero,4b420 <__alt_data_end+0xfffcb420>
   4b454:	80800617 	ldw	r2,24(r16)
   4b458:	18801916 	blt	r3,r2,4b4c0 <__fputwc+0x10c>
   4b45c:	80800017 	ldw	r2,0(r16)
   4b460:	11400005 	stb	r5,0(r2)
   4b464:	80800017 	ldw	r2,0(r16)
   4b468:	10c00003 	ldbu	r3,0(r2)
   4b46c:	10800044 	addi	r2,r2,1
   4b470:	1d402326 	beq	r3,r21,4b500 <__fputwc+0x14c>
   4b474:	80800015 	stw	r2,0(r16)
   4b478:	8c400044 	addi	r17,r17,1
   4b47c:	dc45883a 	add	r2,sp,r17
   4b480:	8d3fef36 	bltu	r17,r20,4b440 <__alt_data_end+0xfffcb440>
   4b484:	9005883a 	mov	r2,r18
   4b488:	00000406 	br	4b49c <__fputwc+0xe8>
   4b48c:	80c0030b 	ldhu	r3,12(r16)
   4b490:	a005883a 	mov	r2,r20
   4b494:	18c01014 	ori	r3,r3,64
   4b498:	80c0030d 	sth	r3,12(r16)
   4b49c:	dfc00717 	ldw	ra,28(sp)
   4b4a0:	dd400617 	ldw	r21,24(sp)
   4b4a4:	dd000517 	ldw	r20,20(sp)
   4b4a8:	dcc00417 	ldw	r19,16(sp)
   4b4ac:	dc800317 	ldw	r18,12(sp)
   4b4b0:	dc400217 	ldw	r17,8(sp)
   4b4b4:	dc000117 	ldw	r16,4(sp)
   4b4b8:	dec00804 	addi	sp,sp,32
   4b4bc:	f800283a 	ret
   4b4c0:	800d883a 	mov	r6,r16
   4b4c4:	29403fcc 	andi	r5,r5,255
   4b4c8:	9809883a 	mov	r4,r19
   4b4cc:	004c2a80 	call	4c2a8 <__swbuf_r>
   4b4d0:	10bfffe0 	cmpeqi	r2,r2,-1
   4b4d4:	10803fcc 	andi	r2,r2,255
   4b4d8:	103fd626 	beq	r2,zero,4b434 <__alt_data_end+0xfffcb434>
   4b4dc:	00bfffc4 	movi	r2,-1
   4b4e0:	003fee06 	br	4b49c <__alt_data_end+0xfffcb49c>
   4b4e4:	90ffffc4 	addi	r3,r18,-1
   4b4e8:	01003f84 	movi	r4,254
   4b4ec:	20ffbf36 	bltu	r4,r3,4b3ec <__alt_data_end+0xfffcb3ec>
   4b4f0:	900b883a 	mov	r5,r18
   4b4f4:	dc800005 	stb	r18,0(sp)
   4b4f8:	1029883a 	mov	r20,r2
   4b4fc:	003fc506 	br	4b414 <__alt_data_end+0xfffcb414>
   4b500:	800d883a 	mov	r6,r16
   4b504:	a80b883a 	mov	r5,r21
   4b508:	9809883a 	mov	r4,r19
   4b50c:	004c2a80 	call	4c2a8 <__swbuf_r>
   4b510:	10bfffe0 	cmpeqi	r2,r2,-1
   4b514:	003fef06 	br	4b4d4 <__alt_data_end+0xfffcb4d4>

0004b518 <_fputwc_r>:
   4b518:	3080030b 	ldhu	r2,12(r6)
   4b51c:	10c8000c 	andi	r3,r2,8192
   4b520:	1800051e 	bne	r3,zero,4b538 <_fputwc_r+0x20>
   4b524:	30c01917 	ldw	r3,100(r6)
   4b528:	10880014 	ori	r2,r2,8192
   4b52c:	3080030d 	sth	r2,12(r6)
   4b530:	18880014 	ori	r2,r3,8192
   4b534:	30801915 	stw	r2,100(r6)
   4b538:	004b3b41 	jmpi	4b3b4 <__fputwc>

0004b53c <fputwc>:
   4b53c:	00800174 	movhi	r2,5
   4b540:	defffc04 	addi	sp,sp,-16
   4b544:	108b6e04 	addi	r2,r2,11704
   4b548:	dc000115 	stw	r16,4(sp)
   4b54c:	14000017 	ldw	r16,0(r2)
   4b550:	dc400215 	stw	r17,8(sp)
   4b554:	dfc00315 	stw	ra,12(sp)
   4b558:	2023883a 	mov	r17,r4
   4b55c:	80000226 	beq	r16,zero,4b568 <fputwc+0x2c>
   4b560:	80800e17 	ldw	r2,56(r16)
   4b564:	10001026 	beq	r2,zero,4b5a8 <fputwc+0x6c>
   4b568:	2880030b 	ldhu	r2,12(r5)
   4b56c:	10c8000c 	andi	r3,r2,8192
   4b570:	1800051e 	bne	r3,zero,4b588 <fputwc+0x4c>
   4b574:	28c01917 	ldw	r3,100(r5)
   4b578:	10880014 	ori	r2,r2,8192
   4b57c:	2880030d 	sth	r2,12(r5)
   4b580:	18880014 	ori	r2,r3,8192
   4b584:	28801915 	stw	r2,100(r5)
   4b588:	280d883a 	mov	r6,r5
   4b58c:	8009883a 	mov	r4,r16
   4b590:	880b883a 	mov	r5,r17
   4b594:	dfc00317 	ldw	ra,12(sp)
   4b598:	dc400217 	ldw	r17,8(sp)
   4b59c:	dc000117 	ldw	r16,4(sp)
   4b5a0:	dec00404 	addi	sp,sp,16
   4b5a4:	004b3b41 	jmpi	4b3b4 <__fputwc>
   4b5a8:	8009883a 	mov	r4,r16
   4b5ac:	d9400015 	stw	r5,0(sp)
   4b5b0:	00473780 	call	47378 <__sinit>
   4b5b4:	d9400017 	ldw	r5,0(sp)
   4b5b8:	003feb06 	br	4b568 <__alt_data_end+0xfffcb568>

0004b5bc <_fstat_r>:
   4b5bc:	defffd04 	addi	sp,sp,-12
   4b5c0:	2805883a 	mov	r2,r5
   4b5c4:	dc000015 	stw	r16,0(sp)
   4b5c8:	04000174 	movhi	r16,5
   4b5cc:	dc400115 	stw	r17,4(sp)
   4b5d0:	84126a04 	addi	r16,r16,18856
   4b5d4:	2023883a 	mov	r17,r4
   4b5d8:	300b883a 	mov	r5,r6
   4b5dc:	1009883a 	mov	r4,r2
   4b5e0:	dfc00215 	stw	ra,8(sp)
   4b5e4:	80000015 	stw	zero,0(r16)
   4b5e8:	004e84c0 	call	4e84c <fstat>
   4b5ec:	00ffffc4 	movi	r3,-1
   4b5f0:	10c00526 	beq	r2,r3,4b608 <_fstat_r+0x4c>
   4b5f4:	dfc00217 	ldw	ra,8(sp)
   4b5f8:	dc400117 	ldw	r17,4(sp)
   4b5fc:	dc000017 	ldw	r16,0(sp)
   4b600:	dec00304 	addi	sp,sp,12
   4b604:	f800283a 	ret
   4b608:	80c00017 	ldw	r3,0(r16)
   4b60c:	183ff926 	beq	r3,zero,4b5f4 <__alt_data_end+0xfffcb5f4>
   4b610:	88c00015 	stw	r3,0(r17)
   4b614:	003ff706 	br	4b5f4 <__alt_data_end+0xfffcb5f4>

0004b618 <__sfvwrite_r>:
   4b618:	30800217 	ldw	r2,8(r6)
   4b61c:	10006726 	beq	r2,zero,4b7bc <__sfvwrite_r+0x1a4>
   4b620:	28c0030b 	ldhu	r3,12(r5)
   4b624:	defff404 	addi	sp,sp,-48
   4b628:	dd400715 	stw	r21,28(sp)
   4b62c:	dd000615 	stw	r20,24(sp)
   4b630:	dc000215 	stw	r16,8(sp)
   4b634:	dfc00b15 	stw	ra,44(sp)
   4b638:	df000a15 	stw	fp,40(sp)
   4b63c:	ddc00915 	stw	r23,36(sp)
   4b640:	dd800815 	stw	r22,32(sp)
   4b644:	dcc00515 	stw	r19,20(sp)
   4b648:	dc800415 	stw	r18,16(sp)
   4b64c:	dc400315 	stw	r17,12(sp)
   4b650:	1880020c 	andi	r2,r3,8
   4b654:	2821883a 	mov	r16,r5
   4b658:	202b883a 	mov	r21,r4
   4b65c:	3029883a 	mov	r20,r6
   4b660:	10002726 	beq	r2,zero,4b700 <__sfvwrite_r+0xe8>
   4b664:	28800417 	ldw	r2,16(r5)
   4b668:	10002526 	beq	r2,zero,4b700 <__sfvwrite_r+0xe8>
   4b66c:	1880008c 	andi	r2,r3,2
   4b670:	a4400017 	ldw	r17,0(r20)
   4b674:	10002a26 	beq	r2,zero,4b720 <__sfvwrite_r+0x108>
   4b678:	05a00034 	movhi	r22,32768
   4b67c:	0027883a 	mov	r19,zero
   4b680:	0025883a 	mov	r18,zero
   4b684:	b5bf0004 	addi	r22,r22,-1024
   4b688:	980d883a 	mov	r6,r19
   4b68c:	a809883a 	mov	r4,r21
   4b690:	90004626 	beq	r18,zero,4b7ac <__sfvwrite_r+0x194>
   4b694:	900f883a 	mov	r7,r18
   4b698:	b480022e 	bgeu	r22,r18,4b6a4 <__sfvwrite_r+0x8c>
   4b69c:	01e00034 	movhi	r7,32768
   4b6a0:	39ff0004 	addi	r7,r7,-1024
   4b6a4:	80800917 	ldw	r2,36(r16)
   4b6a8:	81400717 	ldw	r5,28(r16)
   4b6ac:	103ee83a 	callr	r2
   4b6b0:	0080570e 	bge	zero,r2,4b810 <__sfvwrite_r+0x1f8>
   4b6b4:	a0c00217 	ldw	r3,8(r20)
   4b6b8:	98a7883a 	add	r19,r19,r2
   4b6bc:	90a5c83a 	sub	r18,r18,r2
   4b6c0:	1885c83a 	sub	r2,r3,r2
   4b6c4:	a0800215 	stw	r2,8(r20)
   4b6c8:	103fef1e 	bne	r2,zero,4b688 <__alt_data_end+0xfffcb688>
   4b6cc:	0005883a 	mov	r2,zero
   4b6d0:	dfc00b17 	ldw	ra,44(sp)
   4b6d4:	df000a17 	ldw	fp,40(sp)
   4b6d8:	ddc00917 	ldw	r23,36(sp)
   4b6dc:	dd800817 	ldw	r22,32(sp)
   4b6e0:	dd400717 	ldw	r21,28(sp)
   4b6e4:	dd000617 	ldw	r20,24(sp)
   4b6e8:	dcc00517 	ldw	r19,20(sp)
   4b6ec:	dc800417 	ldw	r18,16(sp)
   4b6f0:	dc400317 	ldw	r17,12(sp)
   4b6f4:	dc000217 	ldw	r16,8(sp)
   4b6f8:	dec00c04 	addi	sp,sp,48
   4b6fc:	f800283a 	ret
   4b700:	800b883a 	mov	r5,r16
   4b704:	a809883a 	mov	r4,r21
   4b708:	00453a40 	call	453a4 <__swsetup_r>
   4b70c:	1000eb1e 	bne	r2,zero,4babc <__sfvwrite_r+0x4a4>
   4b710:	80c0030b 	ldhu	r3,12(r16)
   4b714:	a4400017 	ldw	r17,0(r20)
   4b718:	1880008c 	andi	r2,r3,2
   4b71c:	103fd61e 	bne	r2,zero,4b678 <__alt_data_end+0xfffcb678>
   4b720:	1880004c 	andi	r2,r3,1
   4b724:	10003f1e 	bne	r2,zero,4b824 <__sfvwrite_r+0x20c>
   4b728:	0039883a 	mov	fp,zero
   4b72c:	0025883a 	mov	r18,zero
   4b730:	90001a26 	beq	r18,zero,4b79c <__sfvwrite_r+0x184>
   4b734:	1880800c 	andi	r2,r3,512
   4b738:	84c00217 	ldw	r19,8(r16)
   4b73c:	10002126 	beq	r2,zero,4b7c4 <__sfvwrite_r+0x1ac>
   4b740:	982f883a 	mov	r23,r19
   4b744:	94c09336 	bltu	r18,r19,4b994 <__sfvwrite_r+0x37c>
   4b748:	1881200c 	andi	r2,r3,1152
   4b74c:	10009e1e 	bne	r2,zero,4b9c8 <__sfvwrite_r+0x3b0>
   4b750:	81000017 	ldw	r4,0(r16)
   4b754:	b80d883a 	mov	r6,r23
   4b758:	e00b883a 	mov	r5,fp
   4b75c:	004bb880 	call	4bb88 <memmove>
   4b760:	80c00217 	ldw	r3,8(r16)
   4b764:	81000017 	ldw	r4,0(r16)
   4b768:	9005883a 	mov	r2,r18
   4b76c:	1ce7c83a 	sub	r19,r3,r19
   4b770:	25cf883a 	add	r7,r4,r23
   4b774:	84c00215 	stw	r19,8(r16)
   4b778:	81c00015 	stw	r7,0(r16)
   4b77c:	a0c00217 	ldw	r3,8(r20)
   4b780:	e0b9883a 	add	fp,fp,r2
   4b784:	90a5c83a 	sub	r18,r18,r2
   4b788:	18a7c83a 	sub	r19,r3,r2
   4b78c:	a4c00215 	stw	r19,8(r20)
   4b790:	983fce26 	beq	r19,zero,4b6cc <__alt_data_end+0xfffcb6cc>
   4b794:	80c0030b 	ldhu	r3,12(r16)
   4b798:	903fe61e 	bne	r18,zero,4b734 <__alt_data_end+0xfffcb734>
   4b79c:	8f000017 	ldw	fp,0(r17)
   4b7a0:	8c800117 	ldw	r18,4(r17)
   4b7a4:	8c400204 	addi	r17,r17,8
   4b7a8:	003fe106 	br	4b730 <__alt_data_end+0xfffcb730>
   4b7ac:	8cc00017 	ldw	r19,0(r17)
   4b7b0:	8c800117 	ldw	r18,4(r17)
   4b7b4:	8c400204 	addi	r17,r17,8
   4b7b8:	003fb306 	br	4b688 <__alt_data_end+0xfffcb688>
   4b7bc:	0005883a 	mov	r2,zero
   4b7c0:	f800283a 	ret
   4b7c4:	81000017 	ldw	r4,0(r16)
   4b7c8:	80800417 	ldw	r2,16(r16)
   4b7cc:	11005736 	bltu	r2,r4,4b92c <__sfvwrite_r+0x314>
   4b7d0:	85c00517 	ldw	r23,20(r16)
   4b7d4:	95c05536 	bltu	r18,r23,4b92c <__sfvwrite_r+0x314>
   4b7d8:	00a00034 	movhi	r2,32768
   4b7dc:	10bfffc4 	addi	r2,r2,-1
   4b7e0:	9009883a 	mov	r4,r18
   4b7e4:	1480012e 	bgeu	r2,r18,4b7ec <__sfvwrite_r+0x1d4>
   4b7e8:	1009883a 	mov	r4,r2
   4b7ec:	b80b883a 	mov	r5,r23
   4b7f0:	00409ec0 	call	409ec <__divsi3>
   4b7f4:	15cf383a 	mul	r7,r2,r23
   4b7f8:	81400717 	ldw	r5,28(r16)
   4b7fc:	80800917 	ldw	r2,36(r16)
   4b800:	e00d883a 	mov	r6,fp
   4b804:	a809883a 	mov	r4,r21
   4b808:	103ee83a 	callr	r2
   4b80c:	00bfdb16 	blt	zero,r2,4b77c <__alt_data_end+0xfffcb77c>
   4b810:	8080030b 	ldhu	r2,12(r16)
   4b814:	10801014 	ori	r2,r2,64
   4b818:	8080030d 	sth	r2,12(r16)
   4b81c:	00bfffc4 	movi	r2,-1
   4b820:	003fab06 	br	4b6d0 <__alt_data_end+0xfffcb6d0>
   4b824:	0027883a 	mov	r19,zero
   4b828:	0011883a 	mov	r8,zero
   4b82c:	0039883a 	mov	fp,zero
   4b830:	0025883a 	mov	r18,zero
   4b834:	90001f26 	beq	r18,zero,4b8b4 <__sfvwrite_r+0x29c>
   4b838:	40005a26 	beq	r8,zero,4b9a4 <__sfvwrite_r+0x38c>
   4b83c:	982d883a 	mov	r22,r19
   4b840:	94c0012e 	bgeu	r18,r19,4b848 <__sfvwrite_r+0x230>
   4b844:	902d883a 	mov	r22,r18
   4b848:	81000017 	ldw	r4,0(r16)
   4b84c:	80800417 	ldw	r2,16(r16)
   4b850:	b02f883a 	mov	r23,r22
   4b854:	81c00517 	ldw	r7,20(r16)
   4b858:	1100032e 	bgeu	r2,r4,4b868 <__sfvwrite_r+0x250>
   4b85c:	80c00217 	ldw	r3,8(r16)
   4b860:	38c7883a 	add	r3,r7,r3
   4b864:	1d801816 	blt	r3,r22,4b8c8 <__sfvwrite_r+0x2b0>
   4b868:	b1c03e16 	blt	r22,r7,4b964 <__sfvwrite_r+0x34c>
   4b86c:	80800917 	ldw	r2,36(r16)
   4b870:	81400717 	ldw	r5,28(r16)
   4b874:	e00d883a 	mov	r6,fp
   4b878:	da000115 	stw	r8,4(sp)
   4b87c:	a809883a 	mov	r4,r21
   4b880:	103ee83a 	callr	r2
   4b884:	102f883a 	mov	r23,r2
   4b888:	da000117 	ldw	r8,4(sp)
   4b88c:	00bfe00e 	bge	zero,r2,4b810 <__alt_data_end+0xfffcb810>
   4b890:	9de7c83a 	sub	r19,r19,r23
   4b894:	98001f26 	beq	r19,zero,4b914 <__sfvwrite_r+0x2fc>
   4b898:	a0800217 	ldw	r2,8(r20)
   4b89c:	e5f9883a 	add	fp,fp,r23
   4b8a0:	95e5c83a 	sub	r18,r18,r23
   4b8a4:	15efc83a 	sub	r23,r2,r23
   4b8a8:	a5c00215 	stw	r23,8(r20)
   4b8ac:	b83f8726 	beq	r23,zero,4b6cc <__alt_data_end+0xfffcb6cc>
   4b8b0:	903fe11e 	bne	r18,zero,4b838 <__alt_data_end+0xfffcb838>
   4b8b4:	8f000017 	ldw	fp,0(r17)
   4b8b8:	8c800117 	ldw	r18,4(r17)
   4b8bc:	0011883a 	mov	r8,zero
   4b8c0:	8c400204 	addi	r17,r17,8
   4b8c4:	003fdb06 	br	4b834 <__alt_data_end+0xfffcb834>
   4b8c8:	180d883a 	mov	r6,r3
   4b8cc:	e00b883a 	mov	r5,fp
   4b8d0:	da000115 	stw	r8,4(sp)
   4b8d4:	d8c00015 	stw	r3,0(sp)
   4b8d8:	004bb880 	call	4bb88 <memmove>
   4b8dc:	d8c00017 	ldw	r3,0(sp)
   4b8e0:	80800017 	ldw	r2,0(r16)
   4b8e4:	800b883a 	mov	r5,r16
   4b8e8:	a809883a 	mov	r4,r21
   4b8ec:	10c5883a 	add	r2,r2,r3
   4b8f0:	80800015 	stw	r2,0(r16)
   4b8f4:	d8c00015 	stw	r3,0(sp)
   4b8f8:	0046f9c0 	call	46f9c <_fflush_r>
   4b8fc:	d8c00017 	ldw	r3,0(sp)
   4b900:	da000117 	ldw	r8,4(sp)
   4b904:	103fc21e 	bne	r2,zero,4b810 <__alt_data_end+0xfffcb810>
   4b908:	182f883a 	mov	r23,r3
   4b90c:	9de7c83a 	sub	r19,r19,r23
   4b910:	983fe11e 	bne	r19,zero,4b898 <__alt_data_end+0xfffcb898>
   4b914:	800b883a 	mov	r5,r16
   4b918:	a809883a 	mov	r4,r21
   4b91c:	0046f9c0 	call	46f9c <_fflush_r>
   4b920:	103fbb1e 	bne	r2,zero,4b810 <__alt_data_end+0xfffcb810>
   4b924:	0011883a 	mov	r8,zero
   4b928:	003fdb06 	br	4b898 <__alt_data_end+0xfffcb898>
   4b92c:	94c0012e 	bgeu	r18,r19,4b934 <__sfvwrite_r+0x31c>
   4b930:	9027883a 	mov	r19,r18
   4b934:	980d883a 	mov	r6,r19
   4b938:	e00b883a 	mov	r5,fp
   4b93c:	004bb880 	call	4bb88 <memmove>
   4b940:	80800217 	ldw	r2,8(r16)
   4b944:	80c00017 	ldw	r3,0(r16)
   4b948:	14c5c83a 	sub	r2,r2,r19
   4b94c:	1cc7883a 	add	r3,r3,r19
   4b950:	80800215 	stw	r2,8(r16)
   4b954:	80c00015 	stw	r3,0(r16)
   4b958:	10004326 	beq	r2,zero,4ba68 <__sfvwrite_r+0x450>
   4b95c:	9805883a 	mov	r2,r19
   4b960:	003f8606 	br	4b77c <__alt_data_end+0xfffcb77c>
   4b964:	b00d883a 	mov	r6,r22
   4b968:	e00b883a 	mov	r5,fp
   4b96c:	da000115 	stw	r8,4(sp)
   4b970:	004bb880 	call	4bb88 <memmove>
   4b974:	80800217 	ldw	r2,8(r16)
   4b978:	80c00017 	ldw	r3,0(r16)
   4b97c:	da000117 	ldw	r8,4(sp)
   4b980:	1585c83a 	sub	r2,r2,r22
   4b984:	1dad883a 	add	r22,r3,r22
   4b988:	80800215 	stw	r2,8(r16)
   4b98c:	85800015 	stw	r22,0(r16)
   4b990:	003fbf06 	br	4b890 <__alt_data_end+0xfffcb890>
   4b994:	81000017 	ldw	r4,0(r16)
   4b998:	9027883a 	mov	r19,r18
   4b99c:	902f883a 	mov	r23,r18
   4b9a0:	003f6c06 	br	4b754 <__alt_data_end+0xfffcb754>
   4b9a4:	900d883a 	mov	r6,r18
   4b9a8:	01400284 	movi	r5,10
   4b9ac:	e009883a 	mov	r4,fp
   4b9b0:	00484280 	call	48428 <memchr>
   4b9b4:	10003e26 	beq	r2,zero,4bab0 <__sfvwrite_r+0x498>
   4b9b8:	10800044 	addi	r2,r2,1
   4b9bc:	1727c83a 	sub	r19,r2,fp
   4b9c0:	02000044 	movi	r8,1
   4b9c4:	003f9d06 	br	4b83c <__alt_data_end+0xfffcb83c>
   4b9c8:	80800517 	ldw	r2,20(r16)
   4b9cc:	81400417 	ldw	r5,16(r16)
   4b9d0:	81c00017 	ldw	r7,0(r16)
   4b9d4:	10a7883a 	add	r19,r2,r2
   4b9d8:	9885883a 	add	r2,r19,r2
   4b9dc:	1026d7fa 	srli	r19,r2,31
   4b9e0:	396dc83a 	sub	r22,r7,r5
   4b9e4:	b1000044 	addi	r4,r22,1
   4b9e8:	9885883a 	add	r2,r19,r2
   4b9ec:	1027d07a 	srai	r19,r2,1
   4b9f0:	2485883a 	add	r2,r4,r18
   4b9f4:	980d883a 	mov	r6,r19
   4b9f8:	9880022e 	bgeu	r19,r2,4ba04 <__sfvwrite_r+0x3ec>
   4b9fc:	1027883a 	mov	r19,r2
   4ba00:	100d883a 	mov	r6,r2
   4ba04:	18c1000c 	andi	r3,r3,1024
   4ba08:	18001c26 	beq	r3,zero,4ba7c <__sfvwrite_r+0x464>
   4ba0c:	300b883a 	mov	r5,r6
   4ba10:	a809883a 	mov	r4,r21
   4ba14:	0047c1c0 	call	47c1c <_malloc_r>
   4ba18:	102f883a 	mov	r23,r2
   4ba1c:	10002926 	beq	r2,zero,4bac4 <__sfvwrite_r+0x4ac>
   4ba20:	81400417 	ldw	r5,16(r16)
   4ba24:	b00d883a 	mov	r6,r22
   4ba28:	1009883a 	mov	r4,r2
   4ba2c:	004850c0 	call	4850c <memcpy>
   4ba30:	8080030b 	ldhu	r2,12(r16)
   4ba34:	00fedfc4 	movi	r3,-1153
   4ba38:	10c4703a 	and	r2,r2,r3
   4ba3c:	10802014 	ori	r2,r2,128
   4ba40:	8080030d 	sth	r2,12(r16)
   4ba44:	bd89883a 	add	r4,r23,r22
   4ba48:	9d8fc83a 	sub	r7,r19,r22
   4ba4c:	85c00415 	stw	r23,16(r16)
   4ba50:	84c00515 	stw	r19,20(r16)
   4ba54:	81000015 	stw	r4,0(r16)
   4ba58:	9027883a 	mov	r19,r18
   4ba5c:	81c00215 	stw	r7,8(r16)
   4ba60:	902f883a 	mov	r23,r18
   4ba64:	003f3b06 	br	4b754 <__alt_data_end+0xfffcb754>
   4ba68:	800b883a 	mov	r5,r16
   4ba6c:	a809883a 	mov	r4,r21
   4ba70:	0046f9c0 	call	46f9c <_fflush_r>
   4ba74:	103fb926 	beq	r2,zero,4b95c <__alt_data_end+0xfffcb95c>
   4ba78:	003f6506 	br	4b810 <__alt_data_end+0xfffcb810>
   4ba7c:	a809883a 	mov	r4,r21
   4ba80:	004bd440 	call	4bd44 <_realloc_r>
   4ba84:	102f883a 	mov	r23,r2
   4ba88:	103fee1e 	bne	r2,zero,4ba44 <__alt_data_end+0xfffcba44>
   4ba8c:	81400417 	ldw	r5,16(r16)
   4ba90:	a809883a 	mov	r4,r21
   4ba94:	00474ec0 	call	474ec <_free_r>
   4ba98:	8080030b 	ldhu	r2,12(r16)
   4ba9c:	00ffdfc4 	movi	r3,-129
   4baa0:	1884703a 	and	r2,r3,r2
   4baa4:	00c00304 	movi	r3,12
   4baa8:	a8c00015 	stw	r3,0(r21)
   4baac:	003f5906 	br	4b814 <__alt_data_end+0xfffcb814>
   4bab0:	94c00044 	addi	r19,r18,1
   4bab4:	02000044 	movi	r8,1
   4bab8:	003f6006 	br	4b83c <__alt_data_end+0xfffcb83c>
   4babc:	00bfffc4 	movi	r2,-1
   4bac0:	003f0306 	br	4b6d0 <__alt_data_end+0xfffcb6d0>
   4bac4:	00800304 	movi	r2,12
   4bac8:	a8800015 	stw	r2,0(r21)
   4bacc:	8080030b 	ldhu	r2,12(r16)
   4bad0:	003f5006 	br	4b814 <__alt_data_end+0xfffcb814>

0004bad4 <_isatty_r>:
   4bad4:	defffd04 	addi	sp,sp,-12
   4bad8:	dc000015 	stw	r16,0(sp)
   4badc:	04000174 	movhi	r16,5
   4bae0:	dc400115 	stw	r17,4(sp)
   4bae4:	84126a04 	addi	r16,r16,18856
   4bae8:	2023883a 	mov	r17,r4
   4baec:	2809883a 	mov	r4,r5
   4baf0:	dfc00215 	stw	ra,8(sp)
   4baf4:	80000015 	stw	zero,0(r16)
   4baf8:	004e9380 	call	4e938 <isatty>
   4bafc:	00ffffc4 	movi	r3,-1
   4bb00:	10c00526 	beq	r2,r3,4bb18 <_isatty_r+0x44>
   4bb04:	dfc00217 	ldw	ra,8(sp)
   4bb08:	dc400117 	ldw	r17,4(sp)
   4bb0c:	dc000017 	ldw	r16,0(sp)
   4bb10:	dec00304 	addi	sp,sp,12
   4bb14:	f800283a 	ret
   4bb18:	80c00017 	ldw	r3,0(r16)
   4bb1c:	183ff926 	beq	r3,zero,4bb04 <__alt_data_end+0xfffcbb04>
   4bb20:	88c00015 	stw	r3,0(r17)
   4bb24:	003ff706 	br	4bb04 <__alt_data_end+0xfffcbb04>

0004bb28 <_lseek_r>:
   4bb28:	defffd04 	addi	sp,sp,-12
   4bb2c:	2805883a 	mov	r2,r5
   4bb30:	dc000015 	stw	r16,0(sp)
   4bb34:	04000174 	movhi	r16,5
   4bb38:	dc400115 	stw	r17,4(sp)
   4bb3c:	300b883a 	mov	r5,r6
   4bb40:	84126a04 	addi	r16,r16,18856
   4bb44:	2023883a 	mov	r17,r4
   4bb48:	380d883a 	mov	r6,r7
   4bb4c:	1009883a 	mov	r4,r2
   4bb50:	dfc00215 	stw	ra,8(sp)
   4bb54:	80000015 	stw	zero,0(r16)
   4bb58:	004eb040 	call	4eb04 <lseek>
   4bb5c:	00ffffc4 	movi	r3,-1
   4bb60:	10c00526 	beq	r2,r3,4bb78 <_lseek_r+0x50>
   4bb64:	dfc00217 	ldw	ra,8(sp)
   4bb68:	dc400117 	ldw	r17,4(sp)
   4bb6c:	dc000017 	ldw	r16,0(sp)
   4bb70:	dec00304 	addi	sp,sp,12
   4bb74:	f800283a 	ret
   4bb78:	80c00017 	ldw	r3,0(r16)
   4bb7c:	183ff926 	beq	r3,zero,4bb64 <__alt_data_end+0xfffcbb64>
   4bb80:	88c00015 	stw	r3,0(r17)
   4bb84:	003ff706 	br	4bb64 <__alt_data_end+0xfffcbb64>

0004bb88 <memmove>:
   4bb88:	2005883a 	mov	r2,r4
   4bb8c:	29000b2e 	bgeu	r5,r4,4bbbc <memmove+0x34>
   4bb90:	298f883a 	add	r7,r5,r6
   4bb94:	21c0092e 	bgeu	r4,r7,4bbbc <memmove+0x34>
   4bb98:	2187883a 	add	r3,r4,r6
   4bb9c:	198bc83a 	sub	r5,r3,r6
   4bba0:	30004826 	beq	r6,zero,4bcc4 <memmove+0x13c>
   4bba4:	39ffffc4 	addi	r7,r7,-1
   4bba8:	39000003 	ldbu	r4,0(r7)
   4bbac:	18ffffc4 	addi	r3,r3,-1
   4bbb0:	19000005 	stb	r4,0(r3)
   4bbb4:	28fffb1e 	bne	r5,r3,4bba4 <__alt_data_end+0xfffcbba4>
   4bbb8:	f800283a 	ret
   4bbbc:	00c003c4 	movi	r3,15
   4bbc0:	1980412e 	bgeu	r3,r6,4bcc8 <memmove+0x140>
   4bbc4:	2886b03a 	or	r3,r5,r2
   4bbc8:	18c000cc 	andi	r3,r3,3
   4bbcc:	1800401e 	bne	r3,zero,4bcd0 <memmove+0x148>
   4bbd0:	33fffc04 	addi	r15,r6,-16
   4bbd4:	781ed13a 	srli	r15,r15,4
   4bbd8:	28c00104 	addi	r3,r5,4
   4bbdc:	13400104 	addi	r13,r2,4
   4bbe0:	781c913a 	slli	r14,r15,4
   4bbe4:	2b000204 	addi	r12,r5,8
   4bbe8:	12c00204 	addi	r11,r2,8
   4bbec:	73800504 	addi	r14,r14,20
   4bbf0:	2a800304 	addi	r10,r5,12
   4bbf4:	12400304 	addi	r9,r2,12
   4bbf8:	2b9d883a 	add	r14,r5,r14
   4bbfc:	2811883a 	mov	r8,r5
   4bc00:	100f883a 	mov	r7,r2
   4bc04:	41000017 	ldw	r4,0(r8)
   4bc08:	39c00404 	addi	r7,r7,16
   4bc0c:	18c00404 	addi	r3,r3,16
   4bc10:	393ffc15 	stw	r4,-16(r7)
   4bc14:	193ffc17 	ldw	r4,-16(r3)
   4bc18:	6b400404 	addi	r13,r13,16
   4bc1c:	5ac00404 	addi	r11,r11,16
   4bc20:	693ffc15 	stw	r4,-16(r13)
   4bc24:	61000017 	ldw	r4,0(r12)
   4bc28:	4a400404 	addi	r9,r9,16
   4bc2c:	42000404 	addi	r8,r8,16
   4bc30:	593ffc15 	stw	r4,-16(r11)
   4bc34:	51000017 	ldw	r4,0(r10)
   4bc38:	63000404 	addi	r12,r12,16
   4bc3c:	52800404 	addi	r10,r10,16
   4bc40:	493ffc15 	stw	r4,-16(r9)
   4bc44:	1bbfef1e 	bne	r3,r14,4bc04 <__alt_data_end+0xfffcbc04>
   4bc48:	79000044 	addi	r4,r15,1
   4bc4c:	2008913a 	slli	r4,r4,4
   4bc50:	328003cc 	andi	r10,r6,15
   4bc54:	02c000c4 	movi	r11,3
   4bc58:	1107883a 	add	r3,r2,r4
   4bc5c:	290b883a 	add	r5,r5,r4
   4bc60:	5a801e2e 	bgeu	r11,r10,4bcdc <memmove+0x154>
   4bc64:	1813883a 	mov	r9,r3
   4bc68:	2811883a 	mov	r8,r5
   4bc6c:	500f883a 	mov	r7,r10
   4bc70:	41000017 	ldw	r4,0(r8)
   4bc74:	4a400104 	addi	r9,r9,4
   4bc78:	39ffff04 	addi	r7,r7,-4
   4bc7c:	493fff15 	stw	r4,-4(r9)
   4bc80:	42000104 	addi	r8,r8,4
   4bc84:	59fffa36 	bltu	r11,r7,4bc70 <__alt_data_end+0xfffcbc70>
   4bc88:	513fff04 	addi	r4,r10,-4
   4bc8c:	2008d0ba 	srli	r4,r4,2
   4bc90:	318000cc 	andi	r6,r6,3
   4bc94:	21000044 	addi	r4,r4,1
   4bc98:	2109883a 	add	r4,r4,r4
   4bc9c:	2109883a 	add	r4,r4,r4
   4bca0:	1907883a 	add	r3,r3,r4
   4bca4:	290b883a 	add	r5,r5,r4
   4bca8:	30000b26 	beq	r6,zero,4bcd8 <memmove+0x150>
   4bcac:	198d883a 	add	r6,r3,r6
   4bcb0:	29c00003 	ldbu	r7,0(r5)
   4bcb4:	18c00044 	addi	r3,r3,1
   4bcb8:	29400044 	addi	r5,r5,1
   4bcbc:	19ffffc5 	stb	r7,-1(r3)
   4bcc0:	19bffb1e 	bne	r3,r6,4bcb0 <__alt_data_end+0xfffcbcb0>
   4bcc4:	f800283a 	ret
   4bcc8:	1007883a 	mov	r3,r2
   4bccc:	003ff606 	br	4bca8 <__alt_data_end+0xfffcbca8>
   4bcd0:	1007883a 	mov	r3,r2
   4bcd4:	003ff506 	br	4bcac <__alt_data_end+0xfffcbcac>
   4bcd8:	f800283a 	ret
   4bcdc:	500d883a 	mov	r6,r10
   4bce0:	003ff106 	br	4bca8 <__alt_data_end+0xfffcbca8>

0004bce4 <_read_r>:
   4bce4:	defffd04 	addi	sp,sp,-12
   4bce8:	2805883a 	mov	r2,r5
   4bcec:	dc000015 	stw	r16,0(sp)
   4bcf0:	04000174 	movhi	r16,5
   4bcf4:	dc400115 	stw	r17,4(sp)
   4bcf8:	300b883a 	mov	r5,r6
   4bcfc:	84126a04 	addi	r16,r16,18856
   4bd00:	2023883a 	mov	r17,r4
   4bd04:	380d883a 	mov	r6,r7
   4bd08:	1009883a 	mov	r4,r2
   4bd0c:	dfc00215 	stw	ra,8(sp)
   4bd10:	80000015 	stw	zero,0(r16)
   4bd14:	004ecd80 	call	4ecd8 <read>
   4bd18:	00ffffc4 	movi	r3,-1
   4bd1c:	10c00526 	beq	r2,r3,4bd34 <_read_r+0x50>
   4bd20:	dfc00217 	ldw	ra,8(sp)
   4bd24:	dc400117 	ldw	r17,4(sp)
   4bd28:	dc000017 	ldw	r16,0(sp)
   4bd2c:	dec00304 	addi	sp,sp,12
   4bd30:	f800283a 	ret
   4bd34:	80c00017 	ldw	r3,0(r16)
   4bd38:	183ff926 	beq	r3,zero,4bd20 <__alt_data_end+0xfffcbd20>
   4bd3c:	88c00015 	stw	r3,0(r17)
   4bd40:	003ff706 	br	4bd20 <__alt_data_end+0xfffcbd20>

0004bd44 <_realloc_r>:
   4bd44:	defff604 	addi	sp,sp,-40
   4bd48:	dc800215 	stw	r18,8(sp)
   4bd4c:	dfc00915 	stw	ra,36(sp)
   4bd50:	df000815 	stw	fp,32(sp)
   4bd54:	ddc00715 	stw	r23,28(sp)
   4bd58:	dd800615 	stw	r22,24(sp)
   4bd5c:	dd400515 	stw	r21,20(sp)
   4bd60:	dd000415 	stw	r20,16(sp)
   4bd64:	dcc00315 	stw	r19,12(sp)
   4bd68:	dc400115 	stw	r17,4(sp)
   4bd6c:	dc000015 	stw	r16,0(sp)
   4bd70:	3025883a 	mov	r18,r6
   4bd74:	2800b726 	beq	r5,zero,4c054 <_realloc_r+0x310>
   4bd78:	282b883a 	mov	r21,r5
   4bd7c:	2029883a 	mov	r20,r4
   4bd80:	004ec540 	call	4ec54 <__malloc_lock>
   4bd84:	a8bfff17 	ldw	r2,-4(r21)
   4bd88:	043fff04 	movi	r16,-4
   4bd8c:	90c002c4 	addi	r3,r18,11
   4bd90:	01000584 	movi	r4,22
   4bd94:	acfffe04 	addi	r19,r21,-8
   4bd98:	1420703a 	and	r16,r2,r16
   4bd9c:	20c0332e 	bgeu	r4,r3,4be6c <_realloc_r+0x128>
   4bda0:	047ffe04 	movi	r17,-8
   4bda4:	1c62703a 	and	r17,r3,r17
   4bda8:	8807883a 	mov	r3,r17
   4bdac:	88005816 	blt	r17,zero,4bf10 <_realloc_r+0x1cc>
   4bdb0:	8c805736 	bltu	r17,r18,4bf10 <_realloc_r+0x1cc>
   4bdb4:	80c0300e 	bge	r16,r3,4be78 <_realloc_r+0x134>
   4bdb8:	07000174 	movhi	fp,5
   4bdbc:	e705e904 	addi	fp,fp,6052
   4bdc0:	e1c00217 	ldw	r7,8(fp)
   4bdc4:	9c09883a 	add	r4,r19,r16
   4bdc8:	22000117 	ldw	r8,4(r4)
   4bdcc:	21c06326 	beq	r4,r7,4bf5c <_realloc_r+0x218>
   4bdd0:	017fff84 	movi	r5,-2
   4bdd4:	414a703a 	and	r5,r8,r5
   4bdd8:	214b883a 	add	r5,r4,r5
   4bddc:	29800117 	ldw	r6,4(r5)
   4bde0:	3180004c 	andi	r6,r6,1
   4bde4:	30003f26 	beq	r6,zero,4bee4 <_realloc_r+0x1a0>
   4bde8:	1080004c 	andi	r2,r2,1
   4bdec:	10008326 	beq	r2,zero,4bffc <_realloc_r+0x2b8>
   4bdf0:	900b883a 	mov	r5,r18
   4bdf4:	a009883a 	mov	r4,r20
   4bdf8:	0047c1c0 	call	47c1c <_malloc_r>
   4bdfc:	1025883a 	mov	r18,r2
   4be00:	10011e26 	beq	r2,zero,4c27c <_realloc_r+0x538>
   4be04:	a93fff17 	ldw	r4,-4(r21)
   4be08:	10fffe04 	addi	r3,r2,-8
   4be0c:	00bfff84 	movi	r2,-2
   4be10:	2084703a 	and	r2,r4,r2
   4be14:	9885883a 	add	r2,r19,r2
   4be18:	1880ee26 	beq	r3,r2,4c1d4 <_realloc_r+0x490>
   4be1c:	81bfff04 	addi	r6,r16,-4
   4be20:	00800904 	movi	r2,36
   4be24:	1180b836 	bltu	r2,r6,4c108 <_realloc_r+0x3c4>
   4be28:	00c004c4 	movi	r3,19
   4be2c:	19809636 	bltu	r3,r6,4c088 <_realloc_r+0x344>
   4be30:	9005883a 	mov	r2,r18
   4be34:	a807883a 	mov	r3,r21
   4be38:	19000017 	ldw	r4,0(r3)
   4be3c:	11000015 	stw	r4,0(r2)
   4be40:	19000117 	ldw	r4,4(r3)
   4be44:	11000115 	stw	r4,4(r2)
   4be48:	18c00217 	ldw	r3,8(r3)
   4be4c:	10c00215 	stw	r3,8(r2)
   4be50:	a80b883a 	mov	r5,r21
   4be54:	a009883a 	mov	r4,r20
   4be58:	00474ec0 	call	474ec <_free_r>
   4be5c:	a009883a 	mov	r4,r20
   4be60:	004ec780 	call	4ec78 <__malloc_unlock>
   4be64:	9005883a 	mov	r2,r18
   4be68:	00001206 	br	4beb4 <_realloc_r+0x170>
   4be6c:	00c00404 	movi	r3,16
   4be70:	1823883a 	mov	r17,r3
   4be74:	003fce06 	br	4bdb0 <__alt_data_end+0xfffcbdb0>
   4be78:	a825883a 	mov	r18,r21
   4be7c:	8445c83a 	sub	r2,r16,r17
   4be80:	00c003c4 	movi	r3,15
   4be84:	18802636 	bltu	r3,r2,4bf20 <_realloc_r+0x1dc>
   4be88:	99800117 	ldw	r6,4(r19)
   4be8c:	9c07883a 	add	r3,r19,r16
   4be90:	3180004c 	andi	r6,r6,1
   4be94:	3420b03a 	or	r16,r6,r16
   4be98:	9c000115 	stw	r16,4(r19)
   4be9c:	18800117 	ldw	r2,4(r3)
   4bea0:	10800054 	ori	r2,r2,1
   4bea4:	18800115 	stw	r2,4(r3)
   4bea8:	a009883a 	mov	r4,r20
   4beac:	004ec780 	call	4ec78 <__malloc_unlock>
   4beb0:	9005883a 	mov	r2,r18
   4beb4:	dfc00917 	ldw	ra,36(sp)
   4beb8:	df000817 	ldw	fp,32(sp)
   4bebc:	ddc00717 	ldw	r23,28(sp)
   4bec0:	dd800617 	ldw	r22,24(sp)
   4bec4:	dd400517 	ldw	r21,20(sp)
   4bec8:	dd000417 	ldw	r20,16(sp)
   4becc:	dcc00317 	ldw	r19,12(sp)
   4bed0:	dc800217 	ldw	r18,8(sp)
   4bed4:	dc400117 	ldw	r17,4(sp)
   4bed8:	dc000017 	ldw	r16,0(sp)
   4bedc:	dec00a04 	addi	sp,sp,40
   4bee0:	f800283a 	ret
   4bee4:	017fff04 	movi	r5,-4
   4bee8:	414a703a 	and	r5,r8,r5
   4beec:	814d883a 	add	r6,r16,r5
   4bef0:	30c01f16 	blt	r6,r3,4bf70 <_realloc_r+0x22c>
   4bef4:	20800317 	ldw	r2,12(r4)
   4bef8:	20c00217 	ldw	r3,8(r4)
   4befc:	a825883a 	mov	r18,r21
   4bf00:	3021883a 	mov	r16,r6
   4bf04:	18800315 	stw	r2,12(r3)
   4bf08:	10c00215 	stw	r3,8(r2)
   4bf0c:	003fdb06 	br	4be7c <__alt_data_end+0xfffcbe7c>
   4bf10:	00800304 	movi	r2,12
   4bf14:	a0800015 	stw	r2,0(r20)
   4bf18:	0005883a 	mov	r2,zero
   4bf1c:	003fe506 	br	4beb4 <__alt_data_end+0xfffcbeb4>
   4bf20:	98c00117 	ldw	r3,4(r19)
   4bf24:	9c4b883a 	add	r5,r19,r17
   4bf28:	11000054 	ori	r4,r2,1
   4bf2c:	18c0004c 	andi	r3,r3,1
   4bf30:	1c62b03a 	or	r17,r3,r17
   4bf34:	9c400115 	stw	r17,4(r19)
   4bf38:	29000115 	stw	r4,4(r5)
   4bf3c:	2885883a 	add	r2,r5,r2
   4bf40:	10c00117 	ldw	r3,4(r2)
   4bf44:	29400204 	addi	r5,r5,8
   4bf48:	a009883a 	mov	r4,r20
   4bf4c:	18c00054 	ori	r3,r3,1
   4bf50:	10c00115 	stw	r3,4(r2)
   4bf54:	00474ec0 	call	474ec <_free_r>
   4bf58:	003fd306 	br	4bea8 <__alt_data_end+0xfffcbea8>
   4bf5c:	017fff04 	movi	r5,-4
   4bf60:	414a703a 	and	r5,r8,r5
   4bf64:	89800404 	addi	r6,r17,16
   4bf68:	8151883a 	add	r8,r16,r5
   4bf6c:	4180590e 	bge	r8,r6,4c0d4 <_realloc_r+0x390>
   4bf70:	1080004c 	andi	r2,r2,1
   4bf74:	103f9e1e 	bne	r2,zero,4bdf0 <__alt_data_end+0xfffcbdf0>
   4bf78:	adbffe17 	ldw	r22,-8(r21)
   4bf7c:	00bfff04 	movi	r2,-4
   4bf80:	9dadc83a 	sub	r22,r19,r22
   4bf84:	b1800117 	ldw	r6,4(r22)
   4bf88:	3084703a 	and	r2,r6,r2
   4bf8c:	20002026 	beq	r4,zero,4c010 <_realloc_r+0x2cc>
   4bf90:	80af883a 	add	r23,r16,r2
   4bf94:	b96f883a 	add	r23,r23,r5
   4bf98:	21c05f26 	beq	r4,r7,4c118 <_realloc_r+0x3d4>
   4bf9c:	b8c01c16 	blt	r23,r3,4c010 <_realloc_r+0x2cc>
   4bfa0:	20800317 	ldw	r2,12(r4)
   4bfa4:	20c00217 	ldw	r3,8(r4)
   4bfa8:	81bfff04 	addi	r6,r16,-4
   4bfac:	01000904 	movi	r4,36
   4bfb0:	18800315 	stw	r2,12(r3)
   4bfb4:	10c00215 	stw	r3,8(r2)
   4bfb8:	b0c00217 	ldw	r3,8(r22)
   4bfbc:	b0800317 	ldw	r2,12(r22)
   4bfc0:	b4800204 	addi	r18,r22,8
   4bfc4:	18800315 	stw	r2,12(r3)
   4bfc8:	10c00215 	stw	r3,8(r2)
   4bfcc:	21801b36 	bltu	r4,r6,4c03c <_realloc_r+0x2f8>
   4bfd0:	008004c4 	movi	r2,19
   4bfd4:	1180352e 	bgeu	r2,r6,4c0ac <_realloc_r+0x368>
   4bfd8:	a8800017 	ldw	r2,0(r21)
   4bfdc:	b0800215 	stw	r2,8(r22)
   4bfe0:	a8800117 	ldw	r2,4(r21)
   4bfe4:	b0800315 	stw	r2,12(r22)
   4bfe8:	008006c4 	movi	r2,27
   4bfec:	11807f36 	bltu	r2,r6,4c1ec <_realloc_r+0x4a8>
   4bff0:	b0800404 	addi	r2,r22,16
   4bff4:	ad400204 	addi	r21,r21,8
   4bff8:	00002d06 	br	4c0b0 <_realloc_r+0x36c>
   4bffc:	adbffe17 	ldw	r22,-8(r21)
   4c000:	00bfff04 	movi	r2,-4
   4c004:	9dadc83a 	sub	r22,r19,r22
   4c008:	b1000117 	ldw	r4,4(r22)
   4c00c:	2084703a 	and	r2,r4,r2
   4c010:	b03f7726 	beq	r22,zero,4bdf0 <__alt_data_end+0xfffcbdf0>
   4c014:	80af883a 	add	r23,r16,r2
   4c018:	b8ff7516 	blt	r23,r3,4bdf0 <__alt_data_end+0xfffcbdf0>
   4c01c:	b0800317 	ldw	r2,12(r22)
   4c020:	b0c00217 	ldw	r3,8(r22)
   4c024:	81bfff04 	addi	r6,r16,-4
   4c028:	01000904 	movi	r4,36
   4c02c:	18800315 	stw	r2,12(r3)
   4c030:	10c00215 	stw	r3,8(r2)
   4c034:	b4800204 	addi	r18,r22,8
   4c038:	21bfe52e 	bgeu	r4,r6,4bfd0 <__alt_data_end+0xfffcbfd0>
   4c03c:	a80b883a 	mov	r5,r21
   4c040:	9009883a 	mov	r4,r18
   4c044:	004bb880 	call	4bb88 <memmove>
   4c048:	b821883a 	mov	r16,r23
   4c04c:	b027883a 	mov	r19,r22
   4c050:	003f8a06 	br	4be7c <__alt_data_end+0xfffcbe7c>
   4c054:	300b883a 	mov	r5,r6
   4c058:	dfc00917 	ldw	ra,36(sp)
   4c05c:	df000817 	ldw	fp,32(sp)
   4c060:	ddc00717 	ldw	r23,28(sp)
   4c064:	dd800617 	ldw	r22,24(sp)
   4c068:	dd400517 	ldw	r21,20(sp)
   4c06c:	dd000417 	ldw	r20,16(sp)
   4c070:	dcc00317 	ldw	r19,12(sp)
   4c074:	dc800217 	ldw	r18,8(sp)
   4c078:	dc400117 	ldw	r17,4(sp)
   4c07c:	dc000017 	ldw	r16,0(sp)
   4c080:	dec00a04 	addi	sp,sp,40
   4c084:	0047c1c1 	jmpi	47c1c <_malloc_r>
   4c088:	a8c00017 	ldw	r3,0(r21)
   4c08c:	90c00015 	stw	r3,0(r18)
   4c090:	a8c00117 	ldw	r3,4(r21)
   4c094:	90c00115 	stw	r3,4(r18)
   4c098:	00c006c4 	movi	r3,27
   4c09c:	19804536 	bltu	r3,r6,4c1b4 <_realloc_r+0x470>
   4c0a0:	90800204 	addi	r2,r18,8
   4c0a4:	a8c00204 	addi	r3,r21,8
   4c0a8:	003f6306 	br	4be38 <__alt_data_end+0xfffcbe38>
   4c0ac:	9005883a 	mov	r2,r18
   4c0b0:	a8c00017 	ldw	r3,0(r21)
   4c0b4:	b821883a 	mov	r16,r23
   4c0b8:	b027883a 	mov	r19,r22
   4c0bc:	10c00015 	stw	r3,0(r2)
   4c0c0:	a8c00117 	ldw	r3,4(r21)
   4c0c4:	10c00115 	stw	r3,4(r2)
   4c0c8:	a8c00217 	ldw	r3,8(r21)
   4c0cc:	10c00215 	stw	r3,8(r2)
   4c0d0:	003f6a06 	br	4be7c <__alt_data_end+0xfffcbe7c>
   4c0d4:	9c67883a 	add	r19,r19,r17
   4c0d8:	4445c83a 	sub	r2,r8,r17
   4c0dc:	e4c00215 	stw	r19,8(fp)
   4c0e0:	10800054 	ori	r2,r2,1
   4c0e4:	98800115 	stw	r2,4(r19)
   4c0e8:	a8bfff17 	ldw	r2,-4(r21)
   4c0ec:	a009883a 	mov	r4,r20
   4c0f0:	1080004c 	andi	r2,r2,1
   4c0f4:	1462b03a 	or	r17,r2,r17
   4c0f8:	ac7fff15 	stw	r17,-4(r21)
   4c0fc:	004ec780 	call	4ec78 <__malloc_unlock>
   4c100:	a805883a 	mov	r2,r21
   4c104:	003f6b06 	br	4beb4 <__alt_data_end+0xfffcbeb4>
   4c108:	a80b883a 	mov	r5,r21
   4c10c:	9009883a 	mov	r4,r18
   4c110:	004bb880 	call	4bb88 <memmove>
   4c114:	003f4e06 	br	4be50 <__alt_data_end+0xfffcbe50>
   4c118:	89000404 	addi	r4,r17,16
   4c11c:	b93fbc16 	blt	r23,r4,4c010 <__alt_data_end+0xfffcc010>
   4c120:	b0800317 	ldw	r2,12(r22)
   4c124:	b0c00217 	ldw	r3,8(r22)
   4c128:	81bfff04 	addi	r6,r16,-4
   4c12c:	01000904 	movi	r4,36
   4c130:	18800315 	stw	r2,12(r3)
   4c134:	10c00215 	stw	r3,8(r2)
   4c138:	b4800204 	addi	r18,r22,8
   4c13c:	21804336 	bltu	r4,r6,4c24c <_realloc_r+0x508>
   4c140:	008004c4 	movi	r2,19
   4c144:	11803f2e 	bgeu	r2,r6,4c244 <_realloc_r+0x500>
   4c148:	a8800017 	ldw	r2,0(r21)
   4c14c:	b0800215 	stw	r2,8(r22)
   4c150:	a8800117 	ldw	r2,4(r21)
   4c154:	b0800315 	stw	r2,12(r22)
   4c158:	008006c4 	movi	r2,27
   4c15c:	11803f36 	bltu	r2,r6,4c25c <_realloc_r+0x518>
   4c160:	b0800404 	addi	r2,r22,16
   4c164:	ad400204 	addi	r21,r21,8
   4c168:	a8c00017 	ldw	r3,0(r21)
   4c16c:	10c00015 	stw	r3,0(r2)
   4c170:	a8c00117 	ldw	r3,4(r21)
   4c174:	10c00115 	stw	r3,4(r2)
   4c178:	a8c00217 	ldw	r3,8(r21)
   4c17c:	10c00215 	stw	r3,8(r2)
   4c180:	b447883a 	add	r3,r22,r17
   4c184:	bc45c83a 	sub	r2,r23,r17
   4c188:	e0c00215 	stw	r3,8(fp)
   4c18c:	10800054 	ori	r2,r2,1
   4c190:	18800115 	stw	r2,4(r3)
   4c194:	b0800117 	ldw	r2,4(r22)
   4c198:	a009883a 	mov	r4,r20
   4c19c:	1080004c 	andi	r2,r2,1
   4c1a0:	1462b03a 	or	r17,r2,r17
   4c1a4:	b4400115 	stw	r17,4(r22)
   4c1a8:	004ec780 	call	4ec78 <__malloc_unlock>
   4c1ac:	9005883a 	mov	r2,r18
   4c1b0:	003f4006 	br	4beb4 <__alt_data_end+0xfffcbeb4>
   4c1b4:	a8c00217 	ldw	r3,8(r21)
   4c1b8:	90c00215 	stw	r3,8(r18)
   4c1bc:	a8c00317 	ldw	r3,12(r21)
   4c1c0:	90c00315 	stw	r3,12(r18)
   4c1c4:	30801126 	beq	r6,r2,4c20c <_realloc_r+0x4c8>
   4c1c8:	90800404 	addi	r2,r18,16
   4c1cc:	a8c00404 	addi	r3,r21,16
   4c1d0:	003f1906 	br	4be38 <__alt_data_end+0xfffcbe38>
   4c1d4:	90ffff17 	ldw	r3,-4(r18)
   4c1d8:	00bfff04 	movi	r2,-4
   4c1dc:	a825883a 	mov	r18,r21
   4c1e0:	1884703a 	and	r2,r3,r2
   4c1e4:	80a1883a 	add	r16,r16,r2
   4c1e8:	003f2406 	br	4be7c <__alt_data_end+0xfffcbe7c>
   4c1ec:	a8800217 	ldw	r2,8(r21)
   4c1f0:	b0800415 	stw	r2,16(r22)
   4c1f4:	a8800317 	ldw	r2,12(r21)
   4c1f8:	b0800515 	stw	r2,20(r22)
   4c1fc:	31000a26 	beq	r6,r4,4c228 <_realloc_r+0x4e4>
   4c200:	b0800604 	addi	r2,r22,24
   4c204:	ad400404 	addi	r21,r21,16
   4c208:	003fa906 	br	4c0b0 <__alt_data_end+0xfffcc0b0>
   4c20c:	a9000417 	ldw	r4,16(r21)
   4c210:	90800604 	addi	r2,r18,24
   4c214:	a8c00604 	addi	r3,r21,24
   4c218:	91000415 	stw	r4,16(r18)
   4c21c:	a9000517 	ldw	r4,20(r21)
   4c220:	91000515 	stw	r4,20(r18)
   4c224:	003f0406 	br	4be38 <__alt_data_end+0xfffcbe38>
   4c228:	a8c00417 	ldw	r3,16(r21)
   4c22c:	ad400604 	addi	r21,r21,24
   4c230:	b0800804 	addi	r2,r22,32
   4c234:	b0c00615 	stw	r3,24(r22)
   4c238:	a8ffff17 	ldw	r3,-4(r21)
   4c23c:	b0c00715 	stw	r3,28(r22)
   4c240:	003f9b06 	br	4c0b0 <__alt_data_end+0xfffcc0b0>
   4c244:	9005883a 	mov	r2,r18
   4c248:	003fc706 	br	4c168 <__alt_data_end+0xfffcc168>
   4c24c:	a80b883a 	mov	r5,r21
   4c250:	9009883a 	mov	r4,r18
   4c254:	004bb880 	call	4bb88 <memmove>
   4c258:	003fc906 	br	4c180 <__alt_data_end+0xfffcc180>
   4c25c:	a8800217 	ldw	r2,8(r21)
   4c260:	b0800415 	stw	r2,16(r22)
   4c264:	a8800317 	ldw	r2,12(r21)
   4c268:	b0800515 	stw	r2,20(r22)
   4c26c:	31000726 	beq	r6,r4,4c28c <_realloc_r+0x548>
   4c270:	b0800604 	addi	r2,r22,24
   4c274:	ad400404 	addi	r21,r21,16
   4c278:	003fbb06 	br	4c168 <__alt_data_end+0xfffcc168>
   4c27c:	a009883a 	mov	r4,r20
   4c280:	004ec780 	call	4ec78 <__malloc_unlock>
   4c284:	0005883a 	mov	r2,zero
   4c288:	003f0a06 	br	4beb4 <__alt_data_end+0xfffcbeb4>
   4c28c:	a8c00417 	ldw	r3,16(r21)
   4c290:	ad400604 	addi	r21,r21,24
   4c294:	b0800804 	addi	r2,r22,32
   4c298:	b0c00615 	stw	r3,24(r22)
   4c29c:	a8ffff17 	ldw	r3,-4(r21)
   4c2a0:	b0c00715 	stw	r3,28(r22)
   4c2a4:	003fb006 	br	4c168 <__alt_data_end+0xfffcc168>

0004c2a8 <__swbuf_r>:
   4c2a8:	defffb04 	addi	sp,sp,-20
   4c2ac:	dcc00315 	stw	r19,12(sp)
   4c2b0:	dc800215 	stw	r18,8(sp)
   4c2b4:	dc000015 	stw	r16,0(sp)
   4c2b8:	dfc00415 	stw	ra,16(sp)
   4c2bc:	dc400115 	stw	r17,4(sp)
   4c2c0:	2025883a 	mov	r18,r4
   4c2c4:	2827883a 	mov	r19,r5
   4c2c8:	3021883a 	mov	r16,r6
   4c2cc:	20000226 	beq	r4,zero,4c2d8 <__swbuf_r+0x30>
   4c2d0:	20800e17 	ldw	r2,56(r4)
   4c2d4:	10004226 	beq	r2,zero,4c3e0 <__swbuf_r+0x138>
   4c2d8:	80800617 	ldw	r2,24(r16)
   4c2dc:	8100030b 	ldhu	r4,12(r16)
   4c2e0:	80800215 	stw	r2,8(r16)
   4c2e4:	2080020c 	andi	r2,r4,8
   4c2e8:	10003626 	beq	r2,zero,4c3c4 <__swbuf_r+0x11c>
   4c2ec:	80c00417 	ldw	r3,16(r16)
   4c2f0:	18003426 	beq	r3,zero,4c3c4 <__swbuf_r+0x11c>
   4c2f4:	2088000c 	andi	r2,r4,8192
   4c2f8:	9c403fcc 	andi	r17,r19,255
   4c2fc:	10001a26 	beq	r2,zero,4c368 <__swbuf_r+0xc0>
   4c300:	80800017 	ldw	r2,0(r16)
   4c304:	81000517 	ldw	r4,20(r16)
   4c308:	10c7c83a 	sub	r3,r2,r3
   4c30c:	1900200e 	bge	r3,r4,4c390 <__swbuf_r+0xe8>
   4c310:	18c00044 	addi	r3,r3,1
   4c314:	81000217 	ldw	r4,8(r16)
   4c318:	11400044 	addi	r5,r2,1
   4c31c:	81400015 	stw	r5,0(r16)
   4c320:	213fffc4 	addi	r4,r4,-1
   4c324:	81000215 	stw	r4,8(r16)
   4c328:	14c00005 	stb	r19,0(r2)
   4c32c:	80800517 	ldw	r2,20(r16)
   4c330:	10c01e26 	beq	r2,r3,4c3ac <__swbuf_r+0x104>
   4c334:	8080030b 	ldhu	r2,12(r16)
   4c338:	1080004c 	andi	r2,r2,1
   4c33c:	10000226 	beq	r2,zero,4c348 <__swbuf_r+0xa0>
   4c340:	00800284 	movi	r2,10
   4c344:	88801926 	beq	r17,r2,4c3ac <__swbuf_r+0x104>
   4c348:	8805883a 	mov	r2,r17
   4c34c:	dfc00417 	ldw	ra,16(sp)
   4c350:	dcc00317 	ldw	r19,12(sp)
   4c354:	dc800217 	ldw	r18,8(sp)
   4c358:	dc400117 	ldw	r17,4(sp)
   4c35c:	dc000017 	ldw	r16,0(sp)
   4c360:	dec00504 	addi	sp,sp,20
   4c364:	f800283a 	ret
   4c368:	81401917 	ldw	r5,100(r16)
   4c36c:	00b7ffc4 	movi	r2,-8193
   4c370:	21080014 	ori	r4,r4,8192
   4c374:	2884703a 	and	r2,r5,r2
   4c378:	80801915 	stw	r2,100(r16)
   4c37c:	80800017 	ldw	r2,0(r16)
   4c380:	8100030d 	sth	r4,12(r16)
   4c384:	81000517 	ldw	r4,20(r16)
   4c388:	10c7c83a 	sub	r3,r2,r3
   4c38c:	193fe016 	blt	r3,r4,4c310 <__alt_data_end+0xfffcc310>
   4c390:	800b883a 	mov	r5,r16
   4c394:	9009883a 	mov	r4,r18
   4c398:	0046f9c0 	call	46f9c <_fflush_r>
   4c39c:	1000071e 	bne	r2,zero,4c3bc <__swbuf_r+0x114>
   4c3a0:	80800017 	ldw	r2,0(r16)
   4c3a4:	00c00044 	movi	r3,1
   4c3a8:	003fda06 	br	4c314 <__alt_data_end+0xfffcc314>
   4c3ac:	800b883a 	mov	r5,r16
   4c3b0:	9009883a 	mov	r4,r18
   4c3b4:	0046f9c0 	call	46f9c <_fflush_r>
   4c3b8:	103fe326 	beq	r2,zero,4c348 <__alt_data_end+0xfffcc348>
   4c3bc:	00bfffc4 	movi	r2,-1
   4c3c0:	003fe206 	br	4c34c <__alt_data_end+0xfffcc34c>
   4c3c4:	800b883a 	mov	r5,r16
   4c3c8:	9009883a 	mov	r4,r18
   4c3cc:	00453a40 	call	453a4 <__swsetup_r>
   4c3d0:	103ffa1e 	bne	r2,zero,4c3bc <__alt_data_end+0xfffcc3bc>
   4c3d4:	8100030b 	ldhu	r4,12(r16)
   4c3d8:	80c00417 	ldw	r3,16(r16)
   4c3dc:	003fc506 	br	4c2f4 <__alt_data_end+0xfffcc2f4>
   4c3e0:	00473780 	call	47378 <__sinit>
   4c3e4:	003fbc06 	br	4c2d8 <__alt_data_end+0xfffcc2d8>

0004c3e8 <__swbuf>:
   4c3e8:	00800174 	movhi	r2,5
   4c3ec:	108b6e04 	addi	r2,r2,11704
   4c3f0:	280d883a 	mov	r6,r5
   4c3f4:	200b883a 	mov	r5,r4
   4c3f8:	11000017 	ldw	r4,0(r2)
   4c3fc:	004c2a81 	jmpi	4c2a8 <__swbuf_r>

0004c400 <_wcrtomb_r>:
   4c400:	defff604 	addi	sp,sp,-40
   4c404:	00800174 	movhi	r2,5
   4c408:	dc800815 	stw	r18,32(sp)
   4c40c:	dc400715 	stw	r17,28(sp)
   4c410:	dc000615 	stw	r16,24(sp)
   4c414:	108b7204 	addi	r2,r2,11720
   4c418:	dfc00915 	stw	ra,36(sp)
   4c41c:	2021883a 	mov	r16,r4
   4c420:	3823883a 	mov	r17,r7
   4c424:	14800017 	ldw	r18,0(r2)
   4c428:	28001426 	beq	r5,zero,4c47c <_wcrtomb_r+0x7c>
   4c42c:	d9400415 	stw	r5,16(sp)
   4c430:	d9800515 	stw	r6,20(sp)
   4c434:	0047a000 	call	47a00 <__locale_charset>
   4c438:	d9800517 	ldw	r6,20(sp)
   4c43c:	d9400417 	ldw	r5,16(sp)
   4c440:	100f883a 	mov	r7,r2
   4c444:	dc400015 	stw	r17,0(sp)
   4c448:	8009883a 	mov	r4,r16
   4c44c:	903ee83a 	callr	r18
   4c450:	00ffffc4 	movi	r3,-1
   4c454:	10c0031e 	bne	r2,r3,4c464 <_wcrtomb_r+0x64>
   4c458:	88000015 	stw	zero,0(r17)
   4c45c:	00c02284 	movi	r3,138
   4c460:	80c00015 	stw	r3,0(r16)
   4c464:	dfc00917 	ldw	ra,36(sp)
   4c468:	dc800817 	ldw	r18,32(sp)
   4c46c:	dc400717 	ldw	r17,28(sp)
   4c470:	dc000617 	ldw	r16,24(sp)
   4c474:	dec00a04 	addi	sp,sp,40
   4c478:	f800283a 	ret
   4c47c:	0047a000 	call	47a00 <__locale_charset>
   4c480:	100f883a 	mov	r7,r2
   4c484:	dc400015 	stw	r17,0(sp)
   4c488:	000d883a 	mov	r6,zero
   4c48c:	d9400104 	addi	r5,sp,4
   4c490:	8009883a 	mov	r4,r16
   4c494:	903ee83a 	callr	r18
   4c498:	003fed06 	br	4c450 <__alt_data_end+0xfffcc450>

0004c49c <wcrtomb>:
   4c49c:	defff604 	addi	sp,sp,-40
   4c4a0:	00800174 	movhi	r2,5
   4c4a4:	dc800615 	stw	r18,24(sp)
   4c4a8:	dc400515 	stw	r17,20(sp)
   4c4ac:	108b6e04 	addi	r2,r2,11704
   4c4b0:	dfc00915 	stw	ra,36(sp)
   4c4b4:	dd000815 	stw	r20,32(sp)
   4c4b8:	dcc00715 	stw	r19,28(sp)
   4c4bc:	dc000415 	stw	r16,16(sp)
   4c4c0:	3025883a 	mov	r18,r6
   4c4c4:	14400017 	ldw	r17,0(r2)
   4c4c8:	20001926 	beq	r4,zero,4c530 <wcrtomb+0x94>
   4c4cc:	00800174 	movhi	r2,5
   4c4d0:	108b7204 	addi	r2,r2,11720
   4c4d4:	15000017 	ldw	r20,0(r2)
   4c4d8:	2021883a 	mov	r16,r4
   4c4dc:	2827883a 	mov	r19,r5
   4c4e0:	0047a000 	call	47a00 <__locale_charset>
   4c4e4:	100f883a 	mov	r7,r2
   4c4e8:	dc800015 	stw	r18,0(sp)
   4c4ec:	980d883a 	mov	r6,r19
   4c4f0:	800b883a 	mov	r5,r16
   4c4f4:	8809883a 	mov	r4,r17
   4c4f8:	a03ee83a 	callr	r20
   4c4fc:	00ffffc4 	movi	r3,-1
   4c500:	10c0031e 	bne	r2,r3,4c510 <wcrtomb+0x74>
   4c504:	90000015 	stw	zero,0(r18)
   4c508:	00c02284 	movi	r3,138
   4c50c:	88c00015 	stw	r3,0(r17)
   4c510:	dfc00917 	ldw	ra,36(sp)
   4c514:	dd000817 	ldw	r20,32(sp)
   4c518:	dcc00717 	ldw	r19,28(sp)
   4c51c:	dc800617 	ldw	r18,24(sp)
   4c520:	dc400517 	ldw	r17,20(sp)
   4c524:	dc000417 	ldw	r16,16(sp)
   4c528:	dec00a04 	addi	sp,sp,40
   4c52c:	f800283a 	ret
   4c530:	00800174 	movhi	r2,5
   4c534:	108b7204 	addi	r2,r2,11720
   4c538:	14000017 	ldw	r16,0(r2)
   4c53c:	0047a000 	call	47a00 <__locale_charset>
   4c540:	100f883a 	mov	r7,r2
   4c544:	dc800015 	stw	r18,0(sp)
   4c548:	000d883a 	mov	r6,zero
   4c54c:	d9400104 	addi	r5,sp,4
   4c550:	8809883a 	mov	r4,r17
   4c554:	803ee83a 	callr	r16
   4c558:	003fe806 	br	4c4fc <__alt_data_end+0xfffcc4fc>

0004c55c <__ascii_wctomb>:
   4c55c:	28000526 	beq	r5,zero,4c574 <__ascii_wctomb+0x18>
   4c560:	00803fc4 	movi	r2,255
   4c564:	11800536 	bltu	r2,r6,4c57c <__ascii_wctomb+0x20>
   4c568:	29800005 	stb	r6,0(r5)
   4c56c:	00800044 	movi	r2,1
   4c570:	f800283a 	ret
   4c574:	0005883a 	mov	r2,zero
   4c578:	f800283a 	ret
   4c57c:	00802284 	movi	r2,138
   4c580:	20800015 	stw	r2,0(r4)
   4c584:	00bfffc4 	movi	r2,-1
   4c588:	f800283a 	ret

0004c58c <_wctomb_r>:
   4c58c:	00800174 	movhi	r2,5
   4c590:	defff904 	addi	sp,sp,-28
   4c594:	108b7204 	addi	r2,r2,11720
   4c598:	dfc00615 	stw	ra,24(sp)
   4c59c:	dc400515 	stw	r17,20(sp)
   4c5a0:	dc000415 	stw	r16,16(sp)
   4c5a4:	3823883a 	mov	r17,r7
   4c5a8:	14000017 	ldw	r16,0(r2)
   4c5ac:	d9000115 	stw	r4,4(sp)
   4c5b0:	d9400215 	stw	r5,8(sp)
   4c5b4:	d9800315 	stw	r6,12(sp)
   4c5b8:	0047a000 	call	47a00 <__locale_charset>
   4c5bc:	d9800317 	ldw	r6,12(sp)
   4c5c0:	d9400217 	ldw	r5,8(sp)
   4c5c4:	d9000117 	ldw	r4,4(sp)
   4c5c8:	100f883a 	mov	r7,r2
   4c5cc:	dc400015 	stw	r17,0(sp)
   4c5d0:	803ee83a 	callr	r16
   4c5d4:	dfc00617 	ldw	ra,24(sp)
   4c5d8:	dc400517 	ldw	r17,20(sp)
   4c5dc:	dc000417 	ldw	r16,16(sp)
   4c5e0:	dec00704 	addi	sp,sp,28
   4c5e4:	f800283a 	ret

0004c5e8 <__udivdi3>:
   4c5e8:	defff504 	addi	sp,sp,-44
   4c5ec:	dcc00415 	stw	r19,16(sp)
   4c5f0:	dc000115 	stw	r16,4(sp)
   4c5f4:	dfc00a15 	stw	ra,40(sp)
   4c5f8:	df000915 	stw	fp,36(sp)
   4c5fc:	ddc00815 	stw	r23,32(sp)
   4c600:	dd800715 	stw	r22,28(sp)
   4c604:	dd400615 	stw	r21,24(sp)
   4c608:	dd000515 	stw	r20,20(sp)
   4c60c:	dc800315 	stw	r18,12(sp)
   4c610:	dc400215 	stw	r17,8(sp)
   4c614:	2027883a 	mov	r19,r4
   4c618:	2821883a 	mov	r16,r5
   4c61c:	3800411e 	bne	r7,zero,4c724 <__udivdi3+0x13c>
   4c620:	3023883a 	mov	r17,r6
   4c624:	2025883a 	mov	r18,r4
   4c628:	2980522e 	bgeu	r5,r6,4c774 <__udivdi3+0x18c>
   4c62c:	00bfffd4 	movui	r2,65535
   4c630:	282d883a 	mov	r22,r5
   4c634:	1180a836 	bltu	r2,r6,4c8d8 <__udivdi3+0x2f0>
   4c638:	00803fc4 	movi	r2,255
   4c63c:	1185803a 	cmpltu	r2,r2,r6
   4c640:	100490fa 	slli	r2,r2,3
   4c644:	3086d83a 	srl	r3,r6,r2
   4c648:	01000174 	movhi	r4,5
   4c64c:	2103da84 	addi	r4,r4,3946
   4c650:	20c7883a 	add	r3,r4,r3
   4c654:	18c00003 	ldbu	r3,0(r3)
   4c658:	1885883a 	add	r2,r3,r2
   4c65c:	00c00804 	movi	r3,32
   4c660:	1887c83a 	sub	r3,r3,r2
   4c664:	18000526 	beq	r3,zero,4c67c <__udivdi3+0x94>
   4c668:	80e0983a 	sll	r16,r16,r3
   4c66c:	9884d83a 	srl	r2,r19,r2
   4c670:	30e2983a 	sll	r17,r6,r3
   4c674:	98e4983a 	sll	r18,r19,r3
   4c678:	142cb03a 	or	r22,r2,r16
   4c67c:	882ad43a 	srli	r21,r17,16
   4c680:	b009883a 	mov	r4,r22
   4c684:	8d3fffcc 	andi	r20,r17,65535
   4c688:	a80b883a 	mov	r5,r21
   4c68c:	0040b480 	call	40b48 <__umodsi3>
   4c690:	b009883a 	mov	r4,r22
   4c694:	a80b883a 	mov	r5,r21
   4c698:	1027883a 	mov	r19,r2
   4c69c:	0040ae40 	call	40ae4 <__udivsi3>
   4c6a0:	102d883a 	mov	r22,r2
   4c6a4:	9826943a 	slli	r19,r19,16
   4c6a8:	9004d43a 	srli	r2,r18,16
   4c6ac:	a5a1383a 	mul	r16,r20,r22
   4c6b0:	14c4b03a 	or	r2,r2,r19
   4c6b4:	1400052e 	bgeu	r2,r16,4c6cc <__udivdi3+0xe4>
   4c6b8:	1445883a 	add	r2,r2,r17
   4c6bc:	b0ffffc4 	addi	r3,r22,-1
   4c6c0:	14400136 	bltu	r2,r17,4c6c8 <__udivdi3+0xe0>
   4c6c4:	14012336 	bltu	r2,r16,4cb54 <__udivdi3+0x56c>
   4c6c8:	182d883a 	mov	r22,r3
   4c6cc:	1421c83a 	sub	r16,r2,r16
   4c6d0:	a80b883a 	mov	r5,r21
   4c6d4:	8009883a 	mov	r4,r16
   4c6d8:	0040b480 	call	40b48 <__umodsi3>
   4c6dc:	1027883a 	mov	r19,r2
   4c6e0:	a80b883a 	mov	r5,r21
   4c6e4:	8009883a 	mov	r4,r16
   4c6e8:	0040ae40 	call	40ae4 <__udivsi3>
   4c6ec:	9826943a 	slli	r19,r19,16
   4c6f0:	a0a9383a 	mul	r20,r20,r2
   4c6f4:	94bfffcc 	andi	r18,r18,65535
   4c6f8:	94e4b03a 	or	r18,r18,r19
   4c6fc:	9500052e 	bgeu	r18,r20,4c714 <__udivdi3+0x12c>
   4c700:	8ca5883a 	add	r18,r17,r18
   4c704:	10ffffc4 	addi	r3,r2,-1
   4c708:	9440f136 	bltu	r18,r17,4cad0 <__udivdi3+0x4e8>
   4c70c:	9500f02e 	bgeu	r18,r20,4cad0 <__udivdi3+0x4e8>
   4c710:	10bfff84 	addi	r2,r2,-2
   4c714:	b00c943a 	slli	r6,r22,16
   4c718:	0007883a 	mov	r3,zero
   4c71c:	3084b03a 	or	r2,r6,r2
   4c720:	00005906 	br	4c888 <__udivdi3+0x2a0>
   4c724:	29c05636 	bltu	r5,r7,4c880 <__udivdi3+0x298>
   4c728:	00bfffd4 	movui	r2,65535
   4c72c:	11c0622e 	bgeu	r2,r7,4c8b8 <__udivdi3+0x2d0>
   4c730:	00804034 	movhi	r2,256
   4c734:	10bfffc4 	addi	r2,r2,-1
   4c738:	11c0ee36 	bltu	r2,r7,4caf4 <__udivdi3+0x50c>
   4c73c:	00800404 	movi	r2,16
   4c740:	3886d83a 	srl	r3,r7,r2
   4c744:	01000174 	movhi	r4,5
   4c748:	2103da84 	addi	r4,r4,3946
   4c74c:	20c7883a 	add	r3,r4,r3
   4c750:	18c00003 	ldbu	r3,0(r3)
   4c754:	05400804 	movi	r21,32
   4c758:	1885883a 	add	r2,r3,r2
   4c75c:	a8abc83a 	sub	r21,r21,r2
   4c760:	a800621e 	bne	r21,zero,4c8ec <__udivdi3+0x304>
   4c764:	3c00e936 	bltu	r7,r16,4cb0c <__udivdi3+0x524>
   4c768:	9985403a 	cmpgeu	r2,r19,r6
   4c76c:	0007883a 	mov	r3,zero
   4c770:	00004506 	br	4c888 <__udivdi3+0x2a0>
   4c774:	3000041e 	bne	r6,zero,4c788 <__udivdi3+0x1a0>
   4c778:	000b883a 	mov	r5,zero
   4c77c:	01000044 	movi	r4,1
   4c780:	0040ae40 	call	40ae4 <__udivsi3>
   4c784:	1023883a 	mov	r17,r2
   4c788:	00bfffd4 	movui	r2,65535
   4c78c:	14404e2e 	bgeu	r2,r17,4c8c8 <__udivdi3+0x2e0>
   4c790:	00804034 	movhi	r2,256
   4c794:	10bfffc4 	addi	r2,r2,-1
   4c798:	1440d836 	bltu	r2,r17,4cafc <__udivdi3+0x514>
   4c79c:	00800404 	movi	r2,16
   4c7a0:	8886d83a 	srl	r3,r17,r2
   4c7a4:	01000174 	movhi	r4,5
   4c7a8:	2103da84 	addi	r4,r4,3946
   4c7ac:	20c7883a 	add	r3,r4,r3
   4c7b0:	18c00003 	ldbu	r3,0(r3)
   4c7b4:	1885883a 	add	r2,r3,r2
   4c7b8:	00c00804 	movi	r3,32
   4c7bc:	1887c83a 	sub	r3,r3,r2
   4c7c0:	18008f1e 	bne	r3,zero,4ca00 <__udivdi3+0x418>
   4c7c4:	882ad43a 	srli	r21,r17,16
   4c7c8:	8461c83a 	sub	r16,r16,r17
   4c7cc:	8d3fffcc 	andi	r20,r17,65535
   4c7d0:	00c00044 	movi	r3,1
   4c7d4:	8009883a 	mov	r4,r16
   4c7d8:	a80b883a 	mov	r5,r21
   4c7dc:	d8c00015 	stw	r3,0(sp)
   4c7e0:	0040b480 	call	40b48 <__umodsi3>
   4c7e4:	8009883a 	mov	r4,r16
   4c7e8:	a80b883a 	mov	r5,r21
   4c7ec:	1027883a 	mov	r19,r2
   4c7f0:	0040ae40 	call	40ae4 <__udivsi3>
   4c7f4:	9826943a 	slli	r19,r19,16
   4c7f8:	9008d43a 	srli	r4,r18,16
   4c7fc:	1521383a 	mul	r16,r2,r20
   4c800:	102d883a 	mov	r22,r2
   4c804:	24c8b03a 	or	r4,r4,r19
   4c808:	d8c00017 	ldw	r3,0(sp)
   4c80c:	2400052e 	bgeu	r4,r16,4c824 <__udivdi3+0x23c>
   4c810:	2449883a 	add	r4,r4,r17
   4c814:	b0bfffc4 	addi	r2,r22,-1
   4c818:	24400136 	bltu	r4,r17,4c820 <__udivdi3+0x238>
   4c81c:	2400ca36 	bltu	r4,r16,4cb48 <__udivdi3+0x560>
   4c820:	102d883a 	mov	r22,r2
   4c824:	2421c83a 	sub	r16,r4,r16
   4c828:	a80b883a 	mov	r5,r21
   4c82c:	8009883a 	mov	r4,r16
   4c830:	d8c00015 	stw	r3,0(sp)
   4c834:	0040b480 	call	40b48 <__umodsi3>
   4c838:	1027883a 	mov	r19,r2
   4c83c:	a80b883a 	mov	r5,r21
   4c840:	8009883a 	mov	r4,r16
   4c844:	0040ae40 	call	40ae4 <__udivsi3>
   4c848:	9826943a 	slli	r19,r19,16
   4c84c:	1529383a 	mul	r20,r2,r20
   4c850:	94bfffcc 	andi	r18,r18,65535
   4c854:	94e4b03a 	or	r18,r18,r19
   4c858:	d8c00017 	ldw	r3,0(sp)
   4c85c:	9500052e 	bgeu	r18,r20,4c874 <__udivdi3+0x28c>
   4c860:	8ca5883a 	add	r18,r17,r18
   4c864:	113fffc4 	addi	r4,r2,-1
   4c868:	94409736 	bltu	r18,r17,4cac8 <__udivdi3+0x4e0>
   4c86c:	9500962e 	bgeu	r18,r20,4cac8 <__udivdi3+0x4e0>
   4c870:	10bfff84 	addi	r2,r2,-2
   4c874:	b00c943a 	slli	r6,r22,16
   4c878:	3084b03a 	or	r2,r6,r2
   4c87c:	00000206 	br	4c888 <__udivdi3+0x2a0>
   4c880:	0007883a 	mov	r3,zero
   4c884:	0005883a 	mov	r2,zero
   4c888:	dfc00a17 	ldw	ra,40(sp)
   4c88c:	df000917 	ldw	fp,36(sp)
   4c890:	ddc00817 	ldw	r23,32(sp)
   4c894:	dd800717 	ldw	r22,28(sp)
   4c898:	dd400617 	ldw	r21,24(sp)
   4c89c:	dd000517 	ldw	r20,20(sp)
   4c8a0:	dcc00417 	ldw	r19,16(sp)
   4c8a4:	dc800317 	ldw	r18,12(sp)
   4c8a8:	dc400217 	ldw	r17,8(sp)
   4c8ac:	dc000117 	ldw	r16,4(sp)
   4c8b0:	dec00b04 	addi	sp,sp,44
   4c8b4:	f800283a 	ret
   4c8b8:	00803fc4 	movi	r2,255
   4c8bc:	11c5803a 	cmpltu	r2,r2,r7
   4c8c0:	100490fa 	slli	r2,r2,3
   4c8c4:	003f9e06 	br	4c740 <__alt_data_end+0xfffcc740>
   4c8c8:	00803fc4 	movi	r2,255
   4c8cc:	1445803a 	cmpltu	r2,r2,r17
   4c8d0:	100490fa 	slli	r2,r2,3
   4c8d4:	003fb206 	br	4c7a0 <__alt_data_end+0xfffcc7a0>
   4c8d8:	00804034 	movhi	r2,256
   4c8dc:	10bfffc4 	addi	r2,r2,-1
   4c8e0:	11808836 	bltu	r2,r6,4cb04 <__udivdi3+0x51c>
   4c8e4:	00800404 	movi	r2,16
   4c8e8:	003f5606 	br	4c644 <__alt_data_end+0xfffcc644>
   4c8ec:	30aed83a 	srl	r23,r6,r2
   4c8f0:	3d4e983a 	sll	r7,r7,r21
   4c8f4:	80acd83a 	srl	r22,r16,r2
   4c8f8:	9884d83a 	srl	r2,r19,r2
   4c8fc:	3deeb03a 	or	r23,r7,r23
   4c900:	b824d43a 	srli	r18,r23,16
   4c904:	8560983a 	sll	r16,r16,r21
   4c908:	b009883a 	mov	r4,r22
   4c90c:	900b883a 	mov	r5,r18
   4c910:	3568983a 	sll	r20,r6,r21
   4c914:	1420b03a 	or	r16,r2,r16
   4c918:	0040b480 	call	40b48 <__umodsi3>
   4c91c:	b009883a 	mov	r4,r22
   4c920:	900b883a 	mov	r5,r18
   4c924:	1023883a 	mov	r17,r2
   4c928:	0040ae40 	call	40ae4 <__udivsi3>
   4c92c:	8808943a 	slli	r4,r17,16
   4c930:	bf3fffcc 	andi	fp,r23,65535
   4c934:	8006d43a 	srli	r3,r16,16
   4c938:	e0a3383a 	mul	r17,fp,r2
   4c93c:	100d883a 	mov	r6,r2
   4c940:	1906b03a 	or	r3,r3,r4
   4c944:	1c40042e 	bgeu	r3,r17,4c958 <__udivdi3+0x370>
   4c948:	1dc7883a 	add	r3,r3,r23
   4c94c:	10bfffc4 	addi	r2,r2,-1
   4c950:	1dc0752e 	bgeu	r3,r23,4cb28 <__udivdi3+0x540>
   4c954:	100d883a 	mov	r6,r2
   4c958:	1c63c83a 	sub	r17,r3,r17
   4c95c:	900b883a 	mov	r5,r18
   4c960:	8809883a 	mov	r4,r17
   4c964:	d9800015 	stw	r6,0(sp)
   4c968:	0040b480 	call	40b48 <__umodsi3>
   4c96c:	102d883a 	mov	r22,r2
   4c970:	8809883a 	mov	r4,r17
   4c974:	900b883a 	mov	r5,r18
   4c978:	0040ae40 	call	40ae4 <__udivsi3>
   4c97c:	b02c943a 	slli	r22,r22,16
   4c980:	e089383a 	mul	r4,fp,r2
   4c984:	843fffcc 	andi	r16,r16,65535
   4c988:	85a0b03a 	or	r16,r16,r22
   4c98c:	d9800017 	ldw	r6,0(sp)
   4c990:	8100042e 	bgeu	r16,r4,4c9a4 <__udivdi3+0x3bc>
   4c994:	85e1883a 	add	r16,r16,r23
   4c998:	10ffffc4 	addi	r3,r2,-1
   4c99c:	85c05e2e 	bgeu	r16,r23,4cb18 <__udivdi3+0x530>
   4c9a0:	1805883a 	mov	r2,r3
   4c9a4:	300c943a 	slli	r6,r6,16
   4c9a8:	a17fffcc 	andi	r5,r20,65535
   4c9ac:	a028d43a 	srli	r20,r20,16
   4c9b0:	3084b03a 	or	r2,r6,r2
   4c9b4:	10ffffcc 	andi	r3,r2,65535
   4c9b8:	100cd43a 	srli	r6,r2,16
   4c9bc:	194f383a 	mul	r7,r3,r5
   4c9c0:	1d07383a 	mul	r3,r3,r20
   4c9c4:	314b383a 	mul	r5,r6,r5
   4c9c8:	3810d43a 	srli	r8,r7,16
   4c9cc:	8121c83a 	sub	r16,r16,r4
   4c9d0:	1947883a 	add	r3,r3,r5
   4c9d4:	40c7883a 	add	r3,r8,r3
   4c9d8:	350d383a 	mul	r6,r6,r20
   4c9dc:	1940022e 	bgeu	r3,r5,4c9e8 <__udivdi3+0x400>
   4c9e0:	01000074 	movhi	r4,1
   4c9e4:	310d883a 	add	r6,r6,r4
   4c9e8:	1828d43a 	srli	r20,r3,16
   4c9ec:	a18d883a 	add	r6,r20,r6
   4c9f0:	81803e36 	bltu	r16,r6,4caec <__udivdi3+0x504>
   4c9f4:	81803826 	beq	r16,r6,4cad8 <__udivdi3+0x4f0>
   4c9f8:	0007883a 	mov	r3,zero
   4c9fc:	003fa206 	br	4c888 <__alt_data_end+0xfffcc888>
   4ca00:	88e2983a 	sll	r17,r17,r3
   4ca04:	80a8d83a 	srl	r20,r16,r2
   4ca08:	80e0983a 	sll	r16,r16,r3
   4ca0c:	882ad43a 	srli	r21,r17,16
   4ca10:	9884d83a 	srl	r2,r19,r2
   4ca14:	a009883a 	mov	r4,r20
   4ca18:	a80b883a 	mov	r5,r21
   4ca1c:	142eb03a 	or	r23,r2,r16
   4ca20:	98e4983a 	sll	r18,r19,r3
   4ca24:	0040b480 	call	40b48 <__umodsi3>
   4ca28:	a009883a 	mov	r4,r20
   4ca2c:	a80b883a 	mov	r5,r21
   4ca30:	1021883a 	mov	r16,r2
   4ca34:	0040ae40 	call	40ae4 <__udivsi3>
   4ca38:	1039883a 	mov	fp,r2
   4ca3c:	8d3fffcc 	andi	r20,r17,65535
   4ca40:	8020943a 	slli	r16,r16,16
   4ca44:	b804d43a 	srli	r2,r23,16
   4ca48:	a72d383a 	mul	r22,r20,fp
   4ca4c:	1404b03a 	or	r2,r2,r16
   4ca50:	1580062e 	bgeu	r2,r22,4ca6c <__udivdi3+0x484>
   4ca54:	1445883a 	add	r2,r2,r17
   4ca58:	e0ffffc4 	addi	r3,fp,-1
   4ca5c:	14403836 	bltu	r2,r17,4cb40 <__udivdi3+0x558>
   4ca60:	1580372e 	bgeu	r2,r22,4cb40 <__udivdi3+0x558>
   4ca64:	e73fff84 	addi	fp,fp,-2
   4ca68:	1445883a 	add	r2,r2,r17
   4ca6c:	15adc83a 	sub	r22,r2,r22
   4ca70:	a80b883a 	mov	r5,r21
   4ca74:	b009883a 	mov	r4,r22
   4ca78:	0040b480 	call	40b48 <__umodsi3>
   4ca7c:	1027883a 	mov	r19,r2
   4ca80:	b009883a 	mov	r4,r22
   4ca84:	a80b883a 	mov	r5,r21
   4ca88:	0040ae40 	call	40ae4 <__udivsi3>
   4ca8c:	9826943a 	slli	r19,r19,16
   4ca90:	a0a1383a 	mul	r16,r20,r2
   4ca94:	b93fffcc 	andi	r4,r23,65535
   4ca98:	24c8b03a 	or	r4,r4,r19
   4ca9c:	2400062e 	bgeu	r4,r16,4cab8 <__udivdi3+0x4d0>
   4caa0:	2449883a 	add	r4,r4,r17
   4caa4:	10ffffc4 	addi	r3,r2,-1
   4caa8:	24402336 	bltu	r4,r17,4cb38 <__udivdi3+0x550>
   4caac:	2400222e 	bgeu	r4,r16,4cb38 <__udivdi3+0x550>
   4cab0:	10bfff84 	addi	r2,r2,-2
   4cab4:	2449883a 	add	r4,r4,r17
   4cab8:	e038943a 	slli	fp,fp,16
   4cabc:	2421c83a 	sub	r16,r4,r16
   4cac0:	e086b03a 	or	r3,fp,r2
   4cac4:	003f4306 	br	4c7d4 <__alt_data_end+0xfffcc7d4>
   4cac8:	2005883a 	mov	r2,r4
   4cacc:	003f6906 	br	4c874 <__alt_data_end+0xfffcc874>
   4cad0:	1805883a 	mov	r2,r3
   4cad4:	003f0f06 	br	4c714 <__alt_data_end+0xfffcc714>
   4cad8:	1806943a 	slli	r3,r3,16
   4cadc:	9d66983a 	sll	r19,r19,r21
   4cae0:	39ffffcc 	andi	r7,r7,65535
   4cae4:	19c7883a 	add	r3,r3,r7
   4cae8:	98ffc32e 	bgeu	r19,r3,4c9f8 <__alt_data_end+0xfffcc9f8>
   4caec:	10bfffc4 	addi	r2,r2,-1
   4caf0:	003fc106 	br	4c9f8 <__alt_data_end+0xfffcc9f8>
   4caf4:	00800604 	movi	r2,24
   4caf8:	003f1106 	br	4c740 <__alt_data_end+0xfffcc740>
   4cafc:	00800604 	movi	r2,24
   4cb00:	003f2706 	br	4c7a0 <__alt_data_end+0xfffcc7a0>
   4cb04:	00800604 	movi	r2,24
   4cb08:	003ece06 	br	4c644 <__alt_data_end+0xfffcc644>
   4cb0c:	0007883a 	mov	r3,zero
   4cb10:	00800044 	movi	r2,1
   4cb14:	003f5c06 	br	4c888 <__alt_data_end+0xfffcc888>
   4cb18:	813fa12e 	bgeu	r16,r4,4c9a0 <__alt_data_end+0xfffcc9a0>
   4cb1c:	10bfff84 	addi	r2,r2,-2
   4cb20:	85e1883a 	add	r16,r16,r23
   4cb24:	003f9f06 	br	4c9a4 <__alt_data_end+0xfffcc9a4>
   4cb28:	1c7f8a2e 	bgeu	r3,r17,4c954 <__alt_data_end+0xfffcc954>
   4cb2c:	31bfff84 	addi	r6,r6,-2
   4cb30:	1dc7883a 	add	r3,r3,r23
   4cb34:	003f8806 	br	4c958 <__alt_data_end+0xfffcc958>
   4cb38:	1805883a 	mov	r2,r3
   4cb3c:	003fde06 	br	4cab8 <__alt_data_end+0xfffccab8>
   4cb40:	1839883a 	mov	fp,r3
   4cb44:	003fc906 	br	4ca6c <__alt_data_end+0xfffcca6c>
   4cb48:	b5bfff84 	addi	r22,r22,-2
   4cb4c:	2449883a 	add	r4,r4,r17
   4cb50:	003f3406 	br	4c824 <__alt_data_end+0xfffcc824>
   4cb54:	b5bfff84 	addi	r22,r22,-2
   4cb58:	1445883a 	add	r2,r2,r17
   4cb5c:	003edb06 	br	4c6cc <__alt_data_end+0xfffcc6cc>

0004cb60 <__umoddi3>:
   4cb60:	defff404 	addi	sp,sp,-48
   4cb64:	df000a15 	stw	fp,40(sp)
   4cb68:	dc400315 	stw	r17,12(sp)
   4cb6c:	dc000215 	stw	r16,8(sp)
   4cb70:	dfc00b15 	stw	ra,44(sp)
   4cb74:	ddc00915 	stw	r23,36(sp)
   4cb78:	dd800815 	stw	r22,32(sp)
   4cb7c:	dd400715 	stw	r21,28(sp)
   4cb80:	dd000615 	stw	r20,24(sp)
   4cb84:	dcc00515 	stw	r19,20(sp)
   4cb88:	dc800415 	stw	r18,16(sp)
   4cb8c:	2021883a 	mov	r16,r4
   4cb90:	2823883a 	mov	r17,r5
   4cb94:	2839883a 	mov	fp,r5
   4cb98:	38003c1e 	bne	r7,zero,4cc8c <__umoddi3+0x12c>
   4cb9c:	3027883a 	mov	r19,r6
   4cba0:	2029883a 	mov	r20,r4
   4cba4:	2980512e 	bgeu	r5,r6,4ccec <__umoddi3+0x18c>
   4cba8:	00bfffd4 	movui	r2,65535
   4cbac:	11809a36 	bltu	r2,r6,4ce18 <__umoddi3+0x2b8>
   4cbb0:	01003fc4 	movi	r4,255
   4cbb4:	2189803a 	cmpltu	r4,r4,r6
   4cbb8:	200890fa 	slli	r4,r4,3
   4cbbc:	3104d83a 	srl	r2,r6,r4
   4cbc0:	00c00174 	movhi	r3,5
   4cbc4:	18c3da84 	addi	r3,r3,3946
   4cbc8:	1885883a 	add	r2,r3,r2
   4cbcc:	10c00003 	ldbu	r3,0(r2)
   4cbd0:	00800804 	movi	r2,32
   4cbd4:	1909883a 	add	r4,r3,r4
   4cbd8:	1125c83a 	sub	r18,r2,r4
   4cbdc:	90000526 	beq	r18,zero,4cbf4 <__umoddi3+0x94>
   4cbe0:	8ca2983a 	sll	r17,r17,r18
   4cbe4:	8108d83a 	srl	r4,r16,r4
   4cbe8:	34a6983a 	sll	r19,r6,r18
   4cbec:	84a8983a 	sll	r20,r16,r18
   4cbf0:	2478b03a 	or	fp,r4,r17
   4cbf4:	982ed43a 	srli	r23,r19,16
   4cbf8:	e009883a 	mov	r4,fp
   4cbfc:	9dbfffcc 	andi	r22,r19,65535
   4cc00:	b80b883a 	mov	r5,r23
   4cc04:	0040b480 	call	40b48 <__umodsi3>
   4cc08:	e009883a 	mov	r4,fp
   4cc0c:	b80b883a 	mov	r5,r23
   4cc10:	102b883a 	mov	r21,r2
   4cc14:	0040ae40 	call	40ae4 <__udivsi3>
   4cc18:	a806943a 	slli	r3,r21,16
   4cc1c:	a008d43a 	srli	r4,r20,16
   4cc20:	b085383a 	mul	r2,r22,r2
   4cc24:	20c8b03a 	or	r4,r4,r3
   4cc28:	2080032e 	bgeu	r4,r2,4cc38 <__umoddi3+0xd8>
   4cc2c:	24c9883a 	add	r4,r4,r19
   4cc30:	24c00136 	bltu	r4,r19,4cc38 <__umoddi3+0xd8>
   4cc34:	20811036 	bltu	r4,r2,4d078 <__umoddi3+0x518>
   4cc38:	20abc83a 	sub	r21,r4,r2
   4cc3c:	b80b883a 	mov	r5,r23
   4cc40:	a809883a 	mov	r4,r21
   4cc44:	0040b480 	call	40b48 <__umodsi3>
   4cc48:	1023883a 	mov	r17,r2
   4cc4c:	b80b883a 	mov	r5,r23
   4cc50:	a809883a 	mov	r4,r21
   4cc54:	0040ae40 	call	40ae4 <__udivsi3>
   4cc58:	8822943a 	slli	r17,r17,16
   4cc5c:	b085383a 	mul	r2,r22,r2
   4cc60:	a0ffffcc 	andi	r3,r20,65535
   4cc64:	1c46b03a 	or	r3,r3,r17
   4cc68:	1880042e 	bgeu	r3,r2,4cc7c <__umoddi3+0x11c>
   4cc6c:	1cc7883a 	add	r3,r3,r19
   4cc70:	1cc00236 	bltu	r3,r19,4cc7c <__umoddi3+0x11c>
   4cc74:	1880012e 	bgeu	r3,r2,4cc7c <__umoddi3+0x11c>
   4cc78:	1cc7883a 	add	r3,r3,r19
   4cc7c:	1885c83a 	sub	r2,r3,r2
   4cc80:	1484d83a 	srl	r2,r2,r18
   4cc84:	0007883a 	mov	r3,zero
   4cc88:	00004f06 	br	4cdc8 <__umoddi3+0x268>
   4cc8c:	29c04c36 	bltu	r5,r7,4cdc0 <__umoddi3+0x260>
   4cc90:	00bfffd4 	movui	r2,65535
   4cc94:	11c0582e 	bgeu	r2,r7,4cdf8 <__umoddi3+0x298>
   4cc98:	00804034 	movhi	r2,256
   4cc9c:	10bfffc4 	addi	r2,r2,-1
   4cca0:	11c0e736 	bltu	r2,r7,4d040 <__umoddi3+0x4e0>
   4cca4:	01000404 	movi	r4,16
   4cca8:	3904d83a 	srl	r2,r7,r4
   4ccac:	00c00174 	movhi	r3,5
   4ccb0:	18c3da84 	addi	r3,r3,3946
   4ccb4:	1885883a 	add	r2,r3,r2
   4ccb8:	14c00003 	ldbu	r19,0(r2)
   4ccbc:	00c00804 	movi	r3,32
   4ccc0:	9927883a 	add	r19,r19,r4
   4ccc4:	1ce9c83a 	sub	r20,r3,r19
   4ccc8:	a000581e 	bne	r20,zero,4ce2c <__umoddi3+0x2cc>
   4cccc:	3c400136 	bltu	r7,r17,4ccd4 <__umoddi3+0x174>
   4ccd0:	8180eb36 	bltu	r16,r6,4d080 <__umoddi3+0x520>
   4ccd4:	8185c83a 	sub	r2,r16,r6
   4ccd8:	89e3c83a 	sub	r17,r17,r7
   4ccdc:	8089803a 	cmpltu	r4,r16,r2
   4cce0:	8939c83a 	sub	fp,r17,r4
   4cce4:	e007883a 	mov	r3,fp
   4cce8:	00003706 	br	4cdc8 <__umoddi3+0x268>
   4ccec:	3000041e 	bne	r6,zero,4cd00 <__umoddi3+0x1a0>
   4ccf0:	000b883a 	mov	r5,zero
   4ccf4:	01000044 	movi	r4,1
   4ccf8:	0040ae40 	call	40ae4 <__udivsi3>
   4ccfc:	1027883a 	mov	r19,r2
   4cd00:	00bfffd4 	movui	r2,65535
   4cd04:	14c0402e 	bgeu	r2,r19,4ce08 <__umoddi3+0x2a8>
   4cd08:	00804034 	movhi	r2,256
   4cd0c:	10bfffc4 	addi	r2,r2,-1
   4cd10:	14c0cd36 	bltu	r2,r19,4d048 <__umoddi3+0x4e8>
   4cd14:	00800404 	movi	r2,16
   4cd18:	9886d83a 	srl	r3,r19,r2
   4cd1c:	01000174 	movhi	r4,5
   4cd20:	2103da84 	addi	r4,r4,3946
   4cd24:	20c7883a 	add	r3,r4,r3
   4cd28:	18c00003 	ldbu	r3,0(r3)
   4cd2c:	1887883a 	add	r3,r3,r2
   4cd30:	00800804 	movi	r2,32
   4cd34:	10e5c83a 	sub	r18,r2,r3
   4cd38:	9000901e 	bne	r18,zero,4cf7c <__umoddi3+0x41c>
   4cd3c:	982cd43a 	srli	r22,r19,16
   4cd40:	8ce3c83a 	sub	r17,r17,r19
   4cd44:	9d7fffcc 	andi	r21,r19,65535
   4cd48:	b00b883a 	mov	r5,r22
   4cd4c:	8809883a 	mov	r4,r17
   4cd50:	0040b480 	call	40b48 <__umodsi3>
   4cd54:	8809883a 	mov	r4,r17
   4cd58:	b00b883a 	mov	r5,r22
   4cd5c:	1021883a 	mov	r16,r2
   4cd60:	0040ae40 	call	40ae4 <__udivsi3>
   4cd64:	8006943a 	slli	r3,r16,16
   4cd68:	a008d43a 	srli	r4,r20,16
   4cd6c:	1545383a 	mul	r2,r2,r21
   4cd70:	20c8b03a 	or	r4,r4,r3
   4cd74:	2080042e 	bgeu	r4,r2,4cd88 <__umoddi3+0x228>
   4cd78:	24c9883a 	add	r4,r4,r19
   4cd7c:	24c00236 	bltu	r4,r19,4cd88 <__umoddi3+0x228>
   4cd80:	2080012e 	bgeu	r4,r2,4cd88 <__umoddi3+0x228>
   4cd84:	24c9883a 	add	r4,r4,r19
   4cd88:	20a1c83a 	sub	r16,r4,r2
   4cd8c:	b00b883a 	mov	r5,r22
   4cd90:	8009883a 	mov	r4,r16
   4cd94:	0040b480 	call	40b48 <__umodsi3>
   4cd98:	1023883a 	mov	r17,r2
   4cd9c:	b00b883a 	mov	r5,r22
   4cda0:	8009883a 	mov	r4,r16
   4cda4:	0040ae40 	call	40ae4 <__udivsi3>
   4cda8:	8822943a 	slli	r17,r17,16
   4cdac:	1545383a 	mul	r2,r2,r21
   4cdb0:	a53fffcc 	andi	r20,r20,65535
   4cdb4:	a446b03a 	or	r3,r20,r17
   4cdb8:	18bfb02e 	bgeu	r3,r2,4cc7c <__alt_data_end+0xfffccc7c>
   4cdbc:	003fab06 	br	4cc6c <__alt_data_end+0xfffccc6c>
   4cdc0:	2005883a 	mov	r2,r4
   4cdc4:	2807883a 	mov	r3,r5
   4cdc8:	dfc00b17 	ldw	ra,44(sp)
   4cdcc:	df000a17 	ldw	fp,40(sp)
   4cdd0:	ddc00917 	ldw	r23,36(sp)
   4cdd4:	dd800817 	ldw	r22,32(sp)
   4cdd8:	dd400717 	ldw	r21,28(sp)
   4cddc:	dd000617 	ldw	r20,24(sp)
   4cde0:	dcc00517 	ldw	r19,20(sp)
   4cde4:	dc800417 	ldw	r18,16(sp)
   4cde8:	dc400317 	ldw	r17,12(sp)
   4cdec:	dc000217 	ldw	r16,8(sp)
   4cdf0:	dec00c04 	addi	sp,sp,48
   4cdf4:	f800283a 	ret
   4cdf8:	04c03fc4 	movi	r19,255
   4cdfc:	99c9803a 	cmpltu	r4,r19,r7
   4ce00:	200890fa 	slli	r4,r4,3
   4ce04:	003fa806 	br	4cca8 <__alt_data_end+0xfffccca8>
   4ce08:	00803fc4 	movi	r2,255
   4ce0c:	14c5803a 	cmpltu	r2,r2,r19
   4ce10:	100490fa 	slli	r2,r2,3
   4ce14:	003fc006 	br	4cd18 <__alt_data_end+0xfffccd18>
   4ce18:	00804034 	movhi	r2,256
   4ce1c:	10bfffc4 	addi	r2,r2,-1
   4ce20:	11808b36 	bltu	r2,r6,4d050 <__umoddi3+0x4f0>
   4ce24:	01000404 	movi	r4,16
   4ce28:	003f6406 	br	4cbbc <__alt_data_end+0xfffccbbc>
   4ce2c:	34c4d83a 	srl	r2,r6,r19
   4ce30:	3d0e983a 	sll	r7,r7,r20
   4ce34:	8cf8d83a 	srl	fp,r17,r19
   4ce38:	8d10983a 	sll	r8,r17,r20
   4ce3c:	38aab03a 	or	r21,r7,r2
   4ce40:	a82cd43a 	srli	r22,r21,16
   4ce44:	84e2d83a 	srl	r17,r16,r19
   4ce48:	e009883a 	mov	r4,fp
   4ce4c:	b00b883a 	mov	r5,r22
   4ce50:	8a22b03a 	or	r17,r17,r8
   4ce54:	3524983a 	sll	r18,r6,r20
   4ce58:	0040b480 	call	40b48 <__umodsi3>
   4ce5c:	e009883a 	mov	r4,fp
   4ce60:	b00b883a 	mov	r5,r22
   4ce64:	102f883a 	mov	r23,r2
   4ce68:	0040ae40 	call	40ae4 <__udivsi3>
   4ce6c:	100d883a 	mov	r6,r2
   4ce70:	b808943a 	slli	r4,r23,16
   4ce74:	aa3fffcc 	andi	r8,r21,65535
   4ce78:	8804d43a 	srli	r2,r17,16
   4ce7c:	41af383a 	mul	r23,r8,r6
   4ce80:	8520983a 	sll	r16,r16,r20
   4ce84:	1104b03a 	or	r2,r2,r4
   4ce88:	15c0042e 	bgeu	r2,r23,4ce9c <__umoddi3+0x33c>
   4ce8c:	1545883a 	add	r2,r2,r21
   4ce90:	30ffffc4 	addi	r3,r6,-1
   4ce94:	1540742e 	bgeu	r2,r21,4d068 <__umoddi3+0x508>
   4ce98:	180d883a 	mov	r6,r3
   4ce9c:	15efc83a 	sub	r23,r2,r23
   4cea0:	b00b883a 	mov	r5,r22
   4cea4:	b809883a 	mov	r4,r23
   4cea8:	d9800115 	stw	r6,4(sp)
   4ceac:	da000015 	stw	r8,0(sp)
   4ceb0:	0040b480 	call	40b48 <__umodsi3>
   4ceb4:	b00b883a 	mov	r5,r22
   4ceb8:	b809883a 	mov	r4,r23
   4cebc:	1039883a 	mov	fp,r2
   4cec0:	0040ae40 	call	40ae4 <__udivsi3>
   4cec4:	da000017 	ldw	r8,0(sp)
   4cec8:	e038943a 	slli	fp,fp,16
   4cecc:	100b883a 	mov	r5,r2
   4ced0:	4089383a 	mul	r4,r8,r2
   4ced4:	8a3fffcc 	andi	r8,r17,65535
   4ced8:	4710b03a 	or	r8,r8,fp
   4cedc:	d9800117 	ldw	r6,4(sp)
   4cee0:	4100042e 	bgeu	r8,r4,4cef4 <__umoddi3+0x394>
   4cee4:	4551883a 	add	r8,r8,r21
   4cee8:	10bfffc4 	addi	r2,r2,-1
   4ceec:	45405a2e 	bgeu	r8,r21,4d058 <__umoddi3+0x4f8>
   4cef0:	100b883a 	mov	r5,r2
   4cef4:	300c943a 	slli	r6,r6,16
   4cef8:	91ffffcc 	andi	r7,r18,65535
   4cefc:	9004d43a 	srli	r2,r18,16
   4cf00:	314cb03a 	or	r6,r6,r5
   4cf04:	317fffcc 	andi	r5,r6,65535
   4cf08:	300cd43a 	srli	r6,r6,16
   4cf0c:	29d3383a 	mul	r9,r5,r7
   4cf10:	288b383a 	mul	r5,r5,r2
   4cf14:	31cf383a 	mul	r7,r6,r7
   4cf18:	4806d43a 	srli	r3,r9,16
   4cf1c:	4111c83a 	sub	r8,r8,r4
   4cf20:	29cb883a 	add	r5,r5,r7
   4cf24:	194b883a 	add	r5,r3,r5
   4cf28:	3085383a 	mul	r2,r6,r2
   4cf2c:	29c0022e 	bgeu	r5,r7,4cf38 <__umoddi3+0x3d8>
   4cf30:	00c00074 	movhi	r3,1
   4cf34:	10c5883a 	add	r2,r2,r3
   4cf38:	2808d43a 	srli	r4,r5,16
   4cf3c:	280a943a 	slli	r5,r5,16
   4cf40:	4a7fffcc 	andi	r9,r9,65535
   4cf44:	2085883a 	add	r2,r4,r2
   4cf48:	2a4b883a 	add	r5,r5,r9
   4cf4c:	40803636 	bltu	r8,r2,4d028 <__umoddi3+0x4c8>
   4cf50:	40804d26 	beq	r8,r2,4d088 <__umoddi3+0x528>
   4cf54:	4089c83a 	sub	r4,r8,r2
   4cf58:	280f883a 	mov	r7,r5
   4cf5c:	81cfc83a 	sub	r7,r16,r7
   4cf60:	81c7803a 	cmpltu	r3,r16,r7
   4cf64:	20c7c83a 	sub	r3,r4,r3
   4cf68:	1cc4983a 	sll	r2,r3,r19
   4cf6c:	3d0ed83a 	srl	r7,r7,r20
   4cf70:	1d06d83a 	srl	r3,r3,r20
   4cf74:	11c4b03a 	or	r2,r2,r7
   4cf78:	003f9306 	br	4cdc8 <__alt_data_end+0xfffccdc8>
   4cf7c:	9ca6983a 	sll	r19,r19,r18
   4cf80:	88e8d83a 	srl	r20,r17,r3
   4cf84:	80c4d83a 	srl	r2,r16,r3
   4cf88:	982cd43a 	srli	r22,r19,16
   4cf8c:	8ca2983a 	sll	r17,r17,r18
   4cf90:	a009883a 	mov	r4,r20
   4cf94:	b00b883a 	mov	r5,r22
   4cf98:	1478b03a 	or	fp,r2,r17
   4cf9c:	0040b480 	call	40b48 <__umodsi3>
   4cfa0:	a009883a 	mov	r4,r20
   4cfa4:	b00b883a 	mov	r5,r22
   4cfa8:	1023883a 	mov	r17,r2
   4cfac:	0040ae40 	call	40ae4 <__udivsi3>
   4cfb0:	9d7fffcc 	andi	r21,r19,65535
   4cfb4:	880a943a 	slli	r5,r17,16
   4cfb8:	e008d43a 	srli	r4,fp,16
   4cfbc:	a885383a 	mul	r2,r21,r2
   4cfc0:	84a8983a 	sll	r20,r16,r18
   4cfc4:	2148b03a 	or	r4,r4,r5
   4cfc8:	2080042e 	bgeu	r4,r2,4cfdc <__umoddi3+0x47c>
   4cfcc:	24c9883a 	add	r4,r4,r19
   4cfd0:	24c00236 	bltu	r4,r19,4cfdc <__umoddi3+0x47c>
   4cfd4:	2080012e 	bgeu	r4,r2,4cfdc <__umoddi3+0x47c>
   4cfd8:	24c9883a 	add	r4,r4,r19
   4cfdc:	20a3c83a 	sub	r17,r4,r2
   4cfe0:	b00b883a 	mov	r5,r22
   4cfe4:	8809883a 	mov	r4,r17
   4cfe8:	0040b480 	call	40b48 <__umodsi3>
   4cfec:	102f883a 	mov	r23,r2
   4cff0:	8809883a 	mov	r4,r17
   4cff4:	b00b883a 	mov	r5,r22
   4cff8:	0040ae40 	call	40ae4 <__udivsi3>
   4cffc:	b82e943a 	slli	r23,r23,16
   4d000:	a885383a 	mul	r2,r21,r2
   4d004:	e13fffcc 	andi	r4,fp,65535
   4d008:	25c8b03a 	or	r4,r4,r23
   4d00c:	2080042e 	bgeu	r4,r2,4d020 <__umoddi3+0x4c0>
   4d010:	24c9883a 	add	r4,r4,r19
   4d014:	24c00236 	bltu	r4,r19,4d020 <__umoddi3+0x4c0>
   4d018:	2080012e 	bgeu	r4,r2,4d020 <__umoddi3+0x4c0>
   4d01c:	24c9883a 	add	r4,r4,r19
   4d020:	20a3c83a 	sub	r17,r4,r2
   4d024:	003f4806 	br	4cd48 <__alt_data_end+0xfffccd48>
   4d028:	2c8fc83a 	sub	r7,r5,r18
   4d02c:	1545c83a 	sub	r2,r2,r21
   4d030:	29cb803a 	cmpltu	r5,r5,r7
   4d034:	1145c83a 	sub	r2,r2,r5
   4d038:	4089c83a 	sub	r4,r8,r2
   4d03c:	003fc706 	br	4cf5c <__alt_data_end+0xfffccf5c>
   4d040:	01000604 	movi	r4,24
   4d044:	003f1806 	br	4cca8 <__alt_data_end+0xfffccca8>
   4d048:	00800604 	movi	r2,24
   4d04c:	003f3206 	br	4cd18 <__alt_data_end+0xfffccd18>
   4d050:	01000604 	movi	r4,24
   4d054:	003ed906 	br	4cbbc <__alt_data_end+0xfffccbbc>
   4d058:	413fa52e 	bgeu	r8,r4,4cef0 <__alt_data_end+0xfffccef0>
   4d05c:	297fff84 	addi	r5,r5,-2
   4d060:	4551883a 	add	r8,r8,r21
   4d064:	003fa306 	br	4cef4 <__alt_data_end+0xfffccef4>
   4d068:	15ff8b2e 	bgeu	r2,r23,4ce98 <__alt_data_end+0xfffcce98>
   4d06c:	31bfff84 	addi	r6,r6,-2
   4d070:	1545883a 	add	r2,r2,r21
   4d074:	003f8906 	br	4ce9c <__alt_data_end+0xfffcce9c>
   4d078:	24c9883a 	add	r4,r4,r19
   4d07c:	003eee06 	br	4cc38 <__alt_data_end+0xfffccc38>
   4d080:	8005883a 	mov	r2,r16
   4d084:	003f1706 	br	4cce4 <__alt_data_end+0xfffccce4>
   4d088:	817fe736 	bltu	r16,r5,4d028 <__alt_data_end+0xfffcd028>
   4d08c:	280f883a 	mov	r7,r5
   4d090:	0009883a 	mov	r4,zero
   4d094:	003fb106 	br	4cf5c <__alt_data_end+0xfffccf5c>

0004d098 <__divdf3>:
   4d098:	defff204 	addi	sp,sp,-56
   4d09c:	dd400915 	stw	r21,36(sp)
   4d0a0:	282ad53a 	srli	r21,r5,20
   4d0a4:	dd000815 	stw	r20,32(sp)
   4d0a8:	2828d7fa 	srli	r20,r5,31
   4d0ac:	dc000415 	stw	r16,16(sp)
   4d0b0:	04000434 	movhi	r16,16
   4d0b4:	df000c15 	stw	fp,48(sp)
   4d0b8:	843fffc4 	addi	r16,r16,-1
   4d0bc:	dfc00d15 	stw	ra,52(sp)
   4d0c0:	ddc00b15 	stw	r23,44(sp)
   4d0c4:	dd800a15 	stw	r22,40(sp)
   4d0c8:	dcc00715 	stw	r19,28(sp)
   4d0cc:	dc800615 	stw	r18,24(sp)
   4d0d0:	dc400515 	stw	r17,20(sp)
   4d0d4:	ad41ffcc 	andi	r21,r21,2047
   4d0d8:	2c20703a 	and	r16,r5,r16
   4d0dc:	a7003fcc 	andi	fp,r20,255
   4d0e0:	a8006126 	beq	r21,zero,4d268 <__divdf3+0x1d0>
   4d0e4:	0081ffc4 	movi	r2,2047
   4d0e8:	2025883a 	mov	r18,r4
   4d0ec:	a8803726 	beq	r21,r2,4d1cc <__divdf3+0x134>
   4d0f0:	80800434 	orhi	r2,r16,16
   4d0f4:	100490fa 	slli	r2,r2,3
   4d0f8:	2020d77a 	srli	r16,r4,29
   4d0fc:	202490fa 	slli	r18,r4,3
   4d100:	ad7f0044 	addi	r21,r21,-1023
   4d104:	80a0b03a 	or	r16,r16,r2
   4d108:	0027883a 	mov	r19,zero
   4d10c:	0013883a 	mov	r9,zero
   4d110:	3804d53a 	srli	r2,r7,20
   4d114:	382cd7fa 	srli	r22,r7,31
   4d118:	04400434 	movhi	r17,16
   4d11c:	8c7fffc4 	addi	r17,r17,-1
   4d120:	1081ffcc 	andi	r2,r2,2047
   4d124:	3011883a 	mov	r8,r6
   4d128:	3c62703a 	and	r17,r7,r17
   4d12c:	b5c03fcc 	andi	r23,r22,255
   4d130:	10006c26 	beq	r2,zero,4d2e4 <__divdf3+0x24c>
   4d134:	00c1ffc4 	movi	r3,2047
   4d138:	10c06426 	beq	r2,r3,4d2cc <__divdf3+0x234>
   4d13c:	88c00434 	orhi	r3,r17,16
   4d140:	180690fa 	slli	r3,r3,3
   4d144:	3022d77a 	srli	r17,r6,29
   4d148:	301090fa 	slli	r8,r6,3
   4d14c:	10bf0044 	addi	r2,r2,-1023
   4d150:	88e2b03a 	or	r17,r17,r3
   4d154:	000f883a 	mov	r7,zero
   4d158:	a58cf03a 	xor	r6,r20,r22
   4d15c:	3cc8b03a 	or	r4,r7,r19
   4d160:	a8abc83a 	sub	r21,r21,r2
   4d164:	008003c4 	movi	r2,15
   4d168:	3007883a 	mov	r3,r6
   4d16c:	34c03fcc 	andi	r19,r6,255
   4d170:	11009036 	bltu	r2,r4,4d3b4 <__divdf3+0x31c>
   4d174:	200890ba 	slli	r4,r4,2
   4d178:	00800174 	movhi	r2,5
   4d17c:	10b46304 	addi	r2,r2,-11892
   4d180:	2089883a 	add	r4,r4,r2
   4d184:	20800017 	ldw	r2,0(r4)
   4d188:	1000683a 	jmp	r2
   4d18c:	0004d3b4 	movhi	zero,4942
   4d190:	0004d204 	movi	zero,4936
   4d194:	0004d3a4 	muli	zero,zero,4942
   4d198:	0004d1f8 	rdprs	zero,zero,4935
   4d19c:	0004d3a4 	muli	zero,zero,4942
   4d1a0:	0004d378 	rdprs	zero,zero,4941
   4d1a4:	0004d3a4 	muli	zero,zero,4942
   4d1a8:	0004d1f8 	rdprs	zero,zero,4935
   4d1ac:	0004d204 	movi	zero,4936
   4d1b0:	0004d204 	movi	zero,4936
   4d1b4:	0004d378 	rdprs	zero,zero,4941
   4d1b8:	0004d1f8 	rdprs	zero,zero,4935
   4d1bc:	0004d1e8 	cmpgeui	zero,zero,4935
   4d1c0:	0004d1e8 	cmpgeui	zero,zero,4935
   4d1c4:	0004d1e8 	cmpgeui	zero,zero,4935
   4d1c8:	0004d698 	cmpnei	zero,zero,4954
   4d1cc:	2404b03a 	or	r2,r4,r16
   4d1d0:	1000661e 	bne	r2,zero,4d36c <__divdf3+0x2d4>
   4d1d4:	04c00204 	movi	r19,8
   4d1d8:	0021883a 	mov	r16,zero
   4d1dc:	0025883a 	mov	r18,zero
   4d1e0:	02400084 	movi	r9,2
   4d1e4:	003fca06 	br	4d110 <__alt_data_end+0xfffcd110>
   4d1e8:	8023883a 	mov	r17,r16
   4d1ec:	9011883a 	mov	r8,r18
   4d1f0:	e02f883a 	mov	r23,fp
   4d1f4:	480f883a 	mov	r7,r9
   4d1f8:	00800084 	movi	r2,2
   4d1fc:	3881311e 	bne	r7,r2,4d6c4 <__divdf3+0x62c>
   4d200:	b827883a 	mov	r19,r23
   4d204:	98c0004c 	andi	r3,r19,1
   4d208:	0081ffc4 	movi	r2,2047
   4d20c:	000b883a 	mov	r5,zero
   4d210:	0025883a 	mov	r18,zero
   4d214:	1004953a 	slli	r2,r2,20
   4d218:	18c03fcc 	andi	r3,r3,255
   4d21c:	04400434 	movhi	r17,16
   4d220:	8c7fffc4 	addi	r17,r17,-1
   4d224:	180697fa 	slli	r3,r3,31
   4d228:	2c4a703a 	and	r5,r5,r17
   4d22c:	288ab03a 	or	r5,r5,r2
   4d230:	28c6b03a 	or	r3,r5,r3
   4d234:	9005883a 	mov	r2,r18
   4d238:	dfc00d17 	ldw	ra,52(sp)
   4d23c:	df000c17 	ldw	fp,48(sp)
   4d240:	ddc00b17 	ldw	r23,44(sp)
   4d244:	dd800a17 	ldw	r22,40(sp)
   4d248:	dd400917 	ldw	r21,36(sp)
   4d24c:	dd000817 	ldw	r20,32(sp)
   4d250:	dcc00717 	ldw	r19,28(sp)
   4d254:	dc800617 	ldw	r18,24(sp)
   4d258:	dc400517 	ldw	r17,20(sp)
   4d25c:	dc000417 	ldw	r16,16(sp)
   4d260:	dec00e04 	addi	sp,sp,56
   4d264:	f800283a 	ret
   4d268:	2404b03a 	or	r2,r4,r16
   4d26c:	2027883a 	mov	r19,r4
   4d270:	10003926 	beq	r2,zero,4d358 <__divdf3+0x2c0>
   4d274:	80012e26 	beq	r16,zero,4d730 <__divdf3+0x698>
   4d278:	8009883a 	mov	r4,r16
   4d27c:	d9800315 	stw	r6,12(sp)
   4d280:	d9c00215 	stw	r7,8(sp)
   4d284:	00430040 	call	43004 <__clzsi2>
   4d288:	d9800317 	ldw	r6,12(sp)
   4d28c:	d9c00217 	ldw	r7,8(sp)
   4d290:	113ffd44 	addi	r4,r2,-11
   4d294:	00c00704 	movi	r3,28
   4d298:	19012116 	blt	r3,r4,4d720 <__divdf3+0x688>
   4d29c:	00c00744 	movi	r3,29
   4d2a0:	147ffe04 	addi	r17,r2,-8
   4d2a4:	1907c83a 	sub	r3,r3,r4
   4d2a8:	8460983a 	sll	r16,r16,r17
   4d2ac:	98c6d83a 	srl	r3,r19,r3
   4d2b0:	9c64983a 	sll	r18,r19,r17
   4d2b4:	1c20b03a 	or	r16,r3,r16
   4d2b8:	1080fcc4 	addi	r2,r2,1011
   4d2bc:	00abc83a 	sub	r21,zero,r2
   4d2c0:	0027883a 	mov	r19,zero
   4d2c4:	0013883a 	mov	r9,zero
   4d2c8:	003f9106 	br	4d110 <__alt_data_end+0xfffcd110>
   4d2cc:	3446b03a 	or	r3,r6,r17
   4d2d0:	18001f1e 	bne	r3,zero,4d350 <__divdf3+0x2b8>
   4d2d4:	0023883a 	mov	r17,zero
   4d2d8:	0011883a 	mov	r8,zero
   4d2dc:	01c00084 	movi	r7,2
   4d2e0:	003f9d06 	br	4d158 <__alt_data_end+0xfffcd158>
   4d2e4:	3446b03a 	or	r3,r6,r17
   4d2e8:	18001526 	beq	r3,zero,4d340 <__divdf3+0x2a8>
   4d2ec:	88011b26 	beq	r17,zero,4d75c <__divdf3+0x6c4>
   4d2f0:	8809883a 	mov	r4,r17
   4d2f4:	d9800315 	stw	r6,12(sp)
   4d2f8:	da400115 	stw	r9,4(sp)
   4d2fc:	00430040 	call	43004 <__clzsi2>
   4d300:	d9800317 	ldw	r6,12(sp)
   4d304:	da400117 	ldw	r9,4(sp)
   4d308:	113ffd44 	addi	r4,r2,-11
   4d30c:	00c00704 	movi	r3,28
   4d310:	19010e16 	blt	r3,r4,4d74c <__divdf3+0x6b4>
   4d314:	00c00744 	movi	r3,29
   4d318:	123ffe04 	addi	r8,r2,-8
   4d31c:	1907c83a 	sub	r3,r3,r4
   4d320:	8a22983a 	sll	r17,r17,r8
   4d324:	30c6d83a 	srl	r3,r6,r3
   4d328:	3210983a 	sll	r8,r6,r8
   4d32c:	1c62b03a 	or	r17,r3,r17
   4d330:	1080fcc4 	addi	r2,r2,1011
   4d334:	0085c83a 	sub	r2,zero,r2
   4d338:	000f883a 	mov	r7,zero
   4d33c:	003f8606 	br	4d158 <__alt_data_end+0xfffcd158>
   4d340:	0023883a 	mov	r17,zero
   4d344:	0011883a 	mov	r8,zero
   4d348:	01c00044 	movi	r7,1
   4d34c:	003f8206 	br	4d158 <__alt_data_end+0xfffcd158>
   4d350:	01c000c4 	movi	r7,3
   4d354:	003f8006 	br	4d158 <__alt_data_end+0xfffcd158>
   4d358:	04c00104 	movi	r19,4
   4d35c:	0021883a 	mov	r16,zero
   4d360:	0025883a 	mov	r18,zero
   4d364:	02400044 	movi	r9,1
   4d368:	003f6906 	br	4d110 <__alt_data_end+0xfffcd110>
   4d36c:	04c00304 	movi	r19,12
   4d370:	024000c4 	movi	r9,3
   4d374:	003f6606 	br	4d110 <__alt_data_end+0xfffcd110>
   4d378:	01400434 	movhi	r5,16
   4d37c:	0007883a 	mov	r3,zero
   4d380:	297fffc4 	addi	r5,r5,-1
   4d384:	04bfffc4 	movi	r18,-1
   4d388:	0081ffc4 	movi	r2,2047
   4d38c:	003fa106 	br	4d214 <__alt_data_end+0xfffcd214>
   4d390:	00c00044 	movi	r3,1
   4d394:	1887c83a 	sub	r3,r3,r2
   4d398:	01000e04 	movi	r4,56
   4d39c:	20c1210e 	bge	r4,r3,4d824 <__divdf3+0x78c>
   4d3a0:	98c0004c 	andi	r3,r19,1
   4d3a4:	0005883a 	mov	r2,zero
   4d3a8:	000b883a 	mov	r5,zero
   4d3ac:	0025883a 	mov	r18,zero
   4d3b0:	003f9806 	br	4d214 <__alt_data_end+0xfffcd214>
   4d3b4:	8c00fd36 	bltu	r17,r16,4d7ac <__divdf3+0x714>
   4d3b8:	8440fb26 	beq	r16,r17,4d7a8 <__divdf3+0x710>
   4d3bc:	8007883a 	mov	r3,r16
   4d3c0:	ad7fffc4 	addi	r21,r21,-1
   4d3c4:	0021883a 	mov	r16,zero
   4d3c8:	4004d63a 	srli	r2,r8,24
   4d3cc:	8822923a 	slli	r17,r17,8
   4d3d0:	1809883a 	mov	r4,r3
   4d3d4:	402c923a 	slli	r22,r8,8
   4d3d8:	88b8b03a 	or	fp,r17,r2
   4d3dc:	e028d43a 	srli	r20,fp,16
   4d3e0:	d8c00015 	stw	r3,0(sp)
   4d3e4:	e5ffffcc 	andi	r23,fp,65535
   4d3e8:	a00b883a 	mov	r5,r20
   4d3ec:	0040ae40 	call	40ae4 <__udivsi3>
   4d3f0:	d8c00017 	ldw	r3,0(sp)
   4d3f4:	a00b883a 	mov	r5,r20
   4d3f8:	d8800315 	stw	r2,12(sp)
   4d3fc:	1809883a 	mov	r4,r3
   4d400:	0040b480 	call	40b48 <__umodsi3>
   4d404:	d9800317 	ldw	r6,12(sp)
   4d408:	1006943a 	slli	r3,r2,16
   4d40c:	9004d43a 	srli	r2,r18,16
   4d410:	b9a3383a 	mul	r17,r23,r6
   4d414:	10c4b03a 	or	r2,r2,r3
   4d418:	1440062e 	bgeu	r2,r17,4d434 <__divdf3+0x39c>
   4d41c:	1705883a 	add	r2,r2,fp
   4d420:	30ffffc4 	addi	r3,r6,-1
   4d424:	1700ee36 	bltu	r2,fp,4d7e0 <__divdf3+0x748>
   4d428:	1440ed2e 	bgeu	r2,r17,4d7e0 <__divdf3+0x748>
   4d42c:	31bfff84 	addi	r6,r6,-2
   4d430:	1705883a 	add	r2,r2,fp
   4d434:	1463c83a 	sub	r17,r2,r17
   4d438:	a00b883a 	mov	r5,r20
   4d43c:	8809883a 	mov	r4,r17
   4d440:	d9800315 	stw	r6,12(sp)
   4d444:	0040ae40 	call	40ae4 <__udivsi3>
   4d448:	a00b883a 	mov	r5,r20
   4d44c:	8809883a 	mov	r4,r17
   4d450:	d8800215 	stw	r2,8(sp)
   4d454:	0040b480 	call	40b48 <__umodsi3>
   4d458:	d9c00217 	ldw	r7,8(sp)
   4d45c:	1004943a 	slli	r2,r2,16
   4d460:	94bfffcc 	andi	r18,r18,65535
   4d464:	b9d1383a 	mul	r8,r23,r7
   4d468:	90a4b03a 	or	r18,r18,r2
   4d46c:	d9800317 	ldw	r6,12(sp)
   4d470:	9200062e 	bgeu	r18,r8,4d48c <__divdf3+0x3f4>
   4d474:	9725883a 	add	r18,r18,fp
   4d478:	38bfffc4 	addi	r2,r7,-1
   4d47c:	9700d636 	bltu	r18,fp,4d7d8 <__divdf3+0x740>
   4d480:	9200d52e 	bgeu	r18,r8,4d7d8 <__divdf3+0x740>
   4d484:	39ffff84 	addi	r7,r7,-2
   4d488:	9725883a 	add	r18,r18,fp
   4d48c:	3004943a 	slli	r2,r6,16
   4d490:	b012d43a 	srli	r9,r22,16
   4d494:	b1bfffcc 	andi	r6,r22,65535
   4d498:	11e2b03a 	or	r17,r2,r7
   4d49c:	8806d43a 	srli	r3,r17,16
   4d4a0:	893fffcc 	andi	r4,r17,65535
   4d4a4:	218b383a 	mul	r5,r4,r6
   4d4a8:	30c5383a 	mul	r2,r6,r3
   4d4ac:	2249383a 	mul	r4,r4,r9
   4d4b0:	280ed43a 	srli	r7,r5,16
   4d4b4:	9225c83a 	sub	r18,r18,r8
   4d4b8:	2089883a 	add	r4,r4,r2
   4d4bc:	3909883a 	add	r4,r7,r4
   4d4c0:	1a47383a 	mul	r3,r3,r9
   4d4c4:	2080022e 	bgeu	r4,r2,4d4d0 <__divdf3+0x438>
   4d4c8:	00800074 	movhi	r2,1
   4d4cc:	1887883a 	add	r3,r3,r2
   4d4d0:	2004d43a 	srli	r2,r4,16
   4d4d4:	2008943a 	slli	r4,r4,16
   4d4d8:	297fffcc 	andi	r5,r5,65535
   4d4dc:	10c7883a 	add	r3,r2,r3
   4d4e0:	2149883a 	add	r4,r4,r5
   4d4e4:	90c0a536 	bltu	r18,r3,4d77c <__divdf3+0x6e4>
   4d4e8:	90c0bf26 	beq	r18,r3,4d7e8 <__divdf3+0x750>
   4d4ec:	90c7c83a 	sub	r3,r18,r3
   4d4f0:	810fc83a 	sub	r7,r16,r4
   4d4f4:	81e5803a 	cmpltu	r18,r16,r7
   4d4f8:	1ca5c83a 	sub	r18,r3,r18
   4d4fc:	e480c126 	beq	fp,r18,4d804 <__divdf3+0x76c>
   4d500:	a00b883a 	mov	r5,r20
   4d504:	9009883a 	mov	r4,r18
   4d508:	d9800315 	stw	r6,12(sp)
   4d50c:	d9c00215 	stw	r7,8(sp)
   4d510:	da400115 	stw	r9,4(sp)
   4d514:	0040ae40 	call	40ae4 <__udivsi3>
   4d518:	a00b883a 	mov	r5,r20
   4d51c:	9009883a 	mov	r4,r18
   4d520:	d8800015 	stw	r2,0(sp)
   4d524:	0040b480 	call	40b48 <__umodsi3>
   4d528:	d9c00217 	ldw	r7,8(sp)
   4d52c:	da000017 	ldw	r8,0(sp)
   4d530:	1006943a 	slli	r3,r2,16
   4d534:	3804d43a 	srli	r2,r7,16
   4d538:	ba21383a 	mul	r16,r23,r8
   4d53c:	d9800317 	ldw	r6,12(sp)
   4d540:	10c4b03a 	or	r2,r2,r3
   4d544:	da400117 	ldw	r9,4(sp)
   4d548:	1400062e 	bgeu	r2,r16,4d564 <__divdf3+0x4cc>
   4d54c:	1705883a 	add	r2,r2,fp
   4d550:	40ffffc4 	addi	r3,r8,-1
   4d554:	1700ad36 	bltu	r2,fp,4d80c <__divdf3+0x774>
   4d558:	1400ac2e 	bgeu	r2,r16,4d80c <__divdf3+0x774>
   4d55c:	423fff84 	addi	r8,r8,-2
   4d560:	1705883a 	add	r2,r2,fp
   4d564:	1421c83a 	sub	r16,r2,r16
   4d568:	a00b883a 	mov	r5,r20
   4d56c:	8009883a 	mov	r4,r16
   4d570:	d9800315 	stw	r6,12(sp)
   4d574:	d9c00215 	stw	r7,8(sp)
   4d578:	da000015 	stw	r8,0(sp)
   4d57c:	da400115 	stw	r9,4(sp)
   4d580:	0040ae40 	call	40ae4 <__udivsi3>
   4d584:	8009883a 	mov	r4,r16
   4d588:	a00b883a 	mov	r5,r20
   4d58c:	1025883a 	mov	r18,r2
   4d590:	0040b480 	call	40b48 <__umodsi3>
   4d594:	d9c00217 	ldw	r7,8(sp)
   4d598:	1004943a 	slli	r2,r2,16
   4d59c:	bcaf383a 	mul	r23,r23,r18
   4d5a0:	393fffcc 	andi	r4,r7,65535
   4d5a4:	2088b03a 	or	r4,r4,r2
   4d5a8:	d9800317 	ldw	r6,12(sp)
   4d5ac:	da000017 	ldw	r8,0(sp)
   4d5b0:	da400117 	ldw	r9,4(sp)
   4d5b4:	25c0062e 	bgeu	r4,r23,4d5d0 <__divdf3+0x538>
   4d5b8:	2709883a 	add	r4,r4,fp
   4d5bc:	90bfffc4 	addi	r2,r18,-1
   4d5c0:	27009436 	bltu	r4,fp,4d814 <__divdf3+0x77c>
   4d5c4:	25c0932e 	bgeu	r4,r23,4d814 <__divdf3+0x77c>
   4d5c8:	94bfff84 	addi	r18,r18,-2
   4d5cc:	2709883a 	add	r4,r4,fp
   4d5d0:	4004943a 	slli	r2,r8,16
   4d5d4:	25efc83a 	sub	r23,r4,r23
   4d5d8:	1490b03a 	or	r8,r2,r18
   4d5dc:	4008d43a 	srli	r4,r8,16
   4d5e0:	40ffffcc 	andi	r3,r8,65535
   4d5e4:	30c5383a 	mul	r2,r6,r3
   4d5e8:	1a47383a 	mul	r3,r3,r9
   4d5ec:	310d383a 	mul	r6,r6,r4
   4d5f0:	100ad43a 	srli	r5,r2,16
   4d5f4:	4913383a 	mul	r9,r9,r4
   4d5f8:	1987883a 	add	r3,r3,r6
   4d5fc:	28c7883a 	add	r3,r5,r3
   4d600:	1980022e 	bgeu	r3,r6,4d60c <__divdf3+0x574>
   4d604:	01000074 	movhi	r4,1
   4d608:	4913883a 	add	r9,r9,r4
   4d60c:	1808d43a 	srli	r4,r3,16
   4d610:	1806943a 	slli	r3,r3,16
   4d614:	10bfffcc 	andi	r2,r2,65535
   4d618:	2253883a 	add	r9,r4,r9
   4d61c:	1887883a 	add	r3,r3,r2
   4d620:	ba403836 	bltu	r23,r9,4d704 <__divdf3+0x66c>
   4d624:	ba403626 	beq	r23,r9,4d700 <__divdf3+0x668>
   4d628:	42000054 	ori	r8,r8,1
   4d62c:	a880ffc4 	addi	r2,r21,1023
   4d630:	00bf570e 	bge	zero,r2,4d390 <__alt_data_end+0xfffcd390>
   4d634:	40c001cc 	andi	r3,r8,7
   4d638:	18000726 	beq	r3,zero,4d658 <__divdf3+0x5c0>
   4d63c:	40c003cc 	andi	r3,r8,15
   4d640:	01000104 	movi	r4,4
   4d644:	19000426 	beq	r3,r4,4d658 <__divdf3+0x5c0>
   4d648:	4107883a 	add	r3,r8,r4
   4d64c:	1a11803a 	cmpltu	r8,r3,r8
   4d650:	8a23883a 	add	r17,r17,r8
   4d654:	1811883a 	mov	r8,r3
   4d658:	88c0402c 	andhi	r3,r17,256
   4d65c:	18000426 	beq	r3,zero,4d670 <__divdf3+0x5d8>
   4d660:	00ffc034 	movhi	r3,65280
   4d664:	18ffffc4 	addi	r3,r3,-1
   4d668:	a8810004 	addi	r2,r21,1024
   4d66c:	88e2703a 	and	r17,r17,r3
   4d670:	00c1ff84 	movi	r3,2046
   4d674:	18bee316 	blt	r3,r2,4d204 <__alt_data_end+0xfffcd204>
   4d678:	8824977a 	slli	r18,r17,29
   4d67c:	4010d0fa 	srli	r8,r8,3
   4d680:	8822927a 	slli	r17,r17,9
   4d684:	1081ffcc 	andi	r2,r2,2047
   4d688:	9224b03a 	or	r18,r18,r8
   4d68c:	880ad33a 	srli	r5,r17,12
   4d690:	98c0004c 	andi	r3,r19,1
   4d694:	003edf06 	br	4d214 <__alt_data_end+0xfffcd214>
   4d698:	8080022c 	andhi	r2,r16,8
   4d69c:	10001226 	beq	r2,zero,4d6e8 <__divdf3+0x650>
   4d6a0:	8880022c 	andhi	r2,r17,8
   4d6a4:	1000101e 	bne	r2,zero,4d6e8 <__divdf3+0x650>
   4d6a8:	00800434 	movhi	r2,16
   4d6ac:	89400234 	orhi	r5,r17,8
   4d6b0:	10bfffc4 	addi	r2,r2,-1
   4d6b4:	b007883a 	mov	r3,r22
   4d6b8:	288a703a 	and	r5,r5,r2
   4d6bc:	4025883a 	mov	r18,r8
   4d6c0:	003f3106 	br	4d388 <__alt_data_end+0xfffcd388>
   4d6c4:	008000c4 	movi	r2,3
   4d6c8:	3880a626 	beq	r7,r2,4d964 <__divdf3+0x8cc>
   4d6cc:	00800044 	movi	r2,1
   4d6d0:	3880521e 	bne	r7,r2,4d81c <__divdf3+0x784>
   4d6d4:	b807883a 	mov	r3,r23
   4d6d8:	0005883a 	mov	r2,zero
   4d6dc:	000b883a 	mov	r5,zero
   4d6e0:	0025883a 	mov	r18,zero
   4d6e4:	003ecb06 	br	4d214 <__alt_data_end+0xfffcd214>
   4d6e8:	00800434 	movhi	r2,16
   4d6ec:	81400234 	orhi	r5,r16,8
   4d6f0:	10bfffc4 	addi	r2,r2,-1
   4d6f4:	a007883a 	mov	r3,r20
   4d6f8:	288a703a 	and	r5,r5,r2
   4d6fc:	003f2206 	br	4d388 <__alt_data_end+0xfffcd388>
   4d700:	183fca26 	beq	r3,zero,4d62c <__alt_data_end+0xfffcd62c>
   4d704:	e5ef883a 	add	r23,fp,r23
   4d708:	40bfffc4 	addi	r2,r8,-1
   4d70c:	bf00392e 	bgeu	r23,fp,4d7f4 <__divdf3+0x75c>
   4d710:	1011883a 	mov	r8,r2
   4d714:	ba7fc41e 	bne	r23,r9,4d628 <__alt_data_end+0xfffcd628>
   4d718:	b0ffc31e 	bne	r22,r3,4d628 <__alt_data_end+0xfffcd628>
   4d71c:	003fc306 	br	4d62c <__alt_data_end+0xfffcd62c>
   4d720:	143ff604 	addi	r16,r2,-40
   4d724:	9c20983a 	sll	r16,r19,r16
   4d728:	0025883a 	mov	r18,zero
   4d72c:	003ee206 	br	4d2b8 <__alt_data_end+0xfffcd2b8>
   4d730:	d9800315 	stw	r6,12(sp)
   4d734:	d9c00215 	stw	r7,8(sp)
   4d738:	00430040 	call	43004 <__clzsi2>
   4d73c:	10800804 	addi	r2,r2,32
   4d740:	d9c00217 	ldw	r7,8(sp)
   4d744:	d9800317 	ldw	r6,12(sp)
   4d748:	003ed106 	br	4d290 <__alt_data_end+0xfffcd290>
   4d74c:	147ff604 	addi	r17,r2,-40
   4d750:	3462983a 	sll	r17,r6,r17
   4d754:	0011883a 	mov	r8,zero
   4d758:	003ef506 	br	4d330 <__alt_data_end+0xfffcd330>
   4d75c:	3009883a 	mov	r4,r6
   4d760:	d9800315 	stw	r6,12(sp)
   4d764:	da400115 	stw	r9,4(sp)
   4d768:	00430040 	call	43004 <__clzsi2>
   4d76c:	10800804 	addi	r2,r2,32
   4d770:	da400117 	ldw	r9,4(sp)
   4d774:	d9800317 	ldw	r6,12(sp)
   4d778:	003ee306 	br	4d308 <__alt_data_end+0xfffcd308>
   4d77c:	85a1883a 	add	r16,r16,r22
   4d780:	8585803a 	cmpltu	r2,r16,r22
   4d784:	1705883a 	add	r2,r2,fp
   4d788:	14a5883a 	add	r18,r2,r18
   4d78c:	88bfffc4 	addi	r2,r17,-1
   4d790:	e4800c2e 	bgeu	fp,r18,4d7c4 <__divdf3+0x72c>
   4d794:	90c03e36 	bltu	r18,r3,4d890 <__divdf3+0x7f8>
   4d798:	1c806926 	beq	r3,r18,4d940 <__divdf3+0x8a8>
   4d79c:	90c7c83a 	sub	r3,r18,r3
   4d7a0:	1023883a 	mov	r17,r2
   4d7a4:	003f5206 	br	4d4f0 <__alt_data_end+0xfffcd4f0>
   4d7a8:	923f0436 	bltu	r18,r8,4d3bc <__alt_data_end+0xfffcd3bc>
   4d7ac:	800897fa 	slli	r4,r16,31
   4d7b0:	9004d07a 	srli	r2,r18,1
   4d7b4:	8006d07a 	srli	r3,r16,1
   4d7b8:	902097fa 	slli	r16,r18,31
   4d7bc:	20a4b03a 	or	r18,r4,r2
   4d7c0:	003f0106 	br	4d3c8 <__alt_data_end+0xfffcd3c8>
   4d7c4:	e4bff51e 	bne	fp,r18,4d79c <__alt_data_end+0xfffcd79c>
   4d7c8:	85bff22e 	bgeu	r16,r22,4d794 <__alt_data_end+0xfffcd794>
   4d7cc:	e0c7c83a 	sub	r3,fp,r3
   4d7d0:	1023883a 	mov	r17,r2
   4d7d4:	003f4606 	br	4d4f0 <__alt_data_end+0xfffcd4f0>
   4d7d8:	100f883a 	mov	r7,r2
   4d7dc:	003f2b06 	br	4d48c <__alt_data_end+0xfffcd48c>
   4d7e0:	180d883a 	mov	r6,r3
   4d7e4:	003f1306 	br	4d434 <__alt_data_end+0xfffcd434>
   4d7e8:	813fe436 	bltu	r16,r4,4d77c <__alt_data_end+0xfffcd77c>
   4d7ec:	0007883a 	mov	r3,zero
   4d7f0:	003f3f06 	br	4d4f0 <__alt_data_end+0xfffcd4f0>
   4d7f4:	ba402c36 	bltu	r23,r9,4d8a8 <__divdf3+0x810>
   4d7f8:	4dc05426 	beq	r9,r23,4d94c <__divdf3+0x8b4>
   4d7fc:	1011883a 	mov	r8,r2
   4d800:	003f8906 	br	4d628 <__alt_data_end+0xfffcd628>
   4d804:	023fffc4 	movi	r8,-1
   4d808:	003f8806 	br	4d62c <__alt_data_end+0xfffcd62c>
   4d80c:	1811883a 	mov	r8,r3
   4d810:	003f5406 	br	4d564 <__alt_data_end+0xfffcd564>
   4d814:	1025883a 	mov	r18,r2
   4d818:	003f6d06 	br	4d5d0 <__alt_data_end+0xfffcd5d0>
   4d81c:	b827883a 	mov	r19,r23
   4d820:	003f8206 	br	4d62c <__alt_data_end+0xfffcd62c>
   4d824:	010007c4 	movi	r4,31
   4d828:	20c02616 	blt	r4,r3,4d8c4 <__divdf3+0x82c>
   4d82c:	00800804 	movi	r2,32
   4d830:	10c5c83a 	sub	r2,r2,r3
   4d834:	888a983a 	sll	r5,r17,r2
   4d838:	40c8d83a 	srl	r4,r8,r3
   4d83c:	4084983a 	sll	r2,r8,r2
   4d840:	88e2d83a 	srl	r17,r17,r3
   4d844:	2906b03a 	or	r3,r5,r4
   4d848:	1004c03a 	cmpne	r2,r2,zero
   4d84c:	1886b03a 	or	r3,r3,r2
   4d850:	188001cc 	andi	r2,r3,7
   4d854:	10000726 	beq	r2,zero,4d874 <__divdf3+0x7dc>
   4d858:	188003cc 	andi	r2,r3,15
   4d85c:	01000104 	movi	r4,4
   4d860:	11000426 	beq	r2,r4,4d874 <__divdf3+0x7dc>
   4d864:	1805883a 	mov	r2,r3
   4d868:	10c00104 	addi	r3,r2,4
   4d86c:	1885803a 	cmpltu	r2,r3,r2
   4d870:	88a3883a 	add	r17,r17,r2
   4d874:	8880202c 	andhi	r2,r17,128
   4d878:	10002726 	beq	r2,zero,4d918 <__divdf3+0x880>
   4d87c:	98c0004c 	andi	r3,r19,1
   4d880:	00800044 	movi	r2,1
   4d884:	000b883a 	mov	r5,zero
   4d888:	0025883a 	mov	r18,zero
   4d88c:	003e6106 	br	4d214 <__alt_data_end+0xfffcd214>
   4d890:	85a1883a 	add	r16,r16,r22
   4d894:	8585803a 	cmpltu	r2,r16,r22
   4d898:	1705883a 	add	r2,r2,fp
   4d89c:	14a5883a 	add	r18,r2,r18
   4d8a0:	8c7fff84 	addi	r17,r17,-2
   4d8a4:	003f1106 	br	4d4ec <__alt_data_end+0xfffcd4ec>
   4d8a8:	b589883a 	add	r4,r22,r22
   4d8ac:	25ad803a 	cmpltu	r22,r4,r22
   4d8b0:	b739883a 	add	fp,r22,fp
   4d8b4:	40bfff84 	addi	r2,r8,-2
   4d8b8:	bf2f883a 	add	r23,r23,fp
   4d8bc:	202d883a 	mov	r22,r4
   4d8c0:	003f9306 	br	4d710 <__alt_data_end+0xfffcd710>
   4d8c4:	013ff844 	movi	r4,-31
   4d8c8:	2085c83a 	sub	r2,r4,r2
   4d8cc:	8888d83a 	srl	r4,r17,r2
   4d8d0:	00800804 	movi	r2,32
   4d8d4:	18802126 	beq	r3,r2,4d95c <__divdf3+0x8c4>
   4d8d8:	00801004 	movi	r2,64
   4d8dc:	10c5c83a 	sub	r2,r2,r3
   4d8e0:	8884983a 	sll	r2,r17,r2
   4d8e4:	1204b03a 	or	r2,r2,r8
   4d8e8:	1004c03a 	cmpne	r2,r2,zero
   4d8ec:	2084b03a 	or	r2,r4,r2
   4d8f0:	144001cc 	andi	r17,r2,7
   4d8f4:	88000d1e 	bne	r17,zero,4d92c <__divdf3+0x894>
   4d8f8:	000b883a 	mov	r5,zero
   4d8fc:	1024d0fa 	srli	r18,r2,3
   4d900:	98c0004c 	andi	r3,r19,1
   4d904:	0005883a 	mov	r2,zero
   4d908:	9464b03a 	or	r18,r18,r17
   4d90c:	003e4106 	br	4d214 <__alt_data_end+0xfffcd214>
   4d910:	1007883a 	mov	r3,r2
   4d914:	0023883a 	mov	r17,zero
   4d918:	880a927a 	slli	r5,r17,9
   4d91c:	1805883a 	mov	r2,r3
   4d920:	8822977a 	slli	r17,r17,29
   4d924:	280ad33a 	srli	r5,r5,12
   4d928:	003ff406 	br	4d8fc <__alt_data_end+0xfffcd8fc>
   4d92c:	10c003cc 	andi	r3,r2,15
   4d930:	01000104 	movi	r4,4
   4d934:	193ff626 	beq	r3,r4,4d910 <__alt_data_end+0xfffcd910>
   4d938:	0023883a 	mov	r17,zero
   4d93c:	003fca06 	br	4d868 <__alt_data_end+0xfffcd868>
   4d940:	813fd336 	bltu	r16,r4,4d890 <__alt_data_end+0xfffcd890>
   4d944:	1023883a 	mov	r17,r2
   4d948:	003fa806 	br	4d7ec <__alt_data_end+0xfffcd7ec>
   4d94c:	b0ffd636 	bltu	r22,r3,4d8a8 <__alt_data_end+0xfffcd8a8>
   4d950:	1011883a 	mov	r8,r2
   4d954:	b0ff341e 	bne	r22,r3,4d628 <__alt_data_end+0xfffcd628>
   4d958:	003f3406 	br	4d62c <__alt_data_end+0xfffcd62c>
   4d95c:	0005883a 	mov	r2,zero
   4d960:	003fe006 	br	4d8e4 <__alt_data_end+0xfffcd8e4>
   4d964:	00800434 	movhi	r2,16
   4d968:	89400234 	orhi	r5,r17,8
   4d96c:	10bfffc4 	addi	r2,r2,-1
   4d970:	b807883a 	mov	r3,r23
   4d974:	288a703a 	and	r5,r5,r2
   4d978:	4025883a 	mov	r18,r8
   4d97c:	003e8206 	br	4d388 <__alt_data_end+0xfffcd388>

0004d980 <__eqdf2>:
   4d980:	2804d53a 	srli	r2,r5,20
   4d984:	3806d53a 	srli	r3,r7,20
   4d988:	02000434 	movhi	r8,16
   4d98c:	423fffc4 	addi	r8,r8,-1
   4d990:	1081ffcc 	andi	r2,r2,2047
   4d994:	0281ffc4 	movi	r10,2047
   4d998:	2a12703a 	and	r9,r5,r8
   4d99c:	18c1ffcc 	andi	r3,r3,2047
   4d9a0:	3a10703a 	and	r8,r7,r8
   4d9a4:	280ad7fa 	srli	r5,r5,31
   4d9a8:	380ed7fa 	srli	r7,r7,31
   4d9ac:	12801026 	beq	r2,r10,4d9f0 <__eqdf2+0x70>
   4d9b0:	0281ffc4 	movi	r10,2047
   4d9b4:	1a800a26 	beq	r3,r10,4d9e0 <__eqdf2+0x60>
   4d9b8:	10c00226 	beq	r2,r3,4d9c4 <__eqdf2+0x44>
   4d9bc:	00800044 	movi	r2,1
   4d9c0:	f800283a 	ret
   4d9c4:	4a3ffd1e 	bne	r9,r8,4d9bc <__alt_data_end+0xfffcd9bc>
   4d9c8:	21bffc1e 	bne	r4,r6,4d9bc <__alt_data_end+0xfffcd9bc>
   4d9cc:	29c00c26 	beq	r5,r7,4da00 <__eqdf2+0x80>
   4d9d0:	103ffa1e 	bne	r2,zero,4d9bc <__alt_data_end+0xfffcd9bc>
   4d9d4:	2244b03a 	or	r2,r4,r9
   4d9d8:	1004c03a 	cmpne	r2,r2,zero
   4d9dc:	f800283a 	ret
   4d9e0:	3214b03a 	or	r10,r6,r8
   4d9e4:	503ff426 	beq	r10,zero,4d9b8 <__alt_data_end+0xfffcd9b8>
   4d9e8:	00800044 	movi	r2,1
   4d9ec:	f800283a 	ret
   4d9f0:	2254b03a 	or	r10,r4,r9
   4d9f4:	503fee26 	beq	r10,zero,4d9b0 <__alt_data_end+0xfffcd9b0>
   4d9f8:	00800044 	movi	r2,1
   4d9fc:	f800283a 	ret
   4da00:	0005883a 	mov	r2,zero
   4da04:	f800283a 	ret

0004da08 <__gedf2>:
   4da08:	2804d53a 	srli	r2,r5,20
   4da0c:	3806d53a 	srli	r3,r7,20
   4da10:	02000434 	movhi	r8,16
   4da14:	423fffc4 	addi	r8,r8,-1
   4da18:	1081ffcc 	andi	r2,r2,2047
   4da1c:	0241ffc4 	movi	r9,2047
   4da20:	2a14703a 	and	r10,r5,r8
   4da24:	18c1ffcc 	andi	r3,r3,2047
   4da28:	3a10703a 	and	r8,r7,r8
   4da2c:	280ad7fa 	srli	r5,r5,31
   4da30:	380ed7fa 	srli	r7,r7,31
   4da34:	12401d26 	beq	r2,r9,4daac <__gedf2+0xa4>
   4da38:	0241ffc4 	movi	r9,2047
   4da3c:	1a401226 	beq	r3,r9,4da88 <__gedf2+0x80>
   4da40:	1000081e 	bne	r2,zero,4da64 <__gedf2+0x5c>
   4da44:	2296b03a 	or	r11,r4,r10
   4da48:	5813003a 	cmpeq	r9,r11,zero
   4da4c:	1800091e 	bne	r3,zero,4da74 <__gedf2+0x6c>
   4da50:	3218b03a 	or	r12,r6,r8
   4da54:	6000071e 	bne	r12,zero,4da74 <__gedf2+0x6c>
   4da58:	0005883a 	mov	r2,zero
   4da5c:	5800101e 	bne	r11,zero,4daa0 <__gedf2+0x98>
   4da60:	f800283a 	ret
   4da64:	18000c1e 	bne	r3,zero,4da98 <__gedf2+0x90>
   4da68:	3212b03a 	or	r9,r6,r8
   4da6c:	48000c26 	beq	r9,zero,4daa0 <__gedf2+0x98>
   4da70:	0013883a 	mov	r9,zero
   4da74:	39c03fcc 	andi	r7,r7,255
   4da78:	48000826 	beq	r9,zero,4da9c <__gedf2+0x94>
   4da7c:	38000926 	beq	r7,zero,4daa4 <__gedf2+0x9c>
   4da80:	00800044 	movi	r2,1
   4da84:	f800283a 	ret
   4da88:	3212b03a 	or	r9,r6,r8
   4da8c:	483fec26 	beq	r9,zero,4da40 <__alt_data_end+0xfffcda40>
   4da90:	00bfff84 	movi	r2,-2
   4da94:	f800283a 	ret
   4da98:	39c03fcc 	andi	r7,r7,255
   4da9c:	29c00626 	beq	r5,r7,4dab8 <__gedf2+0xb0>
   4daa0:	283ff726 	beq	r5,zero,4da80 <__alt_data_end+0xfffcda80>
   4daa4:	00bfffc4 	movi	r2,-1
   4daa8:	f800283a 	ret
   4daac:	2292b03a 	or	r9,r4,r10
   4dab0:	483fe126 	beq	r9,zero,4da38 <__alt_data_end+0xfffcda38>
   4dab4:	003ff606 	br	4da90 <__alt_data_end+0xfffcda90>
   4dab8:	18bff916 	blt	r3,r2,4daa0 <__alt_data_end+0xfffcdaa0>
   4dabc:	10c00316 	blt	r2,r3,4dacc <__gedf2+0xc4>
   4dac0:	42bff736 	bltu	r8,r10,4daa0 <__alt_data_end+0xfffcdaa0>
   4dac4:	52000326 	beq	r10,r8,4dad4 <__gedf2+0xcc>
   4dac8:	5200042e 	bgeu	r10,r8,4dadc <__gedf2+0xd4>
   4dacc:	283fec1e 	bne	r5,zero,4da80 <__alt_data_end+0xfffcda80>
   4dad0:	003ff406 	br	4daa4 <__alt_data_end+0xfffcdaa4>
   4dad4:	313ff236 	bltu	r6,r4,4daa0 <__alt_data_end+0xfffcdaa0>
   4dad8:	21bffc36 	bltu	r4,r6,4dacc <__alt_data_end+0xfffcdacc>
   4dadc:	0005883a 	mov	r2,zero
   4dae0:	f800283a 	ret

0004dae4 <__ledf2>:
   4dae4:	2804d53a 	srli	r2,r5,20
   4dae8:	3810d53a 	srli	r8,r7,20
   4daec:	00c00434 	movhi	r3,16
   4daf0:	18ffffc4 	addi	r3,r3,-1
   4daf4:	1081ffcc 	andi	r2,r2,2047
   4daf8:	0241ffc4 	movi	r9,2047
   4dafc:	28d4703a 	and	r10,r5,r3
   4db00:	4201ffcc 	andi	r8,r8,2047
   4db04:	38c6703a 	and	r3,r7,r3
   4db08:	280ad7fa 	srli	r5,r5,31
   4db0c:	380ed7fa 	srli	r7,r7,31
   4db10:	12401f26 	beq	r2,r9,4db90 <__ledf2+0xac>
   4db14:	0241ffc4 	movi	r9,2047
   4db18:	42401426 	beq	r8,r9,4db6c <__ledf2+0x88>
   4db1c:	1000091e 	bne	r2,zero,4db44 <__ledf2+0x60>
   4db20:	2296b03a 	or	r11,r4,r10
   4db24:	5813003a 	cmpeq	r9,r11,zero
   4db28:	29403fcc 	andi	r5,r5,255
   4db2c:	40000a1e 	bne	r8,zero,4db58 <__ledf2+0x74>
   4db30:	30d8b03a 	or	r12,r6,r3
   4db34:	6000081e 	bne	r12,zero,4db58 <__ledf2+0x74>
   4db38:	0005883a 	mov	r2,zero
   4db3c:	5800111e 	bne	r11,zero,4db84 <__ledf2+0xa0>
   4db40:	f800283a 	ret
   4db44:	29403fcc 	andi	r5,r5,255
   4db48:	40000c1e 	bne	r8,zero,4db7c <__ledf2+0x98>
   4db4c:	30d2b03a 	or	r9,r6,r3
   4db50:	48000c26 	beq	r9,zero,4db84 <__ledf2+0xa0>
   4db54:	0013883a 	mov	r9,zero
   4db58:	39c03fcc 	andi	r7,r7,255
   4db5c:	48000826 	beq	r9,zero,4db80 <__ledf2+0x9c>
   4db60:	38001126 	beq	r7,zero,4dba8 <__ledf2+0xc4>
   4db64:	00800044 	movi	r2,1
   4db68:	f800283a 	ret
   4db6c:	30d2b03a 	or	r9,r6,r3
   4db70:	483fea26 	beq	r9,zero,4db1c <__alt_data_end+0xfffcdb1c>
   4db74:	00800084 	movi	r2,2
   4db78:	f800283a 	ret
   4db7c:	39c03fcc 	andi	r7,r7,255
   4db80:	39400726 	beq	r7,r5,4dba0 <__ledf2+0xbc>
   4db84:	2800081e 	bne	r5,zero,4dba8 <__ledf2+0xc4>
   4db88:	00800044 	movi	r2,1
   4db8c:	f800283a 	ret
   4db90:	2292b03a 	or	r9,r4,r10
   4db94:	483fdf26 	beq	r9,zero,4db14 <__alt_data_end+0xfffcdb14>
   4db98:	00800084 	movi	r2,2
   4db9c:	f800283a 	ret
   4dba0:	4080030e 	bge	r8,r2,4dbb0 <__ledf2+0xcc>
   4dba4:	383fef26 	beq	r7,zero,4db64 <__alt_data_end+0xfffcdb64>
   4dba8:	00bfffc4 	movi	r2,-1
   4dbac:	f800283a 	ret
   4dbb0:	123feb16 	blt	r2,r8,4db60 <__alt_data_end+0xfffcdb60>
   4dbb4:	1abff336 	bltu	r3,r10,4db84 <__alt_data_end+0xfffcdb84>
   4dbb8:	50c00326 	beq	r10,r3,4dbc8 <__ledf2+0xe4>
   4dbbc:	50c0042e 	bgeu	r10,r3,4dbd0 <__ledf2+0xec>
   4dbc0:	283fe81e 	bne	r5,zero,4db64 <__alt_data_end+0xfffcdb64>
   4dbc4:	003ff806 	br	4dba8 <__alt_data_end+0xfffcdba8>
   4dbc8:	313fee36 	bltu	r6,r4,4db84 <__alt_data_end+0xfffcdb84>
   4dbcc:	21bffc36 	bltu	r4,r6,4dbc0 <__alt_data_end+0xfffcdbc0>
   4dbd0:	0005883a 	mov	r2,zero
   4dbd4:	f800283a 	ret

0004dbd8 <__subdf3>:
   4dbd8:	02000434 	movhi	r8,16
   4dbdc:	423fffc4 	addi	r8,r8,-1
   4dbe0:	defffb04 	addi	sp,sp,-20
   4dbe4:	2a14703a 	and	r10,r5,r8
   4dbe8:	3812d53a 	srli	r9,r7,20
   4dbec:	3a10703a 	and	r8,r7,r8
   4dbf0:	2006d77a 	srli	r3,r4,29
   4dbf4:	3004d77a 	srli	r2,r6,29
   4dbf8:	dc000015 	stw	r16,0(sp)
   4dbfc:	501490fa 	slli	r10,r10,3
   4dc00:	2820d53a 	srli	r16,r5,20
   4dc04:	401090fa 	slli	r8,r8,3
   4dc08:	dc800215 	stw	r18,8(sp)
   4dc0c:	dc400115 	stw	r17,4(sp)
   4dc10:	dfc00415 	stw	ra,16(sp)
   4dc14:	202290fa 	slli	r17,r4,3
   4dc18:	dcc00315 	stw	r19,12(sp)
   4dc1c:	4a41ffcc 	andi	r9,r9,2047
   4dc20:	0101ffc4 	movi	r4,2047
   4dc24:	2824d7fa 	srli	r18,r5,31
   4dc28:	8401ffcc 	andi	r16,r16,2047
   4dc2c:	50c6b03a 	or	r3,r10,r3
   4dc30:	380ed7fa 	srli	r7,r7,31
   4dc34:	408ab03a 	or	r5,r8,r2
   4dc38:	300c90fa 	slli	r6,r6,3
   4dc3c:	49009626 	beq	r9,r4,4de98 <__subdf3+0x2c0>
   4dc40:	39c0005c 	xori	r7,r7,1
   4dc44:	8245c83a 	sub	r2,r16,r9
   4dc48:	3c807426 	beq	r7,r18,4de1c <__subdf3+0x244>
   4dc4c:	0080af0e 	bge	zero,r2,4df0c <__subdf3+0x334>
   4dc50:	48002a1e 	bne	r9,zero,4dcfc <__subdf3+0x124>
   4dc54:	2988b03a 	or	r4,r5,r6
   4dc58:	20009a1e 	bne	r4,zero,4dec4 <__subdf3+0x2ec>
   4dc5c:	888001cc 	andi	r2,r17,7
   4dc60:	10000726 	beq	r2,zero,4dc80 <__subdf3+0xa8>
   4dc64:	888003cc 	andi	r2,r17,15
   4dc68:	01000104 	movi	r4,4
   4dc6c:	11000426 	beq	r2,r4,4dc80 <__subdf3+0xa8>
   4dc70:	890b883a 	add	r5,r17,r4
   4dc74:	2c63803a 	cmpltu	r17,r5,r17
   4dc78:	1c47883a 	add	r3,r3,r17
   4dc7c:	2823883a 	mov	r17,r5
   4dc80:	1880202c 	andhi	r2,r3,128
   4dc84:	10005926 	beq	r2,zero,4ddec <__subdf3+0x214>
   4dc88:	84000044 	addi	r16,r16,1
   4dc8c:	0081ffc4 	movi	r2,2047
   4dc90:	8080be26 	beq	r16,r2,4df8c <__subdf3+0x3b4>
   4dc94:	017fe034 	movhi	r5,65408
   4dc98:	297fffc4 	addi	r5,r5,-1
   4dc9c:	1946703a 	and	r3,r3,r5
   4dca0:	1804977a 	slli	r2,r3,29
   4dca4:	1806927a 	slli	r3,r3,9
   4dca8:	8822d0fa 	srli	r17,r17,3
   4dcac:	8401ffcc 	andi	r16,r16,2047
   4dcb0:	180ad33a 	srli	r5,r3,12
   4dcb4:	9100004c 	andi	r4,r18,1
   4dcb8:	1444b03a 	or	r2,r2,r17
   4dcbc:	80c1ffcc 	andi	r3,r16,2047
   4dcc0:	1820953a 	slli	r16,r3,20
   4dcc4:	20c03fcc 	andi	r3,r4,255
   4dcc8:	180897fa 	slli	r4,r3,31
   4dccc:	00c00434 	movhi	r3,16
   4dcd0:	18ffffc4 	addi	r3,r3,-1
   4dcd4:	28c6703a 	and	r3,r5,r3
   4dcd8:	1c06b03a 	or	r3,r3,r16
   4dcdc:	1906b03a 	or	r3,r3,r4
   4dce0:	dfc00417 	ldw	ra,16(sp)
   4dce4:	dcc00317 	ldw	r19,12(sp)
   4dce8:	dc800217 	ldw	r18,8(sp)
   4dcec:	dc400117 	ldw	r17,4(sp)
   4dcf0:	dc000017 	ldw	r16,0(sp)
   4dcf4:	dec00504 	addi	sp,sp,20
   4dcf8:	f800283a 	ret
   4dcfc:	0101ffc4 	movi	r4,2047
   4dd00:	813fd626 	beq	r16,r4,4dc5c <__alt_data_end+0xfffcdc5c>
   4dd04:	29402034 	orhi	r5,r5,128
   4dd08:	01000e04 	movi	r4,56
   4dd0c:	2080a316 	blt	r4,r2,4df9c <__subdf3+0x3c4>
   4dd10:	010007c4 	movi	r4,31
   4dd14:	2080c616 	blt	r4,r2,4e030 <__subdf3+0x458>
   4dd18:	01000804 	movi	r4,32
   4dd1c:	2089c83a 	sub	r4,r4,r2
   4dd20:	2910983a 	sll	r8,r5,r4
   4dd24:	308ed83a 	srl	r7,r6,r2
   4dd28:	3108983a 	sll	r4,r6,r4
   4dd2c:	2884d83a 	srl	r2,r5,r2
   4dd30:	41ccb03a 	or	r6,r8,r7
   4dd34:	2008c03a 	cmpne	r4,r4,zero
   4dd38:	310cb03a 	or	r6,r6,r4
   4dd3c:	898dc83a 	sub	r6,r17,r6
   4dd40:	89a3803a 	cmpltu	r17,r17,r6
   4dd44:	1887c83a 	sub	r3,r3,r2
   4dd48:	1c47c83a 	sub	r3,r3,r17
   4dd4c:	3023883a 	mov	r17,r6
   4dd50:	1880202c 	andhi	r2,r3,128
   4dd54:	10002326 	beq	r2,zero,4dde4 <__subdf3+0x20c>
   4dd58:	04c02034 	movhi	r19,128
   4dd5c:	9cffffc4 	addi	r19,r19,-1
   4dd60:	1ce6703a 	and	r19,r3,r19
   4dd64:	98007a26 	beq	r19,zero,4df50 <__subdf3+0x378>
   4dd68:	9809883a 	mov	r4,r19
   4dd6c:	00430040 	call	43004 <__clzsi2>
   4dd70:	113ffe04 	addi	r4,r2,-8
   4dd74:	00c007c4 	movi	r3,31
   4dd78:	19007b16 	blt	r3,r4,4df68 <__subdf3+0x390>
   4dd7c:	00800804 	movi	r2,32
   4dd80:	1105c83a 	sub	r2,r2,r4
   4dd84:	8884d83a 	srl	r2,r17,r2
   4dd88:	9906983a 	sll	r3,r19,r4
   4dd8c:	8922983a 	sll	r17,r17,r4
   4dd90:	10c4b03a 	or	r2,r2,r3
   4dd94:	24007816 	blt	r4,r16,4df78 <__subdf3+0x3a0>
   4dd98:	2421c83a 	sub	r16,r4,r16
   4dd9c:	80c00044 	addi	r3,r16,1
   4dda0:	010007c4 	movi	r4,31
   4dda4:	20c09516 	blt	r4,r3,4dffc <__subdf3+0x424>
   4dda8:	01400804 	movi	r5,32
   4ddac:	28cbc83a 	sub	r5,r5,r3
   4ddb0:	88c8d83a 	srl	r4,r17,r3
   4ddb4:	8962983a 	sll	r17,r17,r5
   4ddb8:	114a983a 	sll	r5,r2,r5
   4ddbc:	10c6d83a 	srl	r3,r2,r3
   4ddc0:	8804c03a 	cmpne	r2,r17,zero
   4ddc4:	290ab03a 	or	r5,r5,r4
   4ddc8:	28a2b03a 	or	r17,r5,r2
   4ddcc:	0021883a 	mov	r16,zero
   4ddd0:	003fa206 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4ddd4:	2090b03a 	or	r8,r4,r2
   4ddd8:	40018e26 	beq	r8,zero,4e414 <__subdf3+0x83c>
   4dddc:	1007883a 	mov	r3,r2
   4dde0:	2023883a 	mov	r17,r4
   4dde4:	888001cc 	andi	r2,r17,7
   4dde8:	103f9e1e 	bne	r2,zero,4dc64 <__alt_data_end+0xfffcdc64>
   4ddec:	1804977a 	slli	r2,r3,29
   4ddf0:	8822d0fa 	srli	r17,r17,3
   4ddf4:	1810d0fa 	srli	r8,r3,3
   4ddf8:	9100004c 	andi	r4,r18,1
   4ddfc:	1444b03a 	or	r2,r2,r17
   4de00:	00c1ffc4 	movi	r3,2047
   4de04:	80c02826 	beq	r16,r3,4dea8 <__subdf3+0x2d0>
   4de08:	01400434 	movhi	r5,16
   4de0c:	297fffc4 	addi	r5,r5,-1
   4de10:	80e0703a 	and	r16,r16,r3
   4de14:	414a703a 	and	r5,r8,r5
   4de18:	003fa806 	br	4dcbc <__alt_data_end+0xfffcdcbc>
   4de1c:	0080630e 	bge	zero,r2,4dfac <__subdf3+0x3d4>
   4de20:	48003026 	beq	r9,zero,4dee4 <__subdf3+0x30c>
   4de24:	0101ffc4 	movi	r4,2047
   4de28:	813f8c26 	beq	r16,r4,4dc5c <__alt_data_end+0xfffcdc5c>
   4de2c:	29402034 	orhi	r5,r5,128
   4de30:	01000e04 	movi	r4,56
   4de34:	2080a90e 	bge	r4,r2,4e0dc <__subdf3+0x504>
   4de38:	298cb03a 	or	r6,r5,r6
   4de3c:	3012c03a 	cmpne	r9,r6,zero
   4de40:	0005883a 	mov	r2,zero
   4de44:	4c53883a 	add	r9,r9,r17
   4de48:	4c63803a 	cmpltu	r17,r9,r17
   4de4c:	10c7883a 	add	r3,r2,r3
   4de50:	88c7883a 	add	r3,r17,r3
   4de54:	4823883a 	mov	r17,r9
   4de58:	1880202c 	andhi	r2,r3,128
   4de5c:	1000d026 	beq	r2,zero,4e1a0 <__subdf3+0x5c8>
   4de60:	84000044 	addi	r16,r16,1
   4de64:	0081ffc4 	movi	r2,2047
   4de68:	8080fe26 	beq	r16,r2,4e264 <__subdf3+0x68c>
   4de6c:	00bfe034 	movhi	r2,65408
   4de70:	10bfffc4 	addi	r2,r2,-1
   4de74:	1886703a 	and	r3,r3,r2
   4de78:	880ad07a 	srli	r5,r17,1
   4de7c:	180497fa 	slli	r2,r3,31
   4de80:	8900004c 	andi	r4,r17,1
   4de84:	2922b03a 	or	r17,r5,r4
   4de88:	1806d07a 	srli	r3,r3,1
   4de8c:	1462b03a 	or	r17,r2,r17
   4de90:	3825883a 	mov	r18,r7
   4de94:	003f7106 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4de98:	2984b03a 	or	r2,r5,r6
   4de9c:	103f6826 	beq	r2,zero,4dc40 <__alt_data_end+0xfffcdc40>
   4dea0:	39c03fcc 	andi	r7,r7,255
   4dea4:	003f6706 	br	4dc44 <__alt_data_end+0xfffcdc44>
   4dea8:	4086b03a 	or	r3,r8,r2
   4deac:	18015226 	beq	r3,zero,4e3f8 <__subdf3+0x820>
   4deb0:	00c00434 	movhi	r3,16
   4deb4:	41400234 	orhi	r5,r8,8
   4deb8:	18ffffc4 	addi	r3,r3,-1
   4debc:	28ca703a 	and	r5,r5,r3
   4dec0:	003f7e06 	br	4dcbc <__alt_data_end+0xfffcdcbc>
   4dec4:	10bfffc4 	addi	r2,r2,-1
   4dec8:	1000491e 	bne	r2,zero,4dff0 <__subdf3+0x418>
   4decc:	898fc83a 	sub	r7,r17,r6
   4ded0:	89e3803a 	cmpltu	r17,r17,r7
   4ded4:	1947c83a 	sub	r3,r3,r5
   4ded8:	1c47c83a 	sub	r3,r3,r17
   4dedc:	3823883a 	mov	r17,r7
   4dee0:	003f9b06 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4dee4:	2988b03a 	or	r4,r5,r6
   4dee8:	203f5c26 	beq	r4,zero,4dc5c <__alt_data_end+0xfffcdc5c>
   4deec:	10bfffc4 	addi	r2,r2,-1
   4def0:	1000931e 	bne	r2,zero,4e140 <__subdf3+0x568>
   4def4:	898d883a 	add	r6,r17,r6
   4def8:	3463803a 	cmpltu	r17,r6,r17
   4defc:	1947883a 	add	r3,r3,r5
   4df00:	88c7883a 	add	r3,r17,r3
   4df04:	3023883a 	mov	r17,r6
   4df08:	003fd306 	br	4de58 <__alt_data_end+0xfffcde58>
   4df0c:	1000541e 	bne	r2,zero,4e060 <__subdf3+0x488>
   4df10:	80800044 	addi	r2,r16,1
   4df14:	1081ffcc 	andi	r2,r2,2047
   4df18:	01000044 	movi	r4,1
   4df1c:	2080a20e 	bge	r4,r2,4e1a8 <__subdf3+0x5d0>
   4df20:	8989c83a 	sub	r4,r17,r6
   4df24:	8905803a 	cmpltu	r2,r17,r4
   4df28:	1967c83a 	sub	r19,r3,r5
   4df2c:	98a7c83a 	sub	r19,r19,r2
   4df30:	9880202c 	andhi	r2,r19,128
   4df34:	10006326 	beq	r2,zero,4e0c4 <__subdf3+0x4ec>
   4df38:	3463c83a 	sub	r17,r6,r17
   4df3c:	28c7c83a 	sub	r3,r5,r3
   4df40:	344d803a 	cmpltu	r6,r6,r17
   4df44:	19a7c83a 	sub	r19,r3,r6
   4df48:	3825883a 	mov	r18,r7
   4df4c:	983f861e 	bne	r19,zero,4dd68 <__alt_data_end+0xfffcdd68>
   4df50:	8809883a 	mov	r4,r17
   4df54:	00430040 	call	43004 <__clzsi2>
   4df58:	10800804 	addi	r2,r2,32
   4df5c:	113ffe04 	addi	r4,r2,-8
   4df60:	00c007c4 	movi	r3,31
   4df64:	193f850e 	bge	r3,r4,4dd7c <__alt_data_end+0xfffcdd7c>
   4df68:	10bff604 	addi	r2,r2,-40
   4df6c:	8884983a 	sll	r2,r17,r2
   4df70:	0023883a 	mov	r17,zero
   4df74:	243f880e 	bge	r4,r16,4dd98 <__alt_data_end+0xfffcdd98>
   4df78:	00ffe034 	movhi	r3,65408
   4df7c:	18ffffc4 	addi	r3,r3,-1
   4df80:	8121c83a 	sub	r16,r16,r4
   4df84:	10c6703a 	and	r3,r2,r3
   4df88:	003f3406 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4df8c:	9100004c 	andi	r4,r18,1
   4df90:	000b883a 	mov	r5,zero
   4df94:	0005883a 	mov	r2,zero
   4df98:	003f4806 	br	4dcbc <__alt_data_end+0xfffcdcbc>
   4df9c:	298cb03a 	or	r6,r5,r6
   4dfa0:	300cc03a 	cmpne	r6,r6,zero
   4dfa4:	0005883a 	mov	r2,zero
   4dfa8:	003f6406 	br	4dd3c <__alt_data_end+0xfffcdd3c>
   4dfac:	10009a1e 	bne	r2,zero,4e218 <__subdf3+0x640>
   4dfb0:	82400044 	addi	r9,r16,1
   4dfb4:	4881ffcc 	andi	r2,r9,2047
   4dfb8:	02800044 	movi	r10,1
   4dfbc:	5080670e 	bge	r10,r2,4e15c <__subdf3+0x584>
   4dfc0:	0081ffc4 	movi	r2,2047
   4dfc4:	4880af26 	beq	r9,r2,4e284 <__subdf3+0x6ac>
   4dfc8:	898d883a 	add	r6,r17,r6
   4dfcc:	1945883a 	add	r2,r3,r5
   4dfd0:	3447803a 	cmpltu	r3,r6,r17
   4dfd4:	1887883a 	add	r3,r3,r2
   4dfd8:	182297fa 	slli	r17,r3,31
   4dfdc:	300cd07a 	srli	r6,r6,1
   4dfe0:	1806d07a 	srli	r3,r3,1
   4dfe4:	4821883a 	mov	r16,r9
   4dfe8:	89a2b03a 	or	r17,r17,r6
   4dfec:	003f1b06 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4dff0:	0101ffc4 	movi	r4,2047
   4dff4:	813f441e 	bne	r16,r4,4dd08 <__alt_data_end+0xfffcdd08>
   4dff8:	003f1806 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4dffc:	843ff844 	addi	r16,r16,-31
   4e000:	01400804 	movi	r5,32
   4e004:	1408d83a 	srl	r4,r2,r16
   4e008:	19405026 	beq	r3,r5,4e14c <__subdf3+0x574>
   4e00c:	01401004 	movi	r5,64
   4e010:	28c7c83a 	sub	r3,r5,r3
   4e014:	10c4983a 	sll	r2,r2,r3
   4e018:	88a2b03a 	or	r17,r17,r2
   4e01c:	8822c03a 	cmpne	r17,r17,zero
   4e020:	2462b03a 	or	r17,r4,r17
   4e024:	0007883a 	mov	r3,zero
   4e028:	0021883a 	mov	r16,zero
   4e02c:	003f6d06 	br	4dde4 <__alt_data_end+0xfffcdde4>
   4e030:	11fff804 	addi	r7,r2,-32
   4e034:	01000804 	movi	r4,32
   4e038:	29ced83a 	srl	r7,r5,r7
   4e03c:	11004526 	beq	r2,r4,4e154 <__subdf3+0x57c>
   4e040:	01001004 	movi	r4,64
   4e044:	2089c83a 	sub	r4,r4,r2
   4e048:	2904983a 	sll	r2,r5,r4
   4e04c:	118cb03a 	or	r6,r2,r6
   4e050:	300cc03a 	cmpne	r6,r6,zero
   4e054:	398cb03a 	or	r6,r7,r6
   4e058:	0005883a 	mov	r2,zero
   4e05c:	003f3706 	br	4dd3c <__alt_data_end+0xfffcdd3c>
   4e060:	80002a26 	beq	r16,zero,4e10c <__subdf3+0x534>
   4e064:	0101ffc4 	movi	r4,2047
   4e068:	49006626 	beq	r9,r4,4e204 <__subdf3+0x62c>
   4e06c:	0085c83a 	sub	r2,zero,r2
   4e070:	18c02034 	orhi	r3,r3,128
   4e074:	01000e04 	movi	r4,56
   4e078:	20807e16 	blt	r4,r2,4e274 <__subdf3+0x69c>
   4e07c:	010007c4 	movi	r4,31
   4e080:	2080e716 	blt	r4,r2,4e420 <__subdf3+0x848>
   4e084:	01000804 	movi	r4,32
   4e088:	2089c83a 	sub	r4,r4,r2
   4e08c:	1914983a 	sll	r10,r3,r4
   4e090:	8890d83a 	srl	r8,r17,r2
   4e094:	8908983a 	sll	r4,r17,r4
   4e098:	1884d83a 	srl	r2,r3,r2
   4e09c:	5222b03a 	or	r17,r10,r8
   4e0a0:	2006c03a 	cmpne	r3,r4,zero
   4e0a4:	88e2b03a 	or	r17,r17,r3
   4e0a8:	3463c83a 	sub	r17,r6,r17
   4e0ac:	2885c83a 	sub	r2,r5,r2
   4e0b0:	344d803a 	cmpltu	r6,r6,r17
   4e0b4:	1187c83a 	sub	r3,r2,r6
   4e0b8:	4821883a 	mov	r16,r9
   4e0bc:	3825883a 	mov	r18,r7
   4e0c0:	003f2306 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4e0c4:	24d0b03a 	or	r8,r4,r19
   4e0c8:	40001b1e 	bne	r8,zero,4e138 <__subdf3+0x560>
   4e0cc:	0005883a 	mov	r2,zero
   4e0d0:	0009883a 	mov	r4,zero
   4e0d4:	0021883a 	mov	r16,zero
   4e0d8:	003f4906 	br	4de00 <__alt_data_end+0xfffcde00>
   4e0dc:	010007c4 	movi	r4,31
   4e0e0:	20803a16 	blt	r4,r2,4e1cc <__subdf3+0x5f4>
   4e0e4:	01000804 	movi	r4,32
   4e0e8:	2089c83a 	sub	r4,r4,r2
   4e0ec:	2912983a 	sll	r9,r5,r4
   4e0f0:	3090d83a 	srl	r8,r6,r2
   4e0f4:	3108983a 	sll	r4,r6,r4
   4e0f8:	2884d83a 	srl	r2,r5,r2
   4e0fc:	4a12b03a 	or	r9,r9,r8
   4e100:	2008c03a 	cmpne	r4,r4,zero
   4e104:	4912b03a 	or	r9,r9,r4
   4e108:	003f4e06 	br	4de44 <__alt_data_end+0xfffcde44>
   4e10c:	1c48b03a 	or	r4,r3,r17
   4e110:	20003c26 	beq	r4,zero,4e204 <__subdf3+0x62c>
   4e114:	0084303a 	nor	r2,zero,r2
   4e118:	1000381e 	bne	r2,zero,4e1fc <__subdf3+0x624>
   4e11c:	3463c83a 	sub	r17,r6,r17
   4e120:	28c5c83a 	sub	r2,r5,r3
   4e124:	344d803a 	cmpltu	r6,r6,r17
   4e128:	1187c83a 	sub	r3,r2,r6
   4e12c:	4821883a 	mov	r16,r9
   4e130:	3825883a 	mov	r18,r7
   4e134:	003f0606 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4e138:	2023883a 	mov	r17,r4
   4e13c:	003f0906 	br	4dd64 <__alt_data_end+0xfffcdd64>
   4e140:	0101ffc4 	movi	r4,2047
   4e144:	813f3a1e 	bne	r16,r4,4de30 <__alt_data_end+0xfffcde30>
   4e148:	003ec406 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e14c:	0005883a 	mov	r2,zero
   4e150:	003fb106 	br	4e018 <__alt_data_end+0xfffce018>
   4e154:	0005883a 	mov	r2,zero
   4e158:	003fbc06 	br	4e04c <__alt_data_end+0xfffce04c>
   4e15c:	1c44b03a 	or	r2,r3,r17
   4e160:	80008e1e 	bne	r16,zero,4e39c <__subdf3+0x7c4>
   4e164:	1000c826 	beq	r2,zero,4e488 <__subdf3+0x8b0>
   4e168:	2984b03a 	or	r2,r5,r6
   4e16c:	103ebb26 	beq	r2,zero,4dc5c <__alt_data_end+0xfffcdc5c>
   4e170:	8989883a 	add	r4,r17,r6
   4e174:	1945883a 	add	r2,r3,r5
   4e178:	2447803a 	cmpltu	r3,r4,r17
   4e17c:	1887883a 	add	r3,r3,r2
   4e180:	1880202c 	andhi	r2,r3,128
   4e184:	2023883a 	mov	r17,r4
   4e188:	103f1626 	beq	r2,zero,4dde4 <__alt_data_end+0xfffcdde4>
   4e18c:	00bfe034 	movhi	r2,65408
   4e190:	10bfffc4 	addi	r2,r2,-1
   4e194:	5021883a 	mov	r16,r10
   4e198:	1886703a 	and	r3,r3,r2
   4e19c:	003eaf06 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e1a0:	3825883a 	mov	r18,r7
   4e1a4:	003f0f06 	br	4dde4 <__alt_data_end+0xfffcdde4>
   4e1a8:	1c44b03a 	or	r2,r3,r17
   4e1ac:	8000251e 	bne	r16,zero,4e244 <__subdf3+0x66c>
   4e1b0:	1000661e 	bne	r2,zero,4e34c <__subdf3+0x774>
   4e1b4:	2990b03a 	or	r8,r5,r6
   4e1b8:	40009626 	beq	r8,zero,4e414 <__subdf3+0x83c>
   4e1bc:	2807883a 	mov	r3,r5
   4e1c0:	3023883a 	mov	r17,r6
   4e1c4:	3825883a 	mov	r18,r7
   4e1c8:	003ea406 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e1cc:	127ff804 	addi	r9,r2,-32
   4e1d0:	01000804 	movi	r4,32
   4e1d4:	2a52d83a 	srl	r9,r5,r9
   4e1d8:	11008c26 	beq	r2,r4,4e40c <__subdf3+0x834>
   4e1dc:	01001004 	movi	r4,64
   4e1e0:	2085c83a 	sub	r2,r4,r2
   4e1e4:	2884983a 	sll	r2,r5,r2
   4e1e8:	118cb03a 	or	r6,r2,r6
   4e1ec:	300cc03a 	cmpne	r6,r6,zero
   4e1f0:	4992b03a 	or	r9,r9,r6
   4e1f4:	0005883a 	mov	r2,zero
   4e1f8:	003f1206 	br	4de44 <__alt_data_end+0xfffcde44>
   4e1fc:	0101ffc4 	movi	r4,2047
   4e200:	493f9c1e 	bne	r9,r4,4e074 <__alt_data_end+0xfffce074>
   4e204:	2807883a 	mov	r3,r5
   4e208:	3023883a 	mov	r17,r6
   4e20c:	4821883a 	mov	r16,r9
   4e210:	3825883a 	mov	r18,r7
   4e214:	003e9106 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e218:	80001f1e 	bne	r16,zero,4e298 <__subdf3+0x6c0>
   4e21c:	1c48b03a 	or	r4,r3,r17
   4e220:	20005a26 	beq	r4,zero,4e38c <__subdf3+0x7b4>
   4e224:	0084303a 	nor	r2,zero,r2
   4e228:	1000561e 	bne	r2,zero,4e384 <__subdf3+0x7ac>
   4e22c:	89a3883a 	add	r17,r17,r6
   4e230:	1945883a 	add	r2,r3,r5
   4e234:	898d803a 	cmpltu	r6,r17,r6
   4e238:	3087883a 	add	r3,r6,r2
   4e23c:	4821883a 	mov	r16,r9
   4e240:	003f0506 	br	4de58 <__alt_data_end+0xfffcde58>
   4e244:	10002b1e 	bne	r2,zero,4e2f4 <__subdf3+0x71c>
   4e248:	2984b03a 	or	r2,r5,r6
   4e24c:	10008026 	beq	r2,zero,4e450 <__subdf3+0x878>
   4e250:	2807883a 	mov	r3,r5
   4e254:	3023883a 	mov	r17,r6
   4e258:	3825883a 	mov	r18,r7
   4e25c:	0401ffc4 	movi	r16,2047
   4e260:	003e7e06 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e264:	3809883a 	mov	r4,r7
   4e268:	0011883a 	mov	r8,zero
   4e26c:	0005883a 	mov	r2,zero
   4e270:	003ee306 	br	4de00 <__alt_data_end+0xfffcde00>
   4e274:	1c62b03a 	or	r17,r3,r17
   4e278:	8822c03a 	cmpne	r17,r17,zero
   4e27c:	0005883a 	mov	r2,zero
   4e280:	003f8906 	br	4e0a8 <__alt_data_end+0xfffce0a8>
   4e284:	3809883a 	mov	r4,r7
   4e288:	4821883a 	mov	r16,r9
   4e28c:	0011883a 	mov	r8,zero
   4e290:	0005883a 	mov	r2,zero
   4e294:	003eda06 	br	4de00 <__alt_data_end+0xfffcde00>
   4e298:	0101ffc4 	movi	r4,2047
   4e29c:	49003b26 	beq	r9,r4,4e38c <__subdf3+0x7b4>
   4e2a0:	0085c83a 	sub	r2,zero,r2
   4e2a4:	18c02034 	orhi	r3,r3,128
   4e2a8:	01000e04 	movi	r4,56
   4e2ac:	20806e16 	blt	r4,r2,4e468 <__subdf3+0x890>
   4e2b0:	010007c4 	movi	r4,31
   4e2b4:	20807716 	blt	r4,r2,4e494 <__subdf3+0x8bc>
   4e2b8:	01000804 	movi	r4,32
   4e2bc:	2089c83a 	sub	r4,r4,r2
   4e2c0:	1914983a 	sll	r10,r3,r4
   4e2c4:	8890d83a 	srl	r8,r17,r2
   4e2c8:	8908983a 	sll	r4,r17,r4
   4e2cc:	1884d83a 	srl	r2,r3,r2
   4e2d0:	5222b03a 	or	r17,r10,r8
   4e2d4:	2006c03a 	cmpne	r3,r4,zero
   4e2d8:	88e2b03a 	or	r17,r17,r3
   4e2dc:	89a3883a 	add	r17,r17,r6
   4e2e0:	1145883a 	add	r2,r2,r5
   4e2e4:	898d803a 	cmpltu	r6,r17,r6
   4e2e8:	3087883a 	add	r3,r6,r2
   4e2ec:	4821883a 	mov	r16,r9
   4e2f0:	003ed906 	br	4de58 <__alt_data_end+0xfffcde58>
   4e2f4:	2984b03a 	or	r2,r5,r6
   4e2f8:	10004226 	beq	r2,zero,4e404 <__subdf3+0x82c>
   4e2fc:	1808d0fa 	srli	r4,r3,3
   4e300:	8822d0fa 	srli	r17,r17,3
   4e304:	1806977a 	slli	r3,r3,29
   4e308:	2080022c 	andhi	r2,r4,8
   4e30c:	1c62b03a 	or	r17,r3,r17
   4e310:	10000826 	beq	r2,zero,4e334 <__subdf3+0x75c>
   4e314:	2812d0fa 	srli	r9,r5,3
   4e318:	4880022c 	andhi	r2,r9,8
   4e31c:	1000051e 	bne	r2,zero,4e334 <__subdf3+0x75c>
   4e320:	300cd0fa 	srli	r6,r6,3
   4e324:	2804977a 	slli	r2,r5,29
   4e328:	4809883a 	mov	r4,r9
   4e32c:	3825883a 	mov	r18,r7
   4e330:	11a2b03a 	or	r17,r2,r6
   4e334:	8806d77a 	srli	r3,r17,29
   4e338:	200890fa 	slli	r4,r4,3
   4e33c:	882290fa 	slli	r17,r17,3
   4e340:	0401ffc4 	movi	r16,2047
   4e344:	1906b03a 	or	r3,r3,r4
   4e348:	003e4406 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e34c:	2984b03a 	or	r2,r5,r6
   4e350:	103e4226 	beq	r2,zero,4dc5c <__alt_data_end+0xfffcdc5c>
   4e354:	8989c83a 	sub	r4,r17,r6
   4e358:	8911803a 	cmpltu	r8,r17,r4
   4e35c:	1945c83a 	sub	r2,r3,r5
   4e360:	1205c83a 	sub	r2,r2,r8
   4e364:	1200202c 	andhi	r8,r2,128
   4e368:	403e9a26 	beq	r8,zero,4ddd4 <__alt_data_end+0xfffcddd4>
   4e36c:	3463c83a 	sub	r17,r6,r17
   4e370:	28c5c83a 	sub	r2,r5,r3
   4e374:	344d803a 	cmpltu	r6,r6,r17
   4e378:	1187c83a 	sub	r3,r2,r6
   4e37c:	3825883a 	mov	r18,r7
   4e380:	003e3606 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e384:	0101ffc4 	movi	r4,2047
   4e388:	493fc71e 	bne	r9,r4,4e2a8 <__alt_data_end+0xfffce2a8>
   4e38c:	2807883a 	mov	r3,r5
   4e390:	3023883a 	mov	r17,r6
   4e394:	4821883a 	mov	r16,r9
   4e398:	003e3006 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e39c:	10003626 	beq	r2,zero,4e478 <__subdf3+0x8a0>
   4e3a0:	2984b03a 	or	r2,r5,r6
   4e3a4:	10001726 	beq	r2,zero,4e404 <__subdf3+0x82c>
   4e3a8:	1808d0fa 	srli	r4,r3,3
   4e3ac:	8822d0fa 	srli	r17,r17,3
   4e3b0:	1806977a 	slli	r3,r3,29
   4e3b4:	2080022c 	andhi	r2,r4,8
   4e3b8:	1c62b03a 	or	r17,r3,r17
   4e3bc:	10000726 	beq	r2,zero,4e3dc <__subdf3+0x804>
   4e3c0:	2812d0fa 	srli	r9,r5,3
   4e3c4:	4880022c 	andhi	r2,r9,8
   4e3c8:	1000041e 	bne	r2,zero,4e3dc <__subdf3+0x804>
   4e3cc:	300cd0fa 	srli	r6,r6,3
   4e3d0:	2804977a 	slli	r2,r5,29
   4e3d4:	4809883a 	mov	r4,r9
   4e3d8:	11a2b03a 	or	r17,r2,r6
   4e3dc:	8806d77a 	srli	r3,r17,29
   4e3e0:	200890fa 	slli	r4,r4,3
   4e3e4:	882290fa 	slli	r17,r17,3
   4e3e8:	3825883a 	mov	r18,r7
   4e3ec:	1906b03a 	or	r3,r3,r4
   4e3f0:	0401ffc4 	movi	r16,2047
   4e3f4:	003e1906 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e3f8:	000b883a 	mov	r5,zero
   4e3fc:	0005883a 	mov	r2,zero
   4e400:	003e2e06 	br	4dcbc <__alt_data_end+0xfffcdcbc>
   4e404:	0401ffc4 	movi	r16,2047
   4e408:	003e1406 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e40c:	0005883a 	mov	r2,zero
   4e410:	003f7506 	br	4e1e8 <__alt_data_end+0xfffce1e8>
   4e414:	0005883a 	mov	r2,zero
   4e418:	0009883a 	mov	r4,zero
   4e41c:	003e7806 	br	4de00 <__alt_data_end+0xfffcde00>
   4e420:	123ff804 	addi	r8,r2,-32
   4e424:	01000804 	movi	r4,32
   4e428:	1a10d83a 	srl	r8,r3,r8
   4e42c:	11002526 	beq	r2,r4,4e4c4 <__subdf3+0x8ec>
   4e430:	01001004 	movi	r4,64
   4e434:	2085c83a 	sub	r2,r4,r2
   4e438:	1884983a 	sll	r2,r3,r2
   4e43c:	1444b03a 	or	r2,r2,r17
   4e440:	1004c03a 	cmpne	r2,r2,zero
   4e444:	40a2b03a 	or	r17,r8,r2
   4e448:	0005883a 	mov	r2,zero
   4e44c:	003f1606 	br	4e0a8 <__alt_data_end+0xfffce0a8>
   4e450:	02000434 	movhi	r8,16
   4e454:	0009883a 	mov	r4,zero
   4e458:	423fffc4 	addi	r8,r8,-1
   4e45c:	00bfffc4 	movi	r2,-1
   4e460:	0401ffc4 	movi	r16,2047
   4e464:	003e6606 	br	4de00 <__alt_data_end+0xfffcde00>
   4e468:	1c62b03a 	or	r17,r3,r17
   4e46c:	8822c03a 	cmpne	r17,r17,zero
   4e470:	0005883a 	mov	r2,zero
   4e474:	003f9906 	br	4e2dc <__alt_data_end+0xfffce2dc>
   4e478:	2807883a 	mov	r3,r5
   4e47c:	3023883a 	mov	r17,r6
   4e480:	0401ffc4 	movi	r16,2047
   4e484:	003df506 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e488:	2807883a 	mov	r3,r5
   4e48c:	3023883a 	mov	r17,r6
   4e490:	003df206 	br	4dc5c <__alt_data_end+0xfffcdc5c>
   4e494:	123ff804 	addi	r8,r2,-32
   4e498:	01000804 	movi	r4,32
   4e49c:	1a10d83a 	srl	r8,r3,r8
   4e4a0:	11000a26 	beq	r2,r4,4e4cc <__subdf3+0x8f4>
   4e4a4:	01001004 	movi	r4,64
   4e4a8:	2085c83a 	sub	r2,r4,r2
   4e4ac:	1884983a 	sll	r2,r3,r2
   4e4b0:	1444b03a 	or	r2,r2,r17
   4e4b4:	1004c03a 	cmpne	r2,r2,zero
   4e4b8:	40a2b03a 	or	r17,r8,r2
   4e4bc:	0005883a 	mov	r2,zero
   4e4c0:	003f8606 	br	4e2dc <__alt_data_end+0xfffce2dc>
   4e4c4:	0005883a 	mov	r2,zero
   4e4c8:	003fdc06 	br	4e43c <__alt_data_end+0xfffce43c>
   4e4cc:	0005883a 	mov	r2,zero
   4e4d0:	003ff706 	br	4e4b0 <__alt_data_end+0xfffce4b0>

0004e4d4 <__fixdfsi>:
   4e4d4:	280cd53a 	srli	r6,r5,20
   4e4d8:	00c00434 	movhi	r3,16
   4e4dc:	18ffffc4 	addi	r3,r3,-1
   4e4e0:	3181ffcc 	andi	r6,r6,2047
   4e4e4:	01c0ff84 	movi	r7,1022
   4e4e8:	28c6703a 	and	r3,r5,r3
   4e4ec:	280ad7fa 	srli	r5,r5,31
   4e4f0:	3980120e 	bge	r7,r6,4e53c <__fixdfsi+0x68>
   4e4f4:	00810744 	movi	r2,1053
   4e4f8:	11800c16 	blt	r2,r6,4e52c <__fixdfsi+0x58>
   4e4fc:	00810cc4 	movi	r2,1075
   4e500:	1185c83a 	sub	r2,r2,r6
   4e504:	01c007c4 	movi	r7,31
   4e508:	18c00434 	orhi	r3,r3,16
   4e50c:	38800d16 	blt	r7,r2,4e544 <__fixdfsi+0x70>
   4e510:	31befb44 	addi	r6,r6,-1043
   4e514:	2084d83a 	srl	r2,r4,r2
   4e518:	1986983a 	sll	r3,r3,r6
   4e51c:	1884b03a 	or	r2,r3,r2
   4e520:	28000726 	beq	r5,zero,4e540 <__fixdfsi+0x6c>
   4e524:	0085c83a 	sub	r2,zero,r2
   4e528:	f800283a 	ret
   4e52c:	00a00034 	movhi	r2,32768
   4e530:	10bfffc4 	addi	r2,r2,-1
   4e534:	2885883a 	add	r2,r5,r2
   4e538:	f800283a 	ret
   4e53c:	0005883a 	mov	r2,zero
   4e540:	f800283a 	ret
   4e544:	008104c4 	movi	r2,1043
   4e548:	1185c83a 	sub	r2,r2,r6
   4e54c:	1884d83a 	srl	r2,r3,r2
   4e550:	003ff306 	br	4e520 <__alt_data_end+0xfffce520>

0004e554 <__floatsidf>:
   4e554:	defffd04 	addi	sp,sp,-12
   4e558:	dfc00215 	stw	ra,8(sp)
   4e55c:	dc400115 	stw	r17,4(sp)
   4e560:	dc000015 	stw	r16,0(sp)
   4e564:	20002b26 	beq	r4,zero,4e614 <__floatsidf+0xc0>
   4e568:	2023883a 	mov	r17,r4
   4e56c:	2020d7fa 	srli	r16,r4,31
   4e570:	20002d16 	blt	r4,zero,4e628 <__floatsidf+0xd4>
   4e574:	8809883a 	mov	r4,r17
   4e578:	00430040 	call	43004 <__clzsi2>
   4e57c:	01410784 	movi	r5,1054
   4e580:	288bc83a 	sub	r5,r5,r2
   4e584:	01010cc4 	movi	r4,1075
   4e588:	2149c83a 	sub	r4,r4,r5
   4e58c:	00c007c4 	movi	r3,31
   4e590:	1900160e 	bge	r3,r4,4e5ec <__floatsidf+0x98>
   4e594:	00c104c4 	movi	r3,1043
   4e598:	1947c83a 	sub	r3,r3,r5
   4e59c:	88c6983a 	sll	r3,r17,r3
   4e5a0:	00800434 	movhi	r2,16
   4e5a4:	10bfffc4 	addi	r2,r2,-1
   4e5a8:	1886703a 	and	r3,r3,r2
   4e5ac:	2941ffcc 	andi	r5,r5,2047
   4e5b0:	800d883a 	mov	r6,r16
   4e5b4:	0005883a 	mov	r2,zero
   4e5b8:	280a953a 	slli	r5,r5,20
   4e5bc:	31803fcc 	andi	r6,r6,255
   4e5c0:	01000434 	movhi	r4,16
   4e5c4:	300c97fa 	slli	r6,r6,31
   4e5c8:	213fffc4 	addi	r4,r4,-1
   4e5cc:	1906703a 	and	r3,r3,r4
   4e5d0:	1946b03a 	or	r3,r3,r5
   4e5d4:	1986b03a 	or	r3,r3,r6
   4e5d8:	dfc00217 	ldw	ra,8(sp)
   4e5dc:	dc400117 	ldw	r17,4(sp)
   4e5e0:	dc000017 	ldw	r16,0(sp)
   4e5e4:	dec00304 	addi	sp,sp,12
   4e5e8:	f800283a 	ret
   4e5ec:	00c002c4 	movi	r3,11
   4e5f0:	1887c83a 	sub	r3,r3,r2
   4e5f4:	88c6d83a 	srl	r3,r17,r3
   4e5f8:	8904983a 	sll	r2,r17,r4
   4e5fc:	01000434 	movhi	r4,16
   4e600:	213fffc4 	addi	r4,r4,-1
   4e604:	2941ffcc 	andi	r5,r5,2047
   4e608:	1906703a 	and	r3,r3,r4
   4e60c:	800d883a 	mov	r6,r16
   4e610:	003fe906 	br	4e5b8 <__alt_data_end+0xfffce5b8>
   4e614:	000d883a 	mov	r6,zero
   4e618:	000b883a 	mov	r5,zero
   4e61c:	0007883a 	mov	r3,zero
   4e620:	0005883a 	mov	r2,zero
   4e624:	003fe406 	br	4e5b8 <__alt_data_end+0xfffce5b8>
   4e628:	0123c83a 	sub	r17,zero,r4
   4e62c:	003fd106 	br	4e574 <__alt_data_end+0xfffce574>

0004e630 <__floatunsidf>:
   4e630:	defffe04 	addi	sp,sp,-8
   4e634:	dc000015 	stw	r16,0(sp)
   4e638:	dfc00115 	stw	ra,4(sp)
   4e63c:	2021883a 	mov	r16,r4
   4e640:	20002226 	beq	r4,zero,4e6cc <__floatunsidf+0x9c>
   4e644:	00430040 	call	43004 <__clzsi2>
   4e648:	01010784 	movi	r4,1054
   4e64c:	2089c83a 	sub	r4,r4,r2
   4e650:	01810cc4 	movi	r6,1075
   4e654:	310dc83a 	sub	r6,r6,r4
   4e658:	00c007c4 	movi	r3,31
   4e65c:	1980120e 	bge	r3,r6,4e6a8 <__floatunsidf+0x78>
   4e660:	00c104c4 	movi	r3,1043
   4e664:	1907c83a 	sub	r3,r3,r4
   4e668:	80ca983a 	sll	r5,r16,r3
   4e66c:	00800434 	movhi	r2,16
   4e670:	10bfffc4 	addi	r2,r2,-1
   4e674:	2101ffcc 	andi	r4,r4,2047
   4e678:	0021883a 	mov	r16,zero
   4e67c:	288a703a 	and	r5,r5,r2
   4e680:	2008953a 	slli	r4,r4,20
   4e684:	00c00434 	movhi	r3,16
   4e688:	18ffffc4 	addi	r3,r3,-1
   4e68c:	28c6703a 	and	r3,r5,r3
   4e690:	8005883a 	mov	r2,r16
   4e694:	1906b03a 	or	r3,r3,r4
   4e698:	dfc00117 	ldw	ra,4(sp)
   4e69c:	dc000017 	ldw	r16,0(sp)
   4e6a0:	dec00204 	addi	sp,sp,8
   4e6a4:	f800283a 	ret
   4e6a8:	00c002c4 	movi	r3,11
   4e6ac:	188bc83a 	sub	r5,r3,r2
   4e6b0:	814ad83a 	srl	r5,r16,r5
   4e6b4:	00c00434 	movhi	r3,16
   4e6b8:	18ffffc4 	addi	r3,r3,-1
   4e6bc:	81a0983a 	sll	r16,r16,r6
   4e6c0:	2101ffcc 	andi	r4,r4,2047
   4e6c4:	28ca703a 	and	r5,r5,r3
   4e6c8:	003fed06 	br	4e680 <__alt_data_end+0xfffce680>
   4e6cc:	0009883a 	mov	r4,zero
   4e6d0:	000b883a 	mov	r5,zero
   4e6d4:	003fea06 	br	4e680 <__alt_data_end+0xfffce680>

0004e6d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e6d8:	defffe04 	addi	sp,sp,-8
   4e6dc:	dfc00115 	stw	ra,4(sp)
   4e6e0:	df000015 	stw	fp,0(sp)
   4e6e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e6e8:	d0a00b17 	ldw	r2,-32724(gp)
   4e6ec:	10000326 	beq	r2,zero,4e6fc <alt_get_errno+0x24>
   4e6f0:	d0a00b17 	ldw	r2,-32724(gp)
   4e6f4:	103ee83a 	callr	r2
   4e6f8:	00000106 	br	4e700 <alt_get_errno+0x28>
   4e6fc:	d0a6fd04 	addi	r2,gp,-25612
}
   4e700:	e037883a 	mov	sp,fp
   4e704:	dfc00117 	ldw	ra,4(sp)
   4e708:	df000017 	ldw	fp,0(sp)
   4e70c:	dec00204 	addi	sp,sp,8
   4e710:	f800283a 	ret

0004e714 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4e714:	defffb04 	addi	sp,sp,-20
   4e718:	dfc00415 	stw	ra,16(sp)
   4e71c:	df000315 	stw	fp,12(sp)
   4e720:	df000304 	addi	fp,sp,12
   4e724:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4e728:	e0bfff17 	ldw	r2,-4(fp)
   4e72c:	10000616 	blt	r2,zero,4e748 <close+0x34>
   4e730:	e0bfff17 	ldw	r2,-4(fp)
   4e734:	10c00324 	muli	r3,r2,12
   4e738:	00800174 	movhi	r2,5
   4e73c:	1086f504 	addi	r2,r2,7124
   4e740:	1885883a 	add	r2,r3,r2
   4e744:	00000106 	br	4e74c <close+0x38>
   4e748:	0005883a 	mov	r2,zero
   4e74c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4e750:	e0bffd17 	ldw	r2,-12(fp)
   4e754:	10001926 	beq	r2,zero,4e7bc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4e758:	e0bffd17 	ldw	r2,-12(fp)
   4e75c:	10800017 	ldw	r2,0(r2)
   4e760:	10800417 	ldw	r2,16(r2)
   4e764:	10000626 	beq	r2,zero,4e780 <close+0x6c>
   4e768:	e0bffd17 	ldw	r2,-12(fp)
   4e76c:	10800017 	ldw	r2,0(r2)
   4e770:	10800417 	ldw	r2,16(r2)
   4e774:	e13ffd17 	ldw	r4,-12(fp)
   4e778:	103ee83a 	callr	r2
   4e77c:	00000106 	br	4e784 <close+0x70>
   4e780:	0005883a 	mov	r2,zero
   4e784:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4e788:	e13fff17 	ldw	r4,-4(fp)
   4e78c:	004edd40 	call	4edd4 <alt_release_fd>
    if (rval < 0)
   4e790:	e0bffe17 	ldw	r2,-8(fp)
   4e794:	1000070e 	bge	r2,zero,4e7b4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4e798:	004e6d80 	call	4e6d8 <alt_get_errno>
   4e79c:	1007883a 	mov	r3,r2
   4e7a0:	e0bffe17 	ldw	r2,-8(fp)
   4e7a4:	0085c83a 	sub	r2,zero,r2
   4e7a8:	18800015 	stw	r2,0(r3)
      return -1;
   4e7ac:	00bfffc4 	movi	r2,-1
   4e7b0:	00000706 	br	4e7d0 <close+0xbc>
    }
    return 0;
   4e7b4:	0005883a 	mov	r2,zero
   4e7b8:	00000506 	br	4e7d0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e7bc:	004e6d80 	call	4e6d8 <alt_get_errno>
   4e7c0:	1007883a 	mov	r3,r2
   4e7c4:	00801444 	movi	r2,81
   4e7c8:	18800015 	stw	r2,0(r3)
    return -1;
   4e7cc:	00bfffc4 	movi	r2,-1
  }
}
   4e7d0:	e037883a 	mov	sp,fp
   4e7d4:	dfc00117 	ldw	ra,4(sp)
   4e7d8:	df000017 	ldw	fp,0(sp)
   4e7dc:	dec00204 	addi	sp,sp,8
   4e7e0:	f800283a 	ret

0004e7e4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4e7e4:	defffc04 	addi	sp,sp,-16
   4e7e8:	df000315 	stw	fp,12(sp)
   4e7ec:	df000304 	addi	fp,sp,12
   4e7f0:	e13ffd15 	stw	r4,-12(fp)
   4e7f4:	e17ffe15 	stw	r5,-8(fp)
   4e7f8:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4e7fc:	e0bfff17 	ldw	r2,-4(fp)
}
   4e800:	e037883a 	mov	sp,fp
   4e804:	df000017 	ldw	fp,0(sp)
   4e808:	dec00104 	addi	sp,sp,4
   4e80c:	f800283a 	ret

0004e810 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e810:	defffe04 	addi	sp,sp,-8
   4e814:	dfc00115 	stw	ra,4(sp)
   4e818:	df000015 	stw	fp,0(sp)
   4e81c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e820:	d0a00b17 	ldw	r2,-32724(gp)
   4e824:	10000326 	beq	r2,zero,4e834 <alt_get_errno+0x24>
   4e828:	d0a00b17 	ldw	r2,-32724(gp)
   4e82c:	103ee83a 	callr	r2
   4e830:	00000106 	br	4e838 <alt_get_errno+0x28>
   4e834:	d0a6fd04 	addi	r2,gp,-25612
}
   4e838:	e037883a 	mov	sp,fp
   4e83c:	dfc00117 	ldw	ra,4(sp)
   4e840:	df000017 	ldw	fp,0(sp)
   4e844:	dec00204 	addi	sp,sp,8
   4e848:	f800283a 	ret

0004e84c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4e84c:	defffb04 	addi	sp,sp,-20
   4e850:	dfc00415 	stw	ra,16(sp)
   4e854:	df000315 	stw	fp,12(sp)
   4e858:	df000304 	addi	fp,sp,12
   4e85c:	e13ffe15 	stw	r4,-8(fp)
   4e860:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e864:	e0bffe17 	ldw	r2,-8(fp)
   4e868:	10000616 	blt	r2,zero,4e884 <fstat+0x38>
   4e86c:	e0bffe17 	ldw	r2,-8(fp)
   4e870:	10c00324 	muli	r3,r2,12
   4e874:	00800174 	movhi	r2,5
   4e878:	1086f504 	addi	r2,r2,7124
   4e87c:	1885883a 	add	r2,r3,r2
   4e880:	00000106 	br	4e888 <fstat+0x3c>
   4e884:	0005883a 	mov	r2,zero
   4e888:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4e88c:	e0bffd17 	ldw	r2,-12(fp)
   4e890:	10001026 	beq	r2,zero,4e8d4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4e894:	e0bffd17 	ldw	r2,-12(fp)
   4e898:	10800017 	ldw	r2,0(r2)
   4e89c:	10800817 	ldw	r2,32(r2)
   4e8a0:	10000726 	beq	r2,zero,4e8c0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4e8a4:	e0bffd17 	ldw	r2,-12(fp)
   4e8a8:	10800017 	ldw	r2,0(r2)
   4e8ac:	10800817 	ldw	r2,32(r2)
   4e8b0:	e17fff17 	ldw	r5,-4(fp)
   4e8b4:	e13ffd17 	ldw	r4,-12(fp)
   4e8b8:	103ee83a 	callr	r2
   4e8bc:	00000a06 	br	4e8e8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4e8c0:	e0bfff17 	ldw	r2,-4(fp)
   4e8c4:	00c80004 	movi	r3,8192
   4e8c8:	10c00115 	stw	r3,4(r2)
      return 0;
   4e8cc:	0005883a 	mov	r2,zero
   4e8d0:	00000506 	br	4e8e8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e8d4:	004e8100 	call	4e810 <alt_get_errno>
   4e8d8:	1007883a 	mov	r3,r2
   4e8dc:	00801444 	movi	r2,81
   4e8e0:	18800015 	stw	r2,0(r3)
    return -1;
   4e8e4:	00bfffc4 	movi	r2,-1
  }
}
   4e8e8:	e037883a 	mov	sp,fp
   4e8ec:	dfc00117 	ldw	ra,4(sp)
   4e8f0:	df000017 	ldw	fp,0(sp)
   4e8f4:	dec00204 	addi	sp,sp,8
   4e8f8:	f800283a 	ret

0004e8fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e8fc:	defffe04 	addi	sp,sp,-8
   4e900:	dfc00115 	stw	ra,4(sp)
   4e904:	df000015 	stw	fp,0(sp)
   4e908:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e90c:	d0a00b17 	ldw	r2,-32724(gp)
   4e910:	10000326 	beq	r2,zero,4e920 <alt_get_errno+0x24>
   4e914:	d0a00b17 	ldw	r2,-32724(gp)
   4e918:	103ee83a 	callr	r2
   4e91c:	00000106 	br	4e924 <alt_get_errno+0x28>
   4e920:	d0a6fd04 	addi	r2,gp,-25612
}
   4e924:	e037883a 	mov	sp,fp
   4e928:	dfc00117 	ldw	ra,4(sp)
   4e92c:	df000017 	ldw	fp,0(sp)
   4e930:	dec00204 	addi	sp,sp,8
   4e934:	f800283a 	ret

0004e938 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4e938:	deffed04 	addi	sp,sp,-76
   4e93c:	dfc01215 	stw	ra,72(sp)
   4e940:	df001115 	stw	fp,68(sp)
   4e944:	df001104 	addi	fp,sp,68
   4e948:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e94c:	e0bfff17 	ldw	r2,-4(fp)
   4e950:	10000616 	blt	r2,zero,4e96c <isatty+0x34>
   4e954:	e0bfff17 	ldw	r2,-4(fp)
   4e958:	10c00324 	muli	r3,r2,12
   4e95c:	00800174 	movhi	r2,5
   4e960:	1086f504 	addi	r2,r2,7124
   4e964:	1885883a 	add	r2,r3,r2
   4e968:	00000106 	br	4e970 <isatty+0x38>
   4e96c:	0005883a 	mov	r2,zero
   4e970:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4e974:	e0bfef17 	ldw	r2,-68(fp)
   4e978:	10000e26 	beq	r2,zero,4e9b4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4e97c:	e0bfef17 	ldw	r2,-68(fp)
   4e980:	10800017 	ldw	r2,0(r2)
   4e984:	10800817 	ldw	r2,32(r2)
   4e988:	1000021e 	bne	r2,zero,4e994 <isatty+0x5c>
    {
      return 1;
   4e98c:	00800044 	movi	r2,1
   4e990:	00000d06 	br	4e9c8 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4e994:	e0bff004 	addi	r2,fp,-64
   4e998:	100b883a 	mov	r5,r2
   4e99c:	e13fff17 	ldw	r4,-4(fp)
   4e9a0:	004e84c0 	call	4e84c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4e9a4:	e0bff117 	ldw	r2,-60(fp)
   4e9a8:	10880020 	cmpeqi	r2,r2,8192
   4e9ac:	10803fcc 	andi	r2,r2,255
   4e9b0:	00000506 	br	4e9c8 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e9b4:	004e8fc0 	call	4e8fc <alt_get_errno>
   4e9b8:	1007883a 	mov	r3,r2
   4e9bc:	00801444 	movi	r2,81
   4e9c0:	18800015 	stw	r2,0(r3)
    return 0;
   4e9c4:	0005883a 	mov	r2,zero
  }
}
   4e9c8:	e037883a 	mov	sp,fp
   4e9cc:	dfc00117 	ldw	ra,4(sp)
   4e9d0:	df000017 	ldw	fp,0(sp)
   4e9d4:	dec00204 	addi	sp,sp,8
   4e9d8:	f800283a 	ret

0004e9dc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4e9dc:	defffc04 	addi	sp,sp,-16
   4e9e0:	df000315 	stw	fp,12(sp)
   4e9e4:	df000304 	addi	fp,sp,12
   4e9e8:	e13ffd15 	stw	r4,-12(fp)
   4e9ec:	e17ffe15 	stw	r5,-8(fp)
   4e9f0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4e9f4:	e0fffe17 	ldw	r3,-8(fp)
   4e9f8:	e0bffd17 	ldw	r2,-12(fp)
   4e9fc:	18800c26 	beq	r3,r2,4ea30 <alt_load_section+0x54>
  {
    while( to != end )
   4ea00:	00000806 	br	4ea24 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4ea04:	e0bffe17 	ldw	r2,-8(fp)
   4ea08:	10c00104 	addi	r3,r2,4
   4ea0c:	e0fffe15 	stw	r3,-8(fp)
   4ea10:	e0fffd17 	ldw	r3,-12(fp)
   4ea14:	19000104 	addi	r4,r3,4
   4ea18:	e13ffd15 	stw	r4,-12(fp)
   4ea1c:	18c00017 	ldw	r3,0(r3)
   4ea20:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4ea24:	e0fffe17 	ldw	r3,-8(fp)
   4ea28:	e0bfff17 	ldw	r2,-4(fp)
   4ea2c:	18bff51e 	bne	r3,r2,4ea04 <__alt_data_end+0xfffcea04>
    {
      *to++ = *from++;
    }
  }
}
   4ea30:	0001883a 	nop
   4ea34:	e037883a 	mov	sp,fp
   4ea38:	df000017 	ldw	fp,0(sp)
   4ea3c:	dec00104 	addi	sp,sp,4
   4ea40:	f800283a 	ret

0004ea44 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4ea44:	defffe04 	addi	sp,sp,-8
   4ea48:	dfc00115 	stw	ra,4(sp)
   4ea4c:	df000015 	stw	fp,0(sp)
   4ea50:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4ea54:	01800174 	movhi	r6,5
   4ea58:	318b7d04 	addi	r6,r6,11764
   4ea5c:	01400174 	movhi	r5,5
   4ea60:	29449a04 	addi	r5,r5,4712
   4ea64:	01000174 	movhi	r4,5
   4ea68:	210b7d04 	addi	r4,r4,11764
   4ea6c:	004e9dc0 	call	4e9dc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4ea70:	01800134 	movhi	r6,4
   4ea74:	31809104 	addi	r6,r6,580
   4ea78:	01400134 	movhi	r5,4
   4ea7c:	29400804 	addi	r5,r5,32
   4ea80:	01000134 	movhi	r4,4
   4ea84:	21000804 	addi	r4,r4,32
   4ea88:	004e9dc0 	call	4e9dc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4ea8c:	01800174 	movhi	r6,5
   4ea90:	31849a04 	addi	r6,r6,4712
   4ea94:	01400174 	movhi	r5,5
   4ea98:	2943c604 	addi	r5,r5,3864
   4ea9c:	01000174 	movhi	r4,5
   4eaa0:	2103c604 	addi	r4,r4,3864
   4eaa4:	004e9dc0 	call	4e9dc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4eaa8:	004fe040 	call	4fe04 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4eaac:	004ffec0 	call	4ffec <alt_icache_flush_all>
}
   4eab0:	0001883a 	nop
   4eab4:	e037883a 	mov	sp,fp
   4eab8:	dfc00117 	ldw	ra,4(sp)
   4eabc:	df000017 	ldw	fp,0(sp)
   4eac0:	dec00204 	addi	sp,sp,8
   4eac4:	f800283a 	ret

0004eac8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4eac8:	defffe04 	addi	sp,sp,-8
   4eacc:	dfc00115 	stw	ra,4(sp)
   4ead0:	df000015 	stw	fp,0(sp)
   4ead4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ead8:	d0a00b17 	ldw	r2,-32724(gp)
   4eadc:	10000326 	beq	r2,zero,4eaec <alt_get_errno+0x24>
   4eae0:	d0a00b17 	ldw	r2,-32724(gp)
   4eae4:	103ee83a 	callr	r2
   4eae8:	00000106 	br	4eaf0 <alt_get_errno+0x28>
   4eaec:	d0a6fd04 	addi	r2,gp,-25612
}
   4eaf0:	e037883a 	mov	sp,fp
   4eaf4:	dfc00117 	ldw	ra,4(sp)
   4eaf8:	df000017 	ldw	fp,0(sp)
   4eafc:	dec00204 	addi	sp,sp,8
   4eb00:	f800283a 	ret

0004eb04 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4eb04:	defff904 	addi	sp,sp,-28
   4eb08:	dfc00615 	stw	ra,24(sp)
   4eb0c:	df000515 	stw	fp,20(sp)
   4eb10:	df000504 	addi	fp,sp,20
   4eb14:	e13ffd15 	stw	r4,-12(fp)
   4eb18:	e17ffe15 	stw	r5,-8(fp)
   4eb1c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4eb20:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4eb24:	e0bffd17 	ldw	r2,-12(fp)
   4eb28:	10000616 	blt	r2,zero,4eb44 <lseek+0x40>
   4eb2c:	e0bffd17 	ldw	r2,-12(fp)
   4eb30:	10c00324 	muli	r3,r2,12
   4eb34:	00800174 	movhi	r2,5
   4eb38:	1086f504 	addi	r2,r2,7124
   4eb3c:	1885883a 	add	r2,r3,r2
   4eb40:	00000106 	br	4eb48 <lseek+0x44>
   4eb44:	0005883a 	mov	r2,zero
   4eb48:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4eb4c:	e0bffc17 	ldw	r2,-16(fp)
   4eb50:	10001026 	beq	r2,zero,4eb94 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4eb54:	e0bffc17 	ldw	r2,-16(fp)
   4eb58:	10800017 	ldw	r2,0(r2)
   4eb5c:	10800717 	ldw	r2,28(r2)
   4eb60:	10000926 	beq	r2,zero,4eb88 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4eb64:	e0bffc17 	ldw	r2,-16(fp)
   4eb68:	10800017 	ldw	r2,0(r2)
   4eb6c:	10800717 	ldw	r2,28(r2)
   4eb70:	e1bfff17 	ldw	r6,-4(fp)
   4eb74:	e17ffe17 	ldw	r5,-8(fp)
   4eb78:	e13ffc17 	ldw	r4,-16(fp)
   4eb7c:	103ee83a 	callr	r2
   4eb80:	e0bffb15 	stw	r2,-20(fp)
   4eb84:	00000506 	br	4eb9c <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4eb88:	00bfde84 	movi	r2,-134
   4eb8c:	e0bffb15 	stw	r2,-20(fp)
   4eb90:	00000206 	br	4eb9c <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4eb94:	00bfebc4 	movi	r2,-81
   4eb98:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4eb9c:	e0bffb17 	ldw	r2,-20(fp)
   4eba0:	1000070e 	bge	r2,zero,4ebc0 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4eba4:	004eac80 	call	4eac8 <alt_get_errno>
   4eba8:	1007883a 	mov	r3,r2
   4ebac:	e0bffb17 	ldw	r2,-20(fp)
   4ebb0:	0085c83a 	sub	r2,zero,r2
   4ebb4:	18800015 	stw	r2,0(r3)
    rc = -1;
   4ebb8:	00bfffc4 	movi	r2,-1
   4ebbc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4ebc0:	e0bffb17 	ldw	r2,-20(fp)
}
   4ebc4:	e037883a 	mov	sp,fp
   4ebc8:	dfc00117 	ldw	ra,4(sp)
   4ebcc:	df000017 	ldw	fp,0(sp)
   4ebd0:	dec00204 	addi	sp,sp,8
   4ebd4:	f800283a 	ret

0004ebd8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4ebd8:	defffd04 	addi	sp,sp,-12
   4ebdc:	dfc00215 	stw	ra,8(sp)
   4ebe0:	df000115 	stw	fp,4(sp)
   4ebe4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4ebe8:	0009883a 	mov	r4,zero
   4ebec:	004f0500 	call	4f050 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4ebf0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4ebf4:	004f0880 	call	4f088 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4ebf8:	01800174 	movhi	r6,5
   4ebfc:	31849004 	addi	r6,r6,4672
   4ec00:	01400174 	movhi	r5,5
   4ec04:	29449004 	addi	r5,r5,4672
   4ec08:	01000174 	movhi	r4,5
   4ec0c:	21049004 	addi	r4,r4,4672
   4ec10:	00503840 	call	50384 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4ec14:	004ff2c0 	call	4ff2c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4ec18:	01000174 	movhi	r4,5
   4ec1c:	213fe304 	addi	r4,r4,-116
   4ec20:	0050b840 	call	50b84 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4ec24:	d0a6fe17 	ldw	r2,-25608(gp)
   4ec28:	d0e6ff17 	ldw	r3,-25604(gp)
   4ec2c:	d1270017 	ldw	r4,-25600(gp)
   4ec30:	200d883a 	mov	r6,r4
   4ec34:	180b883a 	mov	r5,r3
   4ec38:	1009883a 	mov	r4,r2
   4ec3c:	00405d00 	call	405d0 <main>
   4ec40:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4ec44:	01000044 	movi	r4,1
   4ec48:	004e7140 	call	4e714 <close>
  exit (result);
   4ec4c:	e13fff17 	ldw	r4,-4(fp)
   4ec50:	0050b980 	call	50b98 <exit>

0004ec54 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4ec54:	defffe04 	addi	sp,sp,-8
   4ec58:	df000115 	stw	fp,4(sp)
   4ec5c:	df000104 	addi	fp,sp,4
   4ec60:	e13fff15 	stw	r4,-4(fp)
}
   4ec64:	0001883a 	nop
   4ec68:	e037883a 	mov	sp,fp
   4ec6c:	df000017 	ldw	fp,0(sp)
   4ec70:	dec00104 	addi	sp,sp,4
   4ec74:	f800283a 	ret

0004ec78 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4ec78:	defffe04 	addi	sp,sp,-8
   4ec7c:	df000115 	stw	fp,4(sp)
   4ec80:	df000104 	addi	fp,sp,4
   4ec84:	e13fff15 	stw	r4,-4(fp)
}
   4ec88:	0001883a 	nop
   4ec8c:	e037883a 	mov	sp,fp
   4ec90:	df000017 	ldw	fp,0(sp)
   4ec94:	dec00104 	addi	sp,sp,4
   4ec98:	f800283a 	ret

0004ec9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ec9c:	defffe04 	addi	sp,sp,-8
   4eca0:	dfc00115 	stw	ra,4(sp)
   4eca4:	df000015 	stw	fp,0(sp)
   4eca8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ecac:	d0a00b17 	ldw	r2,-32724(gp)
   4ecb0:	10000326 	beq	r2,zero,4ecc0 <alt_get_errno+0x24>
   4ecb4:	d0a00b17 	ldw	r2,-32724(gp)
   4ecb8:	103ee83a 	callr	r2
   4ecbc:	00000106 	br	4ecc4 <alt_get_errno+0x28>
   4ecc0:	d0a6fd04 	addi	r2,gp,-25612
}
   4ecc4:	e037883a 	mov	sp,fp
   4ecc8:	dfc00117 	ldw	ra,4(sp)
   4eccc:	df000017 	ldw	fp,0(sp)
   4ecd0:	dec00204 	addi	sp,sp,8
   4ecd4:	f800283a 	ret

0004ecd8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4ecd8:	defff904 	addi	sp,sp,-28
   4ecdc:	dfc00615 	stw	ra,24(sp)
   4ece0:	df000515 	stw	fp,20(sp)
   4ece4:	df000504 	addi	fp,sp,20
   4ece8:	e13ffd15 	stw	r4,-12(fp)
   4ecec:	e17ffe15 	stw	r5,-8(fp)
   4ecf0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ecf4:	e0bffd17 	ldw	r2,-12(fp)
   4ecf8:	10000616 	blt	r2,zero,4ed14 <read+0x3c>
   4ecfc:	e0bffd17 	ldw	r2,-12(fp)
   4ed00:	10c00324 	muli	r3,r2,12
   4ed04:	00800174 	movhi	r2,5
   4ed08:	1086f504 	addi	r2,r2,7124
   4ed0c:	1885883a 	add	r2,r3,r2
   4ed10:	00000106 	br	4ed18 <read+0x40>
   4ed14:	0005883a 	mov	r2,zero
   4ed18:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4ed1c:	e0bffb17 	ldw	r2,-20(fp)
   4ed20:	10002226 	beq	r2,zero,4edac <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4ed24:	e0bffb17 	ldw	r2,-20(fp)
   4ed28:	10800217 	ldw	r2,8(r2)
   4ed2c:	108000cc 	andi	r2,r2,3
   4ed30:	10800060 	cmpeqi	r2,r2,1
   4ed34:	1000181e 	bne	r2,zero,4ed98 <read+0xc0>
        (fd->dev->read))
   4ed38:	e0bffb17 	ldw	r2,-20(fp)
   4ed3c:	10800017 	ldw	r2,0(r2)
   4ed40:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4ed44:	10001426 	beq	r2,zero,4ed98 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4ed48:	e0bffb17 	ldw	r2,-20(fp)
   4ed4c:	10800017 	ldw	r2,0(r2)
   4ed50:	10800517 	ldw	r2,20(r2)
   4ed54:	e0ffff17 	ldw	r3,-4(fp)
   4ed58:	180d883a 	mov	r6,r3
   4ed5c:	e17ffe17 	ldw	r5,-8(fp)
   4ed60:	e13ffb17 	ldw	r4,-20(fp)
   4ed64:	103ee83a 	callr	r2
   4ed68:	e0bffc15 	stw	r2,-16(fp)
   4ed6c:	e0bffc17 	ldw	r2,-16(fp)
   4ed70:	1000070e 	bge	r2,zero,4ed90 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4ed74:	004ec9c0 	call	4ec9c <alt_get_errno>
   4ed78:	1007883a 	mov	r3,r2
   4ed7c:	e0bffc17 	ldw	r2,-16(fp)
   4ed80:	0085c83a 	sub	r2,zero,r2
   4ed84:	18800015 	stw	r2,0(r3)
          return -1;
   4ed88:	00bfffc4 	movi	r2,-1
   4ed8c:	00000c06 	br	4edc0 <read+0xe8>
        }
        return rval;
   4ed90:	e0bffc17 	ldw	r2,-16(fp)
   4ed94:	00000a06 	br	4edc0 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4ed98:	004ec9c0 	call	4ec9c <alt_get_errno>
   4ed9c:	1007883a 	mov	r3,r2
   4eda0:	00800344 	movi	r2,13
   4eda4:	18800015 	stw	r2,0(r3)
   4eda8:	00000406 	br	4edbc <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4edac:	004ec9c0 	call	4ec9c <alt_get_errno>
   4edb0:	1007883a 	mov	r3,r2
   4edb4:	00801444 	movi	r2,81
   4edb8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4edbc:	00bfffc4 	movi	r2,-1
}
   4edc0:	e037883a 	mov	sp,fp
   4edc4:	dfc00117 	ldw	ra,4(sp)
   4edc8:	df000017 	ldw	fp,0(sp)
   4edcc:	dec00204 	addi	sp,sp,8
   4edd0:	f800283a 	ret

0004edd4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4edd4:	defffe04 	addi	sp,sp,-8
   4edd8:	df000115 	stw	fp,4(sp)
   4eddc:	df000104 	addi	fp,sp,4
   4ede0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4ede4:	e0bfff17 	ldw	r2,-4(fp)
   4ede8:	108000d0 	cmplti	r2,r2,3
   4edec:	10000d1e 	bne	r2,zero,4ee24 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   4edf0:	00800174 	movhi	r2,5
   4edf4:	1086f504 	addi	r2,r2,7124
   4edf8:	e0ffff17 	ldw	r3,-4(fp)
   4edfc:	18c00324 	muli	r3,r3,12
   4ee00:	10c5883a 	add	r2,r2,r3
   4ee04:	10800204 	addi	r2,r2,8
   4ee08:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4ee0c:	00800174 	movhi	r2,5
   4ee10:	1086f504 	addi	r2,r2,7124
   4ee14:	e0ffff17 	ldw	r3,-4(fp)
   4ee18:	18c00324 	muli	r3,r3,12
   4ee1c:	10c5883a 	add	r2,r2,r3
   4ee20:	10000015 	stw	zero,0(r2)
  }
}
   4ee24:	0001883a 	nop
   4ee28:	e037883a 	mov	sp,fp
   4ee2c:	df000017 	ldw	fp,0(sp)
   4ee30:	dec00104 	addi	sp,sp,4
   4ee34:	f800283a 	ret

0004ee38 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4ee38:	defff904 	addi	sp,sp,-28
   4ee3c:	df000615 	stw	fp,24(sp)
   4ee40:	df000604 	addi	fp,sp,24
   4ee44:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ee48:	0005303a 	rdctl	r2,status
   4ee4c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ee50:	e0fffe17 	ldw	r3,-8(fp)
   4ee54:	00bfff84 	movi	r2,-2
   4ee58:	1884703a 	and	r2,r3,r2
   4ee5c:	1001703a 	wrctl	status,r2
  
  return context;
   4ee60:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4ee64:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4ee68:	d0a00c17 	ldw	r2,-32720(gp)
   4ee6c:	10c000c4 	addi	r3,r2,3
   4ee70:	00bfff04 	movi	r2,-4
   4ee74:	1884703a 	and	r2,r3,r2
   4ee78:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4ee7c:	d0e00c17 	ldw	r3,-32720(gp)
   4ee80:	e0bfff17 	ldw	r2,-4(fp)
   4ee84:	1887883a 	add	r3,r3,r2
   4ee88:	00800234 	movhi	r2,8
   4ee8c:	10800004 	addi	r2,r2,0
   4ee90:	10c0062e 	bgeu	r2,r3,4eeac <sbrk+0x74>
   4ee94:	e0bffb17 	ldw	r2,-20(fp)
   4ee98:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ee9c:	e0bffa17 	ldw	r2,-24(fp)
   4eea0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4eea4:	00bfffc4 	movi	r2,-1
   4eea8:	00000b06 	br	4eed8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4eeac:	d0a00c17 	ldw	r2,-32720(gp)
   4eeb0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4eeb4:	d0e00c17 	ldw	r3,-32720(gp)
   4eeb8:	e0bfff17 	ldw	r2,-4(fp)
   4eebc:	1885883a 	add	r2,r3,r2
   4eec0:	d0a00c15 	stw	r2,-32720(gp)
   4eec4:	e0bffb17 	ldw	r2,-20(fp)
   4eec8:	e0bffc15 	stw	r2,-16(fp)
   4eecc:	e0bffc17 	ldw	r2,-16(fp)
   4eed0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4eed4:	e0bffd17 	ldw	r2,-12(fp)
} 
   4eed8:	e037883a 	mov	sp,fp
   4eedc:	df000017 	ldw	fp,0(sp)
   4eee0:	dec00104 	addi	sp,sp,4
   4eee4:	f800283a 	ret

0004eee8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4eee8:	defffe04 	addi	sp,sp,-8
   4eeec:	dfc00115 	stw	ra,4(sp)
   4eef0:	df000015 	stw	fp,0(sp)
   4eef4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4eef8:	d0a00b17 	ldw	r2,-32724(gp)
   4eefc:	10000326 	beq	r2,zero,4ef0c <alt_get_errno+0x24>
   4ef00:	d0a00b17 	ldw	r2,-32724(gp)
   4ef04:	103ee83a 	callr	r2
   4ef08:	00000106 	br	4ef10 <alt_get_errno+0x28>
   4ef0c:	d0a6fd04 	addi	r2,gp,-25612
}
   4ef10:	e037883a 	mov	sp,fp
   4ef14:	dfc00117 	ldw	ra,4(sp)
   4ef18:	df000017 	ldw	fp,0(sp)
   4ef1c:	dec00204 	addi	sp,sp,8
   4ef20:	f800283a 	ret

0004ef24 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4ef24:	defff904 	addi	sp,sp,-28
   4ef28:	dfc00615 	stw	ra,24(sp)
   4ef2c:	df000515 	stw	fp,20(sp)
   4ef30:	df000504 	addi	fp,sp,20
   4ef34:	e13ffd15 	stw	r4,-12(fp)
   4ef38:	e17ffe15 	stw	r5,-8(fp)
   4ef3c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ef40:	e0bffd17 	ldw	r2,-12(fp)
   4ef44:	10000616 	blt	r2,zero,4ef60 <write+0x3c>
   4ef48:	e0bffd17 	ldw	r2,-12(fp)
   4ef4c:	10c00324 	muli	r3,r2,12
   4ef50:	00800174 	movhi	r2,5
   4ef54:	1086f504 	addi	r2,r2,7124
   4ef58:	1885883a 	add	r2,r3,r2
   4ef5c:	00000106 	br	4ef64 <write+0x40>
   4ef60:	0005883a 	mov	r2,zero
   4ef64:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4ef68:	e0bffb17 	ldw	r2,-20(fp)
   4ef6c:	10002126 	beq	r2,zero,4eff4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4ef70:	e0bffb17 	ldw	r2,-20(fp)
   4ef74:	10800217 	ldw	r2,8(r2)
   4ef78:	108000cc 	andi	r2,r2,3
   4ef7c:	10001826 	beq	r2,zero,4efe0 <write+0xbc>
   4ef80:	e0bffb17 	ldw	r2,-20(fp)
   4ef84:	10800017 	ldw	r2,0(r2)
   4ef88:	10800617 	ldw	r2,24(r2)
   4ef8c:	10001426 	beq	r2,zero,4efe0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4ef90:	e0bffb17 	ldw	r2,-20(fp)
   4ef94:	10800017 	ldw	r2,0(r2)
   4ef98:	10800617 	ldw	r2,24(r2)
   4ef9c:	e0ffff17 	ldw	r3,-4(fp)
   4efa0:	180d883a 	mov	r6,r3
   4efa4:	e17ffe17 	ldw	r5,-8(fp)
   4efa8:	e13ffb17 	ldw	r4,-20(fp)
   4efac:	103ee83a 	callr	r2
   4efb0:	e0bffc15 	stw	r2,-16(fp)
   4efb4:	e0bffc17 	ldw	r2,-16(fp)
   4efb8:	1000070e 	bge	r2,zero,4efd8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4efbc:	004eee80 	call	4eee8 <alt_get_errno>
   4efc0:	1007883a 	mov	r3,r2
   4efc4:	e0bffc17 	ldw	r2,-16(fp)
   4efc8:	0085c83a 	sub	r2,zero,r2
   4efcc:	18800015 	stw	r2,0(r3)
        return -1;
   4efd0:	00bfffc4 	movi	r2,-1
   4efd4:	00000c06 	br	4f008 <write+0xe4>
      }
      return rval;
   4efd8:	e0bffc17 	ldw	r2,-16(fp)
   4efdc:	00000a06 	br	4f008 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4efe0:	004eee80 	call	4eee8 <alt_get_errno>
   4efe4:	1007883a 	mov	r3,r2
   4efe8:	00800344 	movi	r2,13
   4efec:	18800015 	stw	r2,0(r3)
   4eff0:	00000406 	br	4f004 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4eff4:	004eee80 	call	4eee8 <alt_get_errno>
   4eff8:	1007883a 	mov	r3,r2
   4effc:	00801444 	movi	r2,81
   4f000:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f004:	00bfffc4 	movi	r2,-1
}
   4f008:	e037883a 	mov	sp,fp
   4f00c:	dfc00117 	ldw	ra,4(sp)
   4f010:	df000017 	ldw	fp,0(sp)
   4f014:	dec00204 	addi	sp,sp,8
   4f018:	f800283a 	ret

0004f01c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4f01c:	defffd04 	addi	sp,sp,-12
   4f020:	dfc00215 	stw	ra,8(sp)
   4f024:	df000115 	stw	fp,4(sp)
   4f028:	df000104 	addi	fp,sp,4
   4f02c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4f030:	d1600804 	addi	r5,gp,-32736
   4f034:	e13fff17 	ldw	r4,-4(fp)
   4f038:	004fe880 	call	4fe88 <alt_dev_llist_insert>
}
   4f03c:	e037883a 	mov	sp,fp
   4f040:	dfc00117 	ldw	ra,4(sp)
   4f044:	df000017 	ldw	fp,0(sp)
   4f048:	dec00204 	addi	sp,sp,8
   4f04c:	f800283a 	ret

0004f050 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4f050:	defffd04 	addi	sp,sp,-12
   4f054:	dfc00215 	stw	ra,8(sp)
   4f058:	df000115 	stw	fp,4(sp)
   4f05c:	df000104 	addi	fp,sp,4
   4f060:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   4f064:	00507f80 	call	507f8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4f068:	00800044 	movi	r2,1
   4f06c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4f070:	0001883a 	nop
   4f074:	e037883a 	mov	sp,fp
   4f078:	dfc00117 	ldw	ra,4(sp)
   4f07c:	df000017 	ldw	fp,0(sp)
   4f080:	dec00204 	addi	sp,sp,8
   4f084:	f800283a 	ret

0004f088 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4f088:	defffe04 	addi	sp,sp,-8
   4f08c:	dfc00115 	stw	ra,4(sp)
   4f090:	df000015 	stw	fp,0(sp)
   4f094:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   4f098:	000d883a 	mov	r6,zero
   4f09c:	000b883a 	mov	r5,zero
   4f0a0:	01000174 	movhi	r4,5
   4f0a4:	21075f04 	addi	r4,r4,7548
   4f0a8:	004f2440 	call	4f244 <altera_avalon_jtag_uart_init>
   4f0ac:	01000174 	movhi	r4,5
   4f0b0:	21075504 	addi	r4,r4,7508
   4f0b4:	004f01c0 	call	4f01c <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
   4f0b8:	00c00044 	movi	r3,1
   4f0bc:	00800234 	movhi	r2,8
   4f0c0:	10841004 	addi	r2,r2,4160
   4f0c4:	10c00035 	stwio	r3,0(r2)
}
   4f0c8:	0001883a 	nop
   4f0cc:	e037883a 	mov	sp,fp
   4f0d0:	dfc00117 	ldw	ra,4(sp)
   4f0d4:	df000017 	ldw	fp,0(sp)
   4f0d8:	dec00204 	addi	sp,sp,8
   4f0dc:	f800283a 	ret

0004f0e0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4f0e0:	defffa04 	addi	sp,sp,-24
   4f0e4:	dfc00515 	stw	ra,20(sp)
   4f0e8:	df000415 	stw	fp,16(sp)
   4f0ec:	df000404 	addi	fp,sp,16
   4f0f0:	e13ffd15 	stw	r4,-12(fp)
   4f0f4:	e17ffe15 	stw	r5,-8(fp)
   4f0f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f0fc:	e0bffd17 	ldw	r2,-12(fp)
   4f100:	10800017 	ldw	r2,0(r2)
   4f104:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4f108:	e0bffc17 	ldw	r2,-16(fp)
   4f10c:	10c00a04 	addi	r3,r2,40
   4f110:	e0bffd17 	ldw	r2,-12(fp)
   4f114:	10800217 	ldw	r2,8(r2)
   4f118:	100f883a 	mov	r7,r2
   4f11c:	e1bfff17 	ldw	r6,-4(fp)
   4f120:	e17ffe17 	ldw	r5,-8(fp)
   4f124:	1809883a 	mov	r4,r3
   4f128:	004f7080 	call	4f708 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4f12c:	e037883a 	mov	sp,fp
   4f130:	dfc00117 	ldw	ra,4(sp)
   4f134:	df000017 	ldw	fp,0(sp)
   4f138:	dec00204 	addi	sp,sp,8
   4f13c:	f800283a 	ret

0004f140 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4f140:	defffa04 	addi	sp,sp,-24
   4f144:	dfc00515 	stw	ra,20(sp)
   4f148:	df000415 	stw	fp,16(sp)
   4f14c:	df000404 	addi	fp,sp,16
   4f150:	e13ffd15 	stw	r4,-12(fp)
   4f154:	e17ffe15 	stw	r5,-8(fp)
   4f158:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f15c:	e0bffd17 	ldw	r2,-12(fp)
   4f160:	10800017 	ldw	r2,0(r2)
   4f164:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4f168:	e0bffc17 	ldw	r2,-16(fp)
   4f16c:	10c00a04 	addi	r3,r2,40
   4f170:	e0bffd17 	ldw	r2,-12(fp)
   4f174:	10800217 	ldw	r2,8(r2)
   4f178:	100f883a 	mov	r7,r2
   4f17c:	e1bfff17 	ldw	r6,-4(fp)
   4f180:	e17ffe17 	ldw	r5,-8(fp)
   4f184:	1809883a 	mov	r4,r3
   4f188:	004f9240 	call	4f924 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4f18c:	e037883a 	mov	sp,fp
   4f190:	dfc00117 	ldw	ra,4(sp)
   4f194:	df000017 	ldw	fp,0(sp)
   4f198:	dec00204 	addi	sp,sp,8
   4f19c:	f800283a 	ret

0004f1a0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4f1a0:	defffc04 	addi	sp,sp,-16
   4f1a4:	dfc00315 	stw	ra,12(sp)
   4f1a8:	df000215 	stw	fp,8(sp)
   4f1ac:	df000204 	addi	fp,sp,8
   4f1b0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f1b4:	e0bfff17 	ldw	r2,-4(fp)
   4f1b8:	10800017 	ldw	r2,0(r2)
   4f1bc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4f1c0:	e0bffe17 	ldw	r2,-8(fp)
   4f1c4:	10c00a04 	addi	r3,r2,40
   4f1c8:	e0bfff17 	ldw	r2,-4(fp)
   4f1cc:	10800217 	ldw	r2,8(r2)
   4f1d0:	100b883a 	mov	r5,r2
   4f1d4:	1809883a 	mov	r4,r3
   4f1d8:	004f5b00 	call	4f5b0 <altera_avalon_jtag_uart_close>
}
   4f1dc:	e037883a 	mov	sp,fp
   4f1e0:	dfc00117 	ldw	ra,4(sp)
   4f1e4:	df000017 	ldw	fp,0(sp)
   4f1e8:	dec00204 	addi	sp,sp,8
   4f1ec:	f800283a 	ret

0004f1f0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4f1f0:	defffa04 	addi	sp,sp,-24
   4f1f4:	dfc00515 	stw	ra,20(sp)
   4f1f8:	df000415 	stw	fp,16(sp)
   4f1fc:	df000404 	addi	fp,sp,16
   4f200:	e13ffd15 	stw	r4,-12(fp)
   4f204:	e17ffe15 	stw	r5,-8(fp)
   4f208:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4f20c:	e0bffd17 	ldw	r2,-12(fp)
   4f210:	10800017 	ldw	r2,0(r2)
   4f214:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4f218:	e0bffc17 	ldw	r2,-16(fp)
   4f21c:	10800a04 	addi	r2,r2,40
   4f220:	e1bfff17 	ldw	r6,-4(fp)
   4f224:	e17ffe17 	ldw	r5,-8(fp)
   4f228:	1009883a 	mov	r4,r2
   4f22c:	004f6180 	call	4f618 <altera_avalon_jtag_uart_ioctl>
}
   4f230:	e037883a 	mov	sp,fp
   4f234:	dfc00117 	ldw	ra,4(sp)
   4f238:	df000017 	ldw	fp,0(sp)
   4f23c:	dec00204 	addi	sp,sp,8
   4f240:	f800283a 	ret

0004f244 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4f244:	defffa04 	addi	sp,sp,-24
   4f248:	dfc00515 	stw	ra,20(sp)
   4f24c:	df000415 	stw	fp,16(sp)
   4f250:	df000404 	addi	fp,sp,16
   4f254:	e13ffd15 	stw	r4,-12(fp)
   4f258:	e17ffe15 	stw	r5,-8(fp)
   4f25c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f260:	e0bffd17 	ldw	r2,-12(fp)
   4f264:	00c00044 	movi	r3,1
   4f268:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4f26c:	e0bffd17 	ldw	r2,-12(fp)
   4f270:	10800017 	ldw	r2,0(r2)
   4f274:	10800104 	addi	r2,r2,4
   4f278:	1007883a 	mov	r3,r2
   4f27c:	e0bffd17 	ldw	r2,-12(fp)
   4f280:	10800817 	ldw	r2,32(r2)
   4f284:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4f288:	e0bffe17 	ldw	r2,-8(fp)
   4f28c:	e0ffff17 	ldw	r3,-4(fp)
   4f290:	d8000015 	stw	zero,0(sp)
   4f294:	e1fffd17 	ldw	r7,-12(fp)
   4f298:	01800174 	movhi	r6,5
   4f29c:	31bcc104 	addi	r6,r6,-3324
   4f2a0:	180b883a 	mov	r5,r3
   4f2a4:	1009883a 	mov	r4,r2
   4f2a8:	00500200 	call	50020 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4f2ac:	e0bffd17 	ldw	r2,-12(fp)
   4f2b0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4f2b4:	e0bffd17 	ldw	r2,-12(fp)
   4f2b8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4f2bc:	d0e70217 	ldw	r3,-25592(gp)
   4f2c0:	e1fffd17 	ldw	r7,-12(fp)
   4f2c4:	01800174 	movhi	r6,5
   4f2c8:	31bd4404 	addi	r6,r6,-2800
   4f2cc:	180b883a 	mov	r5,r3
   4f2d0:	1009883a 	mov	r4,r2
   4f2d4:	004fcd80 	call	4fcd8 <alt_alarm_start>
   4f2d8:	1000040e 	bge	r2,zero,4f2ec <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4f2dc:	e0fffd17 	ldw	r3,-12(fp)
   4f2e0:	00a00034 	movhi	r2,32768
   4f2e4:	10bfffc4 	addi	r2,r2,-1
   4f2e8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4f2ec:	0001883a 	nop
   4f2f0:	e037883a 	mov	sp,fp
   4f2f4:	dfc00117 	ldw	ra,4(sp)
   4f2f8:	df000017 	ldw	fp,0(sp)
   4f2fc:	dec00204 	addi	sp,sp,8
   4f300:	f800283a 	ret

0004f304 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4f304:	defff804 	addi	sp,sp,-32
   4f308:	df000715 	stw	fp,28(sp)
   4f30c:	df000704 	addi	fp,sp,28
   4f310:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4f314:	e0bfff17 	ldw	r2,-4(fp)
   4f318:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4f31c:	e0bffb17 	ldw	r2,-20(fp)
   4f320:	10800017 	ldw	r2,0(r2)
   4f324:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f328:	e0bffc17 	ldw	r2,-16(fp)
   4f32c:	10800104 	addi	r2,r2,4
   4f330:	10800037 	ldwio	r2,0(r2)
   4f334:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4f338:	e0bffd17 	ldw	r2,-12(fp)
   4f33c:	1080c00c 	andi	r2,r2,768
   4f340:	10006d26 	beq	r2,zero,4f4f8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4f344:	e0bffd17 	ldw	r2,-12(fp)
   4f348:	1080400c 	andi	r2,r2,256
   4f34c:	10003526 	beq	r2,zero,4f424 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4f350:	00800074 	movhi	r2,1
   4f354:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f358:	e0bffb17 	ldw	r2,-20(fp)
   4f35c:	10800a17 	ldw	r2,40(r2)
   4f360:	10800044 	addi	r2,r2,1
   4f364:	1081ffcc 	andi	r2,r2,2047
   4f368:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4f36c:	e0bffb17 	ldw	r2,-20(fp)
   4f370:	10c00b17 	ldw	r3,44(r2)
   4f374:	e0bffe17 	ldw	r2,-8(fp)
   4f378:	18801526 	beq	r3,r2,4f3d0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4f37c:	e0bffc17 	ldw	r2,-16(fp)
   4f380:	10800037 	ldwio	r2,0(r2)
   4f384:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4f388:	e0bff917 	ldw	r2,-28(fp)
   4f38c:	10a0000c 	andi	r2,r2,32768
   4f390:	10001126 	beq	r2,zero,4f3d8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4f394:	e0bffb17 	ldw	r2,-20(fp)
   4f398:	10800a17 	ldw	r2,40(r2)
   4f39c:	e0fff917 	ldw	r3,-28(fp)
   4f3a0:	1809883a 	mov	r4,r3
   4f3a4:	e0fffb17 	ldw	r3,-20(fp)
   4f3a8:	1885883a 	add	r2,r3,r2
   4f3ac:	10800e04 	addi	r2,r2,56
   4f3b0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f3b4:	e0bffb17 	ldw	r2,-20(fp)
   4f3b8:	10800a17 	ldw	r2,40(r2)
   4f3bc:	10800044 	addi	r2,r2,1
   4f3c0:	10c1ffcc 	andi	r3,r2,2047
   4f3c4:	e0bffb17 	ldw	r2,-20(fp)
   4f3c8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4f3cc:	003fe206 	br	4f358 <__alt_data_end+0xfffcf358>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4f3d0:	0001883a 	nop
   4f3d4:	00000106 	br	4f3dc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4f3d8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4f3dc:	e0bff917 	ldw	r2,-28(fp)
   4f3e0:	10bfffec 	andhi	r2,r2,65535
   4f3e4:	10000f26 	beq	r2,zero,4f424 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f3e8:	e0bffb17 	ldw	r2,-20(fp)
   4f3ec:	10c00817 	ldw	r3,32(r2)
   4f3f0:	00bfff84 	movi	r2,-2
   4f3f4:	1886703a 	and	r3,r3,r2
   4f3f8:	e0bffb17 	ldw	r2,-20(fp)
   4f3fc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4f400:	e0bffc17 	ldw	r2,-16(fp)
   4f404:	10800104 	addi	r2,r2,4
   4f408:	1007883a 	mov	r3,r2
   4f40c:	e0bffb17 	ldw	r2,-20(fp)
   4f410:	10800817 	ldw	r2,32(r2)
   4f414:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f418:	e0bffc17 	ldw	r2,-16(fp)
   4f41c:	10800104 	addi	r2,r2,4
   4f420:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4f424:	e0bffd17 	ldw	r2,-12(fp)
   4f428:	1080800c 	andi	r2,r2,512
   4f42c:	103fbe26 	beq	r2,zero,4f328 <__alt_data_end+0xfffcf328>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4f430:	e0bffd17 	ldw	r2,-12(fp)
   4f434:	1004d43a 	srli	r2,r2,16
   4f438:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4f43c:	00001406 	br	4f490 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4f440:	e0bffc17 	ldw	r2,-16(fp)
   4f444:	e0fffb17 	ldw	r3,-20(fp)
   4f448:	18c00d17 	ldw	r3,52(r3)
   4f44c:	e13ffb17 	ldw	r4,-20(fp)
   4f450:	20c7883a 	add	r3,r4,r3
   4f454:	18c20e04 	addi	r3,r3,2104
   4f458:	18c00003 	ldbu	r3,0(r3)
   4f45c:	18c03fcc 	andi	r3,r3,255
   4f460:	18c0201c 	xori	r3,r3,128
   4f464:	18ffe004 	addi	r3,r3,-128
   4f468:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f46c:	e0bffb17 	ldw	r2,-20(fp)
   4f470:	10800d17 	ldw	r2,52(r2)
   4f474:	10800044 	addi	r2,r2,1
   4f478:	10c1ffcc 	andi	r3,r2,2047
   4f47c:	e0bffb17 	ldw	r2,-20(fp)
   4f480:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4f484:	e0bffa17 	ldw	r2,-24(fp)
   4f488:	10bfffc4 	addi	r2,r2,-1
   4f48c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4f490:	e0bffa17 	ldw	r2,-24(fp)
   4f494:	10000526 	beq	r2,zero,4f4ac <altera_avalon_jtag_uart_irq+0x1a8>
   4f498:	e0bffb17 	ldw	r2,-20(fp)
   4f49c:	10c00d17 	ldw	r3,52(r2)
   4f4a0:	e0bffb17 	ldw	r2,-20(fp)
   4f4a4:	10800c17 	ldw	r2,48(r2)
   4f4a8:	18bfe51e 	bne	r3,r2,4f440 <__alt_data_end+0xfffcf440>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4f4ac:	e0bffa17 	ldw	r2,-24(fp)
   4f4b0:	103f9d26 	beq	r2,zero,4f328 <__alt_data_end+0xfffcf328>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4f4b4:	e0bffb17 	ldw	r2,-20(fp)
   4f4b8:	10c00817 	ldw	r3,32(r2)
   4f4bc:	00bfff44 	movi	r2,-3
   4f4c0:	1886703a 	and	r3,r3,r2
   4f4c4:	e0bffb17 	ldw	r2,-20(fp)
   4f4c8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f4cc:	e0bffb17 	ldw	r2,-20(fp)
   4f4d0:	10800017 	ldw	r2,0(r2)
   4f4d4:	10800104 	addi	r2,r2,4
   4f4d8:	1007883a 	mov	r3,r2
   4f4dc:	e0bffb17 	ldw	r2,-20(fp)
   4f4e0:	10800817 	ldw	r2,32(r2)
   4f4e4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f4e8:	e0bffc17 	ldw	r2,-16(fp)
   4f4ec:	10800104 	addi	r2,r2,4
   4f4f0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4f4f4:	003f8c06 	br	4f328 <__alt_data_end+0xfffcf328>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4f4f8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4f4fc:	0001883a 	nop
   4f500:	e037883a 	mov	sp,fp
   4f504:	df000017 	ldw	fp,0(sp)
   4f508:	dec00104 	addi	sp,sp,4
   4f50c:	f800283a 	ret

0004f510 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4f510:	defff804 	addi	sp,sp,-32
   4f514:	df000715 	stw	fp,28(sp)
   4f518:	df000704 	addi	fp,sp,28
   4f51c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4f520:	e0bffb17 	ldw	r2,-20(fp)
   4f524:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4f528:	e0bff917 	ldw	r2,-28(fp)
   4f52c:	10800017 	ldw	r2,0(r2)
   4f530:	10800104 	addi	r2,r2,4
   4f534:	10800037 	ldwio	r2,0(r2)
   4f538:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4f53c:	e0bffa17 	ldw	r2,-24(fp)
   4f540:	1081000c 	andi	r2,r2,1024
   4f544:	10000b26 	beq	r2,zero,4f574 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4f548:	e0bff917 	ldw	r2,-28(fp)
   4f54c:	10800017 	ldw	r2,0(r2)
   4f550:	10800104 	addi	r2,r2,4
   4f554:	1007883a 	mov	r3,r2
   4f558:	e0bff917 	ldw	r2,-28(fp)
   4f55c:	10800817 	ldw	r2,32(r2)
   4f560:	10810014 	ori	r2,r2,1024
   4f564:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4f568:	e0bff917 	ldw	r2,-28(fp)
   4f56c:	10000915 	stw	zero,36(r2)
   4f570:	00000a06 	br	4f59c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4f574:	e0bff917 	ldw	r2,-28(fp)
   4f578:	10c00917 	ldw	r3,36(r2)
   4f57c:	00a00034 	movhi	r2,32768
   4f580:	10bfff04 	addi	r2,r2,-4
   4f584:	10c00536 	bltu	r2,r3,4f59c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4f588:	e0bff917 	ldw	r2,-28(fp)
   4f58c:	10800917 	ldw	r2,36(r2)
   4f590:	10c00044 	addi	r3,r2,1
   4f594:	e0bff917 	ldw	r2,-28(fp)
   4f598:	10c00915 	stw	r3,36(r2)
   4f59c:	d0a70217 	ldw	r2,-25592(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4f5a0:	e037883a 	mov	sp,fp
   4f5a4:	df000017 	ldw	fp,0(sp)
   4f5a8:	dec00104 	addi	sp,sp,4
   4f5ac:	f800283a 	ret

0004f5b0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4f5b0:	defffd04 	addi	sp,sp,-12
   4f5b4:	df000215 	stw	fp,8(sp)
   4f5b8:	df000204 	addi	fp,sp,8
   4f5bc:	e13ffe15 	stw	r4,-8(fp)
   4f5c0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4f5c4:	00000506 	br	4f5dc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4f5c8:	e0bfff17 	ldw	r2,-4(fp)
   4f5cc:	1090000c 	andi	r2,r2,16384
   4f5d0:	10000226 	beq	r2,zero,4f5dc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4f5d4:	00bffd44 	movi	r2,-11
   4f5d8:	00000b06 	br	4f608 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4f5dc:	e0bffe17 	ldw	r2,-8(fp)
   4f5e0:	10c00d17 	ldw	r3,52(r2)
   4f5e4:	e0bffe17 	ldw	r2,-8(fp)
   4f5e8:	10800c17 	ldw	r2,48(r2)
   4f5ec:	18800526 	beq	r3,r2,4f604 <altera_avalon_jtag_uart_close+0x54>
   4f5f0:	e0bffe17 	ldw	r2,-8(fp)
   4f5f4:	10c00917 	ldw	r3,36(r2)
   4f5f8:	e0bffe17 	ldw	r2,-8(fp)
   4f5fc:	10800117 	ldw	r2,4(r2)
   4f600:	18bff136 	bltu	r3,r2,4f5c8 <__alt_data_end+0xfffcf5c8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4f604:	0005883a 	mov	r2,zero
}
   4f608:	e037883a 	mov	sp,fp
   4f60c:	df000017 	ldw	fp,0(sp)
   4f610:	dec00104 	addi	sp,sp,4
   4f614:	f800283a 	ret

0004f618 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4f618:	defffa04 	addi	sp,sp,-24
   4f61c:	df000515 	stw	fp,20(sp)
   4f620:	df000504 	addi	fp,sp,20
   4f624:	e13ffd15 	stw	r4,-12(fp)
   4f628:	e17ffe15 	stw	r5,-8(fp)
   4f62c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4f630:	00bff9c4 	movi	r2,-25
   4f634:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4f638:	e0bffe17 	ldw	r2,-8(fp)
   4f63c:	10da8060 	cmpeqi	r3,r2,27137
   4f640:	1800031e 	bne	r3,zero,4f650 <altera_avalon_jtag_uart_ioctl+0x38>
   4f644:	109a80a0 	cmpeqi	r2,r2,27138
   4f648:	1000181e 	bne	r2,zero,4f6ac <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4f64c:	00002906 	br	4f6f4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4f650:	e0bffd17 	ldw	r2,-12(fp)
   4f654:	10c00117 	ldw	r3,4(r2)
   4f658:	00a00034 	movhi	r2,32768
   4f65c:	10bfffc4 	addi	r2,r2,-1
   4f660:	18802126 	beq	r3,r2,4f6e8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4f664:	e0bfff17 	ldw	r2,-4(fp)
   4f668:	10800017 	ldw	r2,0(r2)
   4f66c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4f670:	e0bffc17 	ldw	r2,-16(fp)
   4f674:	10800090 	cmplti	r2,r2,2
   4f678:	1000061e 	bne	r2,zero,4f694 <altera_avalon_jtag_uart_ioctl+0x7c>
   4f67c:	e0fffc17 	ldw	r3,-16(fp)
   4f680:	00a00034 	movhi	r2,32768
   4f684:	10bfffc4 	addi	r2,r2,-1
   4f688:	18800226 	beq	r3,r2,4f694 <altera_avalon_jtag_uart_ioctl+0x7c>
   4f68c:	e0bffc17 	ldw	r2,-16(fp)
   4f690:	00000206 	br	4f69c <altera_avalon_jtag_uart_ioctl+0x84>
   4f694:	00a00034 	movhi	r2,32768
   4f698:	10bfff84 	addi	r2,r2,-2
   4f69c:	e0fffd17 	ldw	r3,-12(fp)
   4f6a0:	18800115 	stw	r2,4(r3)
      rc = 0;
   4f6a4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4f6a8:	00000f06 	br	4f6e8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4f6ac:	e0bffd17 	ldw	r2,-12(fp)
   4f6b0:	10c00117 	ldw	r3,4(r2)
   4f6b4:	00a00034 	movhi	r2,32768
   4f6b8:	10bfffc4 	addi	r2,r2,-1
   4f6bc:	18800c26 	beq	r3,r2,4f6f0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4f6c0:	e0bffd17 	ldw	r2,-12(fp)
   4f6c4:	10c00917 	ldw	r3,36(r2)
   4f6c8:	e0bffd17 	ldw	r2,-12(fp)
   4f6cc:	10800117 	ldw	r2,4(r2)
   4f6d0:	1885803a 	cmpltu	r2,r3,r2
   4f6d4:	10c03fcc 	andi	r3,r2,255
   4f6d8:	e0bfff17 	ldw	r2,-4(fp)
   4f6dc:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4f6e0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4f6e4:	00000206 	br	4f6f0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4f6e8:	0001883a 	nop
   4f6ec:	00000106 	br	4f6f4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4f6f0:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4f6f4:	e0bffb17 	ldw	r2,-20(fp)
}
   4f6f8:	e037883a 	mov	sp,fp
   4f6fc:	df000017 	ldw	fp,0(sp)
   4f700:	dec00104 	addi	sp,sp,4
   4f704:	f800283a 	ret

0004f708 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4f708:	defff304 	addi	sp,sp,-52
   4f70c:	dfc00c15 	stw	ra,48(sp)
   4f710:	df000b15 	stw	fp,44(sp)
   4f714:	df000b04 	addi	fp,sp,44
   4f718:	e13ffc15 	stw	r4,-16(fp)
   4f71c:	e17ffd15 	stw	r5,-12(fp)
   4f720:	e1bffe15 	stw	r6,-8(fp)
   4f724:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4f728:	e0bffd17 	ldw	r2,-12(fp)
   4f72c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f730:	00004706 	br	4f850 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4f734:	e0bffc17 	ldw	r2,-16(fp)
   4f738:	10800a17 	ldw	r2,40(r2)
   4f73c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4f740:	e0bffc17 	ldw	r2,-16(fp)
   4f744:	10800b17 	ldw	r2,44(r2)
   4f748:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4f74c:	e0fff717 	ldw	r3,-36(fp)
   4f750:	e0bff817 	ldw	r2,-32(fp)
   4f754:	18800536 	bltu	r3,r2,4f76c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4f758:	e0fff717 	ldw	r3,-36(fp)
   4f75c:	e0bff817 	ldw	r2,-32(fp)
   4f760:	1885c83a 	sub	r2,r3,r2
   4f764:	e0bff615 	stw	r2,-40(fp)
   4f768:	00000406 	br	4f77c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4f76c:	00c20004 	movi	r3,2048
   4f770:	e0bff817 	ldw	r2,-32(fp)
   4f774:	1885c83a 	sub	r2,r3,r2
   4f778:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4f77c:	e0bff617 	ldw	r2,-40(fp)
   4f780:	10001e26 	beq	r2,zero,4f7fc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4f784:	e0fffe17 	ldw	r3,-8(fp)
   4f788:	e0bff617 	ldw	r2,-40(fp)
   4f78c:	1880022e 	bgeu	r3,r2,4f798 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4f790:	e0bffe17 	ldw	r2,-8(fp)
   4f794:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4f798:	e0bffc17 	ldw	r2,-16(fp)
   4f79c:	10c00e04 	addi	r3,r2,56
   4f7a0:	e0bff817 	ldw	r2,-32(fp)
   4f7a4:	1885883a 	add	r2,r3,r2
   4f7a8:	e1bff617 	ldw	r6,-40(fp)
   4f7ac:	100b883a 	mov	r5,r2
   4f7b0:	e13ff517 	ldw	r4,-44(fp)
   4f7b4:	004850c0 	call	4850c <memcpy>
      ptr   += n;
   4f7b8:	e0fff517 	ldw	r3,-44(fp)
   4f7bc:	e0bff617 	ldw	r2,-40(fp)
   4f7c0:	1885883a 	add	r2,r3,r2
   4f7c4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4f7c8:	e0fffe17 	ldw	r3,-8(fp)
   4f7cc:	e0bff617 	ldw	r2,-40(fp)
   4f7d0:	1885c83a 	sub	r2,r3,r2
   4f7d4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f7d8:	e0fff817 	ldw	r3,-32(fp)
   4f7dc:	e0bff617 	ldw	r2,-40(fp)
   4f7e0:	1885883a 	add	r2,r3,r2
   4f7e4:	10c1ffcc 	andi	r3,r2,2047
   4f7e8:	e0bffc17 	ldw	r2,-16(fp)
   4f7ec:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4f7f0:	e0bffe17 	ldw	r2,-8(fp)
   4f7f4:	00bfcf16 	blt	zero,r2,4f734 <__alt_data_end+0xfffcf734>
   4f7f8:	00000106 	br	4f800 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4f7fc:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4f800:	e0fff517 	ldw	r3,-44(fp)
   4f804:	e0bffd17 	ldw	r2,-12(fp)
   4f808:	1880141e 	bne	r3,r2,4f85c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4f80c:	e0bfff17 	ldw	r2,-4(fp)
   4f810:	1090000c 	andi	r2,r2,16384
   4f814:	1000131e 	bne	r2,zero,4f864 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4f818:	0001883a 	nop
   4f81c:	e0bffc17 	ldw	r2,-16(fp)
   4f820:	10c00a17 	ldw	r3,40(r2)
   4f824:	e0bff717 	ldw	r2,-36(fp)
   4f828:	1880051e 	bne	r3,r2,4f840 <altera_avalon_jtag_uart_read+0x138>
   4f82c:	e0bffc17 	ldw	r2,-16(fp)
   4f830:	10c00917 	ldw	r3,36(r2)
   4f834:	e0bffc17 	ldw	r2,-16(fp)
   4f838:	10800117 	ldw	r2,4(r2)
   4f83c:	18bff736 	bltu	r3,r2,4f81c <__alt_data_end+0xfffcf81c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4f840:	e0bffc17 	ldw	r2,-16(fp)
   4f844:	10c00a17 	ldw	r3,40(r2)
   4f848:	e0bff717 	ldw	r2,-36(fp)
   4f84c:	18800726 	beq	r3,r2,4f86c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f850:	e0bffe17 	ldw	r2,-8(fp)
   4f854:	00bfb716 	blt	zero,r2,4f734 <__alt_data_end+0xfffcf734>
   4f858:	00000506 	br	4f870 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4f85c:	0001883a 	nop
   4f860:	00000306 	br	4f870 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4f864:	0001883a 	nop
   4f868:	00000106 	br	4f870 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4f86c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4f870:	e0fff517 	ldw	r3,-44(fp)
   4f874:	e0bffd17 	ldw	r2,-12(fp)
   4f878:	18801826 	beq	r3,r2,4f8dc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f87c:	0005303a 	rdctl	r2,status
   4f880:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f884:	e0fffb17 	ldw	r3,-20(fp)
   4f888:	00bfff84 	movi	r2,-2
   4f88c:	1884703a 	and	r2,r3,r2
   4f890:	1001703a 	wrctl	status,r2
  
  return context;
   4f894:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4f898:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f89c:	e0bffc17 	ldw	r2,-16(fp)
   4f8a0:	10800817 	ldw	r2,32(r2)
   4f8a4:	10c00054 	ori	r3,r2,1
   4f8a8:	e0bffc17 	ldw	r2,-16(fp)
   4f8ac:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f8b0:	e0bffc17 	ldw	r2,-16(fp)
   4f8b4:	10800017 	ldw	r2,0(r2)
   4f8b8:	10800104 	addi	r2,r2,4
   4f8bc:	1007883a 	mov	r3,r2
   4f8c0:	e0bffc17 	ldw	r2,-16(fp)
   4f8c4:	10800817 	ldw	r2,32(r2)
   4f8c8:	18800035 	stwio	r2,0(r3)
   4f8cc:	e0bffa17 	ldw	r2,-24(fp)
   4f8d0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f8d4:	e0bff917 	ldw	r2,-28(fp)
   4f8d8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4f8dc:	e0fff517 	ldw	r3,-44(fp)
   4f8e0:	e0bffd17 	ldw	r2,-12(fp)
   4f8e4:	18800426 	beq	r3,r2,4f8f8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4f8e8:	e0fff517 	ldw	r3,-44(fp)
   4f8ec:	e0bffd17 	ldw	r2,-12(fp)
   4f8f0:	1885c83a 	sub	r2,r3,r2
   4f8f4:	00000606 	br	4f910 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4f8f8:	e0bfff17 	ldw	r2,-4(fp)
   4f8fc:	1090000c 	andi	r2,r2,16384
   4f900:	10000226 	beq	r2,zero,4f90c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4f904:	00bffd44 	movi	r2,-11
   4f908:	00000106 	br	4f910 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4f90c:	00bffec4 	movi	r2,-5
}
   4f910:	e037883a 	mov	sp,fp
   4f914:	dfc00117 	ldw	ra,4(sp)
   4f918:	df000017 	ldw	fp,0(sp)
   4f91c:	dec00204 	addi	sp,sp,8
   4f920:	f800283a 	ret

0004f924 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4f924:	defff304 	addi	sp,sp,-52
   4f928:	dfc00c15 	stw	ra,48(sp)
   4f92c:	df000b15 	stw	fp,44(sp)
   4f930:	df000b04 	addi	fp,sp,44
   4f934:	e13ffc15 	stw	r4,-16(fp)
   4f938:	e17ffd15 	stw	r5,-12(fp)
   4f93c:	e1bffe15 	stw	r6,-8(fp)
   4f940:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4f944:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4f948:	e0bffd17 	ldw	r2,-12(fp)
   4f94c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4f950:	00003706 	br	4fa30 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4f954:	e0bffc17 	ldw	r2,-16(fp)
   4f958:	10800c17 	ldw	r2,48(r2)
   4f95c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4f960:	e0bffc17 	ldw	r2,-16(fp)
   4f964:	10800d17 	ldw	r2,52(r2)
   4f968:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4f96c:	e0fff917 	ldw	r3,-28(fp)
   4f970:	e0bff517 	ldw	r2,-44(fp)
   4f974:	1880062e 	bgeu	r3,r2,4f990 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4f978:	e0fff517 	ldw	r3,-44(fp)
   4f97c:	e0bff917 	ldw	r2,-28(fp)
   4f980:	1885c83a 	sub	r2,r3,r2
   4f984:	10bfffc4 	addi	r2,r2,-1
   4f988:	e0bff615 	stw	r2,-40(fp)
   4f98c:	00000b06 	br	4f9bc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4f990:	e0bff517 	ldw	r2,-44(fp)
   4f994:	10000526 	beq	r2,zero,4f9ac <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4f998:	00c20004 	movi	r3,2048
   4f99c:	e0bff917 	ldw	r2,-28(fp)
   4f9a0:	1885c83a 	sub	r2,r3,r2
   4f9a4:	e0bff615 	stw	r2,-40(fp)
   4f9a8:	00000406 	br	4f9bc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4f9ac:	00c1ffc4 	movi	r3,2047
   4f9b0:	e0bff917 	ldw	r2,-28(fp)
   4f9b4:	1885c83a 	sub	r2,r3,r2
   4f9b8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4f9bc:	e0bff617 	ldw	r2,-40(fp)
   4f9c0:	10001e26 	beq	r2,zero,4fa3c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4f9c4:	e0fffe17 	ldw	r3,-8(fp)
   4f9c8:	e0bff617 	ldw	r2,-40(fp)
   4f9cc:	1880022e 	bgeu	r3,r2,4f9d8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4f9d0:	e0bffe17 	ldw	r2,-8(fp)
   4f9d4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4f9d8:	e0bffc17 	ldw	r2,-16(fp)
   4f9dc:	10c20e04 	addi	r3,r2,2104
   4f9e0:	e0bff917 	ldw	r2,-28(fp)
   4f9e4:	1885883a 	add	r2,r3,r2
   4f9e8:	e1bff617 	ldw	r6,-40(fp)
   4f9ec:	e17ffd17 	ldw	r5,-12(fp)
   4f9f0:	1009883a 	mov	r4,r2
   4f9f4:	004850c0 	call	4850c <memcpy>
      ptr   += n;
   4f9f8:	e0fffd17 	ldw	r3,-12(fp)
   4f9fc:	e0bff617 	ldw	r2,-40(fp)
   4fa00:	1885883a 	add	r2,r3,r2
   4fa04:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4fa08:	e0fffe17 	ldw	r3,-8(fp)
   4fa0c:	e0bff617 	ldw	r2,-40(fp)
   4fa10:	1885c83a 	sub	r2,r3,r2
   4fa14:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fa18:	e0fff917 	ldw	r3,-28(fp)
   4fa1c:	e0bff617 	ldw	r2,-40(fp)
   4fa20:	1885883a 	add	r2,r3,r2
   4fa24:	10c1ffcc 	andi	r3,r2,2047
   4fa28:	e0bffc17 	ldw	r2,-16(fp)
   4fa2c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4fa30:	e0bffe17 	ldw	r2,-8(fp)
   4fa34:	00bfc716 	blt	zero,r2,4f954 <__alt_data_end+0xfffcf954>
   4fa38:	00000106 	br	4fa40 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4fa3c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4fa40:	0005303a 	rdctl	r2,status
   4fa44:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fa48:	e0fffb17 	ldw	r3,-20(fp)
   4fa4c:	00bfff84 	movi	r2,-2
   4fa50:	1884703a 	and	r2,r3,r2
   4fa54:	1001703a 	wrctl	status,r2
  
  return context;
   4fa58:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4fa5c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4fa60:	e0bffc17 	ldw	r2,-16(fp)
   4fa64:	10800817 	ldw	r2,32(r2)
   4fa68:	10c00094 	ori	r3,r2,2
   4fa6c:	e0bffc17 	ldw	r2,-16(fp)
   4fa70:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4fa74:	e0bffc17 	ldw	r2,-16(fp)
   4fa78:	10800017 	ldw	r2,0(r2)
   4fa7c:	10800104 	addi	r2,r2,4
   4fa80:	1007883a 	mov	r3,r2
   4fa84:	e0bffc17 	ldw	r2,-16(fp)
   4fa88:	10800817 	ldw	r2,32(r2)
   4fa8c:	18800035 	stwio	r2,0(r3)
   4fa90:	e0bffa17 	ldw	r2,-24(fp)
   4fa94:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4fa98:	e0bff817 	ldw	r2,-32(fp)
   4fa9c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4faa0:	e0bffe17 	ldw	r2,-8(fp)
   4faa4:	0080100e 	bge	zero,r2,4fae8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4faa8:	e0bfff17 	ldw	r2,-4(fp)
   4faac:	1090000c 	andi	r2,r2,16384
   4fab0:	1000101e 	bne	r2,zero,4faf4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4fab4:	0001883a 	nop
   4fab8:	e0bffc17 	ldw	r2,-16(fp)
   4fabc:	10c00d17 	ldw	r3,52(r2)
   4fac0:	e0bff517 	ldw	r2,-44(fp)
   4fac4:	1880051e 	bne	r3,r2,4fadc <altera_avalon_jtag_uart_write+0x1b8>
   4fac8:	e0bffc17 	ldw	r2,-16(fp)
   4facc:	10c00917 	ldw	r3,36(r2)
   4fad0:	e0bffc17 	ldw	r2,-16(fp)
   4fad4:	10800117 	ldw	r2,4(r2)
   4fad8:	18bff736 	bltu	r3,r2,4fab8 <__alt_data_end+0xfffcfab8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4fadc:	e0bffc17 	ldw	r2,-16(fp)
   4fae0:	10800917 	ldw	r2,36(r2)
   4fae4:	1000051e 	bne	r2,zero,4fafc <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4fae8:	e0bffe17 	ldw	r2,-8(fp)
   4faec:	00bfd016 	blt	zero,r2,4fa30 <__alt_data_end+0xfffcfa30>
   4faf0:	00000306 	br	4fb00 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4faf4:	0001883a 	nop
   4faf8:	00000106 	br	4fb00 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4fafc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4fb00:	e0fffd17 	ldw	r3,-12(fp)
   4fb04:	e0bff717 	ldw	r2,-36(fp)
   4fb08:	18800426 	beq	r3,r2,4fb1c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4fb0c:	e0fffd17 	ldw	r3,-12(fp)
   4fb10:	e0bff717 	ldw	r2,-36(fp)
   4fb14:	1885c83a 	sub	r2,r3,r2
   4fb18:	00000606 	br	4fb34 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4fb1c:	e0bfff17 	ldw	r2,-4(fp)
   4fb20:	1090000c 	andi	r2,r2,16384
   4fb24:	10000226 	beq	r2,zero,4fb30 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4fb28:	00bffd44 	movi	r2,-11
   4fb2c:	00000106 	br	4fb34 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4fb30:	00bffec4 	movi	r2,-5
}
   4fb34:	e037883a 	mov	sp,fp
   4fb38:	dfc00117 	ldw	ra,4(sp)
   4fb3c:	df000017 	ldw	fp,0(sp)
   4fb40:	dec00204 	addi	sp,sp,8
   4fb44:	f800283a 	ret

0004fb48 <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
   4fb48:	defff904 	addi	sp,sp,-28
   4fb4c:	df000615 	stw	fp,24(sp)
   4fb50:	df000604 	addi	fp,sp,24
   4fb54:	e13ffe15 	stw	r4,-8(fp)
   4fb58:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
   4fb5c:	e03ffa15 	stw	zero,-24(fp)
   4fb60:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
   4fb64:	000b883a 	mov	r5,zero
   4fb68:	e13ffe17 	ldw	r4,-8(fp)
   4fb6c:	21400035 	stwio	r5,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
   4fb70:	e13fff17 	ldw	r4,-4(fp)
   4fb74:	2008913a 	slli	r4,r4,4
   4fb78:	200b883a 	mov	r5,r4
   4fb7c:	e13ffe17 	ldw	r4,-8(fp)
   4fb80:	2149883a 	add	r4,r4,r5
   4fb84:	21000037 	ldwio	r4,0(r4)
   4fb88:	e13ffc15 	stw	r4,-16(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
   4fb8c:	e13fff17 	ldw	r4,-4(fp)
   4fb90:	2008913a 	slli	r4,r4,4
   4fb94:	21000104 	addi	r4,r4,4
   4fb98:	200b883a 	mov	r5,r4
   4fb9c:	e13ffe17 	ldw	r4,-8(fp)
   4fba0:	2149883a 	add	r4,r4,r5
   4fba4:	21000037 	ldwio	r4,0(r4)
   4fba8:	e13ffd15 	stw	r4,-12(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   4fbac:	e13ffd17 	ldw	r4,-12(fp)
   4fbb0:	2011883a 	mov	r8,r4
   4fbb4:	0013883a 	mov	r9,zero
   4fbb8:	4006983a 	sll	r3,r8,zero
   4fbbc:	0005883a 	mov	r2,zero
           ((alt_u64)(((alt_u64) lo)                 ))  ;
   4fbc0:	e13ffc17 	ldw	r4,-16(fp)
   4fbc4:	200d883a 	mov	r6,r4
   4fbc8:	000f883a 	mov	r7,zero

  PERF_STOP_MEASURING(hw_base_address);
  lo = IORD(hw_base_address, ( which_section*4   ));
  hi = IORD(hw_base_address, ((which_section*4)+1));

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   4fbcc:	1188b03a 	or	r4,r2,r6
   4fbd0:	e13ffa15 	stw	r4,-24(fp)
   4fbd4:	19c4b03a 	or	r2,r3,r7
   4fbd8:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
   4fbdc:	e0bffa17 	ldw	r2,-24(fp)
   4fbe0:	e0fffb17 	ldw	r3,-20(fp)
   4fbe4:	1009883a 	mov	r4,r2
   4fbe8:	180b883a 	mov	r5,r3
}
   4fbec:	2005883a 	mov	r2,r4
   4fbf0:	2807883a 	mov	r3,r5
   4fbf4:	e037883a 	mov	sp,fp
   4fbf8:	df000017 	ldw	fp,0(sp)
   4fbfc:	dec00104 	addi	sp,sp,4
   4fc00:	f800283a 	ret

0004fc04 <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
   4fc04:	defffd04 	addi	sp,sp,-12
   4fc08:	dfc00215 	stw	ra,8(sp)
   4fc0c:	df000115 	stw	fp,4(sp)
   4fc10:	df000104 	addi	fp,sp,4
   4fc14:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
   4fc18:	000b883a 	mov	r5,zero
   4fc1c:	e13fff17 	ldw	r4,-4(fp)
   4fc20:	004fb480 	call	4fb48 <perf_get_section_time>
   4fc24:	100b883a 	mov	r5,r2
   4fc28:	180d883a 	mov	r6,r3
   4fc2c:	2807883a 	mov	r3,r5
   4fc30:	3009883a 	mov	r4,r6
}
   4fc34:	1805883a 	mov	r2,r3
   4fc38:	2007883a 	mov	r3,r4
   4fc3c:	e037883a 	mov	sp,fp
   4fc40:	dfc00117 	ldw	ra,4(sp)
   4fc44:	df000017 	ldw	fp,0(sp)
   4fc48:	dec00204 	addi	sp,sp,8
   4fc4c:	f800283a 	ret

0004fc50 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
   4fc50:	defffd04 	addi	sp,sp,-12
   4fc54:	df000215 	stw	fp,8(sp)
   4fc58:	df000204 	addi	fp,sp,8
   4fc5c:	e13ffe15 	stw	r4,-8(fp)
   4fc60:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
   4fc64:	e0bfff17 	ldw	r2,-4(fp)
   4fc68:	1004913a 	slli	r2,r2,4
   4fc6c:	10800204 	addi	r2,r2,8
   4fc70:	1007883a 	mov	r3,r2
   4fc74:	e0bffe17 	ldw	r2,-8(fp)
   4fc78:	10c5883a 	add	r2,r2,r3
   4fc7c:	10800037 	ldwio	r2,0(r2)
}
   4fc80:	e037883a 	mov	sp,fp
   4fc84:	df000017 	ldw	fp,0(sp)
   4fc88:	dec00104 	addi	sp,sp,4
   4fc8c:	f800283a 	ret

0004fc90 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
   4fc90:	deffff04 	addi	sp,sp,-4
   4fc94:	df000015 	stw	fp,0(sp)
   4fc98:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
   4fc9c:	00800234 	movhi	r2,8
   4fca0:	10841004 	addi	r2,r2,4160
#else
    return (void*)0;
#endif
}
   4fca4:	e037883a 	mov	sp,fp
   4fca8:	df000017 	ldw	fp,0(sp)
   4fcac:	dec00104 	addi	sp,sp,4
   4fcb0:	f800283a 	ret

0004fcb4 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
   4fcb4:	deffff04 	addi	sp,sp,-4
   4fcb8:	df000015 	stw	fp,0(sp)
   4fcbc:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
   4fcc0:	0080bef4 	movhi	r2,763
   4fcc4:	10bc2004 	addi	r2,r2,-3968
}
   4fcc8:	e037883a 	mov	sp,fp
   4fccc:	df000017 	ldw	fp,0(sp)
   4fcd0:	dec00104 	addi	sp,sp,4
   4fcd4:	f800283a 	ret

0004fcd8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4fcd8:	defff504 	addi	sp,sp,-44
   4fcdc:	df000a15 	stw	fp,40(sp)
   4fce0:	df000a04 	addi	fp,sp,40
   4fce4:	e13ffc15 	stw	r4,-16(fp)
   4fce8:	e17ffd15 	stw	r5,-12(fp)
   4fcec:	e1bffe15 	stw	r6,-8(fp)
   4fcf0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4fcf4:	e03ff615 	stw	zero,-40(fp)
   4fcf8:	d0a70217 	ldw	r2,-25592(gp)
  
  if (alt_ticks_per_second ())
   4fcfc:	10003c26 	beq	r2,zero,4fdf0 <alt_alarm_start+0x118>
  {
    if (alarm)
   4fd00:	e0bffc17 	ldw	r2,-16(fp)
   4fd04:	10003826 	beq	r2,zero,4fde8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4fd08:	e0bffc17 	ldw	r2,-16(fp)
   4fd0c:	e0fffe17 	ldw	r3,-8(fp)
   4fd10:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4fd14:	e0bffc17 	ldw	r2,-16(fp)
   4fd18:	e0ffff17 	ldw	r3,-4(fp)
   4fd1c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4fd20:	0005303a 	rdctl	r2,status
   4fd24:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fd28:	e0fff917 	ldw	r3,-28(fp)
   4fd2c:	00bfff84 	movi	r2,-2
   4fd30:	1884703a 	and	r2,r3,r2
   4fd34:	1001703a 	wrctl	status,r2
  
  return context;
   4fd38:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4fd3c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4fd40:	d0a70317 	ldw	r2,-25588(gp)
      
      current_nticks = alt_nticks();
   4fd44:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4fd48:	e0fffd17 	ldw	r3,-12(fp)
   4fd4c:	e0bff617 	ldw	r2,-40(fp)
   4fd50:	1885883a 	add	r2,r3,r2
   4fd54:	10c00044 	addi	r3,r2,1
   4fd58:	e0bffc17 	ldw	r2,-16(fp)
   4fd5c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4fd60:	e0bffc17 	ldw	r2,-16(fp)
   4fd64:	10c00217 	ldw	r3,8(r2)
   4fd68:	e0bff617 	ldw	r2,-40(fp)
   4fd6c:	1880042e 	bgeu	r3,r2,4fd80 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4fd70:	e0bffc17 	ldw	r2,-16(fp)
   4fd74:	00c00044 	movi	r3,1
   4fd78:	10c00405 	stb	r3,16(r2)
   4fd7c:	00000206 	br	4fd88 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4fd80:	e0bffc17 	ldw	r2,-16(fp)
   4fd84:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4fd88:	e0bffc17 	ldw	r2,-16(fp)
   4fd8c:	d0e00e04 	addi	r3,gp,-32712
   4fd90:	e0fffa15 	stw	r3,-24(fp)
   4fd94:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4fd98:	e0bffb17 	ldw	r2,-20(fp)
   4fd9c:	e0fffa17 	ldw	r3,-24(fp)
   4fda0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4fda4:	e0bffa17 	ldw	r2,-24(fp)
   4fda8:	10c00017 	ldw	r3,0(r2)
   4fdac:	e0bffb17 	ldw	r2,-20(fp)
   4fdb0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4fdb4:	e0bffa17 	ldw	r2,-24(fp)
   4fdb8:	10800017 	ldw	r2,0(r2)
   4fdbc:	e0fffb17 	ldw	r3,-20(fp)
   4fdc0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4fdc4:	e0bffa17 	ldw	r2,-24(fp)
   4fdc8:	e0fffb17 	ldw	r3,-20(fp)
   4fdcc:	10c00015 	stw	r3,0(r2)
   4fdd0:	e0bff817 	ldw	r2,-32(fp)
   4fdd4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4fdd8:	e0bff717 	ldw	r2,-36(fp)
   4fddc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4fde0:	0005883a 	mov	r2,zero
   4fde4:	00000306 	br	4fdf4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4fde8:	00bffa84 	movi	r2,-22
   4fdec:	00000106 	br	4fdf4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4fdf0:	00bfde84 	movi	r2,-134
  }
}
   4fdf4:	e037883a 	mov	sp,fp
   4fdf8:	df000017 	ldw	fp,0(sp)
   4fdfc:	dec00104 	addi	sp,sp,4
   4fe00:	f800283a 	ret

0004fe04 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4fe04:	defffe04 	addi	sp,sp,-8
   4fe08:	df000115 	stw	fp,4(sp)
   4fe0c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4fe10:	e03fff15 	stw	zero,-4(fp)
   4fe14:	00000506 	br	4fe2c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4fe18:	e0bfff17 	ldw	r2,-4(fp)
   4fe1c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4fe20:	e0bfff17 	ldw	r2,-4(fp)
   4fe24:	10800804 	addi	r2,r2,32
   4fe28:	e0bfff15 	stw	r2,-4(fp)
   4fe2c:	e0bfff17 	ldw	r2,-4(fp)
   4fe30:	10820030 	cmpltui	r2,r2,2048
   4fe34:	103ff81e 	bne	r2,zero,4fe18 <__alt_data_end+0xfffcfe18>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4fe38:	0001883a 	nop
   4fe3c:	e037883a 	mov	sp,fp
   4fe40:	df000017 	ldw	fp,0(sp)
   4fe44:	dec00104 	addi	sp,sp,4
   4fe48:	f800283a 	ret

0004fe4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fe4c:	defffe04 	addi	sp,sp,-8
   4fe50:	dfc00115 	stw	ra,4(sp)
   4fe54:	df000015 	stw	fp,0(sp)
   4fe58:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fe5c:	d0a00b17 	ldw	r2,-32724(gp)
   4fe60:	10000326 	beq	r2,zero,4fe70 <alt_get_errno+0x24>
   4fe64:	d0a00b17 	ldw	r2,-32724(gp)
   4fe68:	103ee83a 	callr	r2
   4fe6c:	00000106 	br	4fe74 <alt_get_errno+0x28>
   4fe70:	d0a6fd04 	addi	r2,gp,-25612
}
   4fe74:	e037883a 	mov	sp,fp
   4fe78:	dfc00117 	ldw	ra,4(sp)
   4fe7c:	df000017 	ldw	fp,0(sp)
   4fe80:	dec00204 	addi	sp,sp,8
   4fe84:	f800283a 	ret

0004fe88 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4fe88:	defffa04 	addi	sp,sp,-24
   4fe8c:	dfc00515 	stw	ra,20(sp)
   4fe90:	df000415 	stw	fp,16(sp)
   4fe94:	df000404 	addi	fp,sp,16
   4fe98:	e13ffe15 	stw	r4,-8(fp)
   4fe9c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4fea0:	e0bffe17 	ldw	r2,-8(fp)
   4fea4:	10000326 	beq	r2,zero,4feb4 <alt_dev_llist_insert+0x2c>
   4fea8:	e0bffe17 	ldw	r2,-8(fp)
   4feac:	10800217 	ldw	r2,8(r2)
   4feb0:	1000061e 	bne	r2,zero,4fecc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4feb4:	004fe4c0 	call	4fe4c <alt_get_errno>
   4feb8:	1007883a 	mov	r3,r2
   4febc:	00800584 	movi	r2,22
   4fec0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4fec4:	00bffa84 	movi	r2,-22
   4fec8:	00001306 	br	4ff18 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4fecc:	e0bffe17 	ldw	r2,-8(fp)
   4fed0:	e0ffff17 	ldw	r3,-4(fp)
   4fed4:	e0fffc15 	stw	r3,-16(fp)
   4fed8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4fedc:	e0bffd17 	ldw	r2,-12(fp)
   4fee0:	e0fffc17 	ldw	r3,-16(fp)
   4fee4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4fee8:	e0bffc17 	ldw	r2,-16(fp)
   4feec:	10c00017 	ldw	r3,0(r2)
   4fef0:	e0bffd17 	ldw	r2,-12(fp)
   4fef4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4fef8:	e0bffc17 	ldw	r2,-16(fp)
   4fefc:	10800017 	ldw	r2,0(r2)
   4ff00:	e0fffd17 	ldw	r3,-12(fp)
   4ff04:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4ff08:	e0bffc17 	ldw	r2,-16(fp)
   4ff0c:	e0fffd17 	ldw	r3,-12(fp)
   4ff10:	10c00015 	stw	r3,0(r2)

  return 0;  
   4ff14:	0005883a 	mov	r2,zero
}
   4ff18:	e037883a 	mov	sp,fp
   4ff1c:	dfc00117 	ldw	ra,4(sp)
   4ff20:	df000017 	ldw	fp,0(sp)
   4ff24:	dec00204 	addi	sp,sp,8
   4ff28:	f800283a 	ret

0004ff2c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4ff2c:	defffd04 	addi	sp,sp,-12
   4ff30:	dfc00215 	stw	ra,8(sp)
   4ff34:	df000115 	stw	fp,4(sp)
   4ff38:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ff3c:	00800174 	movhi	r2,5
   4ff40:	1083c504 	addi	r2,r2,3860
   4ff44:	e0bfff15 	stw	r2,-4(fp)
   4ff48:	00000606 	br	4ff64 <_do_ctors+0x38>
        (*ctor) (); 
   4ff4c:	e0bfff17 	ldw	r2,-4(fp)
   4ff50:	10800017 	ldw	r2,0(r2)
   4ff54:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ff58:	e0bfff17 	ldw	r2,-4(fp)
   4ff5c:	10bfff04 	addi	r2,r2,-4
   4ff60:	e0bfff15 	stw	r2,-4(fp)
   4ff64:	e0ffff17 	ldw	r3,-4(fp)
   4ff68:	00800174 	movhi	r2,5
   4ff6c:	1083c604 	addi	r2,r2,3864
   4ff70:	18bff62e 	bgeu	r3,r2,4ff4c <__alt_data_end+0xfffcff4c>
        (*ctor) (); 
}
   4ff74:	0001883a 	nop
   4ff78:	e037883a 	mov	sp,fp
   4ff7c:	dfc00117 	ldw	ra,4(sp)
   4ff80:	df000017 	ldw	fp,0(sp)
   4ff84:	dec00204 	addi	sp,sp,8
   4ff88:	f800283a 	ret

0004ff8c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4ff8c:	defffd04 	addi	sp,sp,-12
   4ff90:	dfc00215 	stw	ra,8(sp)
   4ff94:	df000115 	stw	fp,4(sp)
   4ff98:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ff9c:	00800174 	movhi	r2,5
   4ffa0:	1083c504 	addi	r2,r2,3860
   4ffa4:	e0bfff15 	stw	r2,-4(fp)
   4ffa8:	00000606 	br	4ffc4 <_do_dtors+0x38>
        (*dtor) (); 
   4ffac:	e0bfff17 	ldw	r2,-4(fp)
   4ffb0:	10800017 	ldw	r2,0(r2)
   4ffb4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ffb8:	e0bfff17 	ldw	r2,-4(fp)
   4ffbc:	10bfff04 	addi	r2,r2,-4
   4ffc0:	e0bfff15 	stw	r2,-4(fp)
   4ffc4:	e0ffff17 	ldw	r3,-4(fp)
   4ffc8:	00800174 	movhi	r2,5
   4ffcc:	1083c604 	addi	r2,r2,3864
   4ffd0:	18bff62e 	bgeu	r3,r2,4ffac <__alt_data_end+0xfffcffac>
        (*dtor) (); 
}
   4ffd4:	0001883a 	nop
   4ffd8:	e037883a 	mov	sp,fp
   4ffdc:	dfc00117 	ldw	ra,4(sp)
   4ffe0:	df000017 	ldw	fp,0(sp)
   4ffe4:	dec00204 	addi	sp,sp,8
   4ffe8:	f800283a 	ret

0004ffec <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4ffec:	defffe04 	addi	sp,sp,-8
   4fff0:	dfc00115 	stw	ra,4(sp)
   4fff4:	df000015 	stw	fp,0(sp)
   4fff8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4fffc:	01440004 	movi	r5,4096
   50000:	0009883a 	mov	r4,zero
   50004:	0050a580 	call	50a58 <alt_icache_flush>
#endif
}
   50008:	0001883a 	nop
   5000c:	e037883a 	mov	sp,fp
   50010:	dfc00117 	ldw	ra,4(sp)
   50014:	df000017 	ldw	fp,0(sp)
   50018:	dec00204 	addi	sp,sp,8
   5001c:	f800283a 	ret

00050020 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   50020:	defff904 	addi	sp,sp,-28
   50024:	dfc00615 	stw	ra,24(sp)
   50028:	df000515 	stw	fp,20(sp)
   5002c:	df000504 	addi	fp,sp,20
   50030:	e13ffc15 	stw	r4,-16(fp)
   50034:	e17ffd15 	stw	r5,-12(fp)
   50038:	e1bffe15 	stw	r6,-8(fp)
   5003c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   50040:	e0800217 	ldw	r2,8(fp)
   50044:	d8800015 	stw	r2,0(sp)
   50048:	e1ffff17 	ldw	r7,-4(fp)
   5004c:	e1bffe17 	ldw	r6,-8(fp)
   50050:	e17ffd17 	ldw	r5,-12(fp)
   50054:	e13ffc17 	ldw	r4,-16(fp)
   50058:	00501d00 	call	501d0 <alt_iic_isr_register>
}  
   5005c:	e037883a 	mov	sp,fp
   50060:	dfc00117 	ldw	ra,4(sp)
   50064:	df000017 	ldw	fp,0(sp)
   50068:	dec00204 	addi	sp,sp,8
   5006c:	f800283a 	ret

00050070 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   50070:	defff904 	addi	sp,sp,-28
   50074:	df000615 	stw	fp,24(sp)
   50078:	df000604 	addi	fp,sp,24
   5007c:	e13ffe15 	stw	r4,-8(fp)
   50080:	e17fff15 	stw	r5,-4(fp)
   50084:	e0bfff17 	ldw	r2,-4(fp)
   50088:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5008c:	0005303a 	rdctl	r2,status
   50090:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50094:	e0fffb17 	ldw	r3,-20(fp)
   50098:	00bfff84 	movi	r2,-2
   5009c:	1884703a 	and	r2,r3,r2
   500a0:	1001703a 	wrctl	status,r2
  
  return context;
   500a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   500a8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   500ac:	00c00044 	movi	r3,1
   500b0:	e0bffa17 	ldw	r2,-24(fp)
   500b4:	1884983a 	sll	r2,r3,r2
   500b8:	1007883a 	mov	r3,r2
   500bc:	d0a70117 	ldw	r2,-25596(gp)
   500c0:	1884b03a 	or	r2,r3,r2
   500c4:	d0a70115 	stw	r2,-25596(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   500c8:	d0a70117 	ldw	r2,-25596(gp)
   500cc:	100170fa 	wrctl	ienable,r2
   500d0:	e0bffc17 	ldw	r2,-16(fp)
   500d4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   500d8:	e0bffd17 	ldw	r2,-12(fp)
   500dc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   500e0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   500e4:	0001883a 	nop
}
   500e8:	e037883a 	mov	sp,fp
   500ec:	df000017 	ldw	fp,0(sp)
   500f0:	dec00104 	addi	sp,sp,4
   500f4:	f800283a 	ret

000500f8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   500f8:	defff904 	addi	sp,sp,-28
   500fc:	df000615 	stw	fp,24(sp)
   50100:	df000604 	addi	fp,sp,24
   50104:	e13ffe15 	stw	r4,-8(fp)
   50108:	e17fff15 	stw	r5,-4(fp)
   5010c:	e0bfff17 	ldw	r2,-4(fp)
   50110:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50114:	0005303a 	rdctl	r2,status
   50118:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5011c:	e0fffb17 	ldw	r3,-20(fp)
   50120:	00bfff84 	movi	r2,-2
   50124:	1884703a 	and	r2,r3,r2
   50128:	1001703a 	wrctl	status,r2
  
  return context;
   5012c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   50130:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   50134:	00c00044 	movi	r3,1
   50138:	e0bffa17 	ldw	r2,-24(fp)
   5013c:	1884983a 	sll	r2,r3,r2
   50140:	0084303a 	nor	r2,zero,r2
   50144:	1007883a 	mov	r3,r2
   50148:	d0a70117 	ldw	r2,-25596(gp)
   5014c:	1884703a 	and	r2,r3,r2
   50150:	d0a70115 	stw	r2,-25596(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   50154:	d0a70117 	ldw	r2,-25596(gp)
   50158:	100170fa 	wrctl	ienable,r2
   5015c:	e0bffc17 	ldw	r2,-16(fp)
   50160:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50164:	e0bffd17 	ldw	r2,-12(fp)
   50168:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   5016c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   50170:	0001883a 	nop
}
   50174:	e037883a 	mov	sp,fp
   50178:	df000017 	ldw	fp,0(sp)
   5017c:	dec00104 	addi	sp,sp,4
   50180:	f800283a 	ret

00050184 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   50184:	defffc04 	addi	sp,sp,-16
   50188:	df000315 	stw	fp,12(sp)
   5018c:	df000304 	addi	fp,sp,12
   50190:	e13ffe15 	stw	r4,-8(fp)
   50194:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   50198:	000530fa 	rdctl	r2,ienable
   5019c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   501a0:	00c00044 	movi	r3,1
   501a4:	e0bfff17 	ldw	r2,-4(fp)
   501a8:	1884983a 	sll	r2,r3,r2
   501ac:	1007883a 	mov	r3,r2
   501b0:	e0bffd17 	ldw	r2,-12(fp)
   501b4:	1884703a 	and	r2,r3,r2
   501b8:	1004c03a 	cmpne	r2,r2,zero
   501bc:	10803fcc 	andi	r2,r2,255
}
   501c0:	e037883a 	mov	sp,fp
   501c4:	df000017 	ldw	fp,0(sp)
   501c8:	dec00104 	addi	sp,sp,4
   501cc:	f800283a 	ret

000501d0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   501d0:	defff504 	addi	sp,sp,-44
   501d4:	dfc00a15 	stw	ra,40(sp)
   501d8:	df000915 	stw	fp,36(sp)
   501dc:	df000904 	addi	fp,sp,36
   501e0:	e13ffc15 	stw	r4,-16(fp)
   501e4:	e17ffd15 	stw	r5,-12(fp)
   501e8:	e1bffe15 	stw	r6,-8(fp)
   501ec:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   501f0:	00bffa84 	movi	r2,-22
   501f4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   501f8:	e0bffd17 	ldw	r2,-12(fp)
   501fc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   50200:	e0bff817 	ldw	r2,-32(fp)
   50204:	10800808 	cmpgei	r2,r2,32
   50208:	1000271e 	bne	r2,zero,502a8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5020c:	0005303a 	rdctl	r2,status
   50210:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50214:	e0fffb17 	ldw	r3,-20(fp)
   50218:	00bfff84 	movi	r2,-2
   5021c:	1884703a 	and	r2,r3,r2
   50220:	1001703a 	wrctl	status,r2
  
  return context;
   50224:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   50228:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   5022c:	00800174 	movhi	r2,5
   50230:	10927c04 	addi	r2,r2,18928
   50234:	e0fff817 	ldw	r3,-32(fp)
   50238:	180690fa 	slli	r3,r3,3
   5023c:	10c5883a 	add	r2,r2,r3
   50240:	e0fffe17 	ldw	r3,-8(fp)
   50244:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   50248:	00800174 	movhi	r2,5
   5024c:	10927c04 	addi	r2,r2,18928
   50250:	e0fff817 	ldw	r3,-32(fp)
   50254:	180690fa 	slli	r3,r3,3
   50258:	10c5883a 	add	r2,r2,r3
   5025c:	10800104 	addi	r2,r2,4
   50260:	e0ffff17 	ldw	r3,-4(fp)
   50264:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   50268:	e0bffe17 	ldw	r2,-8(fp)
   5026c:	10000526 	beq	r2,zero,50284 <alt_iic_isr_register+0xb4>
   50270:	e0bff817 	ldw	r2,-32(fp)
   50274:	100b883a 	mov	r5,r2
   50278:	e13ffc17 	ldw	r4,-16(fp)
   5027c:	00500700 	call	50070 <alt_ic_irq_enable>
   50280:	00000406 	br	50294 <alt_iic_isr_register+0xc4>
   50284:	e0bff817 	ldw	r2,-32(fp)
   50288:	100b883a 	mov	r5,r2
   5028c:	e13ffc17 	ldw	r4,-16(fp)
   50290:	00500f80 	call	500f8 <alt_ic_irq_disable>
   50294:	e0bff715 	stw	r2,-36(fp)
   50298:	e0bffa17 	ldw	r2,-24(fp)
   5029c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   502a0:	e0bff917 	ldw	r2,-28(fp)
   502a4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   502a8:	e0bff717 	ldw	r2,-36(fp)
}
   502ac:	e037883a 	mov	sp,fp
   502b0:	dfc00117 	ldw	ra,4(sp)
   502b4:	df000017 	ldw	fp,0(sp)
   502b8:	dec00204 	addi	sp,sp,8
   502bc:	f800283a 	ret

000502c0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   502c0:	defff904 	addi	sp,sp,-28
   502c4:	dfc00615 	stw	ra,24(sp)
   502c8:	df000515 	stw	fp,20(sp)
   502cc:	df000504 	addi	fp,sp,20
   502d0:	e13ffc15 	stw	r4,-16(fp)
   502d4:	e17ffd15 	stw	r5,-12(fp)
   502d8:	e1bffe15 	stw	r6,-8(fp)
   502dc:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   502e0:	e1bfff17 	ldw	r6,-4(fp)
   502e4:	e17ffe17 	ldw	r5,-8(fp)
   502e8:	e13ffd17 	ldw	r4,-12(fp)
   502ec:	00505000 	call	50500 <open>
   502f0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   502f4:	e0bffb17 	ldw	r2,-20(fp)
   502f8:	10001c16 	blt	r2,zero,5036c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   502fc:	00800174 	movhi	r2,5
   50300:	1086f504 	addi	r2,r2,7124
   50304:	e0fffb17 	ldw	r3,-20(fp)
   50308:	18c00324 	muli	r3,r3,12
   5030c:	10c5883a 	add	r2,r2,r3
   50310:	10c00017 	ldw	r3,0(r2)
   50314:	e0bffc17 	ldw	r2,-16(fp)
   50318:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   5031c:	00800174 	movhi	r2,5
   50320:	1086f504 	addi	r2,r2,7124
   50324:	e0fffb17 	ldw	r3,-20(fp)
   50328:	18c00324 	muli	r3,r3,12
   5032c:	10c5883a 	add	r2,r2,r3
   50330:	10800104 	addi	r2,r2,4
   50334:	10c00017 	ldw	r3,0(r2)
   50338:	e0bffc17 	ldw	r2,-16(fp)
   5033c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   50340:	00800174 	movhi	r2,5
   50344:	1086f504 	addi	r2,r2,7124
   50348:	e0fffb17 	ldw	r3,-20(fp)
   5034c:	18c00324 	muli	r3,r3,12
   50350:	10c5883a 	add	r2,r2,r3
   50354:	10800204 	addi	r2,r2,8
   50358:	10c00017 	ldw	r3,0(r2)
   5035c:	e0bffc17 	ldw	r2,-16(fp)
   50360:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   50364:	e13ffb17 	ldw	r4,-20(fp)
   50368:	004edd40 	call	4edd4 <alt_release_fd>
  }
} 
   5036c:	0001883a 	nop
   50370:	e037883a 	mov	sp,fp
   50374:	dfc00117 	ldw	ra,4(sp)
   50378:	df000017 	ldw	fp,0(sp)
   5037c:	dec00204 	addi	sp,sp,8
   50380:	f800283a 	ret

00050384 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   50384:	defffb04 	addi	sp,sp,-20
   50388:	dfc00415 	stw	ra,16(sp)
   5038c:	df000315 	stw	fp,12(sp)
   50390:	df000304 	addi	fp,sp,12
   50394:	e13ffd15 	stw	r4,-12(fp)
   50398:	e17ffe15 	stw	r5,-8(fp)
   5039c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   503a0:	01c07fc4 	movi	r7,511
   503a4:	01800044 	movi	r6,1
   503a8:	e17ffd17 	ldw	r5,-12(fp)
   503ac:	01000174 	movhi	r4,5
   503b0:	2106f804 	addi	r4,r4,7136
   503b4:	00502c00 	call	502c0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   503b8:	01c07fc4 	movi	r7,511
   503bc:	000d883a 	mov	r6,zero
   503c0:	e17ffe17 	ldw	r5,-8(fp)
   503c4:	01000174 	movhi	r4,5
   503c8:	2106f504 	addi	r4,r4,7124
   503cc:	00502c00 	call	502c0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   503d0:	01c07fc4 	movi	r7,511
   503d4:	01800044 	movi	r6,1
   503d8:	e17fff17 	ldw	r5,-4(fp)
   503dc:	01000174 	movhi	r4,5
   503e0:	2106fb04 	addi	r4,r4,7148
   503e4:	00502c00 	call	502c0 <alt_open_fd>
}  
   503e8:	0001883a 	nop
   503ec:	e037883a 	mov	sp,fp
   503f0:	dfc00117 	ldw	ra,4(sp)
   503f4:	df000017 	ldw	fp,0(sp)
   503f8:	dec00204 	addi	sp,sp,8
   503fc:	f800283a 	ret

00050400 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50400:	defffe04 	addi	sp,sp,-8
   50404:	dfc00115 	stw	ra,4(sp)
   50408:	df000015 	stw	fp,0(sp)
   5040c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50410:	d0a00b17 	ldw	r2,-32724(gp)
   50414:	10000326 	beq	r2,zero,50424 <alt_get_errno+0x24>
   50418:	d0a00b17 	ldw	r2,-32724(gp)
   5041c:	103ee83a 	callr	r2
   50420:	00000106 	br	50428 <alt_get_errno+0x28>
   50424:	d0a6fd04 	addi	r2,gp,-25612
}
   50428:	e037883a 	mov	sp,fp
   5042c:	dfc00117 	ldw	ra,4(sp)
   50430:	df000017 	ldw	fp,0(sp)
   50434:	dec00204 	addi	sp,sp,8
   50438:	f800283a 	ret

0005043c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   5043c:	defffd04 	addi	sp,sp,-12
   50440:	df000215 	stw	fp,8(sp)
   50444:	df000204 	addi	fp,sp,8
   50448:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   5044c:	e0bfff17 	ldw	r2,-4(fp)
   50450:	10800217 	ldw	r2,8(r2)
   50454:	10d00034 	orhi	r3,r2,16384
   50458:	e0bfff17 	ldw	r2,-4(fp)
   5045c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   50460:	e03ffe15 	stw	zero,-8(fp)
   50464:	00001d06 	br	504dc <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   50468:	00800174 	movhi	r2,5
   5046c:	1086f504 	addi	r2,r2,7124
   50470:	e0fffe17 	ldw	r3,-8(fp)
   50474:	18c00324 	muli	r3,r3,12
   50478:	10c5883a 	add	r2,r2,r3
   5047c:	10c00017 	ldw	r3,0(r2)
   50480:	e0bfff17 	ldw	r2,-4(fp)
   50484:	10800017 	ldw	r2,0(r2)
   50488:	1880111e 	bne	r3,r2,504d0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   5048c:	00800174 	movhi	r2,5
   50490:	1086f504 	addi	r2,r2,7124
   50494:	e0fffe17 	ldw	r3,-8(fp)
   50498:	18c00324 	muli	r3,r3,12
   5049c:	10c5883a 	add	r2,r2,r3
   504a0:	10800204 	addi	r2,r2,8
   504a4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   504a8:	1000090e 	bge	r2,zero,504d0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   504ac:	e0bffe17 	ldw	r2,-8(fp)
   504b0:	10c00324 	muli	r3,r2,12
   504b4:	00800174 	movhi	r2,5
   504b8:	1086f504 	addi	r2,r2,7124
   504bc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   504c0:	e0bfff17 	ldw	r2,-4(fp)
   504c4:	18800226 	beq	r3,r2,504d0 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   504c8:	00bffcc4 	movi	r2,-13
   504cc:	00000806 	br	504f0 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   504d0:	e0bffe17 	ldw	r2,-8(fp)
   504d4:	10800044 	addi	r2,r2,1
   504d8:	e0bffe15 	stw	r2,-8(fp)
   504dc:	d0a00a17 	ldw	r2,-32728(gp)
   504e0:	1007883a 	mov	r3,r2
   504e4:	e0bffe17 	ldw	r2,-8(fp)
   504e8:	18bfdf2e 	bgeu	r3,r2,50468 <__alt_data_end+0xfffd0468>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   504ec:	0005883a 	mov	r2,zero
}
   504f0:	e037883a 	mov	sp,fp
   504f4:	df000017 	ldw	fp,0(sp)
   504f8:	dec00104 	addi	sp,sp,4
   504fc:	f800283a 	ret

00050500 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   50500:	defff604 	addi	sp,sp,-40
   50504:	dfc00915 	stw	ra,36(sp)
   50508:	df000815 	stw	fp,32(sp)
   5050c:	df000804 	addi	fp,sp,32
   50510:	e13ffd15 	stw	r4,-12(fp)
   50514:	e17ffe15 	stw	r5,-8(fp)
   50518:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   5051c:	00bfffc4 	movi	r2,-1
   50520:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   50524:	00bffb44 	movi	r2,-19
   50528:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   5052c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   50530:	d1600804 	addi	r5,gp,-32736
   50534:	e13ffd17 	ldw	r4,-12(fp)
   50538:	005081c0 	call	5081c <alt_find_dev>
   5053c:	e0bff815 	stw	r2,-32(fp)
   50540:	e0bff817 	ldw	r2,-32(fp)
   50544:	1000051e 	bne	r2,zero,5055c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   50548:	e13ffd17 	ldw	r4,-12(fp)
   5054c:	00508ac0 	call	508ac <alt_find_file>
   50550:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   50554:	00800044 	movi	r2,1
   50558:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   5055c:	e0bff817 	ldw	r2,-32(fp)
   50560:	10002926 	beq	r2,zero,50608 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   50564:	e13ff817 	ldw	r4,-32(fp)
   50568:	00509b40 	call	509b4 <alt_get_fd>
   5056c:	e0bff915 	stw	r2,-28(fp)
   50570:	e0bff917 	ldw	r2,-28(fp)
   50574:	1000030e 	bge	r2,zero,50584 <open+0x84>
    {
      status = index;
   50578:	e0bff917 	ldw	r2,-28(fp)
   5057c:	e0bffa15 	stw	r2,-24(fp)
   50580:	00002306 	br	50610 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   50584:	e0bff917 	ldw	r2,-28(fp)
   50588:	10c00324 	muli	r3,r2,12
   5058c:	00800174 	movhi	r2,5
   50590:	1086f504 	addi	r2,r2,7124
   50594:	1885883a 	add	r2,r3,r2
   50598:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   5059c:	e0fffe17 	ldw	r3,-8(fp)
   505a0:	00900034 	movhi	r2,16384
   505a4:	10bfffc4 	addi	r2,r2,-1
   505a8:	1886703a 	and	r3,r3,r2
   505ac:	e0bffc17 	ldw	r2,-16(fp)
   505b0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   505b4:	e0bffb17 	ldw	r2,-20(fp)
   505b8:	1000051e 	bne	r2,zero,505d0 <open+0xd0>
   505bc:	e13ffc17 	ldw	r4,-16(fp)
   505c0:	005043c0 	call	5043c <alt_file_locked>
   505c4:	e0bffa15 	stw	r2,-24(fp)
   505c8:	e0bffa17 	ldw	r2,-24(fp)
   505cc:	10001016 	blt	r2,zero,50610 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   505d0:	e0bff817 	ldw	r2,-32(fp)
   505d4:	10800317 	ldw	r2,12(r2)
   505d8:	10000826 	beq	r2,zero,505fc <open+0xfc>
   505dc:	e0bff817 	ldw	r2,-32(fp)
   505e0:	10800317 	ldw	r2,12(r2)
   505e4:	e1ffff17 	ldw	r7,-4(fp)
   505e8:	e1bffe17 	ldw	r6,-8(fp)
   505ec:	e17ffd17 	ldw	r5,-12(fp)
   505f0:	e13ffc17 	ldw	r4,-16(fp)
   505f4:	103ee83a 	callr	r2
   505f8:	00000106 	br	50600 <open+0x100>
   505fc:	0005883a 	mov	r2,zero
   50600:	e0bffa15 	stw	r2,-24(fp)
   50604:	00000206 	br	50610 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   50608:	00bffb44 	movi	r2,-19
   5060c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   50610:	e0bffa17 	ldw	r2,-24(fp)
   50614:	1000090e 	bge	r2,zero,5063c <open+0x13c>
  {
    alt_release_fd (index);  
   50618:	e13ff917 	ldw	r4,-28(fp)
   5061c:	004edd40 	call	4edd4 <alt_release_fd>
    ALT_ERRNO = -status;
   50620:	00504000 	call	50400 <alt_get_errno>
   50624:	1007883a 	mov	r3,r2
   50628:	e0bffa17 	ldw	r2,-24(fp)
   5062c:	0085c83a 	sub	r2,zero,r2
   50630:	18800015 	stw	r2,0(r3)
    return -1;
   50634:	00bfffc4 	movi	r2,-1
   50638:	00000106 	br	50640 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   5063c:	e0bff917 	ldw	r2,-28(fp)
}
   50640:	e037883a 	mov	sp,fp
   50644:	dfc00117 	ldw	ra,4(sp)
   50648:	df000017 	ldw	fp,0(sp)
   5064c:	dec00204 	addi	sp,sp,8
   50650:	f800283a 	ret

00050654 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   50654:	defffa04 	addi	sp,sp,-24
   50658:	df000515 	stw	fp,20(sp)
   5065c:	df000504 	addi	fp,sp,20
   50660:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50664:	0005303a 	rdctl	r2,status
   50668:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5066c:	e0fffc17 	ldw	r3,-16(fp)
   50670:	00bfff84 	movi	r2,-2
   50674:	1884703a 	and	r2,r3,r2
   50678:	1001703a 	wrctl	status,r2
  
  return context;
   5067c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   50680:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   50684:	e0bfff17 	ldw	r2,-4(fp)
   50688:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   5068c:	e0bffd17 	ldw	r2,-12(fp)
   50690:	10800017 	ldw	r2,0(r2)
   50694:	e0fffd17 	ldw	r3,-12(fp)
   50698:	18c00117 	ldw	r3,4(r3)
   5069c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   506a0:	e0bffd17 	ldw	r2,-12(fp)
   506a4:	10800117 	ldw	r2,4(r2)
   506a8:	e0fffd17 	ldw	r3,-12(fp)
   506ac:	18c00017 	ldw	r3,0(r3)
   506b0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   506b4:	e0bffd17 	ldw	r2,-12(fp)
   506b8:	e0fffd17 	ldw	r3,-12(fp)
   506bc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   506c0:	e0bffd17 	ldw	r2,-12(fp)
   506c4:	e0fffd17 	ldw	r3,-12(fp)
   506c8:	10c00015 	stw	r3,0(r2)
   506cc:	e0bffb17 	ldw	r2,-20(fp)
   506d0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   506d4:	e0bffe17 	ldw	r2,-8(fp)
   506d8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   506dc:	0001883a 	nop
   506e0:	e037883a 	mov	sp,fp
   506e4:	df000017 	ldw	fp,0(sp)
   506e8:	dec00104 	addi	sp,sp,4
   506ec:	f800283a 	ret

000506f0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   506f0:	defffb04 	addi	sp,sp,-20
   506f4:	dfc00415 	stw	ra,16(sp)
   506f8:	df000315 	stw	fp,12(sp)
   506fc:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   50700:	d0a00e17 	ldw	r2,-32712(gp)
   50704:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   50708:	d0a70317 	ldw	r2,-25588(gp)
   5070c:	10800044 	addi	r2,r2,1
   50710:	d0a70315 	stw	r2,-25588(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   50714:	00002e06 	br	507d0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   50718:	e0bffd17 	ldw	r2,-12(fp)
   5071c:	10800017 	ldw	r2,0(r2)
   50720:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   50724:	e0bffd17 	ldw	r2,-12(fp)
   50728:	10800403 	ldbu	r2,16(r2)
   5072c:	10803fcc 	andi	r2,r2,255
   50730:	10000426 	beq	r2,zero,50744 <alt_tick+0x54>
   50734:	d0a70317 	ldw	r2,-25588(gp)
   50738:	1000021e 	bne	r2,zero,50744 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   5073c:	e0bffd17 	ldw	r2,-12(fp)
   50740:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   50744:	e0bffd17 	ldw	r2,-12(fp)
   50748:	10800217 	ldw	r2,8(r2)
   5074c:	d0e70317 	ldw	r3,-25588(gp)
   50750:	18801d36 	bltu	r3,r2,507c8 <alt_tick+0xd8>
   50754:	e0bffd17 	ldw	r2,-12(fp)
   50758:	10800403 	ldbu	r2,16(r2)
   5075c:	10803fcc 	andi	r2,r2,255
   50760:	1000191e 	bne	r2,zero,507c8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   50764:	e0bffd17 	ldw	r2,-12(fp)
   50768:	10800317 	ldw	r2,12(r2)
   5076c:	e0fffd17 	ldw	r3,-12(fp)
   50770:	18c00517 	ldw	r3,20(r3)
   50774:	1809883a 	mov	r4,r3
   50778:	103ee83a 	callr	r2
   5077c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   50780:	e0bfff17 	ldw	r2,-4(fp)
   50784:	1000031e 	bne	r2,zero,50794 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   50788:	e13ffd17 	ldw	r4,-12(fp)
   5078c:	00506540 	call	50654 <alt_alarm_stop>
   50790:	00000d06 	br	507c8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   50794:	e0bffd17 	ldw	r2,-12(fp)
   50798:	10c00217 	ldw	r3,8(r2)
   5079c:	e0bfff17 	ldw	r2,-4(fp)
   507a0:	1887883a 	add	r3,r3,r2
   507a4:	e0bffd17 	ldw	r2,-12(fp)
   507a8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   507ac:	e0bffd17 	ldw	r2,-12(fp)
   507b0:	10c00217 	ldw	r3,8(r2)
   507b4:	d0a70317 	ldw	r2,-25588(gp)
   507b8:	1880032e 	bgeu	r3,r2,507c8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   507bc:	e0bffd17 	ldw	r2,-12(fp)
   507c0:	00c00044 	movi	r3,1
   507c4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   507c8:	e0bffe17 	ldw	r2,-8(fp)
   507cc:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   507d0:	e0fffd17 	ldw	r3,-12(fp)
   507d4:	d0a00e04 	addi	r2,gp,-32712
   507d8:	18bfcf1e 	bne	r3,r2,50718 <__alt_data_end+0xfffd0718>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   507dc:	0001883a 	nop
}
   507e0:	0001883a 	nop
   507e4:	e037883a 	mov	sp,fp
   507e8:	dfc00117 	ldw	ra,4(sp)
   507ec:	df000017 	ldw	fp,0(sp)
   507f0:	dec00204 	addi	sp,sp,8
   507f4:	f800283a 	ret

000507f8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   507f8:	deffff04 	addi	sp,sp,-4
   507fc:	df000015 	stw	fp,0(sp)
   50800:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   50804:	000170fa 	wrctl	ienable,zero
}
   50808:	0001883a 	nop
   5080c:	e037883a 	mov	sp,fp
   50810:	df000017 	ldw	fp,0(sp)
   50814:	dec00104 	addi	sp,sp,4
   50818:	f800283a 	ret

0005081c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   5081c:	defffa04 	addi	sp,sp,-24
   50820:	dfc00515 	stw	ra,20(sp)
   50824:	df000415 	stw	fp,16(sp)
   50828:	df000404 	addi	fp,sp,16
   5082c:	e13ffe15 	stw	r4,-8(fp)
   50830:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   50834:	e0bfff17 	ldw	r2,-4(fp)
   50838:	10800017 	ldw	r2,0(r2)
   5083c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   50840:	e13ffe17 	ldw	r4,-8(fp)
   50844:	0049a580 	call	49a58 <strlen>
   50848:	10800044 	addi	r2,r2,1
   5084c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   50850:	00000d06 	br	50888 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   50854:	e0bffc17 	ldw	r2,-16(fp)
   50858:	10800217 	ldw	r2,8(r2)
   5085c:	e0fffd17 	ldw	r3,-12(fp)
   50860:	180d883a 	mov	r6,r3
   50864:	e17ffe17 	ldw	r5,-8(fp)
   50868:	1009883a 	mov	r4,r2
   5086c:	0050bd00 	call	50bd0 <memcmp>
   50870:	1000021e 	bne	r2,zero,5087c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   50874:	e0bffc17 	ldw	r2,-16(fp)
   50878:	00000706 	br	50898 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   5087c:	e0bffc17 	ldw	r2,-16(fp)
   50880:	10800017 	ldw	r2,0(r2)
   50884:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   50888:	e0fffc17 	ldw	r3,-16(fp)
   5088c:	e0bfff17 	ldw	r2,-4(fp)
   50890:	18bff01e 	bne	r3,r2,50854 <__alt_data_end+0xfffd0854>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   50894:	0005883a 	mov	r2,zero
}
   50898:	e037883a 	mov	sp,fp
   5089c:	dfc00117 	ldw	ra,4(sp)
   508a0:	df000017 	ldw	fp,0(sp)
   508a4:	dec00204 	addi	sp,sp,8
   508a8:	f800283a 	ret

000508ac <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   508ac:	defffb04 	addi	sp,sp,-20
   508b0:	dfc00415 	stw	ra,16(sp)
   508b4:	df000315 	stw	fp,12(sp)
   508b8:	df000304 	addi	fp,sp,12
   508bc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   508c0:	d0a00617 	ldw	r2,-32744(gp)
   508c4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   508c8:	00003106 	br	50990 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   508cc:	e0bffd17 	ldw	r2,-12(fp)
   508d0:	10800217 	ldw	r2,8(r2)
   508d4:	1009883a 	mov	r4,r2
   508d8:	0049a580 	call	49a58 <strlen>
   508dc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   508e0:	e0bffd17 	ldw	r2,-12(fp)
   508e4:	10c00217 	ldw	r3,8(r2)
   508e8:	e0bffe17 	ldw	r2,-8(fp)
   508ec:	10bfffc4 	addi	r2,r2,-1
   508f0:	1885883a 	add	r2,r3,r2
   508f4:	10800003 	ldbu	r2,0(r2)
   508f8:	10803fcc 	andi	r2,r2,255
   508fc:	1080201c 	xori	r2,r2,128
   50900:	10bfe004 	addi	r2,r2,-128
   50904:	10800bd8 	cmpnei	r2,r2,47
   50908:	1000031e 	bne	r2,zero,50918 <alt_find_file+0x6c>
    {
      len -= 1;
   5090c:	e0bffe17 	ldw	r2,-8(fp)
   50910:	10bfffc4 	addi	r2,r2,-1
   50914:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   50918:	e0bffe17 	ldw	r2,-8(fp)
   5091c:	e0ffff17 	ldw	r3,-4(fp)
   50920:	1885883a 	add	r2,r3,r2
   50924:	10800003 	ldbu	r2,0(r2)
   50928:	10803fcc 	andi	r2,r2,255
   5092c:	1080201c 	xori	r2,r2,128
   50930:	10bfe004 	addi	r2,r2,-128
   50934:	10800be0 	cmpeqi	r2,r2,47
   50938:	1000081e 	bne	r2,zero,5095c <alt_find_file+0xb0>
   5093c:	e0bffe17 	ldw	r2,-8(fp)
   50940:	e0ffff17 	ldw	r3,-4(fp)
   50944:	1885883a 	add	r2,r3,r2
   50948:	10800003 	ldbu	r2,0(r2)
   5094c:	10803fcc 	andi	r2,r2,255
   50950:	1080201c 	xori	r2,r2,128
   50954:	10bfe004 	addi	r2,r2,-128
   50958:	10000a1e 	bne	r2,zero,50984 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   5095c:	e0bffd17 	ldw	r2,-12(fp)
   50960:	10800217 	ldw	r2,8(r2)
   50964:	e0fffe17 	ldw	r3,-8(fp)
   50968:	180d883a 	mov	r6,r3
   5096c:	e17fff17 	ldw	r5,-4(fp)
   50970:	1009883a 	mov	r4,r2
   50974:	0050bd00 	call	50bd0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   50978:	1000021e 	bne	r2,zero,50984 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   5097c:	e0bffd17 	ldw	r2,-12(fp)
   50980:	00000706 	br	509a0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   50984:	e0bffd17 	ldw	r2,-12(fp)
   50988:	10800017 	ldw	r2,0(r2)
   5098c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   50990:	e0fffd17 	ldw	r3,-12(fp)
   50994:	d0a00604 	addi	r2,gp,-32744
   50998:	18bfcc1e 	bne	r3,r2,508cc <__alt_data_end+0xfffd08cc>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   5099c:	0005883a 	mov	r2,zero
}
   509a0:	e037883a 	mov	sp,fp
   509a4:	dfc00117 	ldw	ra,4(sp)
   509a8:	df000017 	ldw	fp,0(sp)
   509ac:	dec00204 	addi	sp,sp,8
   509b0:	f800283a 	ret

000509b4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   509b4:	defffc04 	addi	sp,sp,-16
   509b8:	df000315 	stw	fp,12(sp)
   509bc:	df000304 	addi	fp,sp,12
   509c0:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   509c4:	00bffa04 	movi	r2,-24
   509c8:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   509cc:	e03ffd15 	stw	zero,-12(fp)
   509d0:	00001906 	br	50a38 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   509d4:	00800174 	movhi	r2,5
   509d8:	1086f504 	addi	r2,r2,7124
   509dc:	e0fffd17 	ldw	r3,-12(fp)
   509e0:	18c00324 	muli	r3,r3,12
   509e4:	10c5883a 	add	r2,r2,r3
   509e8:	10800017 	ldw	r2,0(r2)
   509ec:	10000f1e 	bne	r2,zero,50a2c <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   509f0:	00800174 	movhi	r2,5
   509f4:	1086f504 	addi	r2,r2,7124
   509f8:	e0fffd17 	ldw	r3,-12(fp)
   509fc:	18c00324 	muli	r3,r3,12
   50a00:	10c5883a 	add	r2,r2,r3
   50a04:	e0ffff17 	ldw	r3,-4(fp)
   50a08:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   50a0c:	d0e00a17 	ldw	r3,-32728(gp)
   50a10:	e0bffd17 	ldw	r2,-12(fp)
   50a14:	1880020e 	bge	r3,r2,50a20 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   50a18:	e0bffd17 	ldw	r2,-12(fp)
   50a1c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   50a20:	e0bffd17 	ldw	r2,-12(fp)
   50a24:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   50a28:	00000606 	br	50a44 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   50a2c:	e0bffd17 	ldw	r2,-12(fp)
   50a30:	10800044 	addi	r2,r2,1
   50a34:	e0bffd15 	stw	r2,-12(fp)
   50a38:	e0bffd17 	ldw	r2,-12(fp)
   50a3c:	10800810 	cmplti	r2,r2,32
   50a40:	103fe41e 	bne	r2,zero,509d4 <__alt_data_end+0xfffd09d4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   50a44:	e0bffe17 	ldw	r2,-8(fp)
}
   50a48:	e037883a 	mov	sp,fp
   50a4c:	df000017 	ldw	fp,0(sp)
   50a50:	dec00104 	addi	sp,sp,4
   50a54:	f800283a 	ret

00050a58 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   50a58:	defffb04 	addi	sp,sp,-20
   50a5c:	df000415 	stw	fp,16(sp)
   50a60:	df000404 	addi	fp,sp,16
   50a64:	e13ffe15 	stw	r4,-8(fp)
   50a68:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   50a6c:	e0bfff17 	ldw	r2,-4(fp)
   50a70:	10840070 	cmpltui	r2,r2,4097
   50a74:	1000021e 	bne	r2,zero,50a80 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   50a78:	00840004 	movi	r2,4096
   50a7c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   50a80:	e0fffe17 	ldw	r3,-8(fp)
   50a84:	e0bfff17 	ldw	r2,-4(fp)
   50a88:	1885883a 	add	r2,r3,r2
   50a8c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   50a90:	e0bffe17 	ldw	r2,-8(fp)
   50a94:	e0bffc15 	stw	r2,-16(fp)
   50a98:	00000506 	br	50ab0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   50a9c:	e0bffc17 	ldw	r2,-16(fp)
   50aa0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   50aa4:	e0bffc17 	ldw	r2,-16(fp)
   50aa8:	10800804 	addi	r2,r2,32
   50aac:	e0bffc15 	stw	r2,-16(fp)
   50ab0:	e0fffc17 	ldw	r3,-16(fp)
   50ab4:	e0bffd17 	ldw	r2,-12(fp)
   50ab8:	18bff836 	bltu	r3,r2,50a9c <__alt_data_end+0xfffd0a9c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   50abc:	e0bffe17 	ldw	r2,-8(fp)
   50ac0:	108007cc 	andi	r2,r2,31
   50ac4:	10000226 	beq	r2,zero,50ad0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   50ac8:	e0bffc17 	ldw	r2,-16(fp)
   50acc:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   50ad0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   50ad4:	0001883a 	nop
   50ad8:	e037883a 	mov	sp,fp
   50adc:	df000017 	ldw	fp,0(sp)
   50ae0:	dec00104 	addi	sp,sp,4
   50ae4:	f800283a 	ret

00050ae8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   50ae8:	defffe04 	addi	sp,sp,-8
   50aec:	df000115 	stw	fp,4(sp)
   50af0:	df000104 	addi	fp,sp,4
   50af4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   50af8:	e0bfff17 	ldw	r2,-4(fp)
   50afc:	10bffe84 	addi	r2,r2,-6
   50b00:	10c00428 	cmpgeui	r3,r2,16
   50b04:	18001a1e 	bne	r3,zero,50b70 <alt_exception_cause_generated_bad_addr+0x88>
   50b08:	100690ba 	slli	r3,r2,2
   50b0c:	00800174 	movhi	r2,5
   50b10:	1082c804 	addi	r2,r2,2848
   50b14:	1885883a 	add	r2,r3,r2
   50b18:	10800017 	ldw	r2,0(r2)
   50b1c:	1000683a 	jmp	r2
   50b20:	00050b60 	cmpeqi	zero,zero,5165
   50b24:	00050b60 	cmpeqi	zero,zero,5165
   50b28:	00050b70 	cmpltui	zero,zero,5165
   50b2c:	00050b70 	cmpltui	zero,zero,5165
   50b30:	00050b70 	cmpltui	zero,zero,5165
   50b34:	00050b60 	cmpeqi	zero,zero,5165
   50b38:	00050b68 	cmpgeui	zero,zero,5165
   50b3c:	00050b70 	cmpltui	zero,zero,5165
   50b40:	00050b60 	cmpeqi	zero,zero,5165
   50b44:	00050b60 	cmpeqi	zero,zero,5165
   50b48:	00050b70 	cmpltui	zero,zero,5165
   50b4c:	00050b60 	cmpeqi	zero,zero,5165
   50b50:	00050b68 	cmpgeui	zero,zero,5165
   50b54:	00050b70 	cmpltui	zero,zero,5165
   50b58:	00050b70 	cmpltui	zero,zero,5165
   50b5c:	00050b60 	cmpeqi	zero,zero,5165
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   50b60:	00800044 	movi	r2,1
   50b64:	00000306 	br	50b74 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   50b68:	0005883a 	mov	r2,zero
   50b6c:	00000106 	br	50b74 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   50b70:	0005883a 	mov	r2,zero
  }
}
   50b74:	e037883a 	mov	sp,fp
   50b78:	df000017 	ldw	fp,0(sp)
   50b7c:	dec00104 	addi	sp,sp,4
   50b80:	f800283a 	ret

00050b84 <atexit>:
   50b84:	200b883a 	mov	r5,r4
   50b88:	000f883a 	mov	r7,zero
   50b8c:	000d883a 	mov	r6,zero
   50b90:	0009883a 	mov	r4,zero
   50b94:	0050c4c1 	jmpi	50c4c <__register_exitproc>

00050b98 <exit>:
   50b98:	defffe04 	addi	sp,sp,-8
   50b9c:	000b883a 	mov	r5,zero
   50ba0:	dc000015 	stw	r16,0(sp)
   50ba4:	dfc00115 	stw	ra,4(sp)
   50ba8:	2021883a 	mov	r16,r4
   50bac:	0050d640 	call	50d64 <__call_exitprocs>
   50bb0:	00800174 	movhi	r2,5
   50bb4:	108b6d04 	addi	r2,r2,11700
   50bb8:	11000017 	ldw	r4,0(r2)
   50bbc:	20800f17 	ldw	r2,60(r4)
   50bc0:	10000126 	beq	r2,zero,50bc8 <exit+0x30>
   50bc4:	103ee83a 	callr	r2
   50bc8:	8009883a 	mov	r4,r16
   50bcc:	0050ee40 	call	50ee4 <_exit>

00050bd0 <memcmp>:
   50bd0:	01c000c4 	movi	r7,3
   50bd4:	3980192e 	bgeu	r7,r6,50c3c <memcmp+0x6c>
   50bd8:	2144b03a 	or	r2,r4,r5
   50bdc:	11c4703a 	and	r2,r2,r7
   50be0:	10000f26 	beq	r2,zero,50c20 <memcmp+0x50>
   50be4:	20800003 	ldbu	r2,0(r4)
   50be8:	28c00003 	ldbu	r3,0(r5)
   50bec:	10c0151e 	bne	r2,r3,50c44 <memcmp+0x74>
   50bf0:	31bfff84 	addi	r6,r6,-2
   50bf4:	01ffffc4 	movi	r7,-1
   50bf8:	00000406 	br	50c0c <memcmp+0x3c>
   50bfc:	20800003 	ldbu	r2,0(r4)
   50c00:	28c00003 	ldbu	r3,0(r5)
   50c04:	31bfffc4 	addi	r6,r6,-1
   50c08:	10c00e1e 	bne	r2,r3,50c44 <memcmp+0x74>
   50c0c:	21000044 	addi	r4,r4,1
   50c10:	29400044 	addi	r5,r5,1
   50c14:	31fff91e 	bne	r6,r7,50bfc <__alt_data_end+0xfffd0bfc>
   50c18:	0005883a 	mov	r2,zero
   50c1c:	f800283a 	ret
   50c20:	20c00017 	ldw	r3,0(r4)
   50c24:	28800017 	ldw	r2,0(r5)
   50c28:	18bfee1e 	bne	r3,r2,50be4 <__alt_data_end+0xfffd0be4>
   50c2c:	31bfff04 	addi	r6,r6,-4
   50c30:	21000104 	addi	r4,r4,4
   50c34:	29400104 	addi	r5,r5,4
   50c38:	39bff936 	bltu	r7,r6,50c20 <__alt_data_end+0xfffd0c20>
   50c3c:	303fe91e 	bne	r6,zero,50be4 <__alt_data_end+0xfffd0be4>
   50c40:	003ff506 	br	50c18 <__alt_data_end+0xfffd0c18>
   50c44:	10c5c83a 	sub	r2,r2,r3
   50c48:	f800283a 	ret

00050c4c <__register_exitproc>:
   50c4c:	defffa04 	addi	sp,sp,-24
   50c50:	dc000315 	stw	r16,12(sp)
   50c54:	04000174 	movhi	r16,5
   50c58:	840b6d04 	addi	r16,r16,11700
   50c5c:	80c00017 	ldw	r3,0(r16)
   50c60:	dc400415 	stw	r17,16(sp)
   50c64:	dfc00515 	stw	ra,20(sp)
   50c68:	18805217 	ldw	r2,328(r3)
   50c6c:	2023883a 	mov	r17,r4
   50c70:	10003726 	beq	r2,zero,50d50 <__register_exitproc+0x104>
   50c74:	10c00117 	ldw	r3,4(r2)
   50c78:	010007c4 	movi	r4,31
   50c7c:	20c00e16 	blt	r4,r3,50cb8 <__register_exitproc+0x6c>
   50c80:	1a000044 	addi	r8,r3,1
   50c84:	8800221e 	bne	r17,zero,50d10 <__register_exitproc+0xc4>
   50c88:	18c00084 	addi	r3,r3,2
   50c8c:	18c7883a 	add	r3,r3,r3
   50c90:	18c7883a 	add	r3,r3,r3
   50c94:	12000115 	stw	r8,4(r2)
   50c98:	10c7883a 	add	r3,r2,r3
   50c9c:	19400015 	stw	r5,0(r3)
   50ca0:	0005883a 	mov	r2,zero
   50ca4:	dfc00517 	ldw	ra,20(sp)
   50ca8:	dc400417 	ldw	r17,16(sp)
   50cac:	dc000317 	ldw	r16,12(sp)
   50cb0:	dec00604 	addi	sp,sp,24
   50cb4:	f800283a 	ret
   50cb8:	00800034 	movhi	r2,0
   50cbc:	10800004 	addi	r2,r2,0
   50cc0:	10002626 	beq	r2,zero,50d5c <__register_exitproc+0x110>
   50cc4:	01006404 	movi	r4,400
   50cc8:	d9400015 	stw	r5,0(sp)
   50ccc:	d9800115 	stw	r6,4(sp)
   50cd0:	d9c00215 	stw	r7,8(sp)
   50cd4:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   50cd8:	d9400017 	ldw	r5,0(sp)
   50cdc:	d9800117 	ldw	r6,4(sp)
   50ce0:	d9c00217 	ldw	r7,8(sp)
   50ce4:	10001d26 	beq	r2,zero,50d5c <__register_exitproc+0x110>
   50ce8:	81000017 	ldw	r4,0(r16)
   50cec:	10000115 	stw	zero,4(r2)
   50cf0:	02000044 	movi	r8,1
   50cf4:	22405217 	ldw	r9,328(r4)
   50cf8:	0007883a 	mov	r3,zero
   50cfc:	12400015 	stw	r9,0(r2)
   50d00:	20805215 	stw	r2,328(r4)
   50d04:	10006215 	stw	zero,392(r2)
   50d08:	10006315 	stw	zero,396(r2)
   50d0c:	883fde26 	beq	r17,zero,50c88 <__alt_data_end+0xfffd0c88>
   50d10:	18c9883a 	add	r4,r3,r3
   50d14:	2109883a 	add	r4,r4,r4
   50d18:	1109883a 	add	r4,r2,r4
   50d1c:	21802215 	stw	r6,136(r4)
   50d20:	01800044 	movi	r6,1
   50d24:	12406217 	ldw	r9,392(r2)
   50d28:	30cc983a 	sll	r6,r6,r3
   50d2c:	4992b03a 	or	r9,r9,r6
   50d30:	12406215 	stw	r9,392(r2)
   50d34:	21c04215 	stw	r7,264(r4)
   50d38:	01000084 	movi	r4,2
   50d3c:	893fd21e 	bne	r17,r4,50c88 <__alt_data_end+0xfffd0c88>
   50d40:	11006317 	ldw	r4,396(r2)
   50d44:	218cb03a 	or	r6,r4,r6
   50d48:	11806315 	stw	r6,396(r2)
   50d4c:	003fce06 	br	50c88 <__alt_data_end+0xfffd0c88>
   50d50:	18805304 	addi	r2,r3,332
   50d54:	18805215 	stw	r2,328(r3)
   50d58:	003fc606 	br	50c74 <__alt_data_end+0xfffd0c74>
   50d5c:	00bfffc4 	movi	r2,-1
   50d60:	003fd006 	br	50ca4 <__alt_data_end+0xfffd0ca4>

00050d64 <__call_exitprocs>:
   50d64:	defff504 	addi	sp,sp,-44
   50d68:	df000915 	stw	fp,36(sp)
   50d6c:	dd400615 	stw	r21,24(sp)
   50d70:	dc800315 	stw	r18,12(sp)
   50d74:	dfc00a15 	stw	ra,40(sp)
   50d78:	ddc00815 	stw	r23,32(sp)
   50d7c:	dd800715 	stw	r22,28(sp)
   50d80:	dd000515 	stw	r20,20(sp)
   50d84:	dcc00415 	stw	r19,16(sp)
   50d88:	dc400215 	stw	r17,8(sp)
   50d8c:	dc000115 	stw	r16,4(sp)
   50d90:	d9000015 	stw	r4,0(sp)
   50d94:	2839883a 	mov	fp,r5
   50d98:	04800044 	movi	r18,1
   50d9c:	057fffc4 	movi	r21,-1
   50da0:	00800174 	movhi	r2,5
   50da4:	108b6d04 	addi	r2,r2,11700
   50da8:	12000017 	ldw	r8,0(r2)
   50dac:	45005217 	ldw	r20,328(r8)
   50db0:	44c05204 	addi	r19,r8,328
   50db4:	a0001c26 	beq	r20,zero,50e28 <__call_exitprocs+0xc4>
   50db8:	a0800117 	ldw	r2,4(r20)
   50dbc:	15ffffc4 	addi	r23,r2,-1
   50dc0:	b8000d16 	blt	r23,zero,50df8 <__call_exitprocs+0x94>
   50dc4:	14000044 	addi	r16,r2,1
   50dc8:	8421883a 	add	r16,r16,r16
   50dcc:	8421883a 	add	r16,r16,r16
   50dd0:	84402004 	addi	r17,r16,128
   50dd4:	a463883a 	add	r17,r20,r17
   50dd8:	a421883a 	add	r16,r20,r16
   50ddc:	e0001e26 	beq	fp,zero,50e58 <__call_exitprocs+0xf4>
   50de0:	80804017 	ldw	r2,256(r16)
   50de4:	e0801c26 	beq	fp,r2,50e58 <__call_exitprocs+0xf4>
   50de8:	bdffffc4 	addi	r23,r23,-1
   50dec:	843fff04 	addi	r16,r16,-4
   50df0:	8c7fff04 	addi	r17,r17,-4
   50df4:	bd7ff91e 	bne	r23,r21,50ddc <__alt_data_end+0xfffd0ddc>
   50df8:	00800034 	movhi	r2,0
   50dfc:	10800004 	addi	r2,r2,0
   50e00:	10000926 	beq	r2,zero,50e28 <__call_exitprocs+0xc4>
   50e04:	a0800117 	ldw	r2,4(r20)
   50e08:	1000301e 	bne	r2,zero,50ecc <__call_exitprocs+0x168>
   50e0c:	a0800017 	ldw	r2,0(r20)
   50e10:	10003226 	beq	r2,zero,50edc <__call_exitprocs+0x178>
   50e14:	a009883a 	mov	r4,r20
   50e18:	98800015 	stw	r2,0(r19)
   50e1c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   50e20:	9d000017 	ldw	r20,0(r19)
   50e24:	a03fe41e 	bne	r20,zero,50db8 <__alt_data_end+0xfffd0db8>
   50e28:	dfc00a17 	ldw	ra,40(sp)
   50e2c:	df000917 	ldw	fp,36(sp)
   50e30:	ddc00817 	ldw	r23,32(sp)
   50e34:	dd800717 	ldw	r22,28(sp)
   50e38:	dd400617 	ldw	r21,24(sp)
   50e3c:	dd000517 	ldw	r20,20(sp)
   50e40:	dcc00417 	ldw	r19,16(sp)
   50e44:	dc800317 	ldw	r18,12(sp)
   50e48:	dc400217 	ldw	r17,8(sp)
   50e4c:	dc000117 	ldw	r16,4(sp)
   50e50:	dec00b04 	addi	sp,sp,44
   50e54:	f800283a 	ret
   50e58:	a0800117 	ldw	r2,4(r20)
   50e5c:	80c00017 	ldw	r3,0(r16)
   50e60:	10bfffc4 	addi	r2,r2,-1
   50e64:	15c01426 	beq	r2,r23,50eb8 <__call_exitprocs+0x154>
   50e68:	80000015 	stw	zero,0(r16)
   50e6c:	183fde26 	beq	r3,zero,50de8 <__alt_data_end+0xfffd0de8>
   50e70:	95c8983a 	sll	r4,r18,r23
   50e74:	a0806217 	ldw	r2,392(r20)
   50e78:	a5800117 	ldw	r22,4(r20)
   50e7c:	2084703a 	and	r2,r4,r2
   50e80:	10000b26 	beq	r2,zero,50eb0 <__call_exitprocs+0x14c>
   50e84:	a0806317 	ldw	r2,396(r20)
   50e88:	2088703a 	and	r4,r4,r2
   50e8c:	20000c1e 	bne	r4,zero,50ec0 <__call_exitprocs+0x15c>
   50e90:	89400017 	ldw	r5,0(r17)
   50e94:	d9000017 	ldw	r4,0(sp)
   50e98:	183ee83a 	callr	r3
   50e9c:	a0800117 	ldw	r2,4(r20)
   50ea0:	15bfbf1e 	bne	r2,r22,50da0 <__alt_data_end+0xfffd0da0>
   50ea4:	98800017 	ldw	r2,0(r19)
   50ea8:	153fcf26 	beq	r2,r20,50de8 <__alt_data_end+0xfffd0de8>
   50eac:	003fbc06 	br	50da0 <__alt_data_end+0xfffd0da0>
   50eb0:	183ee83a 	callr	r3
   50eb4:	003ff906 	br	50e9c <__alt_data_end+0xfffd0e9c>
   50eb8:	a5c00115 	stw	r23,4(r20)
   50ebc:	003feb06 	br	50e6c <__alt_data_end+0xfffd0e6c>
   50ec0:	89000017 	ldw	r4,0(r17)
   50ec4:	183ee83a 	callr	r3
   50ec8:	003ff406 	br	50e9c <__alt_data_end+0xfffd0e9c>
   50ecc:	a0800017 	ldw	r2,0(r20)
   50ed0:	a027883a 	mov	r19,r20
   50ed4:	1029883a 	mov	r20,r2
   50ed8:	003fb606 	br	50db4 <__alt_data_end+0xfffd0db4>
   50edc:	0005883a 	mov	r2,zero
   50ee0:	003ffb06 	br	50ed0 <__alt_data_end+0xfffd0ed0>

00050ee4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   50ee4:	defffd04 	addi	sp,sp,-12
   50ee8:	df000215 	stw	fp,8(sp)
   50eec:	df000204 	addi	fp,sp,8
   50ef0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   50ef4:	0001883a 	nop
   50ef8:	e0bfff17 	ldw	r2,-4(fp)
   50efc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   50f00:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   50f04:	10000226 	beq	r2,zero,50f10 <_exit+0x2c>
    ALT_SIM_FAIL();
   50f08:	002af070 	cmpltui	zero,zero,43969
   50f0c:	00000106 	br	50f14 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   50f10:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   50f14:	003fff06 	br	50f14 <__alt_data_end+0xfffd0f14>
