
part2.elf:     file format elf32-littlenios2
part2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x000112c8 memsz 0x000112c8 flags r-x
    LOAD off    0x000122e8 vaddr 0x000512e8 paddr 0x00052e74 align 2**12
         filesz 0x00001b8c memsz 0x00001b8c flags rw-
    LOAD off    0x00014a00 vaddr 0x00054a00 paddr 0x00054a00 align 2**12
         filesz 0x00000000 memsz 0x00000170 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010d68  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000033c  00050fac  00050fac  00011fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b8c  000512e8  00052e74  000122e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000170  00054a00  00054a00  00014a00  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00054b70  00054b70  00013e74  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013e74  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f50  00000000  00000000  00013e98  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023cb6  00000000  00000000  00014de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009520  00000000  00000000  00038a9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000bba6  00000000  00000000  00041fbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000232c  00000000  00000000  0004db64  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003b8f  00000000  00000000  0004fe90  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001a1cd  00000000  00000000  00053a1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  0006dbec  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001cd0  00000000  00000000  0006dc20  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00072bb9  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00072bbc  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00072bc8  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00072bc9  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  00072bca  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  00072bd5  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  00072be0  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  00072beb  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000002b  00000000  00000000  00072bf6  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     00037673  00000000  00000000  00072c21  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
00050fac l    d  .rodata	00000000 .rodata
000512e8 l    d  .rwdata	00000000 .rwdata
00054a00 l    d  .bss	00000000 .bss
00054b70 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../part2_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00054a0c l     O .bss	00000004 context
00040530 l     F .text	00000060 pre_measurement
00040590 l     F .text	00000040 post_measurement
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0005112e l     O .rodata	00000010 zeroes.4404
0004537c l     F .text	000000bc __sbprintf
0005113e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0004558c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000470bc l     F .text	00000008 __fp_unlock
000470d0 l     F .text	0000019c __sinit.part.1
0004726c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00051388 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
000517cc l     O .rwdata	00000020 lc_ctype_charset
000517ac l     O .rwdata	00000020 lc_message_charset
000517ec l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00051170 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00049b84 l     F .text	000000fc __sprint_r.part.0
000512a4 l     O .rodata	00000010 blanks.4348
00051294 l     O .rodata	00000010 zeroes.4349
0004b110 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004e76c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004e878 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004e8a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004e990 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004ea70 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004eb5c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004ed30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00052e64 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0004ef7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004f0b0 l     F .text	00000034 alt_dev_reg
00051dd4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004f398 l     F .text	0000020c altera_avalon_jtag_uart_irq
0004f5a4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004fee0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00050354 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00050494 l     F .text	0000003c alt_get_errno
000504d0 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00054a44 g     O .bss	00000004 alt_instruction_exception_handler
00049694 g     F .text	00000074 _mprec_log10
00049780 g     F .text	0000008c __any_on
0004bb68 g     F .text	00000054 _isatty_r
0005117c g     O .rodata	00000028 __mprec_tinytens
0004ec6c g     F .text	0000007c alt_main
00040370 g     F .text	00000038 FIXED_MULT
00054a70 g     O .bss	00000100 alt_irq
0004bbbc g     F .text	00000060 _lseek_r
00052e74 g       *ABS*	00000000 __flash_rwdata_start
0004da14 g     F .text	00000088 .hidden __eqdf2
00054b70 g       *ABS*	00000000 __alt_heap_start
0004312c g     F .text	0000003c printf
0004c494 g     F .text	0000009c _wcrtomb_r
000499ac g     F .text	0000005c __sseek
0004740c g     F .text	00000010 __sinit
0004fd48 g     F .text	00000024 alt_get_cpu_freq
0004c33c g     F .text	00000140 __swbuf_r
00047a18 g     F .text	0000007c _setlocale_r
00047274 g     F .text	00000068 __sfmoreglue
0004ed0c g     F .text	00000024 __malloc_unlock
000410fc g     F .text	00000440 .hidden __divsf3
0004bc1c g     F .text	0000015c memmove
000473f4 g     F .text	00000018 _cleanup
00048810 g     F .text	000000a8 _Balloc
00054a00 g     O .bss	00000004 Q_M
0004da9c g     F .text	000000dc .hidden __gtdf2
0005088c g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004b650 g     F .text	0000005c _fstat_r
00054a28 g     O .bss	00000004 errno
00049928 g     F .text	00000008 __seofread
00054a30 g     O .bss	00000004 alt_argv
0005ae34 g       *ABS*	00000000 _gp
00041938 g     F .text	000004e4 .hidden __subsf3
00051c54 g     O .rwdata	00000180 alt_fd_list
000508b0 g     F .text	00000090 alt_find_dev
000485a0 g     F .text	00000148 memcpy
000470c4 g     F .text	0000000c _cleanup_r
0004e5e8 g     F .text	000000dc .hidden __floatsidf
00050418 g     F .text	0000007c alt_io_redirect
0004db78 g     F .text	000000f4 .hidden __ltdf2
00040290 g     F .text	00000048 SET_Q_FORMAT
00050fac g       *ABS*	00000000 __DTOR_END__
00050b7c g     F .text	0000009c alt_exception_cause_generated_bad_addr
0004980c g     F .text	00000074 __fpclassifyd
000495f0 g     F .text	000000a4 __ratio
0004b0f4 g     F .text	0000001c __vfiprintf_internal
0004f79c g     F .text	0000021c altera_avalon_jtag_uart_read
000430fc g     F .text	00000030 _printf_r
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00040b78 g     F .text	00000064 .hidden __udivsi3
0004e9cc g     F .text	000000a4 isatty
000511cc g     O .rodata	000000c8 __mprec_tens
00047a94 g     F .text	0000000c __locale_charset
00050aec g     F .text	00000090 alt_icache_flush
00054a24 g     O .bss	00000004 __malloc_top_pad
0004fce4 g     F .text	00000040 perf_get_num_starts
00052e3c g     O .rwdata	00000004 __mb_cur_max
00047ac4 g     F .text	0000000c _localeconv_r
0004b6ac g     F .text	000004bc __sfvwrite_r
00048c1c g     F .text	0000003c __i2b
00054a08 g     O .bss	00000004 F_ONE
00049880 g     F .text	00000054 _sbrk_r
0004bd78 g     F .text	00000060 _read_r
00052e5c g     O .rwdata	00000004 alt_max_fd
0004b344 g     F .text	000000f0 _fclose_r
0004708c g     F .text	00000030 fflush
00054a20 g     O .bss	00000004 __malloc_max_sbrked_mem
00042de0 g     F .text	00000110 .hidden __extendsfdf2
00041e1c g     F .text	000008ac .hidden __adddf3
00049398 g     F .text	0000010c __b2d
0004cbf4 g     F .text	00000538 .hidden __umoddi3
0004eb98 g     F .text	000000d4 lseek
00052e34 g     O .rwdata	00000004 _global_impure_ptr
0004bdd8 g     F .text	00000564 _realloc_r
00054b70 g       *ABS*	00000000 __bss_end
00050264 g     F .text	000000f0 alt_iic_isr_register
00050784 g     F .text	00000108 alt_tick
0004c67c g     F .text	00000578 .hidden __udivdi3
0004b5ac g     F .text	00000024 _fputwc_r
000511a4 g     O .rodata	00000028 __mprec_bigtens
00048a00 g     F .text	00000104 __s2b
0004e6c4 g     F .text	000000a8 .hidden __floatunsidf
000490d8 g     F .text	00000060 __mcmp
0004742c g     F .text	00000018 __fp_lock_all
00050218 g     F .text	0000004c alt_ic_irq_enabled
000506e8 g     F .text	0000009c alt_alarm_stop
00054a38 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
00051c2c g     O .rwdata	00000028 alt_dev_null
00040320 g     F .text	00000050 FIXED_TO_FLOAT
0004fe98 g     F .text	00000048 alt_dcache_flush_all
00048b04 g     F .text	00000068 __hi0bits
0004e568 g     F .text	00000080 .hidden __fixdfsi
00052e74 g       *ABS*	00000000 __ram_rwdata_end
00052e54 g     O .rwdata	00000008 alt_dev_list
0004efb8 g     F .text	000000f8 write
000512e8 g       *ABS*	00000000 __ram_rodata_end
0004e8e0 g     F .text	000000b0 fstat
00054a04 g     O .bss	00000004 Q_N
0004db78 g     F .text	000000f4 .hidden __ledf2
00048e50 g     F .text	00000140 __pow5mult
00049c98 g     F .text	0000145c ___vfiprintf_internal_r
00054a18 g     O .bss	00000004 __nlocale_changed
00040bdc g     F .text	00000058 .hidden __umodsi3
00054b70 g       *ABS*	00000000 end
0004f2d8 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00050fac g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
00043098 g     F .text	00000064 .hidden __clzsi2
0004f9b8 g     F .text	00000224 altera_avalon_jtag_uart_write
0004741c g     F .text	00000004 __sfp_lock_acquire
000484bc g     F .text	000000e4 memchr
00043168 g     F .text	000021f8 ___vfprintf_internal_r
00047580 g     F .text	00000310 _free_r
00047aa0 g     F .text	00000010 __locale_mb_cur_max
00050df8 g     F .text	00000180 __call_exitprocs
00054a14 g     O .bss	00000004 __mlocale_changed
00052e40 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
00054a3c g     O .bss	00000004 _alt_tick_rate
00048f90 g     F .text	00000148 __lshift
00054a40 g     O .bss	00000004 _alt_nticks
0004ed6c g     F .text	000000fc read
0004f11c g     F .text	00000058 alt_sys_init
00050ce0 g     F .text	00000118 __register_exitproc
00048c58 g     F .text	000001f8 __multiply
0004f644 g     F .text	00000068 altera_avalon_jtag_uart_close
000512e8 g       *ABS*	00000000 __ram_rwdata_start
00050fac g       *ABS*	00000000 __ram_rodata_start
00054a48 g     O .bss	00000028 __malloc_current_mallinfo
000494a4 g     F .text	0000014c __d2b
0004f174 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00050a48 g     F .text	000000a4 alt_get_fd
0004b22c g     F .text	00000054 _close_r
0004fbdc g     F .text	000000bc perf_get_section_time
00050c64 g     F .text	0000007c memcmp
0004f234 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00054b70 g       *ABS*	00000000 __alt_stack_base
0004f284 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00045438 g     F .text	00000154 __swsetup_r
0004d12c g     F .text	000008e8 .hidden __divdf3
000472dc g     F .text	00000118 __sfp
00049708 g     F .text	00000078 __copybits
0004fc98 g     F .text	0000004c perf_get_total_time
00051824 g     O .rwdata	00000408 __malloc_av_
00047428 g     F .text	00000004 __sinit_lock_release
000426c8 g     F .text	00000718 .hidden __muldf3
000498d4 g     F .text	00000054 __sread
00050940 g     F .text	00000108 alt_find_file
0004ff1c g     F .text	000000a4 alt_dev_llist_insert
0004ece8 g     F .text	00000024 __malloc_lock
0004eecc g     F .text	000000b0 sbrk
00047030 g     F .text	0000005c _fflush_r
0004b280 g     F .text	000000c4 _calloc_r
00054a00 g       *ABS*	00000000 __bss_start
000486e8 g     F .text	00000128 memset
000405d0 g     F .text	000004b0 main
00054a34 g     O .bss	00000004 alt_envp
00054a1c g     O .bss	00000004 __malloc_max_total_mem
0004f1d4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004c47c g     F .text	00000018 __swbuf
00049a08 g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
0004b434 g     F .text	00000014 fclose
00042ef0 g     F .text	000001a8 .hidden __truncdfsf2
0004578c g     F .text	00001688 _dtoa_r
00047cb0 g     F .text	0000080c _malloc_r
0004c5f0 g     F .text	00000030 __ascii_wctomb
00052e60 g     O .rwdata	00000004 alt_errno
00047890 g     F .text	000000c4 _fwalk
00040a80 g     F .text	00000084 .hidden __divsi3
0004745c g     F .text	00000124 _malloc_trim_r
00050fac g       *ABS*	00000000 __CTOR_END__
0004153c g     F .text	000003fc .hidden __mulsf3
00049a10 g     F .text	000000dc strcmp
00050fac g       *ABS*	00000000 __flash_rodata_start
00050fac g       *ABS*	00000000 __DTOR_LIST__
0004da14 g     F .text	00000088 .hidden __nedf2
0004f0e4 g     F .text	00000038 alt_irq_init
0004ee68 g     F .text	00000064 alt_release_fd
00050fec g     O .rodata	00000100 .hidden __clz_tab
00054a10 g     O .bss	00000004 _PathLocale
00050c18 g     F .text	00000014 atexit
0004b1cc g     F .text	00000060 _write_r
00047ad0 g     F .text	00000018 setlocale
00052e38 g     O .rwdata	00000004 _impure_ptr
00054a2c g     O .bss	00000004 alt_argc
00046e14 g     F .text	0000021c __sflush_r
00050020 g     F .text	00000060 _do_dtors
00047abc g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
00049334 g     F .text	00000064 __ulp
00047444 g     F .text	00000018 __fp_unlock_all
00052e4c g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00047ae8 g     F .text	0000000c localeconv
000500b4 g     F .text	00000050 alt_ic_isr_register
00052e74 g       *ABS*	00000000 _edata
000403a8 g     F .text	00000188 EMA_FLOAT
00054b70 g       *ABS*	00000000 _end
0004b448 g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
0004f6ac g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0005018c g     F .text	0000008c alt_ic_irq_disable
00049930 g     F .text	0000007c __swrite
00052e44 g     O .rwdata	00000004 __malloc_trim_threshold
0004fd24 g     F .text	00000024 alt_get_performance_counter_base
00047ab0 g     F .text	0000000c __locale_msgcharset
000512e8 g     O .rwdata	000000a0 datasets
00050c2c g     F .text	00000038 exit
00047954 g     F .text	000000c4 _fwalk_reent
00049138 g     F .text	000001fc __mdiff
00040b04 g     F .text	00000074 .hidden __modsi3
00080000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00047420 g     F .text	00000004 __sfp_lock_release
00050f78 g     F .text	00000034 _exit
0004fd6c g     F .text	0000012c alt_alarm_start
00047af4 g     F .text	000001bc __smakebuf_r
000402d8 g     F .text	00000048 FLOAT_TO_FIXED
00049aec g     F .text	00000098 strlen
00050594 g     F .text	00000154 open
0004da9c g     F .text	000000dc .hidden __gedf2
00052e48 g     O .rwdata	00000004 __wctomb
00049c80 g     F .text	00000018 __sprint_r
00050080 g     F .text	00000034 alt_icache_flush_all
00052e68 g     O .rwdata	00000004 alt_priority_mask
00050104 g     F .text	00000088 alt_ic_irq_enable
00045360 g     F .text	0000001c __vfprintf_internal
0004c620 g     F .text	0000005c _wctomb_r
0004dc6c g     F .text	000008fc .hidden __subdf3
00048b6c g     F .text	000000b0 __lo0bits
00052e6c g     O .rwdata	00000008 alt_alarm_list
0004ffc0 g     F .text	00000060 _do_ctors
0004c530 g     F .text	000000c0 wcrtomb
0004e7a8 g     F .text	000000d0 close
00040c34 g     F .text	000004c8 .hidden __addsf3
0004ead8 g     F .text	00000084 alt_load
0004b5d0 g     F .text	00000080 fputwc
00047424 g     F .text	00000004 __sinit_lock_acquire
000488e0 g     F .text	00000120 __multadd
000488b8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffc0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	10929c04 	addi	r2,r2,19056
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	10929c04 	addi	r2,r2,19056
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffc012c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffc0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a70417 	ldw	r2,-25584(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a70417 	ldw	r2,-25584(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_data_end+0xfffc0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6ab8d14 	ori	gp,gp,44596
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	10928014 	ori	r2,r2,18944

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18d2dc14 	ori	r3,r3,19312

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_data_end+0xfffc0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	004ead80 	call	4ead8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	004ec6c0 	call	4ec6c <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_data_end+0xfffc028c>

00040290 <SET_Q_FORMAT>:

int Q_M = 0;
int Q_N = 0;
int F_ONE = 0;

void SET_Q_FORMAT(int M, int N){
   40290:	defffd04 	addi	sp,sp,-12
   40294:	df000215 	stw	fp,8(sp)
   40298:	df000204 	addi	fp,sp,8
   4029c:	e13ffe15 	stw	r4,-8(fp)
   402a0:	e17fff15 	stw	r5,-4(fp)
	Q_M = M;
   402a4:	e0bffe17 	ldw	r2,-8(fp)
   402a8:	d0a6f315 	stw	r2,-25652(gp)
	Q_N = N;
   402ac:	e0bfff17 	ldw	r2,-4(fp)
   402b0:	d0a6f415 	stw	r2,-25648(gp)
	F_ONE = 1 << N;
   402b4:	00c00044 	movi	r3,1
   402b8:	e0bfff17 	ldw	r2,-4(fp)
   402bc:	1884983a 	sll	r2,r3,r2
   402c0:	d0a6f515 	stw	r2,-25644(gp)
}
   402c4:	0001883a 	nop
   402c8:	e037883a 	mov	sp,fp
   402cc:	df000017 	ldw	fp,0(sp)
   402d0:	dec00104 	addi	sp,sp,4
   402d4:	f800283a 	ret

000402d8 <FLOAT_TO_FIXED>:

int FLOAT_TO_FIXED(float f){
   402d8:	defffd04 	addi	sp,sp,-12
   402dc:	dfc00215 	stw	ra,8(sp)
   402e0:	df000115 	stw	fp,4(sp)
   402e4:	df000104 	addi	fp,sp,4
   402e8:	e13fff15 	stw	r4,-4(fp)
	return (fixed)(f * F_ONE);
   402ec:	d0a6f517 	ldw	r2,-25644(gp)
   402f0:	1005feb2 	custom	250,r2,r2,zero
   402f4:	e17fff17 	ldw	r5,-4(fp)
   402f8:	1009883a 	mov	r4,r2
   402fc:	004153c0 	call	4153c <__mulsf3>
   40300:	1007883a 	mov	r3,r2
   40304:	1805883a 	mov	r2,r3
   40308:	1005fe72 	custom	249,r2,r2,zero
}
   4030c:	e037883a 	mov	sp,fp
   40310:	dfc00117 	ldw	ra,4(sp)
   40314:	df000017 	ldw	fp,0(sp)
   40318:	dec00204 	addi	sp,sp,8
   4031c:	f800283a 	ret

00040320 <FIXED_TO_FLOAT>:

float FIXED_TO_FLOAT(fixed f){
   40320:	defffd04 	addi	sp,sp,-12
   40324:	dfc00215 	stw	ra,8(sp)
   40328:	df000115 	stw	fp,4(sp)
   4032c:	df000104 	addi	fp,sp,4
   40330:	e13fff15 	stw	r4,-4(fp)
	return (float)(f)/F_ONE;
   40334:	e0bfff17 	ldw	r2,-4(fp)
   40338:	1007feb2 	custom	250,r3,r2,zero
   4033c:	d0a6f517 	ldw	r2,-25644(gp)
   40340:	1005feb2 	custom	250,r2,r2,zero
   40344:	100b883a 	mov	r5,r2
   40348:	1809883a 	mov	r4,r3
   4034c:	00410fc0 	call	410fc <__divsf3>
   40350:	1009883a 	mov	r4,r2
   40354:	2007883a 	mov	r3,r4
   40358:	1805883a 	mov	r2,r3
}
   4035c:	e037883a 	mov	sp,fp
   40360:	dfc00117 	ldw	ra,4(sp)
   40364:	df000017 	ldw	fp,0(sp)
   40368:	dec00204 	addi	sp,sp,8
   4036c:	f800283a 	ret

00040370 <FIXED_MULT>:

fixed FIXED_MULT(fixed op1, fixed op2){
   40370:	defffd04 	addi	sp,sp,-12
   40374:	df000215 	stw	fp,8(sp)
   40378:	df000204 	addi	fp,sp,8
   4037c:	e13ffe15 	stw	r4,-8(fp)
   40380:	e17fff15 	stw	r5,-4(fp)

	// calculate the result of this multiplication
	// and return it here.

	return (op1 * op2) >> Q_N;
   40384:	e0fffe17 	ldw	r3,-8(fp)
   40388:	e0bfff17 	ldw	r2,-4(fp)
   4038c:	1887383a 	mul	r3,r3,r2
   40390:	d0a6f417 	ldw	r2,-25648(gp)
   40394:	1885d83a 	sra	r2,r3,r2

}
   40398:	e037883a 	mov	sp,fp
   4039c:	df000017 	ldw	fp,0(sp)
   403a0:	dec00104 	addi	sp,sp,4
   403a4:	f800283a 	ret

000403a8 <EMA_FLOAT>:
void EMA_FLOAT(float data[10], float out[10]){
   403a8:	defff804 	addi	sp,sp,-32
   403ac:	dfc00715 	stw	ra,28(sp)
   403b0:	df000615 	stw	fp,24(sp)
   403b4:	dc800515 	stw	r18,20(sp)
   403b8:	dc400415 	stw	r17,16(sp)
   403bc:	dc000315 	stw	r16,12(sp)
   403c0:	df000604 	addi	fp,sp,24
   403c4:	e13ffb15 	stw	r4,-20(fp)
   403c8:	e17ffc15 	stw	r5,-16(fp)
	out[0] = data[0];
   403cc:	e0bffb17 	ldw	r2,-20(fp)
   403d0:	10c00017 	ldw	r3,0(r2)
   403d4:	e0bffc17 	ldw	r2,-16(fp)
   403d8:	10c00015 	stw	r3,0(r2)
	for(int i = 1; i < 10; i++){
   403dc:	00800044 	movi	r2,1
   403e0:	e0bffa15 	stw	r2,-24(fp)
   403e4:	00004606 	br	40500 <EMA_FLOAT+0x158>
		out[i] = (0.1*data[i]) + (1-0.1)*data[i-1];
   403e8:	e0bffa17 	ldw	r2,-24(fp)
   403ec:	1085883a 	add	r2,r2,r2
   403f0:	1085883a 	add	r2,r2,r2
   403f4:	1007883a 	mov	r3,r2
   403f8:	e0bffc17 	ldw	r2,-16(fp)
   403fc:	10e5883a 	add	r18,r2,r3
   40400:	e0bffa17 	ldw	r2,-24(fp)
   40404:	1085883a 	add	r2,r2,r2
   40408:	1085883a 	add	r2,r2,r2
   4040c:	1007883a 	mov	r3,r2
   40410:	e0bffb17 	ldw	r2,-20(fp)
   40414:	10c5883a 	add	r2,r2,r3
   40418:	10c00017 	ldw	r3,0(r2)
   4041c:	1809883a 	mov	r4,r3
   40420:	0042de00 	call	42de0 <__extendsfdf2>
   40424:	1011883a 	mov	r8,r2
   40428:	1813883a 	mov	r9,r3
   4042c:	01a666b4 	movhi	r6,39322
   40430:	31a66684 	addi	r6,r6,-26214
   40434:	01cfeeb4 	movhi	r7,16314
   40438:	39e66644 	addi	r7,r7,-26215
   4043c:	4009883a 	mov	r4,r8
   40440:	480b883a 	mov	r5,r9
   40444:	00426c80 	call	426c8 <__muldf3>
   40448:	1009883a 	mov	r4,r2
   4044c:	180b883a 	mov	r5,r3
   40450:	2021883a 	mov	r16,r4
   40454:	2823883a 	mov	r17,r5
   40458:	e0fffa17 	ldw	r3,-24(fp)
   4045c:	00900034 	movhi	r2,16384
   40460:	10bfffc4 	addi	r2,r2,-1
   40464:	1885883a 	add	r2,r3,r2
   40468:	1085883a 	add	r2,r2,r2
   4046c:	1085883a 	add	r2,r2,r2
   40470:	1007883a 	mov	r3,r2
   40474:	e0bffb17 	ldw	r2,-20(fp)
   40478:	10c5883a 	add	r2,r2,r3
   4047c:	10c00017 	ldw	r3,0(r2)
   40480:	1809883a 	mov	r4,r3
   40484:	0042de00 	call	42de0 <__extendsfdf2>
   40488:	1011883a 	mov	r8,r2
   4048c:	1813883a 	mov	r9,r3
   40490:	01b33374 	movhi	r6,52429
   40494:	31b33344 	addi	r6,r6,-13107
   40498:	01cffb74 	movhi	r7,16365
   4049c:	39f33304 	addi	r7,r7,-13108
   404a0:	4009883a 	mov	r4,r8
   404a4:	480b883a 	mov	r5,r9
   404a8:	00426c80 	call	426c8 <__muldf3>
   404ac:	1009883a 	mov	r4,r2
   404b0:	180b883a 	mov	r5,r3
   404b4:	2005883a 	mov	r2,r4
   404b8:	2807883a 	mov	r3,r5
   404bc:	100d883a 	mov	r6,r2
   404c0:	180f883a 	mov	r7,r3
   404c4:	8009883a 	mov	r4,r16
   404c8:	880b883a 	mov	r5,r17
   404cc:	0041e1c0 	call	41e1c <__adddf3>
   404d0:	1009883a 	mov	r4,r2
   404d4:	180b883a 	mov	r5,r3
   404d8:	2005883a 	mov	r2,r4
   404dc:	2807883a 	mov	r3,r5
   404e0:	1009883a 	mov	r4,r2
   404e4:	180b883a 	mov	r5,r3
   404e8:	0042ef00 	call	42ef0 <__truncdfsf2>
   404ec:	1007883a 	mov	r3,r2
   404f0:	90c00015 	stw	r3,0(r18)
	return (op1 * op2) >> Q_N;

}
void EMA_FLOAT(float data[10], float out[10]){
	out[0] = data[0];
	for(int i = 1; i < 10; i++){
   404f4:	e0bffa17 	ldw	r2,-24(fp)
   404f8:	10800044 	addi	r2,r2,1
   404fc:	e0bffa15 	stw	r2,-24(fp)
   40500:	e0bffa17 	ldw	r2,-24(fp)
   40504:	10800290 	cmplti	r2,r2,10
   40508:	103fb71e 	bne	r2,zero,403e8 <__alt_data_end+0xfffc03e8>
		out[i] = (0.1*data[i]) + (1-0.1)*data[i-1];
	}
}
   4050c:	0001883a 	nop
   40510:	e6fffd04 	addi	sp,fp,-12
   40514:	dfc00417 	ldw	ra,16(sp)
   40518:	df000317 	ldw	fp,12(sp)
   4051c:	dc800217 	ldw	r18,8(sp)
   40520:	dc400117 	ldw	r17,4(sp)
   40524:	dc000017 	ldw	r16,0(sp)
   40528:	dec00504 	addi	sp,sp,20
   4052c:	f800283a 	ret

00040530 <pre_measurement>:
{18.922375022588515, 9.976071114431022, 1.1578493397893121, 16.946195430873466, 13.258356573949856, 22.789397104263998, 4.467453001844939, 28.000955923708002, 9.65995387643512, 27.66319226833275}};


static alt_irq_context context; /* Use when disabling interrupts. */

static void pre_measurement(void){
   40530:	defffe04 	addi	sp,sp,-8
   40534:	df000115 	stw	fp,4(sp)
   40538:	df000104 	addi	fp,sp,4
  PERF_RESET (PERFORMANCE_COUNTER_0_BASE);
   4053c:	00c00044 	movi	r3,1
   40540:	00800234 	movhi	r2,8
   40544:	10841004 	addi	r2,r2,4160
   40548:	10c00035 	stwio	r3,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4054c:	0005303a 	rdctl	r2,status
   40550:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   40554:	e0ffff17 	ldw	r3,-4(fp)
   40558:	00bfff84 	movi	r2,-2
   4055c:	1884703a 	and	r2,r3,r2
   40560:	1001703a 	wrctl	status,r2
  
  return context;
   40564:	e0bfff17 	ldw	r2,-4(fp)
  context = alt_irq_disable_all();
   40568:	d0a6f615 	stw	r2,-25640(gp)
  PERF_START_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   4056c:	0007883a 	mov	r3,zero
   40570:	00800234 	movhi	r2,8
   40574:	10841104 	addi	r2,r2,4164
   40578:	10c00035 	stwio	r3,0(r2)
}
   4057c:	0001883a 	nop
   40580:	e037883a 	mov	sp,fp
   40584:	df000017 	ldw	fp,0(sp)
   40588:	dec00104 	addi	sp,sp,4
   4058c:	f800283a 	ret

00040590 <post_measurement>:

static void post_measurement(void){
   40590:	defffe04 	addi	sp,sp,-8
   40594:	df000115 	stw	fp,4(sp)
   40598:	df000104 	addi	fp,sp,4
	alt_irq_enable_all(context);
   4059c:	d0a6f617 	ldw	r2,-25640(gp)
   405a0:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   405a4:	e0bfff17 	ldw	r2,-4(fp)
   405a8:	1001703a 	wrctl	status,r2
	PERF_STOP_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   405ac:	0007883a 	mov	r3,zero
   405b0:	00800234 	movhi	r2,8
   405b4:	10841004 	addi	r2,r2,4160
   405b8:	10c00035 	stwio	r3,0(r2)
}
   405bc:	0001883a 	nop
   405c0:	e037883a 	mov	sp,fp
   405c4:	df000017 	ldw	fp,0(sp)
   405c8:	dec00104 	addi	sp,sp,4
   405cc:	f800283a 	ret

000405d0 <main>:
 #pragma GCC target("no-custom-fmuls")
 #pragma GCC target("no-custom-fdivs")

#define NUM_ITEMS 100

int main(void){
   405d0:	deffbb04 	addi	sp,sp,-276
   405d4:	dfc04415 	stw	ra,272(sp)
   405d8:	df004315 	stw	fp,268(sp)
   405dc:	dc404215 	stw	r17,264(sp)
   405e0:	dc004115 	stw	r16,260(sp)
   405e4:	df004304 	addi	fp,sp,268

//	volatile int a = 234;
//		volatile int result;

	SET_Q_FORMAT(24, 31-24);
   405e8:	014001c4 	movi	r5,7
   405ec:	01000604 	movi	r4,24
   405f0:	00402900 	call	40290 <SET_Q_FORMAT>
	float d1[10];
	for(int i = 0; i < 10; i++){
   405f4:	e03fbe15 	stw	zero,-264(fp)
   405f8:	00001206 	br	40644 <main+0x74>
		d1[i] = datasets[3][i];
   405fc:	00800174 	movhi	r2,5
   40600:	1084ba04 	addi	r2,r2,4840
   40604:	e0ffbe17 	ldw	r3,-264(fp)
   40608:	18c00784 	addi	r3,r3,30
   4060c:	18c7883a 	add	r3,r3,r3
   40610:	18c7883a 	add	r3,r3,r3
   40614:	10c5883a 	add	r2,r2,r3
   40618:	10c00017 	ldw	r3,0(r2)
   4061c:	e0bfbe17 	ldw	r2,-264(fp)
   40620:	1085883a 	add	r2,r2,r2
   40624:	1085883a 	add	r2,r2,r2
   40628:	e13fbe04 	addi	r4,fp,-264
   4062c:	2085883a 	add	r2,r4,r2
   40630:	10800e04 	addi	r2,r2,56
   40634:	10c00015 	stw	r3,0(r2)
//	volatile int a = 234;
//		volatile int result;

	SET_Q_FORMAT(24, 31-24);
	float d1[10];
	for(int i = 0; i < 10; i++){
   40638:	e0bfbe17 	ldw	r2,-264(fp)
   4063c:	10800044 	addi	r2,r2,1
   40640:	e0bfbe15 	stw	r2,-264(fp)
   40644:	e0bfbe17 	ldw	r2,-264(fp)
   40648:	10800290 	cmplti	r2,r2,10
   4064c:	103feb1e 	bne	r2,zero,405fc <__alt_data_end+0xfffc05fc>
		d1[i] = datasets[3][i];
	}
	fixed d2[10];
	for(int i = 0; i < 10; i++){
   40650:	e03fbf15 	stw	zero,-260(fp)
   40654:	00001506 	br	406ac <main+0xdc>
		d2[i] = FLOAT_TO_FIXED(datasets[3][i]);
   40658:	00800174 	movhi	r2,5
   4065c:	1084ba04 	addi	r2,r2,4840
   40660:	e0ffbf17 	ldw	r3,-260(fp)
   40664:	18c00784 	addi	r3,r3,30
   40668:	18c7883a 	add	r3,r3,r3
   4066c:	18c7883a 	add	r3,r3,r3
   40670:	10c5883a 	add	r2,r2,r3
   40674:	10c00017 	ldw	r3,0(r2)
   40678:	1809883a 	mov	r4,r3
   4067c:	00402d80 	call	402d8 <FLOAT_TO_FIXED>
   40680:	1007883a 	mov	r3,r2
   40684:	e0bfbf17 	ldw	r2,-260(fp)
   40688:	1085883a 	add	r2,r2,r2
   4068c:	1085883a 	add	r2,r2,r2
   40690:	e13fbe04 	addi	r4,fp,-264
   40694:	2085883a 	add	r2,r4,r2
   40698:	10801804 	addi	r2,r2,96
   4069c:	10c00015 	stw	r3,0(r2)
	float d1[10];
	for(int i = 0; i < 10; i++){
		d1[i] = datasets[3][i];
	}
	fixed d2[10];
	for(int i = 0; i < 10; i++){
   406a0:	e0bfbf17 	ldw	r2,-260(fp)
   406a4:	10800044 	addi	r2,r2,1
   406a8:	e0bfbf15 	stw	r2,-260(fp)
   406ac:	e0bfbf17 	ldw	r2,-260(fp)
   406b0:	10800290 	cmplti	r2,r2,10
   406b4:	103fe81e 	bne	r2,zero,40658 <__alt_data_end+0xfffc0658>
		d2[i] = FLOAT_TO_FIXED(datasets[3][i]);
	}
	float emafl[10];
	float ema1[10];
	fixed emafi[10];
	EMA_FLOAT(datasets[3], emafl);
   406b8:	e0bfe004 	addi	r2,fp,-128
   406bc:	100b883a 	mov	r5,r2
   406c0:	01000174 	movhi	r4,5
   406c4:	2104d804 	addi	r4,r4,4960
   406c8:	00403a80 	call	403a8 <EMA_FLOAT>
	fixed alpha = FLOAT_TO_FIXED(0.1);
   406cc:	010f7374 	movhi	r4,15821
   406d0:	21333344 	addi	r4,r4,-13107
   406d4:	00402d80 	call	402d8 <FLOAT_TO_FIXED>
   406d8:	e0bfc815 	stw	r2,-224(fp)
	fixed prev = d2[0];
   406dc:	e0bfd617 	ldw	r2,-168(fp)
   406e0:	e0bfc015 	stw	r2,-256(fp)

	// FIXED POINT

	//pre_measurement();

	for (int j=0; j<NUM_ITEMS; j++){
   406e4:	e03fc115 	stw	zero,-252(fp)
   406e8:	00003606 	br	407c4 <main+0x1f4>
		//PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);

		emafi[0] = d2[0];
   406ec:	e0bfd617 	ldw	r2,-168(fp)
   406f0:	e0bff415 	stw	r2,-48(fp)
		for(int i = 1; i < 10; i++){
   406f4:	00800044 	movi	r2,1
   406f8:	e0bfc215 	stw	r2,-248(fp)
   406fc:	00002b06 	br	407ac <main+0x1dc>
			fixed s_i = ((alpha*d2[i])>>Q_N) + (((1-alpha)*prev)>>Q_N);
   40700:	e0bfc217 	ldw	r2,-248(fp)
   40704:	1085883a 	add	r2,r2,r2
   40708:	1085883a 	add	r2,r2,r2
   4070c:	e0ffbe04 	addi	r3,fp,-264
   40710:	1885883a 	add	r2,r3,r2
   40714:	10801804 	addi	r2,r2,96
   40718:	10c00017 	ldw	r3,0(r2)
   4071c:	e0bfc817 	ldw	r2,-224(fp)
   40720:	1887383a 	mul	r3,r3,r2
   40724:	d0a6f417 	ldw	r2,-25648(gp)
   40728:	1887d83a 	sra	r3,r3,r2
   4072c:	01000044 	movi	r4,1
   40730:	e0bfc817 	ldw	r2,-224(fp)
   40734:	2089c83a 	sub	r4,r4,r2
   40738:	e0bfc017 	ldw	r2,-256(fp)
   4073c:	2089383a 	mul	r4,r4,r2
   40740:	d0a6f417 	ldw	r2,-25648(gp)
   40744:	2085d83a 	sra	r2,r4,r2
   40748:	1885883a 	add	r2,r3,r2
   4074c:	e0bfc915 	stw	r2,-220(fp)
			prev = d2[i];
   40750:	e0bfc217 	ldw	r2,-248(fp)
   40754:	1085883a 	add	r2,r2,r2
   40758:	1085883a 	add	r2,r2,r2
   4075c:	e13fbe04 	addi	r4,fp,-264
   40760:	2085883a 	add	r2,r4,r2
   40764:	10801804 	addi	r2,r2,96
   40768:	10800017 	ldw	r2,0(r2)
   4076c:	e0bfc015 	stw	r2,-256(fp)
			emafi[i] = (s_i)/F_ONE;
   40770:	d0a6f517 	ldw	r2,-25644(gp)
   40774:	100b883a 	mov	r5,r2
   40778:	e13fc917 	ldw	r4,-220(fp)
   4077c:	0040a800 	call	40a80 <__divsi3>
   40780:	1007883a 	mov	r3,r2
   40784:	e0bfc217 	ldw	r2,-248(fp)
   40788:	1085883a 	add	r2,r2,r2
   4078c:	1085883a 	add	r2,r2,r2
   40790:	e13fbe04 	addi	r4,fp,-264
   40794:	2085883a 	add	r2,r4,r2
   40798:	10803604 	addi	r2,r2,216
   4079c:	10c00015 	stw	r3,0(r2)

	for (int j=0; j<NUM_ITEMS; j++){
		//PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);

		emafi[0] = d2[0];
		for(int i = 1; i < 10; i++){
   407a0:	e0bfc217 	ldw	r2,-248(fp)
   407a4:	10800044 	addi	r2,r2,1
   407a8:	e0bfc215 	stw	r2,-248(fp)
   407ac:	e0bfc217 	ldw	r2,-248(fp)
   407b0:	10800290 	cmplti	r2,r2,10
   407b4:	103fd21e 	bne	r2,zero,40700 <__alt_data_end+0xfffc0700>

	// FIXED POINT

	//pre_measurement();

	for (int j=0; j<NUM_ITEMS; j++){
   407b8:	e0bfc117 	ldw	r2,-252(fp)
   407bc:	10800044 	addi	r2,r2,1
   407c0:	e0bfc115 	stw	r2,-252(fp)
   407c4:	e0bfc117 	ldw	r2,-252(fp)
   407c8:	10801910 	cmplti	r2,r2,100
   407cc:	103fc71e 	bne	r2,zero,406ec <__alt_data_end+0xfffc06ec>

	//post_measurement();

	// FLOATING POINT

	pre_measurement();
   407d0:	00405300 	call	40530 <pre_measurement>

	for (int j=0; j<NUM_ITEMS; j++){
   407d4:	e03fc315 	stw	zero,-244(fp)
   407d8:	00003d06 	br	408d0 <main+0x300>
		PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   407dc:	0007883a 	mov	r3,zero
   407e0:	00800234 	movhi	r2,8
   407e4:	10841504 	addi	r2,r2,4180
   407e8:	10c00035 	stwio	r3,0(r2)

		ema1[0] = d1[0];
   407ec:	e0bfcc17 	ldw	r2,-208(fp)
   407f0:	e0bfea15 	stw	r2,-88(fp)
		for(int i = 1; i < 10; i++){
   407f4:	00800044 	movi	r2,1
   407f8:	e0bfc415 	stw	r2,-240(fp)
   407fc:	00002a06 	br	408a8 <main+0x2d8>
			ema1[i] = (0.1f*d1[i]) + (1.0f-0.1f)*d1[i-1];
   40800:	e0bfc417 	ldw	r2,-240(fp)
   40804:	1085883a 	add	r2,r2,r2
   40808:	1085883a 	add	r2,r2,r2
   4080c:	e0ffbe04 	addi	r3,fp,-264
   40810:	1885883a 	add	r2,r3,r2
   40814:	10800e04 	addi	r2,r2,56
   40818:	10c00017 	ldw	r3,0(r2)
   4081c:	014f7374 	movhi	r5,15821
   40820:	29733344 	addi	r5,r5,-13107
   40824:	1809883a 	mov	r4,r3
   40828:	004153c0 	call	4153c <__mulsf3>
   4082c:	1007883a 	mov	r3,r2
   40830:	1821883a 	mov	r16,r3
   40834:	e0bfc417 	ldw	r2,-240(fp)
   40838:	10bfffc4 	addi	r2,r2,-1
   4083c:	1085883a 	add	r2,r2,r2
   40840:	1085883a 	add	r2,r2,r2
   40844:	e13fbe04 	addi	r4,fp,-264
   40848:	2085883a 	add	r2,r4,r2
   4084c:	10800e04 	addi	r2,r2,56
   40850:	10c00017 	ldw	r3,0(r2)
   40854:	014fd9b4 	movhi	r5,16230
   40858:	29599984 	addi	r5,r5,26214
   4085c:	1809883a 	mov	r4,r3
   40860:	004153c0 	call	4153c <__mulsf3>
   40864:	1007883a 	mov	r3,r2
   40868:	1805883a 	mov	r2,r3
   4086c:	100b883a 	mov	r5,r2
   40870:	8009883a 	mov	r4,r16
   40874:	0040c340 	call	40c34 <__addsf3>
   40878:	1009883a 	mov	r4,r2
   4087c:	2007883a 	mov	r3,r4
   40880:	e0bfc417 	ldw	r2,-240(fp)
   40884:	1085883a 	add	r2,r2,r2
   40888:	1085883a 	add	r2,r2,r2
   4088c:	e13fbe04 	addi	r4,fp,-264
   40890:	2085883a 	add	r2,r4,r2
   40894:	10802c04 	addi	r2,r2,176
   40898:	10c00015 	stw	r3,0(r2)

	for (int j=0; j<NUM_ITEMS; j++){
		PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);

		ema1[0] = d1[0];
		for(int i = 1; i < 10; i++){
   4089c:	e0bfc417 	ldw	r2,-240(fp)
   408a0:	10800044 	addi	r2,r2,1
   408a4:	e0bfc415 	stw	r2,-240(fp)
   408a8:	e0bfc417 	ldw	r2,-240(fp)
   408ac:	10800290 	cmplti	r2,r2,10
   408b0:	103fd31e 	bne	r2,zero,40800 <__alt_data_end+0xfffc0800>
			ema1[i] = (0.1f*d1[i]) + (1.0f-0.1f)*d1[i-1];
		}

		PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   408b4:	0007883a 	mov	r3,zero
   408b8:	00800234 	movhi	r2,8
   408bc:	10841404 	addi	r2,r2,4176
   408c0:	10c00035 	stwio	r3,0(r2)

	// FLOATING POINT

	pre_measurement();

	for (int j=0; j<NUM_ITEMS; j++){
   408c4:	e0bfc317 	ldw	r2,-244(fp)
   408c8:	10800044 	addi	r2,r2,1
   408cc:	e0bfc315 	stw	r2,-244(fp)
   408d0:	e0bfc317 	ldw	r2,-244(fp)
   408d4:	10801910 	cmplti	r2,r2,100
   408d8:	103fc01e 	bne	r2,zero,407dc <__alt_data_end+0xfffc07dc>

		PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
	}


	post_measurement();
   408dc:	00405900 	call	40590 <post_measurement>


	// double  time_taken = difftime(start, time(NULL));

	float error = 0;
   408e0:	e03fc515 	stw	zero,-236(fp)
	EMA_FLOAT(datasets[3], ema1);
   408e4:	e0bfea04 	addi	r2,fp,-88
   408e8:	100b883a 	mov	r5,r2
   408ec:	01000174 	movhi	r4,5
   408f0:	2104d804 	addi	r4,r4,4960
   408f4:	00403a80 	call	403a8 <EMA_FLOAT>
	for(int j = 0; j < 10; j++){
   408f8:	e03fc615 	stw	zero,-232(fp)
   408fc:	00003306 	br	409cc <main+0x3fc>
		emafl[j] = FIXED_TO_FLOAT(emafi[j]);
   40900:	e0bfc617 	ldw	r2,-232(fp)
   40904:	1085883a 	add	r2,r2,r2
   40908:	1085883a 	add	r2,r2,r2
   4090c:	e0ffbe04 	addi	r3,fp,-264
   40910:	1885883a 	add	r2,r3,r2
   40914:	10803604 	addi	r2,r2,216
   40918:	10800017 	ldw	r2,0(r2)
   4091c:	1009883a 	mov	r4,r2
   40920:	00403200 	call	40320 <FIXED_TO_FLOAT>
   40924:	1007883a 	mov	r3,r2
   40928:	e0bfc617 	ldw	r2,-232(fp)
   4092c:	1085883a 	add	r2,r2,r2
   40930:	1085883a 	add	r2,r2,r2
   40934:	e13fbe04 	addi	r4,fp,-264
   40938:	2085883a 	add	r2,r4,r2
   4093c:	10802204 	addi	r2,r2,136
   40940:	10c00015 	stw	r3,0(r2)
		float temp_err = ema1[j] - emafl[j];
   40944:	e0bfc617 	ldw	r2,-232(fp)
   40948:	1085883a 	add	r2,r2,r2
   4094c:	1085883a 	add	r2,r2,r2
   40950:	e0ffbe04 	addi	r3,fp,-264
   40954:	1885883a 	add	r2,r3,r2
   40958:	10802c04 	addi	r2,r2,176
   4095c:	10c00017 	ldw	r3,0(r2)
   40960:	e0bfc617 	ldw	r2,-232(fp)
   40964:	1085883a 	add	r2,r2,r2
   40968:	1085883a 	add	r2,r2,r2
   4096c:	e13fbe04 	addi	r4,fp,-264
   40970:	2085883a 	add	r2,r4,r2
   40974:	10802204 	addi	r2,r2,136
   40978:	11000017 	ldw	r4,0(r2)
   4097c:	200b883a 	mov	r5,r4
   40980:	1809883a 	mov	r4,r3
   40984:	00419380 	call	41938 <__subsf3>
   40988:	1007883a 	mov	r3,r2
   4098c:	e0ffc715 	stw	r3,-228(fp)
		if(temp_err<0) temp_err = temp_err * -1;
   40990:	e0bfc717 	ldw	r2,-228(fp)
   40994:	0007883a 	mov	r3,zero
   40998:	10c5f9f2 	custom	231,r2,r2,r3
   4099c:	10000326 	beq	r2,zero,409ac <main+0x3dc>
   409a0:	e0bfc717 	ldw	r2,-228(fp)
   409a4:	1005f872 	custom	225,r2,r2,zero
   409a8:	e0bfc715 	stw	r2,-228(fp)
//		printf("Float Calc: %f, Fixed Calc: %f, err: %f\n", ema1[j], emafl[j], temp_err);
		error += temp_err;
   409ac:	e17fc717 	ldw	r5,-228(fp)
   409b0:	e13fc517 	ldw	r4,-236(fp)
   409b4:	0040c340 	call	40c34 <__addsf3>
   409b8:	1007883a 	mov	r3,r2
   409bc:	e0ffc515 	stw	r3,-236(fp)

	// double  time_taken = difftime(start, time(NULL));

	float error = 0;
	EMA_FLOAT(datasets[3], ema1);
	for(int j = 0; j < 10; j++){
   409c0:	e0bfc617 	ldw	r2,-232(fp)
   409c4:	10800044 	addi	r2,r2,1
   409c8:	e0bfc615 	stw	r2,-232(fp)
   409cc:	e0bfc617 	ldw	r2,-232(fp)
   409d0:	10800290 	cmplti	r2,r2,10
   409d4:	103fca1e 	bne	r2,zero,40900 <__alt_data_end+0xfffc0900>
		float temp_err = ema1[j] - emafl[j];
		if(temp_err<0) temp_err = temp_err * -1;
//		printf("Float Calc: %f, Fixed Calc: %f, err: %f\n", ema1[j], emafl[j], temp_err);
		error += temp_err;
	}
	error = error / 10;
   409d8:	01504834 	movhi	r5,16672
   409dc:	e13fc517 	ldw	r4,-236(fp)
   409e0:	00410fc0 	call	410fc <__divsf3>
   409e4:	1007883a 	mov	r3,r2
   409e8:	e0ffc515 	stw	r3,-236(fp)
	printf("Error in EMA calculations in Q%d.%d: %f\n", Q_M, Q_N, error);
   409ec:	d426f317 	ldw	r16,-25652(gp)
   409f0:	d466f417 	ldw	r17,-25648(gp)
   409f4:	e13fc517 	ldw	r4,-236(fp)
   409f8:	0042de00 	call	42de0 <__extendsfdf2>
   409fc:	1009883a 	mov	r4,r2
   40a00:	180b883a 	mov	r5,r3
   40a04:	d9400015 	stw	r5,0(sp)
   40a08:	200f883a 	mov	r7,r4
   40a0c:	880d883a 	mov	r6,r17
   40a10:	800b883a 	mov	r5,r16
   40a14:	01000174 	movhi	r4,5
   40a18:	2103eb04 	addi	r4,r4,4012
   40a1c:	004312c0 	call	4312c <printf>


//	int fixed_point_time = (int)perf_get_section_time ((void*)PERFORMANCE_COUNTER_0_BASE, 1);
	 int floating_point_time = (int)perf_get_section_time ((void*)PERFORMANCE_COUNTER_0_BASE, 1);
   40a20:	01400044 	movi	r5,1
   40a24:	01000234 	movhi	r4,8
   40a28:	21041004 	addi	r4,r4,4160
   40a2c:	004fbdc0 	call	4fbdc <perf_get_section_time>
   40a30:	1009883a 	mov	r4,r2
   40a34:	180b883a 	mov	r5,r3
   40a38:	e13fca15 	stw	r4,-216(fp)

//	float fixed_cycles = (float)((fixed_point_time-606)/NUM_ITEMS);
	 float floating_cycles = (float)((floating_point_time-606)/NUM_ITEMS);
   40a3c:	e0bfca17 	ldw	r2,-216(fp)
   40a40:	10bf6884 	addi	r2,r2,-606
   40a44:	01401904 	movi	r5,100
   40a48:	1009883a 	mov	r4,r2
   40a4c:	0040a800 	call	40a80 <__divsi3>
   40a50:	1005feb2 	custom	250,r2,r2,zero
   40a54:	e0bfcb15 	stw	r2,-212(fp)


//	printf("Fixed Point:%f\n", fixed_cycles);
	 printf("Floating Point: %f\n", floating_cycles);
   40a58:	e13fcb17 	ldw	r4,-212(fp)
   40a5c:	0042de00 	call	42de0 <__extendsfdf2>
   40a60:	100d883a 	mov	r6,r2
   40a64:	180f883a 	mov	r7,r3
   40a68:	300b883a 	mov	r5,r6
   40a6c:	380d883a 	mov	r6,r7
   40a70:	01000174 	movhi	r4,5
   40a74:	2103f604 	addi	r4,r4,4056
   40a78:	004312c0 	call	4312c <printf>

	while(1);
   40a7c:	003fff06 	br	40a7c <__alt_data_end+0xfffc0a7c>

00040a80 <__divsi3>:
   40a80:	20001b16 	blt	r4,zero,40af0 <__divsi3+0x70>
   40a84:	000f883a 	mov	r7,zero
   40a88:	28001616 	blt	r5,zero,40ae4 <__divsi3+0x64>
   40a8c:	200d883a 	mov	r6,r4
   40a90:	29001a2e 	bgeu	r5,r4,40afc <__divsi3+0x7c>
   40a94:	00800804 	movi	r2,32
   40a98:	00c00044 	movi	r3,1
   40a9c:	00000106 	br	40aa4 <__divsi3+0x24>
   40aa0:	10000d26 	beq	r2,zero,40ad8 <__divsi3+0x58>
   40aa4:	294b883a 	add	r5,r5,r5
   40aa8:	10bfffc4 	addi	r2,r2,-1
   40aac:	18c7883a 	add	r3,r3,r3
   40ab0:	293ffb36 	bltu	r5,r4,40aa0 <__alt_data_end+0xfffc0aa0>
   40ab4:	0005883a 	mov	r2,zero
   40ab8:	18000726 	beq	r3,zero,40ad8 <__divsi3+0x58>
   40abc:	0005883a 	mov	r2,zero
   40ac0:	31400236 	bltu	r6,r5,40acc <__divsi3+0x4c>
   40ac4:	314dc83a 	sub	r6,r6,r5
   40ac8:	10c4b03a 	or	r2,r2,r3
   40acc:	1806d07a 	srli	r3,r3,1
   40ad0:	280ad07a 	srli	r5,r5,1
   40ad4:	183ffa1e 	bne	r3,zero,40ac0 <__alt_data_end+0xfffc0ac0>
   40ad8:	38000126 	beq	r7,zero,40ae0 <__divsi3+0x60>
   40adc:	0085c83a 	sub	r2,zero,r2
   40ae0:	f800283a 	ret
   40ae4:	014bc83a 	sub	r5,zero,r5
   40ae8:	39c0005c 	xori	r7,r7,1
   40aec:	003fe706 	br	40a8c <__alt_data_end+0xfffc0a8c>
   40af0:	0109c83a 	sub	r4,zero,r4
   40af4:	01c00044 	movi	r7,1
   40af8:	003fe306 	br	40a88 <__alt_data_end+0xfffc0a88>
   40afc:	00c00044 	movi	r3,1
   40b00:	003fee06 	br	40abc <__alt_data_end+0xfffc0abc>

00040b04 <__modsi3>:
   40b04:	20001716 	blt	r4,zero,40b64 <__modsi3+0x60>
   40b08:	000f883a 	mov	r7,zero
   40b0c:	2005883a 	mov	r2,r4
   40b10:	28001216 	blt	r5,zero,40b5c <__modsi3+0x58>
   40b14:	2900162e 	bgeu	r5,r4,40b70 <__modsi3+0x6c>
   40b18:	01800804 	movi	r6,32
   40b1c:	00c00044 	movi	r3,1
   40b20:	00000106 	br	40b28 <__modsi3+0x24>
   40b24:	30000a26 	beq	r6,zero,40b50 <__modsi3+0x4c>
   40b28:	294b883a 	add	r5,r5,r5
   40b2c:	31bfffc4 	addi	r6,r6,-1
   40b30:	18c7883a 	add	r3,r3,r3
   40b34:	293ffb36 	bltu	r5,r4,40b24 <__alt_data_end+0xfffc0b24>
   40b38:	18000526 	beq	r3,zero,40b50 <__modsi3+0x4c>
   40b3c:	1806d07a 	srli	r3,r3,1
   40b40:	11400136 	bltu	r2,r5,40b48 <__modsi3+0x44>
   40b44:	1145c83a 	sub	r2,r2,r5
   40b48:	280ad07a 	srli	r5,r5,1
   40b4c:	183ffb1e 	bne	r3,zero,40b3c <__alt_data_end+0xfffc0b3c>
   40b50:	38000126 	beq	r7,zero,40b58 <__modsi3+0x54>
   40b54:	0085c83a 	sub	r2,zero,r2
   40b58:	f800283a 	ret
   40b5c:	014bc83a 	sub	r5,zero,r5
   40b60:	003fec06 	br	40b14 <__alt_data_end+0xfffc0b14>
   40b64:	0109c83a 	sub	r4,zero,r4
   40b68:	01c00044 	movi	r7,1
   40b6c:	003fe706 	br	40b0c <__alt_data_end+0xfffc0b0c>
   40b70:	00c00044 	movi	r3,1
   40b74:	003ff106 	br	40b3c <__alt_data_end+0xfffc0b3c>

00040b78 <__udivsi3>:
   40b78:	200d883a 	mov	r6,r4
   40b7c:	2900152e 	bgeu	r5,r4,40bd4 <__udivsi3+0x5c>
   40b80:	28001416 	blt	r5,zero,40bd4 <__udivsi3+0x5c>
   40b84:	00800804 	movi	r2,32
   40b88:	00c00044 	movi	r3,1
   40b8c:	00000206 	br	40b98 <__udivsi3+0x20>
   40b90:	10000e26 	beq	r2,zero,40bcc <__udivsi3+0x54>
   40b94:	28000516 	blt	r5,zero,40bac <__udivsi3+0x34>
   40b98:	294b883a 	add	r5,r5,r5
   40b9c:	10bfffc4 	addi	r2,r2,-1
   40ba0:	18c7883a 	add	r3,r3,r3
   40ba4:	293ffa36 	bltu	r5,r4,40b90 <__alt_data_end+0xfffc0b90>
   40ba8:	18000826 	beq	r3,zero,40bcc <__udivsi3+0x54>
   40bac:	0005883a 	mov	r2,zero
   40bb0:	31400236 	bltu	r6,r5,40bbc <__udivsi3+0x44>
   40bb4:	314dc83a 	sub	r6,r6,r5
   40bb8:	10c4b03a 	or	r2,r2,r3
   40bbc:	1806d07a 	srli	r3,r3,1
   40bc0:	280ad07a 	srli	r5,r5,1
   40bc4:	183ffa1e 	bne	r3,zero,40bb0 <__alt_data_end+0xfffc0bb0>
   40bc8:	f800283a 	ret
   40bcc:	0005883a 	mov	r2,zero
   40bd0:	f800283a 	ret
   40bd4:	00c00044 	movi	r3,1
   40bd8:	003ff406 	br	40bac <__alt_data_end+0xfffc0bac>

00040bdc <__umodsi3>:
   40bdc:	2005883a 	mov	r2,r4
   40be0:	2900122e 	bgeu	r5,r4,40c2c <__umodsi3+0x50>
   40be4:	28001116 	blt	r5,zero,40c2c <__umodsi3+0x50>
   40be8:	01800804 	movi	r6,32
   40bec:	00c00044 	movi	r3,1
   40bf0:	00000206 	br	40bfc <__umodsi3+0x20>
   40bf4:	30000c26 	beq	r6,zero,40c28 <__umodsi3+0x4c>
   40bf8:	28000516 	blt	r5,zero,40c10 <__umodsi3+0x34>
   40bfc:	294b883a 	add	r5,r5,r5
   40c00:	31bfffc4 	addi	r6,r6,-1
   40c04:	18c7883a 	add	r3,r3,r3
   40c08:	293ffa36 	bltu	r5,r4,40bf4 <__alt_data_end+0xfffc0bf4>
   40c0c:	18000626 	beq	r3,zero,40c28 <__umodsi3+0x4c>
   40c10:	1806d07a 	srli	r3,r3,1
   40c14:	11400136 	bltu	r2,r5,40c1c <__umodsi3+0x40>
   40c18:	1145c83a 	sub	r2,r2,r5
   40c1c:	280ad07a 	srli	r5,r5,1
   40c20:	183ffb1e 	bne	r3,zero,40c10 <__alt_data_end+0xfffc0c10>
   40c24:	f800283a 	ret
   40c28:	f800283a 	ret
   40c2c:	00c00044 	movi	r3,1
   40c30:	003ff706 	br	40c10 <__alt_data_end+0xfffc0c10>

00040c34 <__addsf3>:
   40c34:	defffc04 	addi	sp,sp,-16
   40c38:	2004d7fa 	srli	r2,r4,31
   40c3c:	280cd5fa 	srli	r6,r5,23
   40c40:	dc000015 	stw	r16,0(sp)
   40c44:	00c02034 	movhi	r3,128
   40c48:	2020d5fa 	srli	r16,r4,23
   40c4c:	280ed7fa 	srli	r7,r5,31
   40c50:	18ffffc4 	addi	r3,r3,-1
   40c54:	dc400115 	stw	r17,4(sp)
   40c58:	1908703a 	and	r4,r3,r4
   40c5c:	194a703a 	and	r5,r3,r5
   40c60:	dfc00315 	stw	ra,12(sp)
   40c64:	dc800215 	stw	r18,8(sp)
   40c68:	14403fcc 	andi	r17,r2,255
   40c6c:	84003fcc 	andi	r16,r16,255
   40c70:	200890fa 	slli	r4,r4,3
   40c74:	31803fcc 	andi	r6,r6,255
   40c78:	280a90fa 	slli	r5,r5,3
   40c7c:	89c05026 	beq	r17,r7,40dc0 <__addsf3+0x18c>
   40c80:	8185c83a 	sub	r2,r16,r6
   40c84:	00807a0e 	bge	zero,r2,40e70 <__addsf3+0x23c>
   40c88:	30001e1e 	bne	r6,zero,40d04 <__addsf3+0xd0>
   40c8c:	28006d1e 	bne	r5,zero,40e44 <__addsf3+0x210>
   40c90:	208001cc 	andi	r2,r4,7
   40c94:	10000426 	beq	r2,zero,40ca8 <__addsf3+0x74>
   40c98:	208003cc 	andi	r2,r4,15
   40c9c:	00c00104 	movi	r3,4
   40ca0:	10c00126 	beq	r2,r3,40ca8 <__addsf3+0x74>
   40ca4:	20c9883a 	add	r4,r4,r3
   40ca8:	2081002c 	andhi	r2,r4,1024
   40cac:	10003926 	beq	r2,zero,40d94 <__addsf3+0x160>
   40cb0:	84000044 	addi	r16,r16,1
   40cb4:	00803fc4 	movi	r2,255
   40cb8:	80807826 	beq	r16,r2,40e9c <__addsf3+0x268>
   40cbc:	200891ba 	slli	r4,r4,6
   40cc0:	8805883a 	mov	r2,r17
   40cc4:	2008d27a 	srli	r4,r4,9
   40cc8:	84003fcc 	andi	r16,r16,255
   40ccc:	800695fa 	slli	r3,r16,23
   40cd0:	10803fcc 	andi	r2,r2,255
   40cd4:	04002034 	movhi	r16,128
   40cd8:	843fffc4 	addi	r16,r16,-1
   40cdc:	100497fa 	slli	r2,r2,31
   40ce0:	2408703a 	and	r4,r4,r16
   40ce4:	20e0b03a 	or	r16,r4,r3
   40ce8:	8084b03a 	or	r2,r16,r2
   40cec:	dfc00317 	ldw	ra,12(sp)
   40cf0:	dc800217 	ldw	r18,8(sp)
   40cf4:	dc400117 	ldw	r17,4(sp)
   40cf8:	dc000017 	ldw	r16,0(sp)
   40cfc:	dec00404 	addi	sp,sp,16
   40d00:	f800283a 	ret
   40d04:	00c03fc4 	movi	r3,255
   40d08:	80ffe126 	beq	r16,r3,40c90 <__alt_data_end+0xfffc0c90>
   40d0c:	29410034 	orhi	r5,r5,1024
   40d10:	00c006c4 	movi	r3,27
   40d14:	18807516 	blt	r3,r2,40eec <__addsf3+0x2b8>
   40d18:	00c00804 	movi	r3,32
   40d1c:	1887c83a 	sub	r3,r3,r2
   40d20:	28c6983a 	sll	r3,r5,r3
   40d24:	288ad83a 	srl	r5,r5,r2
   40d28:	1804c03a 	cmpne	r2,r3,zero
   40d2c:	288ab03a 	or	r5,r5,r2
   40d30:	2149c83a 	sub	r4,r4,r5
   40d34:	2081002c 	andhi	r2,r4,1024
   40d38:	10001426 	beq	r2,zero,40d8c <__addsf3+0x158>
   40d3c:	04810034 	movhi	r18,1024
   40d40:	94bfffc4 	addi	r18,r18,-1
   40d44:	24a4703a 	and	r18,r4,r18
   40d48:	9009883a 	mov	r4,r18
   40d4c:	00430980 	call	43098 <__clzsi2>
   40d50:	10bffec4 	addi	r2,r2,-5
   40d54:	90a4983a 	sll	r18,r18,r2
   40d58:	14005416 	blt	r2,r16,40eac <__addsf3+0x278>
   40d5c:	1405c83a 	sub	r2,r2,r16
   40d60:	11000044 	addi	r4,r2,1
   40d64:	00800804 	movi	r2,32
   40d68:	1105c83a 	sub	r2,r2,r4
   40d6c:	9084983a 	sll	r2,r18,r2
   40d70:	9124d83a 	srl	r18,r18,r4
   40d74:	0021883a 	mov	r16,zero
   40d78:	1008c03a 	cmpne	r4,r2,zero
   40d7c:	9108b03a 	or	r4,r18,r4
   40d80:	003fc306 	br	40c90 <__alt_data_end+0xfffc0c90>
   40d84:	1000db26 	beq	r2,zero,410f4 <__addsf3+0x4c0>
   40d88:	1009883a 	mov	r4,r2
   40d8c:	208001cc 	andi	r2,r4,7
   40d90:	103fc11e 	bne	r2,zero,40c98 <__alt_data_end+0xfffc0c98>
   40d94:	2006d0fa 	srli	r3,r4,3
   40d98:	01003fc4 	movi	r4,255
   40d9c:	8805883a 	mov	r2,r17
   40da0:	8100241e 	bne	r16,r4,40e34 <__addsf3+0x200>
   40da4:	18006e26 	beq	r3,zero,40f60 <__addsf3+0x32c>
   40da8:	19001034 	orhi	r4,r3,64
   40dac:	00c02034 	movhi	r3,128
   40db0:	18ffffc4 	addi	r3,r3,-1
   40db4:	043fffc4 	movi	r16,-1
   40db8:	20c8703a 	and	r4,r4,r3
   40dbc:	003fc206 	br	40cc8 <__alt_data_end+0xfffc0cc8>
   40dc0:	8187c83a 	sub	r3,r16,r6
   40dc4:	00c03e0e 	bge	zero,r3,40ec0 <__addsf3+0x28c>
   40dc8:	30002326 	beq	r6,zero,40e58 <__addsf3+0x224>
   40dcc:	01803fc4 	movi	r6,255
   40dd0:	81bfaf26 	beq	r16,r6,40c90 <__alt_data_end+0xfffc0c90>
   40dd4:	29410034 	orhi	r5,r5,1024
   40dd8:	018006c4 	movi	r6,27
   40ddc:	30c07416 	blt	r6,r3,40fb0 <__addsf3+0x37c>
   40de0:	01800804 	movi	r6,32
   40de4:	30cdc83a 	sub	r6,r6,r3
   40de8:	298c983a 	sll	r6,r5,r6
   40dec:	28cad83a 	srl	r5,r5,r3
   40df0:	3006c03a 	cmpne	r3,r6,zero
   40df4:	28cab03a 	or	r5,r5,r3
   40df8:	2149883a 	add	r4,r4,r5
   40dfc:	20c1002c 	andhi	r3,r4,1024
   40e00:	183fe226 	beq	r3,zero,40d8c <__alt_data_end+0xfffc0d8c>
   40e04:	84000044 	addi	r16,r16,1
   40e08:	00c03fc4 	movi	r3,255
   40e0c:	80c05426 	beq	r16,r3,40f60 <__addsf3+0x32c>
   40e10:	00bf0034 	movhi	r2,64512
   40e14:	10bfffc4 	addi	r2,r2,-1
   40e18:	20c0004c 	andi	r3,r4,1
   40e1c:	2088703a 	and	r4,r4,r2
   40e20:	2008d07a 	srli	r4,r4,1
   40e24:	20c8b03a 	or	r4,r4,r3
   40e28:	003f9906 	br	40c90 <__alt_data_end+0xfffc0c90>
   40e2c:	0007883a 	mov	r3,zero
   40e30:	0005883a 	mov	r2,zero
   40e34:	01002034 	movhi	r4,128
   40e38:	213fffc4 	addi	r4,r4,-1
   40e3c:	1908703a 	and	r4,r3,r4
   40e40:	003fa106 	br	40cc8 <__alt_data_end+0xfffc0cc8>
   40e44:	10bfffc4 	addi	r2,r2,-1
   40e48:	103fb926 	beq	r2,zero,40d30 <__alt_data_end+0xfffc0d30>
   40e4c:	00c03fc4 	movi	r3,255
   40e50:	80ffaf1e 	bne	r16,r3,40d10 <__alt_data_end+0xfffc0d10>
   40e54:	003f8e06 	br	40c90 <__alt_data_end+0xfffc0c90>
   40e58:	283f8d26 	beq	r5,zero,40c90 <__alt_data_end+0xfffc0c90>
   40e5c:	18ffffc4 	addi	r3,r3,-1
   40e60:	183fe526 	beq	r3,zero,40df8 <__alt_data_end+0xfffc0df8>
   40e64:	01803fc4 	movi	r6,255
   40e68:	81bfdb1e 	bne	r16,r6,40dd8 <__alt_data_end+0xfffc0dd8>
   40e6c:	003f8806 	br	40c90 <__alt_data_end+0xfffc0c90>
   40e70:	1000201e 	bne	r2,zero,40ef4 <__addsf3+0x2c0>
   40e74:	80800044 	addi	r2,r16,1
   40e78:	10803fcc 	andi	r2,r2,255
   40e7c:	01800044 	movi	r6,1
   40e80:	3080450e 	bge	r6,r2,40f98 <__addsf3+0x364>
   40e84:	2165c83a 	sub	r18,r4,r5
   40e88:	90c1002c 	andhi	r3,r18,1024
   40e8c:	18002b26 	beq	r3,zero,40f3c <__addsf3+0x308>
   40e90:	2925c83a 	sub	r18,r5,r4
   40e94:	3823883a 	mov	r17,r7
   40e98:	003fab06 	br	40d48 <__alt_data_end+0xfffc0d48>
   40e9c:	8805883a 	mov	r2,r17
   40ea0:	043fffc4 	movi	r16,-1
   40ea4:	0009883a 	mov	r4,zero
   40ea8:	003f8706 	br	40cc8 <__alt_data_end+0xfffc0cc8>
   40eac:	013f0034 	movhi	r4,64512
   40eb0:	213fffc4 	addi	r4,r4,-1
   40eb4:	80a1c83a 	sub	r16,r16,r2
   40eb8:	9108703a 	and	r4,r18,r4
   40ebc:	003f7406 	br	40c90 <__alt_data_end+0xfffc0c90>
   40ec0:	1800411e 	bne	r3,zero,40fc8 <__addsf3+0x394>
   40ec4:	80c00044 	addi	r3,r16,1
   40ec8:	19c03fcc 	andi	r7,r3,255
   40ecc:	01800044 	movi	r6,1
   40ed0:	31c0260e 	bge	r6,r7,40f6c <__addsf3+0x338>
   40ed4:	01803fc4 	movi	r6,255
   40ed8:	19802126 	beq	r3,r6,40f60 <__addsf3+0x32c>
   40edc:	2149883a 	add	r4,r4,r5
   40ee0:	2008d07a 	srli	r4,r4,1
   40ee4:	1821883a 	mov	r16,r3
   40ee8:	003f6906 	br	40c90 <__alt_data_end+0xfffc0c90>
   40eec:	01400044 	movi	r5,1
   40ef0:	003f8f06 	br	40d30 <__alt_data_end+0xfffc0d30>
   40ef4:	8000151e 	bne	r16,zero,40f4c <__addsf3+0x318>
   40ef8:	20002f26 	beq	r4,zero,40fb8 <__addsf3+0x384>
   40efc:	0084303a 	nor	r2,zero,r2
   40f00:	10000a26 	beq	r2,zero,40f2c <__addsf3+0x2f8>
   40f04:	00c03fc4 	movi	r3,255
   40f08:	30c02b26 	beq	r6,r3,40fb8 <__addsf3+0x384>
   40f0c:	00c006c4 	movi	r3,27
   40f10:	18806d16 	blt	r3,r2,410c8 <__addsf3+0x494>
   40f14:	00c00804 	movi	r3,32
   40f18:	1887c83a 	sub	r3,r3,r2
   40f1c:	20c6983a 	sll	r3,r4,r3
   40f20:	2084d83a 	srl	r2,r4,r2
   40f24:	1808c03a 	cmpne	r4,r3,zero
   40f28:	1108b03a 	or	r4,r2,r4
   40f2c:	2909c83a 	sub	r4,r5,r4
   40f30:	3021883a 	mov	r16,r6
   40f34:	3823883a 	mov	r17,r7
   40f38:	003f7e06 	br	40d34 <__alt_data_end+0xfffc0d34>
   40f3c:	903f821e 	bne	r18,zero,40d48 <__alt_data_end+0xfffc0d48>
   40f40:	0005883a 	mov	r2,zero
   40f44:	0021883a 	mov	r16,zero
   40f48:	003fba06 	br	40e34 <__alt_data_end+0xfffc0e34>
   40f4c:	00c03fc4 	movi	r3,255
   40f50:	30c01926 	beq	r6,r3,40fb8 <__addsf3+0x384>
   40f54:	0085c83a 	sub	r2,zero,r2
   40f58:	21010034 	orhi	r4,r4,1024
   40f5c:	003feb06 	br	40f0c <__alt_data_end+0xfffc0f0c>
   40f60:	043fffc4 	movi	r16,-1
   40f64:	0009883a 	mov	r4,zero
   40f68:	003f5706 	br	40cc8 <__alt_data_end+0xfffc0cc8>
   40f6c:	80004a1e 	bne	r16,zero,41098 <__addsf3+0x464>
   40f70:	20005926 	beq	r4,zero,410d8 <__addsf3+0x4a4>
   40f74:	283f4626 	beq	r5,zero,40c90 <__alt_data_end+0xfffc0c90>
   40f78:	2149883a 	add	r4,r4,r5
   40f7c:	2081002c 	andhi	r2,r4,1024
   40f80:	103f8226 	beq	r2,zero,40d8c <__alt_data_end+0xfffc0d8c>
   40f84:	00bf0034 	movhi	r2,64512
   40f88:	10bfffc4 	addi	r2,r2,-1
   40f8c:	3021883a 	mov	r16,r6
   40f90:	2088703a 	and	r4,r4,r2
   40f94:	003f3e06 	br	40c90 <__alt_data_end+0xfffc0c90>
   40f98:	8000121e 	bne	r16,zero,40fe4 <__addsf3+0x3b0>
   40f9c:	2000261e 	bne	r4,zero,41038 <__addsf3+0x404>
   40fa0:	283fa226 	beq	r5,zero,40e2c <__alt_data_end+0xfffc0e2c>
   40fa4:	2809883a 	mov	r4,r5
   40fa8:	3823883a 	mov	r17,r7
   40fac:	003f3806 	br	40c90 <__alt_data_end+0xfffc0c90>
   40fb0:	01400044 	movi	r5,1
   40fb4:	003f9006 	br	40df8 <__alt_data_end+0xfffc0df8>
   40fb8:	2809883a 	mov	r4,r5
   40fbc:	3021883a 	mov	r16,r6
   40fc0:	3823883a 	mov	r17,r7
   40fc4:	003f3206 	br	40c90 <__alt_data_end+0xfffc0c90>
   40fc8:	80000c1e 	bne	r16,zero,40ffc <__addsf3+0x3c8>
   40fcc:	20002f26 	beq	r4,zero,4108c <__addsf3+0x458>
   40fd0:	00c6303a 	nor	r3,zero,r3
   40fd4:	18002b1e 	bne	r3,zero,41084 <__addsf3+0x450>
   40fd8:	2149883a 	add	r4,r4,r5
   40fdc:	3021883a 	mov	r16,r6
   40fe0:	003f8606 	br	40dfc <__alt_data_end+0xfffc0dfc>
   40fe4:	20001b1e 	bne	r4,zero,41054 <__addsf3+0x420>
   40fe8:	28003926 	beq	r5,zero,410d0 <__addsf3+0x49c>
   40fec:	2809883a 	mov	r4,r5
   40ff0:	3823883a 	mov	r17,r7
   40ff4:	04003fc4 	movi	r16,255
   40ff8:	003f2506 	br	40c90 <__alt_data_end+0xfffc0c90>
   40ffc:	01c03fc4 	movi	r7,255
   41000:	31c02226 	beq	r6,r7,4108c <__addsf3+0x458>
   41004:	00c7c83a 	sub	r3,zero,r3
   41008:	21010034 	orhi	r4,r4,1024
   4100c:	01c006c4 	movi	r7,27
   41010:	38c03616 	blt	r7,r3,410ec <__addsf3+0x4b8>
   41014:	01c00804 	movi	r7,32
   41018:	38cfc83a 	sub	r7,r7,r3
   4101c:	21ce983a 	sll	r7,r4,r7
   41020:	20c6d83a 	srl	r3,r4,r3
   41024:	3808c03a 	cmpne	r4,r7,zero
   41028:	1906b03a 	or	r3,r3,r4
   4102c:	1949883a 	add	r4,r3,r5
   41030:	3021883a 	mov	r16,r6
   41034:	003f7106 	br	40dfc <__alt_data_end+0xfffc0dfc>
   41038:	283f1526 	beq	r5,zero,40c90 <__alt_data_end+0xfffc0c90>
   4103c:	2145c83a 	sub	r2,r4,r5
   41040:	10c1002c 	andhi	r3,r2,1024
   41044:	183f4f26 	beq	r3,zero,40d84 <__alt_data_end+0xfffc0d84>
   41048:	2909c83a 	sub	r4,r5,r4
   4104c:	3823883a 	mov	r17,r7
   41050:	003f0f06 	br	40c90 <__alt_data_end+0xfffc0c90>
   41054:	28001a26 	beq	r5,zero,410c0 <__addsf3+0x48c>
   41058:	2008d0fa 	srli	r4,r4,3
   4105c:	2080102c 	andhi	r2,r4,64
   41060:	10000526 	beq	r2,zero,41078 <__addsf3+0x444>
   41064:	280ad0fa 	srli	r5,r5,3
   41068:	2880102c 	andhi	r2,r5,64
   4106c:	1000021e 	bne	r2,zero,41078 <__addsf3+0x444>
   41070:	2809883a 	mov	r4,r5
   41074:	3823883a 	mov	r17,r7
   41078:	200890fa 	slli	r4,r4,3
   4107c:	04003fc4 	movi	r16,255
   41080:	003f0306 	br	40c90 <__alt_data_end+0xfffc0c90>
   41084:	01c03fc4 	movi	r7,255
   41088:	31ffe01e 	bne	r6,r7,4100c <__alt_data_end+0xfffc100c>
   4108c:	2809883a 	mov	r4,r5
   41090:	3021883a 	mov	r16,r6
   41094:	003efe06 	br	40c90 <__alt_data_end+0xfffc0c90>
   41098:	20001126 	beq	r4,zero,410e0 <__addsf3+0x4ac>
   4109c:	28000826 	beq	r5,zero,410c0 <__addsf3+0x48c>
   410a0:	2008d0fa 	srli	r4,r4,3
   410a4:	2080102c 	andhi	r2,r4,64
   410a8:	103ff326 	beq	r2,zero,41078 <__alt_data_end+0xfffc1078>
   410ac:	280ad0fa 	srli	r5,r5,3
   410b0:	2880102c 	andhi	r2,r5,64
   410b4:	103ff01e 	bne	r2,zero,41078 <__alt_data_end+0xfffc1078>
   410b8:	2809883a 	mov	r4,r5
   410bc:	003fee06 	br	41078 <__alt_data_end+0xfffc1078>
   410c0:	04003fc4 	movi	r16,255
   410c4:	003ef206 	br	40c90 <__alt_data_end+0xfffc0c90>
   410c8:	01000044 	movi	r4,1
   410cc:	003f9706 	br	40f2c <__alt_data_end+0xfffc0f2c>
   410d0:	0005883a 	mov	r2,zero
   410d4:	003f3406 	br	40da8 <__alt_data_end+0xfffc0da8>
   410d8:	2809883a 	mov	r4,r5
   410dc:	003eec06 	br	40c90 <__alt_data_end+0xfffc0c90>
   410e0:	2809883a 	mov	r4,r5
   410e4:	04003fc4 	movi	r16,255
   410e8:	003ee906 	br	40c90 <__alt_data_end+0xfffc0c90>
   410ec:	00c00044 	movi	r3,1
   410f0:	003fce06 	br	4102c <__alt_data_end+0xfffc102c>
   410f4:	0005883a 	mov	r2,zero
   410f8:	003f4e06 	br	40e34 <__alt_data_end+0xfffc0e34>

000410fc <__divsf3>:
   410fc:	defff504 	addi	sp,sp,-44
   41100:	200cd5fa 	srli	r6,r4,23
   41104:	dcc00415 	stw	r19,16(sp)
   41108:	2026d7fa 	srli	r19,r4,31
   4110c:	00c02034 	movhi	r3,128
   41110:	dd800715 	stw	r22,28(sp)
   41114:	dd000515 	stw	r20,20(sp)
   41118:	dc800315 	stw	r18,12(sp)
   4111c:	18ffffc4 	addi	r3,r3,-1
   41120:	dfc00a15 	stw	ra,40(sp)
   41124:	df000915 	stw	fp,36(sp)
   41128:	ddc00815 	stw	r23,32(sp)
   4112c:	dd400615 	stw	r21,24(sp)
   41130:	dc400215 	stw	r17,8(sp)
   41134:	dc000115 	stw	r16,4(sp)
   41138:	35003fcc 	andi	r20,r6,255
   4113c:	1924703a 	and	r18,r3,r4
   41140:	9d803fcc 	andi	r22,r19,255
   41144:	a0005226 	beq	r20,zero,41290 <__divsf3+0x194>
   41148:	00803fc4 	movi	r2,255
   4114c:	a0802e26 	beq	r20,r2,41208 <__divsf3+0x10c>
   41150:	91002034 	orhi	r4,r18,128
   41154:	202490fa 	slli	r18,r4,3
   41158:	a53fe044 	addi	r20,r20,-127
   4115c:	0021883a 	mov	r16,zero
   41160:	002f883a 	mov	r23,zero
   41164:	280cd5fa 	srli	r6,r5,23
   41168:	282ad7fa 	srli	r21,r5,31
   4116c:	00c02034 	movhi	r3,128
   41170:	18ffffc4 	addi	r3,r3,-1
   41174:	31803fcc 	andi	r6,r6,255
   41178:	1962703a 	and	r17,r3,r5
   4117c:	af003fcc 	andi	fp,r21,255
   41180:	30004a26 	beq	r6,zero,412ac <__divsf3+0x1b0>
   41184:	00803fc4 	movi	r2,255
   41188:	30804526 	beq	r6,r2,412a0 <__divsf3+0x1a4>
   4118c:	89402034 	orhi	r5,r17,128
   41190:	282290fa 	slli	r17,r5,3
   41194:	31bfe044 	addi	r6,r6,-127
   41198:	000b883a 	mov	r5,zero
   4119c:	2c20b03a 	or	r16,r5,r16
   411a0:	802090ba 	slli	r16,r16,2
   411a4:	00800134 	movhi	r2,4
   411a8:	10847204 	addi	r2,r2,4552
   411ac:	80a1883a 	add	r16,r16,r2
   411b0:	81000017 	ldw	r4,0(r16)
   411b4:	9d46f03a 	xor	r3,r19,r21
   411b8:	180f883a 	mov	r7,r3
   411bc:	18803fcc 	andi	r2,r3,255
   411c0:	a18dc83a 	sub	r6,r20,r6
   411c4:	2000683a 	jmp	r4
   411c8:	000413ac 	andhi	zero,zero,4174
   411cc:	00041230 	cmpltui	zero,zero,4168
   411d0:	000413a0 	cmpeqi	zero,zero,4174
   411d4:	0004121c 	xori	zero,zero,4168
   411d8:	000413a0 	cmpeqi	zero,zero,4174
   411dc:	00041378 	rdprs	zero,zero,4173
   411e0:	000413a0 	cmpeqi	zero,zero,4174
   411e4:	0004121c 	xori	zero,zero,4168
   411e8:	00041230 	cmpltui	zero,zero,4168
   411ec:	00041230 	cmpltui	zero,zero,4168
   411f0:	00041378 	rdprs	zero,zero,4173
   411f4:	0004121c 	xori	zero,zero,4168
   411f8:	0004148c 	andi	zero,zero,4178
   411fc:	0004148c 	andi	zero,zero,4178
   41200:	0004148c 	andi	zero,zero,4178
   41204:	00041440 	call	4144 <__alt_mem_onchip_memory2_0-0x3bebc>
   41208:	9000581e 	bne	r18,zero,4136c <__divsf3+0x270>
   4120c:	04000204 	movi	r16,8
   41210:	05c00084 	movi	r23,2
   41214:	003fd306 	br	41164 <__alt_data_end+0xfffc1164>
   41218:	0023883a 	mov	r17,zero
   4121c:	e02d883a 	mov	r22,fp
   41220:	282f883a 	mov	r23,r5
   41224:	00800084 	movi	r2,2
   41228:	b8808f1e 	bne	r23,r2,41468 <__divsf3+0x36c>
   4122c:	b005883a 	mov	r2,r22
   41230:	11c0004c 	andi	r7,r2,1
   41234:	013fffc4 	movi	r4,-1
   41238:	000d883a 	mov	r6,zero
   4123c:	21003fcc 	andi	r4,r4,255
   41240:	200895fa 	slli	r4,r4,23
   41244:	38803fcc 	andi	r2,r7,255
   41248:	00c02034 	movhi	r3,128
   4124c:	100497fa 	slli	r2,r2,31
   41250:	18ffffc4 	addi	r3,r3,-1
   41254:	30c6703a 	and	r3,r6,r3
   41258:	1906b03a 	or	r3,r3,r4
   4125c:	1884b03a 	or	r2,r3,r2
   41260:	dfc00a17 	ldw	ra,40(sp)
   41264:	df000917 	ldw	fp,36(sp)
   41268:	ddc00817 	ldw	r23,32(sp)
   4126c:	dd800717 	ldw	r22,28(sp)
   41270:	dd400617 	ldw	r21,24(sp)
   41274:	dd000517 	ldw	r20,20(sp)
   41278:	dcc00417 	ldw	r19,16(sp)
   4127c:	dc800317 	ldw	r18,12(sp)
   41280:	dc400217 	ldw	r17,8(sp)
   41284:	dc000117 	ldw	r16,4(sp)
   41288:	dec00b04 	addi	sp,sp,44
   4128c:	f800283a 	ret
   41290:	90002b1e 	bne	r18,zero,41340 <__divsf3+0x244>
   41294:	04000104 	movi	r16,4
   41298:	05c00044 	movi	r23,1
   4129c:	003fb106 	br	41164 <__alt_data_end+0xfffc1164>
   412a0:	8800251e 	bne	r17,zero,41338 <__divsf3+0x23c>
   412a4:	01400084 	movi	r5,2
   412a8:	00000206 	br	412b4 <__divsf3+0x1b8>
   412ac:	88001a1e 	bne	r17,zero,41318 <__divsf3+0x21c>
   412b0:	01400044 	movi	r5,1
   412b4:	8160b03a 	or	r16,r16,r5
   412b8:	802090ba 	slli	r16,r16,2
   412bc:	00c00134 	movhi	r3,4
   412c0:	18c4b604 	addi	r3,r3,4824
   412c4:	80e1883a 	add	r16,r16,r3
   412c8:	80c00017 	ldw	r3,0(r16)
   412cc:	9d44f03a 	xor	r2,r19,r21
   412d0:	a18dc83a 	sub	r6,r20,r6
   412d4:	1800683a 	jmp	r3
   412d8:	00041230 	cmpltui	zero,zero,4168
   412dc:	00041230 	cmpltui	zero,zero,4168
   412e0:	0004147c 	xorhi	zero,zero,4177
   412e4:	00041218 	cmpnei	zero,zero,4168
   412e8:	0004147c 	xorhi	zero,zero,4177
   412ec:	00041378 	rdprs	zero,zero,4173
   412f0:	0004147c 	xorhi	zero,zero,4177
   412f4:	00041218 	cmpnei	zero,zero,4168
   412f8:	00041230 	cmpltui	zero,zero,4168
   412fc:	00041230 	cmpltui	zero,zero,4168
   41300:	00041378 	rdprs	zero,zero,4173
   41304:	00041218 	cmpnei	zero,zero,4168
   41308:	0004148c 	andi	zero,zero,4178
   4130c:	0004148c 	andi	zero,zero,4178
   41310:	0004148c 	andi	zero,zero,4178
   41314:	000414a4 	muli	zero,zero,4178
   41318:	8809883a 	mov	r4,r17
   4131c:	00430980 	call	43098 <__clzsi2>
   41320:	10fffec4 	addi	r3,r2,-5
   41324:	10801d84 	addi	r2,r2,118
   41328:	88e2983a 	sll	r17,r17,r3
   4132c:	008dc83a 	sub	r6,zero,r2
   41330:	000b883a 	mov	r5,zero
   41334:	003f9906 	br	4119c <__alt_data_end+0xfffc119c>
   41338:	014000c4 	movi	r5,3
   4133c:	003f9706 	br	4119c <__alt_data_end+0xfffc119c>
   41340:	9009883a 	mov	r4,r18
   41344:	d9400015 	stw	r5,0(sp)
   41348:	00430980 	call	43098 <__clzsi2>
   4134c:	10fffec4 	addi	r3,r2,-5
   41350:	11801d84 	addi	r6,r2,118
   41354:	90e4983a 	sll	r18,r18,r3
   41358:	01a9c83a 	sub	r20,zero,r6
   4135c:	0021883a 	mov	r16,zero
   41360:	002f883a 	mov	r23,zero
   41364:	d9400017 	ldw	r5,0(sp)
   41368:	003f7e06 	br	41164 <__alt_data_end+0xfffc1164>
   4136c:	04000304 	movi	r16,12
   41370:	05c000c4 	movi	r23,3
   41374:	003f7b06 	br	41164 <__alt_data_end+0xfffc1164>
   41378:	01802034 	movhi	r6,128
   4137c:	000f883a 	mov	r7,zero
   41380:	31bfffc4 	addi	r6,r6,-1
   41384:	013fffc4 	movi	r4,-1
   41388:	003fac06 	br	4123c <__alt_data_end+0xfffc123c>
   4138c:	01400044 	movi	r5,1
   41390:	2909c83a 	sub	r4,r5,r4
   41394:	00c006c4 	movi	r3,27
   41398:	19004b0e 	bge	r3,r4,414c8 <__divsf3+0x3cc>
   4139c:	114e703a 	and	r7,r2,r5
   413a0:	0009883a 	mov	r4,zero
   413a4:	000d883a 	mov	r6,zero
   413a8:	003fa406 	br	4123c <__alt_data_end+0xfffc123c>
   413ac:	9006917a 	slli	r3,r18,5
   413b0:	8822917a 	slli	r17,r17,5
   413b4:	1c40372e 	bgeu	r3,r17,41494 <__divsf3+0x398>
   413b8:	31bfffc4 	addi	r6,r6,-1
   413bc:	010006c4 	movi	r4,27
   413c0:	000b883a 	mov	r5,zero
   413c4:	180f883a 	mov	r7,r3
   413c8:	294b883a 	add	r5,r5,r5
   413cc:	18c7883a 	add	r3,r3,r3
   413d0:	38000116 	blt	r7,zero,413d8 <__divsf3+0x2dc>
   413d4:	1c400236 	bltu	r3,r17,413e0 <__divsf3+0x2e4>
   413d8:	1c47c83a 	sub	r3,r3,r17
   413dc:	29400054 	ori	r5,r5,1
   413e0:	213fffc4 	addi	r4,r4,-1
   413e4:	203ff71e 	bne	r4,zero,413c4 <__alt_data_end+0xfffc13c4>
   413e8:	1806c03a 	cmpne	r3,r3,zero
   413ec:	1962b03a 	or	r17,r3,r5
   413f0:	31001fc4 	addi	r4,r6,127
   413f4:	013fe50e 	bge	zero,r4,4138c <__alt_data_end+0xfffc138c>
   413f8:	88c001cc 	andi	r3,r17,7
   413fc:	18000426 	beq	r3,zero,41410 <__divsf3+0x314>
   41400:	88c003cc 	andi	r3,r17,15
   41404:	01400104 	movi	r5,4
   41408:	19400126 	beq	r3,r5,41410 <__divsf3+0x314>
   4140c:	8963883a 	add	r17,r17,r5
   41410:	88c2002c 	andhi	r3,r17,2048
   41414:	18000426 	beq	r3,zero,41428 <__divsf3+0x32c>
   41418:	00fe0034 	movhi	r3,63488
   4141c:	18ffffc4 	addi	r3,r3,-1
   41420:	31002004 	addi	r4,r6,128
   41424:	88e2703a 	and	r17,r17,r3
   41428:	00c03f84 	movi	r3,254
   4142c:	193f8016 	blt	r3,r4,41230 <__alt_data_end+0xfffc1230>
   41430:	880c91ba 	slli	r6,r17,6
   41434:	11c0004c 	andi	r7,r2,1
   41438:	300cd27a 	srli	r6,r6,9
   4143c:	003f7f06 	br	4123c <__alt_data_end+0xfffc123c>
   41440:	9080102c 	andhi	r2,r18,64
   41444:	10000226 	beq	r2,zero,41450 <__divsf3+0x354>
   41448:	8880102c 	andhi	r2,r17,64
   4144c:	10001826 	beq	r2,zero,414b0 <__divsf3+0x3b4>
   41450:	00802034 	movhi	r2,128
   41454:	91801034 	orhi	r6,r18,64
   41458:	10bfffc4 	addi	r2,r2,-1
   4145c:	980f883a 	mov	r7,r19
   41460:	308c703a 	and	r6,r6,r2
   41464:	003fc706 	br	41384 <__alt_data_end+0xfffc1384>
   41468:	008000c4 	movi	r2,3
   4146c:	b8802d26 	beq	r23,r2,41524 <__divsf3+0x428>
   41470:	00c00044 	movi	r3,1
   41474:	b005883a 	mov	r2,r22
   41478:	b8ffdd1e 	bne	r23,r3,413f0 <__alt_data_end+0xfffc13f0>
   4147c:	11c0004c 	andi	r7,r2,1
   41480:	0009883a 	mov	r4,zero
   41484:	000d883a 	mov	r6,zero
   41488:	003f6c06 	br	4123c <__alt_data_end+0xfffc123c>
   4148c:	9023883a 	mov	r17,r18
   41490:	003f6406 	br	41224 <__alt_data_end+0xfffc1224>
   41494:	1c47c83a 	sub	r3,r3,r17
   41498:	01000684 	movi	r4,26
   4149c:	01400044 	movi	r5,1
   414a0:	003fc806 	br	413c4 <__alt_data_end+0xfffc13c4>
   414a4:	9080102c 	andhi	r2,r18,64
   414a8:	103fe926 	beq	r2,zero,41450 <__alt_data_end+0xfffc1450>
   414ac:	0023883a 	mov	r17,zero
   414b0:	00802034 	movhi	r2,128
   414b4:	89801034 	orhi	r6,r17,64
   414b8:	10bfffc4 	addi	r2,r2,-1
   414bc:	a80f883a 	mov	r7,r21
   414c0:	308c703a 	and	r6,r6,r2
   414c4:	003faf06 	br	41384 <__alt_data_end+0xfffc1384>
   414c8:	01c00804 	movi	r7,32
   414cc:	390fc83a 	sub	r7,r7,r4
   414d0:	89ce983a 	sll	r7,r17,r7
   414d4:	890ad83a 	srl	r5,r17,r4
   414d8:	380ec03a 	cmpne	r7,r7,zero
   414dc:	29cab03a 	or	r5,r5,r7
   414e0:	28c001cc 	andi	r3,r5,7
   414e4:	18000426 	beq	r3,zero,414f8 <__divsf3+0x3fc>
   414e8:	28c003cc 	andi	r3,r5,15
   414ec:	01000104 	movi	r4,4
   414f0:	19000126 	beq	r3,r4,414f8 <__divsf3+0x3fc>
   414f4:	290b883a 	add	r5,r5,r4
   414f8:	28c1002c 	andhi	r3,r5,1024
   414fc:	18000426 	beq	r3,zero,41510 <__divsf3+0x414>
   41500:	11c0004c 	andi	r7,r2,1
   41504:	01000044 	movi	r4,1
   41508:	000d883a 	mov	r6,zero
   4150c:	003f4b06 	br	4123c <__alt_data_end+0xfffc123c>
   41510:	280a91ba 	slli	r5,r5,6
   41514:	11c0004c 	andi	r7,r2,1
   41518:	0009883a 	mov	r4,zero
   4151c:	280cd27a 	srli	r6,r5,9
   41520:	003f4606 	br	4123c <__alt_data_end+0xfffc123c>
   41524:	00802034 	movhi	r2,128
   41528:	89801034 	orhi	r6,r17,64
   4152c:	10bfffc4 	addi	r2,r2,-1
   41530:	b00f883a 	mov	r7,r22
   41534:	308c703a 	and	r6,r6,r2
   41538:	003f9206 	br	41384 <__alt_data_end+0xfffc1384>

0004153c <__mulsf3>:
   4153c:	defff504 	addi	sp,sp,-44
   41540:	dc000115 	stw	r16,4(sp)
   41544:	2020d5fa 	srli	r16,r4,23
   41548:	dd400615 	stw	r21,24(sp)
   4154c:	202ad7fa 	srli	r21,r4,31
   41550:	dc800315 	stw	r18,12(sp)
   41554:	04802034 	movhi	r18,128
   41558:	df000915 	stw	fp,36(sp)
   4155c:	dd000515 	stw	r20,20(sp)
   41560:	94bfffc4 	addi	r18,r18,-1
   41564:	dfc00a15 	stw	ra,40(sp)
   41568:	ddc00815 	stw	r23,32(sp)
   4156c:	dd800715 	stw	r22,28(sp)
   41570:	dcc00415 	stw	r19,16(sp)
   41574:	dc400215 	stw	r17,8(sp)
   41578:	84003fcc 	andi	r16,r16,255
   4157c:	9124703a 	and	r18,r18,r4
   41580:	a829883a 	mov	r20,r21
   41584:	af003fcc 	andi	fp,r21,255
   41588:	80005426 	beq	r16,zero,416dc <__mulsf3+0x1a0>
   4158c:	00803fc4 	movi	r2,255
   41590:	80802f26 	beq	r16,r2,41650 <__mulsf3+0x114>
   41594:	91002034 	orhi	r4,r18,128
   41598:	202490fa 	slli	r18,r4,3
   4159c:	843fe044 	addi	r16,r16,-127
   415a0:	0023883a 	mov	r17,zero
   415a4:	002f883a 	mov	r23,zero
   415a8:	2804d5fa 	srli	r2,r5,23
   415ac:	282cd7fa 	srli	r22,r5,31
   415b0:	01002034 	movhi	r4,128
   415b4:	213fffc4 	addi	r4,r4,-1
   415b8:	10803fcc 	andi	r2,r2,255
   415bc:	2166703a 	and	r19,r4,r5
   415c0:	b1803fcc 	andi	r6,r22,255
   415c4:	10004c26 	beq	r2,zero,416f8 <__mulsf3+0x1bc>
   415c8:	00c03fc4 	movi	r3,255
   415cc:	10c04726 	beq	r2,r3,416ec <__mulsf3+0x1b0>
   415d0:	99002034 	orhi	r4,r19,128
   415d4:	202690fa 	slli	r19,r4,3
   415d8:	10bfe044 	addi	r2,r2,-127
   415dc:	0007883a 	mov	r3,zero
   415e0:	80a1883a 	add	r16,r16,r2
   415e4:	010003c4 	movi	r4,15
   415e8:	1c44b03a 	or	r2,r3,r17
   415ec:	b56af03a 	xor	r21,r22,r21
   415f0:	81c00044 	addi	r7,r16,1
   415f4:	20806b36 	bltu	r4,r2,417a4 <__mulsf3+0x268>
   415f8:	100490ba 	slli	r2,r2,2
   415fc:	01000134 	movhi	r4,4
   41600:	21058404 	addi	r4,r4,5648
   41604:	1105883a 	add	r2,r2,r4
   41608:	10800017 	ldw	r2,0(r2)
   4160c:	1000683a 	jmp	r2
   41610:	000417a4 	muli	zero,zero,4190
   41614:	00041664 	muli	zero,zero,4185
   41618:	00041664 	muli	zero,zero,4185
   4161c:	00041660 	cmpeqi	zero,zero,4185
   41620:	00041788 	cmpgei	zero,zero,4190
   41624:	00041788 	cmpgei	zero,zero,4190
   41628:	00041774 	movhi	zero,4189
   4162c:	00041660 	cmpeqi	zero,zero,4185
   41630:	00041788 	cmpgei	zero,zero,4190
   41634:	00041774 	movhi	zero,4189
   41638:	00041788 	cmpgei	zero,zero,4190
   4163c:	00041660 	cmpeqi	zero,zero,4185
   41640:	00041794 	movui	zero,4190
   41644:	00041794 	movui	zero,4190
   41648:	00041794 	movui	zero,4190
   4164c:	00041870 	cmpltui	zero,zero,4193
   41650:	90003b1e 	bne	r18,zero,41740 <__mulsf3+0x204>
   41654:	04400204 	movi	r17,8
   41658:	05c00084 	movi	r23,2
   4165c:	003fd206 	br	415a8 <__alt_data_end+0xfffc15a8>
   41660:	302b883a 	mov	r21,r6
   41664:	00800084 	movi	r2,2
   41668:	18802626 	beq	r3,r2,41704 <__mulsf3+0x1c8>
   4166c:	008000c4 	movi	r2,3
   41670:	1880ab26 	beq	r3,r2,41920 <__mulsf3+0x3e4>
   41674:	00800044 	movi	r2,1
   41678:	1880a21e 	bne	r3,r2,41904 <__mulsf3+0x3c8>
   4167c:	a829883a 	mov	r20,r21
   41680:	0007883a 	mov	r3,zero
   41684:	0009883a 	mov	r4,zero
   41688:	18803fcc 	andi	r2,r3,255
   4168c:	100695fa 	slli	r3,r2,23
   41690:	a0803fcc 	andi	r2,r20,255
   41694:	100a97fa 	slli	r5,r2,31
   41698:	00802034 	movhi	r2,128
   4169c:	10bfffc4 	addi	r2,r2,-1
   416a0:	2084703a 	and	r2,r4,r2
   416a4:	10c4b03a 	or	r2,r2,r3
   416a8:	1144b03a 	or	r2,r2,r5
   416ac:	dfc00a17 	ldw	ra,40(sp)
   416b0:	df000917 	ldw	fp,36(sp)
   416b4:	ddc00817 	ldw	r23,32(sp)
   416b8:	dd800717 	ldw	r22,28(sp)
   416bc:	dd400617 	ldw	r21,24(sp)
   416c0:	dd000517 	ldw	r20,20(sp)
   416c4:	dcc00417 	ldw	r19,16(sp)
   416c8:	dc800317 	ldw	r18,12(sp)
   416cc:	dc400217 	ldw	r17,8(sp)
   416d0:	dc000117 	ldw	r16,4(sp)
   416d4:	dec00b04 	addi	sp,sp,44
   416d8:	f800283a 	ret
   416dc:	90000d1e 	bne	r18,zero,41714 <__mulsf3+0x1d8>
   416e0:	04400104 	movi	r17,4
   416e4:	05c00044 	movi	r23,1
   416e8:	003faf06 	br	415a8 <__alt_data_end+0xfffc15a8>
   416ec:	9806c03a 	cmpne	r3,r19,zero
   416f0:	18c00084 	addi	r3,r3,2
   416f4:	003fba06 	br	415e0 <__alt_data_end+0xfffc15e0>
   416f8:	9800141e 	bne	r19,zero,4174c <__mulsf3+0x210>
   416fc:	00c00044 	movi	r3,1
   41700:	003fb706 	br	415e0 <__alt_data_end+0xfffc15e0>
   41704:	a829883a 	mov	r20,r21
   41708:	00ffffc4 	movi	r3,-1
   4170c:	0009883a 	mov	r4,zero
   41710:	003fdd06 	br	41688 <__alt_data_end+0xfffc1688>
   41714:	9009883a 	mov	r4,r18
   41718:	d9400015 	stw	r5,0(sp)
   4171c:	00430980 	call	43098 <__clzsi2>
   41720:	10fffec4 	addi	r3,r2,-5
   41724:	10801d84 	addi	r2,r2,118
   41728:	90e4983a 	sll	r18,r18,r3
   4172c:	00a1c83a 	sub	r16,zero,r2
   41730:	0023883a 	mov	r17,zero
   41734:	002f883a 	mov	r23,zero
   41738:	d9400017 	ldw	r5,0(sp)
   4173c:	003f9a06 	br	415a8 <__alt_data_end+0xfffc15a8>
   41740:	04400304 	movi	r17,12
   41744:	05c000c4 	movi	r23,3
   41748:	003f9706 	br	415a8 <__alt_data_end+0xfffc15a8>
   4174c:	9809883a 	mov	r4,r19
   41750:	d9800015 	stw	r6,0(sp)
   41754:	00430980 	call	43098 <__clzsi2>
   41758:	10fffec4 	addi	r3,r2,-5
   4175c:	10801d84 	addi	r2,r2,118
   41760:	98e6983a 	sll	r19,r19,r3
   41764:	0085c83a 	sub	r2,zero,r2
   41768:	0007883a 	mov	r3,zero
   4176c:	d9800017 	ldw	r6,0(sp)
   41770:	003f9b06 	br	415e0 <__alt_data_end+0xfffc15e0>
   41774:	01002034 	movhi	r4,128
   41778:	0029883a 	mov	r20,zero
   4177c:	213fffc4 	addi	r4,r4,-1
   41780:	00ffffc4 	movi	r3,-1
   41784:	003fc006 	br	41688 <__alt_data_end+0xfffc1688>
   41788:	9027883a 	mov	r19,r18
   4178c:	b807883a 	mov	r3,r23
   41790:	003fb406 	br	41664 <__alt_data_end+0xfffc1664>
   41794:	9027883a 	mov	r19,r18
   41798:	e02b883a 	mov	r21,fp
   4179c:	b807883a 	mov	r3,r23
   417a0:	003fb006 	br	41664 <__alt_data_end+0xfffc1664>
   417a4:	9004d43a 	srli	r2,r18,16
   417a8:	9810d43a 	srli	r8,r19,16
   417ac:	94bfffcc 	andi	r18,r18,65535
   417b0:	993fffcc 	andi	r4,r19,65535
   417b4:	910d383a 	mul	r6,r18,r4
   417b8:	20a7383a 	mul	r19,r4,r2
   417bc:	9225383a 	mul	r18,r18,r8
   417c0:	3006d43a 	srli	r3,r6,16
   417c4:	1211383a 	mul	r8,r2,r8
   417c8:	94e5883a 	add	r18,r18,r19
   417cc:	1c87883a 	add	r3,r3,r18
   417d0:	1cc0022e 	bgeu	r3,r19,417dc <__mulsf3+0x2a0>
   417d4:	00800074 	movhi	r2,1
   417d8:	4091883a 	add	r8,r8,r2
   417dc:	1804943a 	slli	r2,r3,16
   417e0:	31bfffcc 	andi	r6,r6,65535
   417e4:	1806d43a 	srli	r3,r3,16
   417e8:	1185883a 	add	r2,r2,r6
   417ec:	102691ba 	slli	r19,r2,6
   417f0:	1a07883a 	add	r3,r3,r8
   417f4:	1004d6ba 	srli	r2,r2,26
   417f8:	180891ba 	slli	r4,r3,6
   417fc:	9826c03a 	cmpne	r19,r19,zero
   41800:	9884b03a 	or	r2,r19,r2
   41804:	1126b03a 	or	r19,r2,r4
   41808:	9882002c 	andhi	r2,r19,2048
   4180c:	10000426 	beq	r2,zero,41820 <__mulsf3+0x2e4>
   41810:	9804d07a 	srli	r2,r19,1
   41814:	9900004c 	andi	r4,r19,1
   41818:	3821883a 	mov	r16,r7
   4181c:	1126b03a 	or	r19,r2,r4
   41820:	80c01fc4 	addi	r3,r16,127
   41824:	00c0210e 	bge	zero,r3,418ac <__mulsf3+0x370>
   41828:	988001cc 	andi	r2,r19,7
   4182c:	10000426 	beq	r2,zero,41840 <__mulsf3+0x304>
   41830:	988003cc 	andi	r2,r19,15
   41834:	01000104 	movi	r4,4
   41838:	11000126 	beq	r2,r4,41840 <__mulsf3+0x304>
   4183c:	9927883a 	add	r19,r19,r4
   41840:	9882002c 	andhi	r2,r19,2048
   41844:	10000426 	beq	r2,zero,41858 <__mulsf3+0x31c>
   41848:	00be0034 	movhi	r2,63488
   4184c:	10bfffc4 	addi	r2,r2,-1
   41850:	80c02004 	addi	r3,r16,128
   41854:	98a6703a 	and	r19,r19,r2
   41858:	00803f84 	movi	r2,254
   4185c:	10ffa916 	blt	r2,r3,41704 <__alt_data_end+0xfffc1704>
   41860:	980891ba 	slli	r4,r19,6
   41864:	a829883a 	mov	r20,r21
   41868:	2008d27a 	srli	r4,r4,9
   4186c:	003f8606 	br	41688 <__alt_data_end+0xfffc1688>
   41870:	9080102c 	andhi	r2,r18,64
   41874:	10000826 	beq	r2,zero,41898 <__mulsf3+0x35c>
   41878:	9880102c 	andhi	r2,r19,64
   4187c:	1000061e 	bne	r2,zero,41898 <__mulsf3+0x35c>
   41880:	00802034 	movhi	r2,128
   41884:	99001034 	orhi	r4,r19,64
   41888:	10bfffc4 	addi	r2,r2,-1
   4188c:	b029883a 	mov	r20,r22
   41890:	2088703a 	and	r4,r4,r2
   41894:	003fba06 	br	41780 <__alt_data_end+0xfffc1780>
   41898:	00802034 	movhi	r2,128
   4189c:	91001034 	orhi	r4,r18,64
   418a0:	10bfffc4 	addi	r2,r2,-1
   418a4:	2088703a 	and	r4,r4,r2
   418a8:	003fb506 	br	41780 <__alt_data_end+0xfffc1780>
   418ac:	00800044 	movi	r2,1
   418b0:	10c7c83a 	sub	r3,r2,r3
   418b4:	008006c4 	movi	r2,27
   418b8:	10ff7016 	blt	r2,r3,4167c <__alt_data_end+0xfffc167c>
   418bc:	00800804 	movi	r2,32
   418c0:	10c5c83a 	sub	r2,r2,r3
   418c4:	9884983a 	sll	r2,r19,r2
   418c8:	98c6d83a 	srl	r3,r19,r3
   418cc:	1004c03a 	cmpne	r2,r2,zero
   418d0:	1884b03a 	or	r2,r3,r2
   418d4:	10c001cc 	andi	r3,r2,7
   418d8:	18000426 	beq	r3,zero,418ec <__mulsf3+0x3b0>
   418dc:	10c003cc 	andi	r3,r2,15
   418e0:	01000104 	movi	r4,4
   418e4:	19000126 	beq	r3,r4,418ec <__mulsf3+0x3b0>
   418e8:	1105883a 	add	r2,r2,r4
   418ec:	10c1002c 	andhi	r3,r2,1024
   418f0:	18000626 	beq	r3,zero,4190c <__mulsf3+0x3d0>
   418f4:	a829883a 	mov	r20,r21
   418f8:	00c00044 	movi	r3,1
   418fc:	0009883a 	mov	r4,zero
   41900:	003f6106 	br	41688 <__alt_data_end+0xfffc1688>
   41904:	3821883a 	mov	r16,r7
   41908:	003fc506 	br	41820 <__alt_data_end+0xfffc1820>
   4190c:	100491ba 	slli	r2,r2,6
   41910:	a829883a 	mov	r20,r21
   41914:	0007883a 	mov	r3,zero
   41918:	1008d27a 	srli	r4,r2,9
   4191c:	003f5a06 	br	41688 <__alt_data_end+0xfffc1688>
   41920:	00802034 	movhi	r2,128
   41924:	99001034 	orhi	r4,r19,64
   41928:	10bfffc4 	addi	r2,r2,-1
   4192c:	a829883a 	mov	r20,r21
   41930:	2088703a 	and	r4,r4,r2
   41934:	003f9206 	br	41780 <__alt_data_end+0xfffc1780>

00041938 <__subsf3>:
   41938:	defffc04 	addi	sp,sp,-16
   4193c:	280cd5fa 	srli	r6,r5,23
   41940:	dc000015 	stw	r16,0(sp)
   41944:	01c02034 	movhi	r7,128
   41948:	2020d5fa 	srli	r16,r4,23
   4194c:	39ffffc4 	addi	r7,r7,-1
   41950:	3906703a 	and	r3,r7,r4
   41954:	dc400115 	stw	r17,4(sp)
   41958:	394e703a 	and	r7,r7,r5
   4195c:	2022d7fa 	srli	r17,r4,31
   41960:	dfc00315 	stw	ra,12(sp)
   41964:	dc800215 	stw	r18,8(sp)
   41968:	31803fcc 	andi	r6,r6,255
   4196c:	01003fc4 	movi	r4,255
   41970:	84003fcc 	andi	r16,r16,255
   41974:	180690fa 	slli	r3,r3,3
   41978:	2804d7fa 	srli	r2,r5,31
   4197c:	380e90fa 	slli	r7,r7,3
   41980:	31006d26 	beq	r6,r4,41b38 <__subsf3+0x200>
   41984:	1080005c 	xori	r2,r2,1
   41988:	8189c83a 	sub	r4,r16,r6
   4198c:	14404f26 	beq	r2,r17,41acc <__subsf3+0x194>
   41990:	0100770e 	bge	zero,r4,41b70 <__subsf3+0x238>
   41994:	30001e1e 	bne	r6,zero,41a10 <__subsf3+0xd8>
   41998:	38006a1e 	bne	r7,zero,41b44 <__subsf3+0x20c>
   4199c:	188001cc 	andi	r2,r3,7
   419a0:	10000426 	beq	r2,zero,419b4 <__subsf3+0x7c>
   419a4:	188003cc 	andi	r2,r3,15
   419a8:	01000104 	movi	r4,4
   419ac:	11000126 	beq	r2,r4,419b4 <__subsf3+0x7c>
   419b0:	1907883a 	add	r3,r3,r4
   419b4:	1881002c 	andhi	r2,r3,1024
   419b8:	10003926 	beq	r2,zero,41aa0 <__subsf3+0x168>
   419bc:	84000044 	addi	r16,r16,1
   419c0:	00803fc4 	movi	r2,255
   419c4:	80807526 	beq	r16,r2,41b9c <__subsf3+0x264>
   419c8:	180691ba 	slli	r3,r3,6
   419cc:	8880004c 	andi	r2,r17,1
   419d0:	180ad27a 	srli	r5,r3,9
   419d4:	84003fcc 	andi	r16,r16,255
   419d8:	800695fa 	slli	r3,r16,23
   419dc:	10803fcc 	andi	r2,r2,255
   419e0:	01002034 	movhi	r4,128
   419e4:	213fffc4 	addi	r4,r4,-1
   419e8:	100497fa 	slli	r2,r2,31
   419ec:	2920703a 	and	r16,r5,r4
   419f0:	80e0b03a 	or	r16,r16,r3
   419f4:	8084b03a 	or	r2,r16,r2
   419f8:	dfc00317 	ldw	ra,12(sp)
   419fc:	dc800217 	ldw	r18,8(sp)
   41a00:	dc400117 	ldw	r17,4(sp)
   41a04:	dc000017 	ldw	r16,0(sp)
   41a08:	dec00404 	addi	sp,sp,16
   41a0c:	f800283a 	ret
   41a10:	00803fc4 	movi	r2,255
   41a14:	80bfe126 	beq	r16,r2,4199c <__alt_data_end+0xfffc199c>
   41a18:	39c10034 	orhi	r7,r7,1024
   41a1c:	008006c4 	movi	r2,27
   41a20:	11007416 	blt	r2,r4,41bf4 <__subsf3+0x2bc>
   41a24:	00800804 	movi	r2,32
   41a28:	1105c83a 	sub	r2,r2,r4
   41a2c:	3884983a 	sll	r2,r7,r2
   41a30:	390ed83a 	srl	r7,r7,r4
   41a34:	1008c03a 	cmpne	r4,r2,zero
   41a38:	390eb03a 	or	r7,r7,r4
   41a3c:	19c7c83a 	sub	r3,r3,r7
   41a40:	1881002c 	andhi	r2,r3,1024
   41a44:	10001426 	beq	r2,zero,41a98 <__subsf3+0x160>
   41a48:	04810034 	movhi	r18,1024
   41a4c:	94bfffc4 	addi	r18,r18,-1
   41a50:	1ca4703a 	and	r18,r3,r18
   41a54:	9009883a 	mov	r4,r18
   41a58:	00430980 	call	43098 <__clzsi2>
   41a5c:	10bffec4 	addi	r2,r2,-5
   41a60:	90a4983a 	sll	r18,r18,r2
   41a64:	14005116 	blt	r2,r16,41bac <__subsf3+0x274>
   41a68:	1405c83a 	sub	r2,r2,r16
   41a6c:	10c00044 	addi	r3,r2,1
   41a70:	00800804 	movi	r2,32
   41a74:	10c5c83a 	sub	r2,r2,r3
   41a78:	9084983a 	sll	r2,r18,r2
   41a7c:	90e4d83a 	srl	r18,r18,r3
   41a80:	0021883a 	mov	r16,zero
   41a84:	1006c03a 	cmpne	r3,r2,zero
   41a88:	90c6b03a 	or	r3,r18,r3
   41a8c:	003fc306 	br	4199c <__alt_data_end+0xfffc199c>
   41a90:	2000e026 	beq	r4,zero,41e14 <__subsf3+0x4dc>
   41a94:	2007883a 	mov	r3,r4
   41a98:	188001cc 	andi	r2,r3,7
   41a9c:	103fc11e 	bne	r2,zero,419a4 <__alt_data_end+0xfffc19a4>
   41aa0:	180ad0fa 	srli	r5,r3,3
   41aa4:	00c03fc4 	movi	r3,255
   41aa8:	8880004c 	andi	r2,r17,1
   41aac:	80c0031e 	bne	r16,r3,41abc <__subsf3+0x184>
   41ab0:	28006d26 	beq	r5,zero,41c68 <__subsf3+0x330>
   41ab4:	29401034 	orhi	r5,r5,64
   41ab8:	043fffc4 	movi	r16,-1
   41abc:	00c02034 	movhi	r3,128
   41ac0:	18ffffc4 	addi	r3,r3,-1
   41ac4:	28ca703a 	and	r5,r5,r3
   41ac8:	003fc206 	br	419d4 <__alt_data_end+0xfffc19d4>
   41acc:	01003c0e 	bge	zero,r4,41bc0 <__subsf3+0x288>
   41ad0:	30002126 	beq	r6,zero,41b58 <__subsf3+0x220>
   41ad4:	01403fc4 	movi	r5,255
   41ad8:	817fb026 	beq	r16,r5,4199c <__alt_data_end+0xfffc199c>
   41adc:	39c10034 	orhi	r7,r7,1024
   41ae0:	014006c4 	movi	r5,27
   41ae4:	29007416 	blt	r5,r4,41cb8 <__subsf3+0x380>
   41ae8:	01400804 	movi	r5,32
   41aec:	290bc83a 	sub	r5,r5,r4
   41af0:	394a983a 	sll	r5,r7,r5
   41af4:	390ed83a 	srl	r7,r7,r4
   41af8:	2808c03a 	cmpne	r4,r5,zero
   41afc:	390eb03a 	or	r7,r7,r4
   41b00:	19c7883a 	add	r3,r3,r7
   41b04:	1901002c 	andhi	r4,r3,1024
   41b08:	20003826 	beq	r4,zero,41bec <__subsf3+0x2b4>
   41b0c:	84000044 	addi	r16,r16,1
   41b10:	01003fc4 	movi	r4,255
   41b14:	81005426 	beq	r16,r4,41c68 <__subsf3+0x330>
   41b18:	1023883a 	mov	r17,r2
   41b1c:	00bf0034 	movhi	r2,64512
   41b20:	10bfffc4 	addi	r2,r2,-1
   41b24:	1900004c 	andi	r4,r3,1
   41b28:	1886703a 	and	r3,r3,r2
   41b2c:	1806d07a 	srli	r3,r3,1
   41b30:	1906b03a 	or	r3,r3,r4
   41b34:	003f9906 	br	4199c <__alt_data_end+0xfffc199c>
   41b38:	383f9226 	beq	r7,zero,41984 <__alt_data_end+0xfffc1984>
   41b3c:	10803fcc 	andi	r2,r2,255
   41b40:	003f9106 	br	41988 <__alt_data_end+0xfffc1988>
   41b44:	213fffc4 	addi	r4,r4,-1
   41b48:	203fbc26 	beq	r4,zero,41a3c <__alt_data_end+0xfffc1a3c>
   41b4c:	00803fc4 	movi	r2,255
   41b50:	80bfb21e 	bne	r16,r2,41a1c <__alt_data_end+0xfffc1a1c>
   41b54:	003f9106 	br	4199c <__alt_data_end+0xfffc199c>
   41b58:	383f9026 	beq	r7,zero,4199c <__alt_data_end+0xfffc199c>
   41b5c:	213fffc4 	addi	r4,r4,-1
   41b60:	203fe726 	beq	r4,zero,41b00 <__alt_data_end+0xfffc1b00>
   41b64:	01403fc4 	movi	r5,255
   41b68:	817fdd1e 	bne	r16,r5,41ae0 <__alt_data_end+0xfffc1ae0>
   41b6c:	003f8b06 	br	4199c <__alt_data_end+0xfffc199c>
   41b70:	2000221e 	bne	r4,zero,41bfc <__subsf3+0x2c4>
   41b74:	81000044 	addi	r4,r16,1
   41b78:	21003fcc 	andi	r4,r4,255
   41b7c:	01400044 	movi	r5,1
   41b80:	2900470e 	bge	r5,r4,41ca0 <__subsf3+0x368>
   41b84:	19e5c83a 	sub	r18,r3,r7
   41b88:	9141002c 	andhi	r5,r18,1024
   41b8c:	28002d26 	beq	r5,zero,41c44 <__subsf3+0x30c>
   41b90:	38e5c83a 	sub	r18,r7,r3
   41b94:	1023883a 	mov	r17,r2
   41b98:	003fae06 	br	41a54 <__alt_data_end+0xfffc1a54>
   41b9c:	8880004c 	andi	r2,r17,1
   41ba0:	043fffc4 	movi	r16,-1
   41ba4:	000b883a 	mov	r5,zero
   41ba8:	003f8a06 	br	419d4 <__alt_data_end+0xfffc19d4>
   41bac:	00ff0034 	movhi	r3,64512
   41bb0:	18ffffc4 	addi	r3,r3,-1
   41bb4:	80a1c83a 	sub	r16,r16,r2
   41bb8:	90c6703a 	and	r3,r18,r3
   41bbc:	003f7706 	br	4199c <__alt_data_end+0xfffc199c>
   41bc0:	2000431e 	bne	r4,zero,41cd0 <__subsf3+0x398>
   41bc4:	81000044 	addi	r4,r16,1
   41bc8:	21803fcc 	andi	r6,r4,255
   41bcc:	01400044 	movi	r5,1
   41bd0:	2980280e 	bge	r5,r6,41c74 <__subsf3+0x33c>
   41bd4:	01403fc4 	movi	r5,255
   41bd8:	21402326 	beq	r4,r5,41c68 <__subsf3+0x330>
   41bdc:	19c7883a 	add	r3,r3,r7
   41be0:	1806d07a 	srli	r3,r3,1
   41be4:	2021883a 	mov	r16,r4
   41be8:	003f6c06 	br	4199c <__alt_data_end+0xfffc199c>
   41bec:	1023883a 	mov	r17,r2
   41bf0:	003fa906 	br	41a98 <__alt_data_end+0xfffc1a98>
   41bf4:	01c00044 	movi	r7,1
   41bf8:	003f9006 	br	41a3c <__alt_data_end+0xfffc1a3c>
   41bfc:	8000151e 	bne	r16,zero,41c54 <__subsf3+0x31c>
   41c00:	18002f26 	beq	r3,zero,41cc0 <__subsf3+0x388>
   41c04:	0108303a 	nor	r4,zero,r4
   41c08:	20000a26 	beq	r4,zero,41c34 <__subsf3+0x2fc>
   41c0c:	01403fc4 	movi	r5,255
   41c10:	31402b26 	beq	r6,r5,41cc0 <__subsf3+0x388>
   41c14:	014006c4 	movi	r5,27
   41c18:	29006e16 	blt	r5,r4,41dd4 <__subsf3+0x49c>
   41c1c:	01400804 	movi	r5,32
   41c20:	290bc83a 	sub	r5,r5,r4
   41c24:	194a983a 	sll	r5,r3,r5
   41c28:	1908d83a 	srl	r4,r3,r4
   41c2c:	2806c03a 	cmpne	r3,r5,zero
   41c30:	20c6b03a 	or	r3,r4,r3
   41c34:	38c7c83a 	sub	r3,r7,r3
   41c38:	3021883a 	mov	r16,r6
   41c3c:	1023883a 	mov	r17,r2
   41c40:	003f7f06 	br	41a40 <__alt_data_end+0xfffc1a40>
   41c44:	903f831e 	bne	r18,zero,41a54 <__alt_data_end+0xfffc1a54>
   41c48:	0005883a 	mov	r2,zero
   41c4c:	0021883a 	mov	r16,zero
   41c50:	003f9a06 	br	41abc <__alt_data_end+0xfffc1abc>
   41c54:	01403fc4 	movi	r5,255
   41c58:	31401926 	beq	r6,r5,41cc0 <__subsf3+0x388>
   41c5c:	0109c83a 	sub	r4,zero,r4
   41c60:	18c10034 	orhi	r3,r3,1024
   41c64:	003feb06 	br	41c14 <__alt_data_end+0xfffc1c14>
   41c68:	043fffc4 	movi	r16,-1
   41c6c:	000b883a 	mov	r5,zero
   41c70:	003f5806 	br	419d4 <__alt_data_end+0xfffc19d4>
   41c74:	8000481e 	bne	r16,zero,41d98 <__subsf3+0x460>
   41c78:	18006226 	beq	r3,zero,41e04 <__subsf3+0x4cc>
   41c7c:	383f4726 	beq	r7,zero,4199c <__alt_data_end+0xfffc199c>
   41c80:	19c7883a 	add	r3,r3,r7
   41c84:	1881002c 	andhi	r2,r3,1024
   41c88:	103f8326 	beq	r2,zero,41a98 <__alt_data_end+0xfffc1a98>
   41c8c:	00bf0034 	movhi	r2,64512
   41c90:	10bfffc4 	addi	r2,r2,-1
   41c94:	2821883a 	mov	r16,r5
   41c98:	1886703a 	and	r3,r3,r2
   41c9c:	003f3f06 	br	4199c <__alt_data_end+0xfffc199c>
   41ca0:	80001c1e 	bne	r16,zero,41d14 <__subsf3+0x3dc>
   41ca4:	1800261e 	bne	r3,zero,41d40 <__subsf3+0x408>
   41ca8:	38004c26 	beq	r7,zero,41ddc <__subsf3+0x4a4>
   41cac:	3807883a 	mov	r3,r7
   41cb0:	1023883a 	mov	r17,r2
   41cb4:	003f3906 	br	4199c <__alt_data_end+0xfffc199c>
   41cb8:	01c00044 	movi	r7,1
   41cbc:	003f9006 	br	41b00 <__alt_data_end+0xfffc1b00>
   41cc0:	3807883a 	mov	r3,r7
   41cc4:	3021883a 	mov	r16,r6
   41cc8:	1023883a 	mov	r17,r2
   41ccc:	003f3306 	br	4199c <__alt_data_end+0xfffc199c>
   41cd0:	8000161e 	bne	r16,zero,41d2c <__subsf3+0x3f4>
   41cd4:	18002d26 	beq	r3,zero,41d8c <__subsf3+0x454>
   41cd8:	0108303a 	nor	r4,zero,r4
   41cdc:	20000a26 	beq	r4,zero,41d08 <__subsf3+0x3d0>
   41ce0:	01403fc4 	movi	r5,255
   41ce4:	31402926 	beq	r6,r5,41d8c <__subsf3+0x454>
   41ce8:	014006c4 	movi	r5,27
   41cec:	29004716 	blt	r5,r4,41e0c <__subsf3+0x4d4>
   41cf0:	01400804 	movi	r5,32
   41cf4:	290bc83a 	sub	r5,r5,r4
   41cf8:	194a983a 	sll	r5,r3,r5
   41cfc:	1908d83a 	srl	r4,r3,r4
   41d00:	2806c03a 	cmpne	r3,r5,zero
   41d04:	20c6b03a 	or	r3,r4,r3
   41d08:	19c7883a 	add	r3,r3,r7
   41d0c:	3021883a 	mov	r16,r6
   41d10:	003f7c06 	br	41b04 <__alt_data_end+0xfffc1b04>
   41d14:	1800111e 	bne	r3,zero,41d5c <__subsf3+0x424>
   41d18:	38003326 	beq	r7,zero,41de8 <__subsf3+0x4b0>
   41d1c:	3807883a 	mov	r3,r7
   41d20:	1023883a 	mov	r17,r2
   41d24:	04003fc4 	movi	r16,255
   41d28:	003f1c06 	br	4199c <__alt_data_end+0xfffc199c>
   41d2c:	01403fc4 	movi	r5,255
   41d30:	31401626 	beq	r6,r5,41d8c <__subsf3+0x454>
   41d34:	0109c83a 	sub	r4,zero,r4
   41d38:	18c10034 	orhi	r3,r3,1024
   41d3c:	003fea06 	br	41ce8 <__alt_data_end+0xfffc1ce8>
   41d40:	383f1626 	beq	r7,zero,4199c <__alt_data_end+0xfffc199c>
   41d44:	19c9c83a 	sub	r4,r3,r7
   41d48:	2141002c 	andhi	r5,r4,1024
   41d4c:	283f5026 	beq	r5,zero,41a90 <__alt_data_end+0xfffc1a90>
   41d50:	38c7c83a 	sub	r3,r7,r3
   41d54:	1023883a 	mov	r17,r2
   41d58:	003f1006 	br	4199c <__alt_data_end+0xfffc199c>
   41d5c:	38001b26 	beq	r7,zero,41dcc <__subsf3+0x494>
   41d60:	1806d0fa 	srli	r3,r3,3
   41d64:	1900102c 	andhi	r4,r3,64
   41d68:	20000526 	beq	r4,zero,41d80 <__subsf3+0x448>
   41d6c:	380ed0fa 	srli	r7,r7,3
   41d70:	3900102c 	andhi	r4,r7,64
   41d74:	2000021e 	bne	r4,zero,41d80 <__subsf3+0x448>
   41d78:	3807883a 	mov	r3,r7
   41d7c:	1023883a 	mov	r17,r2
   41d80:	180690fa 	slli	r3,r3,3
   41d84:	04003fc4 	movi	r16,255
   41d88:	003f0406 	br	4199c <__alt_data_end+0xfffc199c>
   41d8c:	3807883a 	mov	r3,r7
   41d90:	3021883a 	mov	r16,r6
   41d94:	003f0106 	br	4199c <__alt_data_end+0xfffc199c>
   41d98:	18001726 	beq	r3,zero,41df8 <__subsf3+0x4c0>
   41d9c:	38000b26 	beq	r7,zero,41dcc <__subsf3+0x494>
   41da0:	1806d0fa 	srli	r3,r3,3
   41da4:	1900102c 	andhi	r4,r3,64
   41da8:	20000426 	beq	r4,zero,41dbc <__subsf3+0x484>
   41dac:	380ed0fa 	srli	r7,r7,3
   41db0:	3900102c 	andhi	r4,r7,64
   41db4:	2000011e 	bne	r4,zero,41dbc <__subsf3+0x484>
   41db8:	3807883a 	mov	r3,r7
   41dbc:	180690fa 	slli	r3,r3,3
   41dc0:	1023883a 	mov	r17,r2
   41dc4:	04003fc4 	movi	r16,255
   41dc8:	003ef406 	br	4199c <__alt_data_end+0xfffc199c>
   41dcc:	04003fc4 	movi	r16,255
   41dd0:	003ef206 	br	4199c <__alt_data_end+0xfffc199c>
   41dd4:	00c00044 	movi	r3,1
   41dd8:	003f9606 	br	41c34 <__alt_data_end+0xfffc1c34>
   41ddc:	000b883a 	mov	r5,zero
   41de0:	0005883a 	mov	r2,zero
   41de4:	003f3506 	br	41abc <__alt_data_end+0xfffc1abc>
   41de8:	01402034 	movhi	r5,128
   41dec:	297fffc4 	addi	r5,r5,-1
   41df0:	0005883a 	mov	r2,zero
   41df4:	003f2f06 	br	41ab4 <__alt_data_end+0xfffc1ab4>
   41df8:	3807883a 	mov	r3,r7
   41dfc:	04003fc4 	movi	r16,255
   41e00:	003ee606 	br	4199c <__alt_data_end+0xfffc199c>
   41e04:	3807883a 	mov	r3,r7
   41e08:	003ee406 	br	4199c <__alt_data_end+0xfffc199c>
   41e0c:	00c00044 	movi	r3,1
   41e10:	003fbd06 	br	41d08 <__alt_data_end+0xfffc1d08>
   41e14:	0005883a 	mov	r2,zero
   41e18:	003f2806 	br	41abc <__alt_data_end+0xfffc1abc>

00041e1c <__adddf3>:
   41e1c:	02c00434 	movhi	r11,16
   41e20:	5affffc4 	addi	r11,r11,-1
   41e24:	2806d7fa 	srli	r3,r5,31
   41e28:	2ad4703a 	and	r10,r5,r11
   41e2c:	3ad2703a 	and	r9,r7,r11
   41e30:	3804d53a 	srli	r2,r7,20
   41e34:	3018d77a 	srli	r12,r6,29
   41e38:	280ad53a 	srli	r5,r5,20
   41e3c:	501490fa 	slli	r10,r10,3
   41e40:	2010d77a 	srli	r8,r4,29
   41e44:	481290fa 	slli	r9,r9,3
   41e48:	380ed7fa 	srli	r7,r7,31
   41e4c:	defffb04 	addi	sp,sp,-20
   41e50:	dc800215 	stw	r18,8(sp)
   41e54:	dc400115 	stw	r17,4(sp)
   41e58:	dc000015 	stw	r16,0(sp)
   41e5c:	dfc00415 	stw	ra,16(sp)
   41e60:	dcc00315 	stw	r19,12(sp)
   41e64:	1c803fcc 	andi	r18,r3,255
   41e68:	2c01ffcc 	andi	r16,r5,2047
   41e6c:	5210b03a 	or	r8,r10,r8
   41e70:	202290fa 	slli	r17,r4,3
   41e74:	1081ffcc 	andi	r2,r2,2047
   41e78:	4b12b03a 	or	r9,r9,r12
   41e7c:	300c90fa 	slli	r6,r6,3
   41e80:	91c07526 	beq	r18,r7,42058 <__adddf3+0x23c>
   41e84:	8087c83a 	sub	r3,r16,r2
   41e88:	00c0ab0e 	bge	zero,r3,42138 <__adddf3+0x31c>
   41e8c:	10002a1e 	bne	r2,zero,41f38 <__adddf3+0x11c>
   41e90:	4984b03a 	or	r2,r9,r6
   41e94:	1000961e 	bne	r2,zero,420f0 <__adddf3+0x2d4>
   41e98:	888001cc 	andi	r2,r17,7
   41e9c:	10000726 	beq	r2,zero,41ebc <__adddf3+0xa0>
   41ea0:	888003cc 	andi	r2,r17,15
   41ea4:	00c00104 	movi	r3,4
   41ea8:	10c00426 	beq	r2,r3,41ebc <__adddf3+0xa0>
   41eac:	88c7883a 	add	r3,r17,r3
   41eb0:	1c63803a 	cmpltu	r17,r3,r17
   41eb4:	4451883a 	add	r8,r8,r17
   41eb8:	1823883a 	mov	r17,r3
   41ebc:	4080202c 	andhi	r2,r8,128
   41ec0:	10005926 	beq	r2,zero,42028 <__adddf3+0x20c>
   41ec4:	84000044 	addi	r16,r16,1
   41ec8:	0081ffc4 	movi	r2,2047
   41ecc:	8080ba26 	beq	r16,r2,421b8 <__adddf3+0x39c>
   41ed0:	00bfe034 	movhi	r2,65408
   41ed4:	10bfffc4 	addi	r2,r2,-1
   41ed8:	4090703a 	and	r8,r8,r2
   41edc:	4004977a 	slli	r2,r8,29
   41ee0:	4010927a 	slli	r8,r8,9
   41ee4:	8822d0fa 	srli	r17,r17,3
   41ee8:	8401ffcc 	andi	r16,r16,2047
   41eec:	4010d33a 	srli	r8,r8,12
   41ef0:	9007883a 	mov	r3,r18
   41ef4:	1444b03a 	or	r2,r2,r17
   41ef8:	8401ffcc 	andi	r16,r16,2047
   41efc:	8020953a 	slli	r16,r16,20
   41f00:	18c03fcc 	andi	r3,r3,255
   41f04:	01000434 	movhi	r4,16
   41f08:	213fffc4 	addi	r4,r4,-1
   41f0c:	180697fa 	slli	r3,r3,31
   41f10:	4110703a 	and	r8,r8,r4
   41f14:	4410b03a 	or	r8,r8,r16
   41f18:	40c6b03a 	or	r3,r8,r3
   41f1c:	dfc00417 	ldw	ra,16(sp)
   41f20:	dcc00317 	ldw	r19,12(sp)
   41f24:	dc800217 	ldw	r18,8(sp)
   41f28:	dc400117 	ldw	r17,4(sp)
   41f2c:	dc000017 	ldw	r16,0(sp)
   41f30:	dec00504 	addi	sp,sp,20
   41f34:	f800283a 	ret
   41f38:	0081ffc4 	movi	r2,2047
   41f3c:	80bfd626 	beq	r16,r2,41e98 <__alt_data_end+0xfffc1e98>
   41f40:	4a402034 	orhi	r9,r9,128
   41f44:	00800e04 	movi	r2,56
   41f48:	10c09f16 	blt	r2,r3,421c8 <__adddf3+0x3ac>
   41f4c:	008007c4 	movi	r2,31
   41f50:	10c0c216 	blt	r2,r3,4225c <__adddf3+0x440>
   41f54:	00800804 	movi	r2,32
   41f58:	10c5c83a 	sub	r2,r2,r3
   41f5c:	488a983a 	sll	r5,r9,r2
   41f60:	30c8d83a 	srl	r4,r6,r3
   41f64:	3084983a 	sll	r2,r6,r2
   41f68:	48c6d83a 	srl	r3,r9,r3
   41f6c:	290cb03a 	or	r6,r5,r4
   41f70:	1004c03a 	cmpne	r2,r2,zero
   41f74:	308cb03a 	or	r6,r6,r2
   41f78:	898dc83a 	sub	r6,r17,r6
   41f7c:	89a3803a 	cmpltu	r17,r17,r6
   41f80:	40d1c83a 	sub	r8,r8,r3
   41f84:	4451c83a 	sub	r8,r8,r17
   41f88:	3023883a 	mov	r17,r6
   41f8c:	4080202c 	andhi	r2,r8,128
   41f90:	10002326 	beq	r2,zero,42020 <__adddf3+0x204>
   41f94:	04c02034 	movhi	r19,128
   41f98:	9cffffc4 	addi	r19,r19,-1
   41f9c:	44e6703a 	and	r19,r8,r19
   41fa0:	98007626 	beq	r19,zero,4217c <__adddf3+0x360>
   41fa4:	9809883a 	mov	r4,r19
   41fa8:	00430980 	call	43098 <__clzsi2>
   41fac:	10fffe04 	addi	r3,r2,-8
   41fb0:	010007c4 	movi	r4,31
   41fb4:	20c07716 	blt	r4,r3,42194 <__adddf3+0x378>
   41fb8:	00800804 	movi	r2,32
   41fbc:	10c5c83a 	sub	r2,r2,r3
   41fc0:	8884d83a 	srl	r2,r17,r2
   41fc4:	98d0983a 	sll	r8,r19,r3
   41fc8:	88e2983a 	sll	r17,r17,r3
   41fcc:	1204b03a 	or	r2,r2,r8
   41fd0:	1c007416 	blt	r3,r16,421a4 <__adddf3+0x388>
   41fd4:	1c21c83a 	sub	r16,r3,r16
   41fd8:	82000044 	addi	r8,r16,1
   41fdc:	00c007c4 	movi	r3,31
   41fe0:	1a009116 	blt	r3,r8,42228 <__adddf3+0x40c>
   41fe4:	00c00804 	movi	r3,32
   41fe8:	1a07c83a 	sub	r3,r3,r8
   41fec:	8a08d83a 	srl	r4,r17,r8
   41ff0:	88e2983a 	sll	r17,r17,r3
   41ff4:	10c6983a 	sll	r3,r2,r3
   41ff8:	1210d83a 	srl	r8,r2,r8
   41ffc:	8804c03a 	cmpne	r2,r17,zero
   42000:	1906b03a 	or	r3,r3,r4
   42004:	18a2b03a 	or	r17,r3,r2
   42008:	0021883a 	mov	r16,zero
   4200c:	003fa206 	br	41e98 <__alt_data_end+0xfffc1e98>
   42010:	1890b03a 	or	r8,r3,r2
   42014:	40017d26 	beq	r8,zero,4260c <__adddf3+0x7f0>
   42018:	1011883a 	mov	r8,r2
   4201c:	1823883a 	mov	r17,r3
   42020:	888001cc 	andi	r2,r17,7
   42024:	103f9e1e 	bne	r2,zero,41ea0 <__alt_data_end+0xfffc1ea0>
   42028:	4004977a 	slli	r2,r8,29
   4202c:	8822d0fa 	srli	r17,r17,3
   42030:	4010d0fa 	srli	r8,r8,3
   42034:	9007883a 	mov	r3,r18
   42038:	1444b03a 	or	r2,r2,r17
   4203c:	0101ffc4 	movi	r4,2047
   42040:	81002426 	beq	r16,r4,420d4 <__adddf3+0x2b8>
   42044:	8120703a 	and	r16,r16,r4
   42048:	01000434 	movhi	r4,16
   4204c:	213fffc4 	addi	r4,r4,-1
   42050:	4110703a 	and	r8,r8,r4
   42054:	003fa806 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   42058:	8089c83a 	sub	r4,r16,r2
   4205c:	01005e0e 	bge	zero,r4,421d8 <__adddf3+0x3bc>
   42060:	10002b26 	beq	r2,zero,42110 <__adddf3+0x2f4>
   42064:	0081ffc4 	movi	r2,2047
   42068:	80bf8b26 	beq	r16,r2,41e98 <__alt_data_end+0xfffc1e98>
   4206c:	4a402034 	orhi	r9,r9,128
   42070:	00800e04 	movi	r2,56
   42074:	1100a40e 	bge	r2,r4,42308 <__adddf3+0x4ec>
   42078:	498cb03a 	or	r6,r9,r6
   4207c:	300ac03a 	cmpne	r5,r6,zero
   42080:	0013883a 	mov	r9,zero
   42084:	2c4b883a 	add	r5,r5,r17
   42088:	2c63803a 	cmpltu	r17,r5,r17
   4208c:	4a11883a 	add	r8,r9,r8
   42090:	8a11883a 	add	r8,r17,r8
   42094:	2823883a 	mov	r17,r5
   42098:	4080202c 	andhi	r2,r8,128
   4209c:	103fe026 	beq	r2,zero,42020 <__alt_data_end+0xfffc2020>
   420a0:	84000044 	addi	r16,r16,1
   420a4:	0081ffc4 	movi	r2,2047
   420a8:	8080d226 	beq	r16,r2,423f4 <__adddf3+0x5d8>
   420ac:	00bfe034 	movhi	r2,65408
   420b0:	10bfffc4 	addi	r2,r2,-1
   420b4:	4090703a 	and	r8,r8,r2
   420b8:	880ad07a 	srli	r5,r17,1
   420bc:	400897fa 	slli	r4,r8,31
   420c0:	88c0004c 	andi	r3,r17,1
   420c4:	28e2b03a 	or	r17,r5,r3
   420c8:	4010d07a 	srli	r8,r8,1
   420cc:	2462b03a 	or	r17,r4,r17
   420d0:	003f7106 	br	41e98 <__alt_data_end+0xfffc1e98>
   420d4:	4088b03a 	or	r4,r8,r2
   420d8:	20014526 	beq	r4,zero,425f0 <__adddf3+0x7d4>
   420dc:	01000434 	movhi	r4,16
   420e0:	42000234 	orhi	r8,r8,8
   420e4:	213fffc4 	addi	r4,r4,-1
   420e8:	4110703a 	and	r8,r8,r4
   420ec:	003f8206 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   420f0:	18ffffc4 	addi	r3,r3,-1
   420f4:	1800491e 	bne	r3,zero,4221c <__adddf3+0x400>
   420f8:	898bc83a 	sub	r5,r17,r6
   420fc:	8963803a 	cmpltu	r17,r17,r5
   42100:	4251c83a 	sub	r8,r8,r9
   42104:	4451c83a 	sub	r8,r8,r17
   42108:	2823883a 	mov	r17,r5
   4210c:	003f9f06 	br	41f8c <__alt_data_end+0xfffc1f8c>
   42110:	4984b03a 	or	r2,r9,r6
   42114:	103f6026 	beq	r2,zero,41e98 <__alt_data_end+0xfffc1e98>
   42118:	213fffc4 	addi	r4,r4,-1
   4211c:	2000931e 	bne	r4,zero,4236c <__adddf3+0x550>
   42120:	898d883a 	add	r6,r17,r6
   42124:	3463803a 	cmpltu	r17,r6,r17
   42128:	4251883a 	add	r8,r8,r9
   4212c:	8a11883a 	add	r8,r17,r8
   42130:	3023883a 	mov	r17,r6
   42134:	003fd806 	br	42098 <__alt_data_end+0xfffc2098>
   42138:	1800541e 	bne	r3,zero,4228c <__adddf3+0x470>
   4213c:	80800044 	addi	r2,r16,1
   42140:	1081ffcc 	andi	r2,r2,2047
   42144:	00c00044 	movi	r3,1
   42148:	1880a00e 	bge	r3,r2,423cc <__adddf3+0x5b0>
   4214c:	8989c83a 	sub	r4,r17,r6
   42150:	8905803a 	cmpltu	r2,r17,r4
   42154:	4267c83a 	sub	r19,r8,r9
   42158:	98a7c83a 	sub	r19,r19,r2
   4215c:	9880202c 	andhi	r2,r19,128
   42160:	10006326 	beq	r2,zero,422f0 <__adddf3+0x4d4>
   42164:	3463c83a 	sub	r17,r6,r17
   42168:	4a07c83a 	sub	r3,r9,r8
   4216c:	344d803a 	cmpltu	r6,r6,r17
   42170:	19a7c83a 	sub	r19,r3,r6
   42174:	3825883a 	mov	r18,r7
   42178:	983f8a1e 	bne	r19,zero,41fa4 <__alt_data_end+0xfffc1fa4>
   4217c:	8809883a 	mov	r4,r17
   42180:	00430980 	call	43098 <__clzsi2>
   42184:	10800804 	addi	r2,r2,32
   42188:	10fffe04 	addi	r3,r2,-8
   4218c:	010007c4 	movi	r4,31
   42190:	20ff890e 	bge	r4,r3,41fb8 <__alt_data_end+0xfffc1fb8>
   42194:	10bff604 	addi	r2,r2,-40
   42198:	8884983a 	sll	r2,r17,r2
   4219c:	0023883a 	mov	r17,zero
   421a0:	1c3f8c0e 	bge	r3,r16,41fd4 <__alt_data_end+0xfffc1fd4>
   421a4:	023fe034 	movhi	r8,65408
   421a8:	423fffc4 	addi	r8,r8,-1
   421ac:	80e1c83a 	sub	r16,r16,r3
   421b0:	1210703a 	and	r8,r2,r8
   421b4:	003f3806 	br	41e98 <__alt_data_end+0xfffc1e98>
   421b8:	9007883a 	mov	r3,r18
   421bc:	0011883a 	mov	r8,zero
   421c0:	0005883a 	mov	r2,zero
   421c4:	003f4c06 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   421c8:	498cb03a 	or	r6,r9,r6
   421cc:	300cc03a 	cmpne	r6,r6,zero
   421d0:	0007883a 	mov	r3,zero
   421d4:	003f6806 	br	41f78 <__alt_data_end+0xfffc1f78>
   421d8:	20009c1e 	bne	r4,zero,4244c <__adddf3+0x630>
   421dc:	80800044 	addi	r2,r16,1
   421e0:	1141ffcc 	andi	r5,r2,2047
   421e4:	01000044 	movi	r4,1
   421e8:	2140670e 	bge	r4,r5,42388 <__adddf3+0x56c>
   421ec:	0101ffc4 	movi	r4,2047
   421f0:	11007f26 	beq	r2,r4,423f0 <__adddf3+0x5d4>
   421f4:	898d883a 	add	r6,r17,r6
   421f8:	4247883a 	add	r3,r8,r9
   421fc:	3451803a 	cmpltu	r8,r6,r17
   42200:	40d1883a 	add	r8,r8,r3
   42204:	402297fa 	slli	r17,r8,31
   42208:	300cd07a 	srli	r6,r6,1
   4220c:	4010d07a 	srli	r8,r8,1
   42210:	1021883a 	mov	r16,r2
   42214:	89a2b03a 	or	r17,r17,r6
   42218:	003f1f06 	br	41e98 <__alt_data_end+0xfffc1e98>
   4221c:	0081ffc4 	movi	r2,2047
   42220:	80bf481e 	bne	r16,r2,41f44 <__alt_data_end+0xfffc1f44>
   42224:	003f1c06 	br	41e98 <__alt_data_end+0xfffc1e98>
   42228:	843ff844 	addi	r16,r16,-31
   4222c:	01000804 	movi	r4,32
   42230:	1406d83a 	srl	r3,r2,r16
   42234:	41005026 	beq	r8,r4,42378 <__adddf3+0x55c>
   42238:	01001004 	movi	r4,64
   4223c:	2211c83a 	sub	r8,r4,r8
   42240:	1204983a 	sll	r2,r2,r8
   42244:	88a2b03a 	or	r17,r17,r2
   42248:	8822c03a 	cmpne	r17,r17,zero
   4224c:	1c62b03a 	or	r17,r3,r17
   42250:	0011883a 	mov	r8,zero
   42254:	0021883a 	mov	r16,zero
   42258:	003f7106 	br	42020 <__alt_data_end+0xfffc2020>
   4225c:	193ff804 	addi	r4,r3,-32
   42260:	00800804 	movi	r2,32
   42264:	4908d83a 	srl	r4,r9,r4
   42268:	18804526 	beq	r3,r2,42380 <__adddf3+0x564>
   4226c:	00801004 	movi	r2,64
   42270:	10c5c83a 	sub	r2,r2,r3
   42274:	4886983a 	sll	r3,r9,r2
   42278:	198cb03a 	or	r6,r3,r6
   4227c:	300cc03a 	cmpne	r6,r6,zero
   42280:	218cb03a 	or	r6,r4,r6
   42284:	0007883a 	mov	r3,zero
   42288:	003f3b06 	br	41f78 <__alt_data_end+0xfffc1f78>
   4228c:	80002a26 	beq	r16,zero,42338 <__adddf3+0x51c>
   42290:	0101ffc4 	movi	r4,2047
   42294:	11006826 	beq	r2,r4,42438 <__adddf3+0x61c>
   42298:	00c7c83a 	sub	r3,zero,r3
   4229c:	42002034 	orhi	r8,r8,128
   422a0:	01000e04 	movi	r4,56
   422a4:	20c07c16 	blt	r4,r3,42498 <__adddf3+0x67c>
   422a8:	010007c4 	movi	r4,31
   422ac:	20c0da16 	blt	r4,r3,42618 <__adddf3+0x7fc>
   422b0:	01000804 	movi	r4,32
   422b4:	20c9c83a 	sub	r4,r4,r3
   422b8:	4114983a 	sll	r10,r8,r4
   422bc:	88cad83a 	srl	r5,r17,r3
   422c0:	8908983a 	sll	r4,r17,r4
   422c4:	40c6d83a 	srl	r3,r8,r3
   422c8:	5162b03a 	or	r17,r10,r5
   422cc:	2008c03a 	cmpne	r4,r4,zero
   422d0:	8922b03a 	or	r17,r17,r4
   422d4:	3463c83a 	sub	r17,r6,r17
   422d8:	48c7c83a 	sub	r3,r9,r3
   422dc:	344d803a 	cmpltu	r6,r6,r17
   422e0:	1991c83a 	sub	r8,r3,r6
   422e4:	1021883a 	mov	r16,r2
   422e8:	3825883a 	mov	r18,r7
   422ec:	003f2706 	br	41f8c <__alt_data_end+0xfffc1f8c>
   422f0:	24d0b03a 	or	r8,r4,r19
   422f4:	40001b1e 	bne	r8,zero,42364 <__adddf3+0x548>
   422f8:	0005883a 	mov	r2,zero
   422fc:	0007883a 	mov	r3,zero
   42300:	0021883a 	mov	r16,zero
   42304:	003f4d06 	br	4203c <__alt_data_end+0xfffc203c>
   42308:	008007c4 	movi	r2,31
   4230c:	11003c16 	blt	r2,r4,42400 <__adddf3+0x5e4>
   42310:	00800804 	movi	r2,32
   42314:	1105c83a 	sub	r2,r2,r4
   42318:	488e983a 	sll	r7,r9,r2
   4231c:	310ad83a 	srl	r5,r6,r4
   42320:	3084983a 	sll	r2,r6,r2
   42324:	4912d83a 	srl	r9,r9,r4
   42328:	394ab03a 	or	r5,r7,r5
   4232c:	1004c03a 	cmpne	r2,r2,zero
   42330:	288ab03a 	or	r5,r5,r2
   42334:	003f5306 	br	42084 <__alt_data_end+0xfffc2084>
   42338:	4448b03a 	or	r4,r8,r17
   4233c:	20003e26 	beq	r4,zero,42438 <__adddf3+0x61c>
   42340:	00c6303a 	nor	r3,zero,r3
   42344:	18003a1e 	bne	r3,zero,42430 <__adddf3+0x614>
   42348:	3463c83a 	sub	r17,r6,r17
   4234c:	4a07c83a 	sub	r3,r9,r8
   42350:	344d803a 	cmpltu	r6,r6,r17
   42354:	1991c83a 	sub	r8,r3,r6
   42358:	1021883a 	mov	r16,r2
   4235c:	3825883a 	mov	r18,r7
   42360:	003f0a06 	br	41f8c <__alt_data_end+0xfffc1f8c>
   42364:	2023883a 	mov	r17,r4
   42368:	003f0d06 	br	41fa0 <__alt_data_end+0xfffc1fa0>
   4236c:	0081ffc4 	movi	r2,2047
   42370:	80bf3f1e 	bne	r16,r2,42070 <__alt_data_end+0xfffc2070>
   42374:	003ec806 	br	41e98 <__alt_data_end+0xfffc1e98>
   42378:	0005883a 	mov	r2,zero
   4237c:	003fb106 	br	42244 <__alt_data_end+0xfffc2244>
   42380:	0007883a 	mov	r3,zero
   42384:	003fbc06 	br	42278 <__alt_data_end+0xfffc2278>
   42388:	4444b03a 	or	r2,r8,r17
   4238c:	8000871e 	bne	r16,zero,425ac <__adddf3+0x790>
   42390:	1000ba26 	beq	r2,zero,4267c <__adddf3+0x860>
   42394:	4984b03a 	or	r2,r9,r6
   42398:	103ebf26 	beq	r2,zero,41e98 <__alt_data_end+0xfffc1e98>
   4239c:	8985883a 	add	r2,r17,r6
   423a0:	4247883a 	add	r3,r8,r9
   423a4:	1451803a 	cmpltu	r8,r2,r17
   423a8:	40d1883a 	add	r8,r8,r3
   423ac:	40c0202c 	andhi	r3,r8,128
   423b0:	1023883a 	mov	r17,r2
   423b4:	183f1a26 	beq	r3,zero,42020 <__alt_data_end+0xfffc2020>
   423b8:	00bfe034 	movhi	r2,65408
   423bc:	10bfffc4 	addi	r2,r2,-1
   423c0:	2021883a 	mov	r16,r4
   423c4:	4090703a 	and	r8,r8,r2
   423c8:	003eb306 	br	41e98 <__alt_data_end+0xfffc1e98>
   423cc:	4444b03a 	or	r2,r8,r17
   423d0:	8000291e 	bne	r16,zero,42478 <__adddf3+0x65c>
   423d4:	10004b1e 	bne	r2,zero,42504 <__adddf3+0x6e8>
   423d8:	4990b03a 	or	r8,r9,r6
   423dc:	40008b26 	beq	r8,zero,4260c <__adddf3+0x7f0>
   423e0:	4811883a 	mov	r8,r9
   423e4:	3023883a 	mov	r17,r6
   423e8:	3825883a 	mov	r18,r7
   423ec:	003eaa06 	br	41e98 <__alt_data_end+0xfffc1e98>
   423f0:	1021883a 	mov	r16,r2
   423f4:	0011883a 	mov	r8,zero
   423f8:	0005883a 	mov	r2,zero
   423fc:	003f0f06 	br	4203c <__alt_data_end+0xfffc203c>
   42400:	217ff804 	addi	r5,r4,-32
   42404:	00800804 	movi	r2,32
   42408:	494ad83a 	srl	r5,r9,r5
   4240c:	20807d26 	beq	r4,r2,42604 <__adddf3+0x7e8>
   42410:	00801004 	movi	r2,64
   42414:	1109c83a 	sub	r4,r2,r4
   42418:	4912983a 	sll	r9,r9,r4
   4241c:	498cb03a 	or	r6,r9,r6
   42420:	300cc03a 	cmpne	r6,r6,zero
   42424:	298ab03a 	or	r5,r5,r6
   42428:	0013883a 	mov	r9,zero
   4242c:	003f1506 	br	42084 <__alt_data_end+0xfffc2084>
   42430:	0101ffc4 	movi	r4,2047
   42434:	113f9a1e 	bne	r2,r4,422a0 <__alt_data_end+0xfffc22a0>
   42438:	4811883a 	mov	r8,r9
   4243c:	3023883a 	mov	r17,r6
   42440:	1021883a 	mov	r16,r2
   42444:	3825883a 	mov	r18,r7
   42448:	003e9306 	br	41e98 <__alt_data_end+0xfffc1e98>
   4244c:	8000161e 	bne	r16,zero,424a8 <__adddf3+0x68c>
   42450:	444ab03a 	or	r5,r8,r17
   42454:	28005126 	beq	r5,zero,4259c <__adddf3+0x780>
   42458:	0108303a 	nor	r4,zero,r4
   4245c:	20004d1e 	bne	r4,zero,42594 <__adddf3+0x778>
   42460:	89a3883a 	add	r17,r17,r6
   42464:	4253883a 	add	r9,r8,r9
   42468:	898d803a 	cmpltu	r6,r17,r6
   4246c:	3251883a 	add	r8,r6,r9
   42470:	1021883a 	mov	r16,r2
   42474:	003f0806 	br	42098 <__alt_data_end+0xfffc2098>
   42478:	1000301e 	bne	r2,zero,4253c <__adddf3+0x720>
   4247c:	4984b03a 	or	r2,r9,r6
   42480:	10007126 	beq	r2,zero,42648 <__adddf3+0x82c>
   42484:	4811883a 	mov	r8,r9
   42488:	3023883a 	mov	r17,r6
   4248c:	3825883a 	mov	r18,r7
   42490:	0401ffc4 	movi	r16,2047
   42494:	003e8006 	br	41e98 <__alt_data_end+0xfffc1e98>
   42498:	4462b03a 	or	r17,r8,r17
   4249c:	8822c03a 	cmpne	r17,r17,zero
   424a0:	0007883a 	mov	r3,zero
   424a4:	003f8b06 	br	422d4 <__alt_data_end+0xfffc22d4>
   424a8:	0141ffc4 	movi	r5,2047
   424ac:	11403b26 	beq	r2,r5,4259c <__adddf3+0x780>
   424b0:	0109c83a 	sub	r4,zero,r4
   424b4:	42002034 	orhi	r8,r8,128
   424b8:	01400e04 	movi	r5,56
   424bc:	29006716 	blt	r5,r4,4265c <__adddf3+0x840>
   424c0:	014007c4 	movi	r5,31
   424c4:	29007016 	blt	r5,r4,42688 <__adddf3+0x86c>
   424c8:	01400804 	movi	r5,32
   424cc:	290bc83a 	sub	r5,r5,r4
   424d0:	4154983a 	sll	r10,r8,r5
   424d4:	890ed83a 	srl	r7,r17,r4
   424d8:	894a983a 	sll	r5,r17,r5
   424dc:	4108d83a 	srl	r4,r8,r4
   424e0:	51e2b03a 	or	r17,r10,r7
   424e4:	280ac03a 	cmpne	r5,r5,zero
   424e8:	8962b03a 	or	r17,r17,r5
   424ec:	89a3883a 	add	r17,r17,r6
   424f0:	2253883a 	add	r9,r4,r9
   424f4:	898d803a 	cmpltu	r6,r17,r6
   424f8:	3251883a 	add	r8,r6,r9
   424fc:	1021883a 	mov	r16,r2
   42500:	003ee506 	br	42098 <__alt_data_end+0xfffc2098>
   42504:	4984b03a 	or	r2,r9,r6
   42508:	103e6326 	beq	r2,zero,41e98 <__alt_data_end+0xfffc1e98>
   4250c:	8987c83a 	sub	r3,r17,r6
   42510:	88c9803a 	cmpltu	r4,r17,r3
   42514:	4245c83a 	sub	r2,r8,r9
   42518:	1105c83a 	sub	r2,r2,r4
   4251c:	1100202c 	andhi	r4,r2,128
   42520:	203ebb26 	beq	r4,zero,42010 <__alt_data_end+0xfffc2010>
   42524:	3463c83a 	sub	r17,r6,r17
   42528:	4a07c83a 	sub	r3,r9,r8
   4252c:	344d803a 	cmpltu	r6,r6,r17
   42530:	1991c83a 	sub	r8,r3,r6
   42534:	3825883a 	mov	r18,r7
   42538:	003e5706 	br	41e98 <__alt_data_end+0xfffc1e98>
   4253c:	4984b03a 	or	r2,r9,r6
   42540:	10002e26 	beq	r2,zero,425fc <__adddf3+0x7e0>
   42544:	4004d0fa 	srli	r2,r8,3
   42548:	8822d0fa 	srli	r17,r17,3
   4254c:	4010977a 	slli	r8,r8,29
   42550:	10c0022c 	andhi	r3,r2,8
   42554:	4462b03a 	or	r17,r8,r17
   42558:	18000826 	beq	r3,zero,4257c <__adddf3+0x760>
   4255c:	4808d0fa 	srli	r4,r9,3
   42560:	20c0022c 	andhi	r3,r4,8
   42564:	1800051e 	bne	r3,zero,4257c <__adddf3+0x760>
   42568:	300cd0fa 	srli	r6,r6,3
   4256c:	4806977a 	slli	r3,r9,29
   42570:	2005883a 	mov	r2,r4
   42574:	3825883a 	mov	r18,r7
   42578:	19a2b03a 	or	r17,r3,r6
   4257c:	8810d77a 	srli	r8,r17,29
   42580:	100490fa 	slli	r2,r2,3
   42584:	882290fa 	slli	r17,r17,3
   42588:	0401ffc4 	movi	r16,2047
   4258c:	4090b03a 	or	r8,r8,r2
   42590:	003e4106 	br	41e98 <__alt_data_end+0xfffc1e98>
   42594:	0141ffc4 	movi	r5,2047
   42598:	117fc71e 	bne	r2,r5,424b8 <__alt_data_end+0xfffc24b8>
   4259c:	4811883a 	mov	r8,r9
   425a0:	3023883a 	mov	r17,r6
   425a4:	1021883a 	mov	r16,r2
   425a8:	003e3b06 	br	41e98 <__alt_data_end+0xfffc1e98>
   425ac:	10002f26 	beq	r2,zero,4266c <__adddf3+0x850>
   425b0:	4984b03a 	or	r2,r9,r6
   425b4:	10001126 	beq	r2,zero,425fc <__adddf3+0x7e0>
   425b8:	4004d0fa 	srli	r2,r8,3
   425bc:	8822d0fa 	srli	r17,r17,3
   425c0:	4010977a 	slli	r8,r8,29
   425c4:	10c0022c 	andhi	r3,r2,8
   425c8:	4462b03a 	or	r17,r8,r17
   425cc:	183feb26 	beq	r3,zero,4257c <__alt_data_end+0xfffc257c>
   425d0:	4808d0fa 	srli	r4,r9,3
   425d4:	20c0022c 	andhi	r3,r4,8
   425d8:	183fe81e 	bne	r3,zero,4257c <__alt_data_end+0xfffc257c>
   425dc:	300cd0fa 	srli	r6,r6,3
   425e0:	4806977a 	slli	r3,r9,29
   425e4:	2005883a 	mov	r2,r4
   425e8:	19a2b03a 	or	r17,r3,r6
   425ec:	003fe306 	br	4257c <__alt_data_end+0xfffc257c>
   425f0:	0011883a 	mov	r8,zero
   425f4:	0005883a 	mov	r2,zero
   425f8:	003e3f06 	br	41ef8 <__alt_data_end+0xfffc1ef8>
   425fc:	0401ffc4 	movi	r16,2047
   42600:	003e2506 	br	41e98 <__alt_data_end+0xfffc1e98>
   42604:	0013883a 	mov	r9,zero
   42608:	003f8406 	br	4241c <__alt_data_end+0xfffc241c>
   4260c:	0005883a 	mov	r2,zero
   42610:	0007883a 	mov	r3,zero
   42614:	003e8906 	br	4203c <__alt_data_end+0xfffc203c>
   42618:	197ff804 	addi	r5,r3,-32
   4261c:	01000804 	movi	r4,32
   42620:	414ad83a 	srl	r5,r8,r5
   42624:	19002426 	beq	r3,r4,426b8 <__adddf3+0x89c>
   42628:	01001004 	movi	r4,64
   4262c:	20c7c83a 	sub	r3,r4,r3
   42630:	40c6983a 	sll	r3,r8,r3
   42634:	1c46b03a 	or	r3,r3,r17
   42638:	1806c03a 	cmpne	r3,r3,zero
   4263c:	28e2b03a 	or	r17,r5,r3
   42640:	0007883a 	mov	r3,zero
   42644:	003f2306 	br	422d4 <__alt_data_end+0xfffc22d4>
   42648:	0007883a 	mov	r3,zero
   4264c:	5811883a 	mov	r8,r11
   42650:	00bfffc4 	movi	r2,-1
   42654:	0401ffc4 	movi	r16,2047
   42658:	003e7806 	br	4203c <__alt_data_end+0xfffc203c>
   4265c:	4462b03a 	or	r17,r8,r17
   42660:	8822c03a 	cmpne	r17,r17,zero
   42664:	0009883a 	mov	r4,zero
   42668:	003fa006 	br	424ec <__alt_data_end+0xfffc24ec>
   4266c:	4811883a 	mov	r8,r9
   42670:	3023883a 	mov	r17,r6
   42674:	0401ffc4 	movi	r16,2047
   42678:	003e0706 	br	41e98 <__alt_data_end+0xfffc1e98>
   4267c:	4811883a 	mov	r8,r9
   42680:	3023883a 	mov	r17,r6
   42684:	003e0406 	br	41e98 <__alt_data_end+0xfffc1e98>
   42688:	21fff804 	addi	r7,r4,-32
   4268c:	01400804 	movi	r5,32
   42690:	41ced83a 	srl	r7,r8,r7
   42694:	21400a26 	beq	r4,r5,426c0 <__adddf3+0x8a4>
   42698:	01401004 	movi	r5,64
   4269c:	2909c83a 	sub	r4,r5,r4
   426a0:	4108983a 	sll	r4,r8,r4
   426a4:	2448b03a 	or	r4,r4,r17
   426a8:	2008c03a 	cmpne	r4,r4,zero
   426ac:	3922b03a 	or	r17,r7,r4
   426b0:	0009883a 	mov	r4,zero
   426b4:	003f8d06 	br	424ec <__alt_data_end+0xfffc24ec>
   426b8:	0007883a 	mov	r3,zero
   426bc:	003fdd06 	br	42634 <__alt_data_end+0xfffc2634>
   426c0:	0009883a 	mov	r4,zero
   426c4:	003ff706 	br	426a4 <__alt_data_end+0xfffc26a4>

000426c8 <__muldf3>:
   426c8:	defff304 	addi	sp,sp,-52
   426cc:	2804d53a 	srli	r2,r5,20
   426d0:	dd800915 	stw	r22,36(sp)
   426d4:	282cd7fa 	srli	r22,r5,31
   426d8:	dc000315 	stw	r16,12(sp)
   426dc:	04000434 	movhi	r16,16
   426e0:	dd400815 	stw	r21,32(sp)
   426e4:	dc800515 	stw	r18,20(sp)
   426e8:	843fffc4 	addi	r16,r16,-1
   426ec:	dfc00c15 	stw	ra,48(sp)
   426f0:	df000b15 	stw	fp,44(sp)
   426f4:	ddc00a15 	stw	r23,40(sp)
   426f8:	dd000715 	stw	r20,28(sp)
   426fc:	dcc00615 	stw	r19,24(sp)
   42700:	dc400415 	stw	r17,16(sp)
   42704:	1481ffcc 	andi	r18,r2,2047
   42708:	2c20703a 	and	r16,r5,r16
   4270c:	b02b883a 	mov	r21,r22
   42710:	b2403fcc 	andi	r9,r22,255
   42714:	90006026 	beq	r18,zero,42898 <__muldf3+0x1d0>
   42718:	0081ffc4 	movi	r2,2047
   4271c:	2029883a 	mov	r20,r4
   42720:	90803626 	beq	r18,r2,427fc <__muldf3+0x134>
   42724:	80800434 	orhi	r2,r16,16
   42728:	100490fa 	slli	r2,r2,3
   4272c:	2020d77a 	srli	r16,r4,29
   42730:	202890fa 	slli	r20,r4,3
   42734:	94bf0044 	addi	r18,r18,-1023
   42738:	80a0b03a 	or	r16,r16,r2
   4273c:	0027883a 	mov	r19,zero
   42740:	0039883a 	mov	fp,zero
   42744:	3804d53a 	srli	r2,r7,20
   42748:	382ed7fa 	srli	r23,r7,31
   4274c:	04400434 	movhi	r17,16
   42750:	8c7fffc4 	addi	r17,r17,-1
   42754:	1081ffcc 	andi	r2,r2,2047
   42758:	3011883a 	mov	r8,r6
   4275c:	3c62703a 	and	r17,r7,r17
   42760:	ba803fcc 	andi	r10,r23,255
   42764:	10006d26 	beq	r2,zero,4291c <__muldf3+0x254>
   42768:	00c1ffc4 	movi	r3,2047
   4276c:	10c06526 	beq	r2,r3,42904 <__muldf3+0x23c>
   42770:	88c00434 	orhi	r3,r17,16
   42774:	180690fa 	slli	r3,r3,3
   42778:	3022d77a 	srli	r17,r6,29
   4277c:	301090fa 	slli	r8,r6,3
   42780:	10bf0044 	addi	r2,r2,-1023
   42784:	88e2b03a 	or	r17,r17,r3
   42788:	000b883a 	mov	r5,zero
   4278c:	9085883a 	add	r2,r18,r2
   42790:	2cc8b03a 	or	r4,r5,r19
   42794:	00c003c4 	movi	r3,15
   42798:	bdacf03a 	xor	r22,r23,r22
   4279c:	12c00044 	addi	r11,r2,1
   427a0:	19009936 	bltu	r3,r4,42a08 <__muldf3+0x340>
   427a4:	200890ba 	slli	r4,r4,2
   427a8:	00c00134 	movhi	r3,4
   427ac:	18c9ef04 	addi	r3,r3,10172
   427b0:	20c9883a 	add	r4,r4,r3
   427b4:	20c00017 	ldw	r3,0(r4)
   427b8:	1800683a 	jmp	r3
   427bc:	00042a08 	cmpgei	zero,zero,4264
   427c0:	0004281c 	xori	zero,zero,4256
   427c4:	0004281c 	xori	zero,zero,4256
   427c8:	00042818 	cmpnei	zero,zero,4256
   427cc:	000429e4 	muli	zero,zero,4263
   427d0:	000429e4 	muli	zero,zero,4263
   427d4:	000429cc 	andi	zero,zero,4263
   427d8:	00042818 	cmpnei	zero,zero,4256
   427dc:	000429e4 	muli	zero,zero,4263
   427e0:	000429cc 	andi	zero,zero,4263
   427e4:	000429e4 	muli	zero,zero,4263
   427e8:	00042818 	cmpnei	zero,zero,4256
   427ec:	000429f4 	movhi	zero,4263
   427f0:	000429f4 	movhi	zero,4263
   427f4:	000429f4 	movhi	zero,4263
   427f8:	00042c10 	cmplti	zero,zero,4272
   427fc:	2404b03a 	or	r2,r4,r16
   42800:	10006f1e 	bne	r2,zero,429c0 <__muldf3+0x2f8>
   42804:	04c00204 	movi	r19,8
   42808:	0021883a 	mov	r16,zero
   4280c:	0029883a 	mov	r20,zero
   42810:	07000084 	movi	fp,2
   42814:	003fcb06 	br	42744 <__alt_data_end+0xfffc2744>
   42818:	502d883a 	mov	r22,r10
   4281c:	00800084 	movi	r2,2
   42820:	28805726 	beq	r5,r2,42980 <__muldf3+0x2b8>
   42824:	008000c4 	movi	r2,3
   42828:	28816626 	beq	r5,r2,42dc4 <__muldf3+0x6fc>
   4282c:	00800044 	movi	r2,1
   42830:	2881411e 	bne	r5,r2,42d38 <__muldf3+0x670>
   42834:	b02b883a 	mov	r21,r22
   42838:	0005883a 	mov	r2,zero
   4283c:	000b883a 	mov	r5,zero
   42840:	0029883a 	mov	r20,zero
   42844:	1004953a 	slli	r2,r2,20
   42848:	a8c03fcc 	andi	r3,r21,255
   4284c:	04400434 	movhi	r17,16
   42850:	8c7fffc4 	addi	r17,r17,-1
   42854:	180697fa 	slli	r3,r3,31
   42858:	2c4a703a 	and	r5,r5,r17
   4285c:	288ab03a 	or	r5,r5,r2
   42860:	28c6b03a 	or	r3,r5,r3
   42864:	a005883a 	mov	r2,r20
   42868:	dfc00c17 	ldw	ra,48(sp)
   4286c:	df000b17 	ldw	fp,44(sp)
   42870:	ddc00a17 	ldw	r23,40(sp)
   42874:	dd800917 	ldw	r22,36(sp)
   42878:	dd400817 	ldw	r21,32(sp)
   4287c:	dd000717 	ldw	r20,28(sp)
   42880:	dcc00617 	ldw	r19,24(sp)
   42884:	dc800517 	ldw	r18,20(sp)
   42888:	dc400417 	ldw	r17,16(sp)
   4288c:	dc000317 	ldw	r16,12(sp)
   42890:	dec00d04 	addi	sp,sp,52
   42894:	f800283a 	ret
   42898:	2404b03a 	or	r2,r4,r16
   4289c:	2027883a 	mov	r19,r4
   428a0:	10004226 	beq	r2,zero,429ac <__muldf3+0x2e4>
   428a4:	8000fc26 	beq	r16,zero,42c98 <__muldf3+0x5d0>
   428a8:	8009883a 	mov	r4,r16
   428ac:	d9800215 	stw	r6,8(sp)
   428b0:	d9c00015 	stw	r7,0(sp)
   428b4:	da400115 	stw	r9,4(sp)
   428b8:	00430980 	call	43098 <__clzsi2>
   428bc:	d9800217 	ldw	r6,8(sp)
   428c0:	d9c00017 	ldw	r7,0(sp)
   428c4:	da400117 	ldw	r9,4(sp)
   428c8:	113ffd44 	addi	r4,r2,-11
   428cc:	00c00704 	movi	r3,28
   428d0:	1900ed16 	blt	r3,r4,42c88 <__muldf3+0x5c0>
   428d4:	00c00744 	movi	r3,29
   428d8:	147ffe04 	addi	r17,r2,-8
   428dc:	1907c83a 	sub	r3,r3,r4
   428e0:	8460983a 	sll	r16,r16,r17
   428e4:	98c6d83a 	srl	r3,r19,r3
   428e8:	9c68983a 	sll	r20,r19,r17
   428ec:	1c20b03a 	or	r16,r3,r16
   428f0:	1080fcc4 	addi	r2,r2,1011
   428f4:	00a5c83a 	sub	r18,zero,r2
   428f8:	0027883a 	mov	r19,zero
   428fc:	0039883a 	mov	fp,zero
   42900:	003f9006 	br	42744 <__alt_data_end+0xfffc2744>
   42904:	3446b03a 	or	r3,r6,r17
   42908:	1800261e 	bne	r3,zero,429a4 <__muldf3+0x2dc>
   4290c:	0023883a 	mov	r17,zero
   42910:	0011883a 	mov	r8,zero
   42914:	01400084 	movi	r5,2
   42918:	003f9c06 	br	4278c <__alt_data_end+0xfffc278c>
   4291c:	3446b03a 	or	r3,r6,r17
   42920:	18001c26 	beq	r3,zero,42994 <__muldf3+0x2cc>
   42924:	8800ce26 	beq	r17,zero,42c60 <__muldf3+0x598>
   42928:	8809883a 	mov	r4,r17
   4292c:	d9800215 	stw	r6,8(sp)
   42930:	da400115 	stw	r9,4(sp)
   42934:	da800015 	stw	r10,0(sp)
   42938:	00430980 	call	43098 <__clzsi2>
   4293c:	d9800217 	ldw	r6,8(sp)
   42940:	da400117 	ldw	r9,4(sp)
   42944:	da800017 	ldw	r10,0(sp)
   42948:	113ffd44 	addi	r4,r2,-11
   4294c:	00c00704 	movi	r3,28
   42950:	1900bf16 	blt	r3,r4,42c50 <__muldf3+0x588>
   42954:	00c00744 	movi	r3,29
   42958:	123ffe04 	addi	r8,r2,-8
   4295c:	1907c83a 	sub	r3,r3,r4
   42960:	8a22983a 	sll	r17,r17,r8
   42964:	30c6d83a 	srl	r3,r6,r3
   42968:	3210983a 	sll	r8,r6,r8
   4296c:	1c62b03a 	or	r17,r3,r17
   42970:	1080fcc4 	addi	r2,r2,1011
   42974:	0085c83a 	sub	r2,zero,r2
   42978:	000b883a 	mov	r5,zero
   4297c:	003f8306 	br	4278c <__alt_data_end+0xfffc278c>
   42980:	b02b883a 	mov	r21,r22
   42984:	0081ffc4 	movi	r2,2047
   42988:	000b883a 	mov	r5,zero
   4298c:	0029883a 	mov	r20,zero
   42990:	003fac06 	br	42844 <__alt_data_end+0xfffc2844>
   42994:	0023883a 	mov	r17,zero
   42998:	0011883a 	mov	r8,zero
   4299c:	01400044 	movi	r5,1
   429a0:	003f7a06 	br	4278c <__alt_data_end+0xfffc278c>
   429a4:	014000c4 	movi	r5,3
   429a8:	003f7806 	br	4278c <__alt_data_end+0xfffc278c>
   429ac:	04c00104 	movi	r19,4
   429b0:	0021883a 	mov	r16,zero
   429b4:	0029883a 	mov	r20,zero
   429b8:	07000044 	movi	fp,1
   429bc:	003f6106 	br	42744 <__alt_data_end+0xfffc2744>
   429c0:	04c00304 	movi	r19,12
   429c4:	070000c4 	movi	fp,3
   429c8:	003f5e06 	br	42744 <__alt_data_end+0xfffc2744>
   429cc:	01400434 	movhi	r5,16
   429d0:	002b883a 	mov	r21,zero
   429d4:	297fffc4 	addi	r5,r5,-1
   429d8:	053fffc4 	movi	r20,-1
   429dc:	0081ffc4 	movi	r2,2047
   429e0:	003f9806 	br	42844 <__alt_data_end+0xfffc2844>
   429e4:	8023883a 	mov	r17,r16
   429e8:	a011883a 	mov	r8,r20
   429ec:	e00b883a 	mov	r5,fp
   429f0:	003f8a06 	br	4281c <__alt_data_end+0xfffc281c>
   429f4:	8023883a 	mov	r17,r16
   429f8:	a011883a 	mov	r8,r20
   429fc:	482d883a 	mov	r22,r9
   42a00:	e00b883a 	mov	r5,fp
   42a04:	003f8506 	br	4281c <__alt_data_end+0xfffc281c>
   42a08:	a00ad43a 	srli	r5,r20,16
   42a0c:	401ad43a 	srli	r13,r8,16
   42a10:	a53fffcc 	andi	r20,r20,65535
   42a14:	423fffcc 	andi	r8,r8,65535
   42a18:	4519383a 	mul	r12,r8,r20
   42a1c:	4147383a 	mul	r3,r8,r5
   42a20:	6d09383a 	mul	r4,r13,r20
   42a24:	600cd43a 	srli	r6,r12,16
   42a28:	2b5d383a 	mul	r14,r5,r13
   42a2c:	20c9883a 	add	r4,r4,r3
   42a30:	310d883a 	add	r6,r6,r4
   42a34:	30c0022e 	bgeu	r6,r3,42a40 <__muldf3+0x378>
   42a38:	00c00074 	movhi	r3,1
   42a3c:	70dd883a 	add	r14,r14,r3
   42a40:	8826d43a 	srli	r19,r17,16
   42a44:	8bffffcc 	andi	r15,r17,65535
   42a48:	7d23383a 	mul	r17,r15,r20
   42a4c:	7949383a 	mul	r4,r15,r5
   42a50:	9d29383a 	mul	r20,r19,r20
   42a54:	8814d43a 	srli	r10,r17,16
   42a58:	3012943a 	slli	r9,r6,16
   42a5c:	a129883a 	add	r20,r20,r4
   42a60:	633fffcc 	andi	r12,r12,65535
   42a64:	5515883a 	add	r10,r10,r20
   42a68:	3006d43a 	srli	r3,r6,16
   42a6c:	4b13883a 	add	r9,r9,r12
   42a70:	2ccb383a 	mul	r5,r5,r19
   42a74:	5100022e 	bgeu	r10,r4,42a80 <__muldf3+0x3b8>
   42a78:	01000074 	movhi	r4,1
   42a7c:	290b883a 	add	r5,r5,r4
   42a80:	802ad43a 	srli	r21,r16,16
   42a84:	843fffcc 	andi	r16,r16,65535
   42a88:	440d383a 	mul	r6,r8,r16
   42a8c:	4565383a 	mul	r18,r8,r21
   42a90:	8349383a 	mul	r4,r16,r13
   42a94:	500e943a 	slli	r7,r10,16
   42a98:	3010d43a 	srli	r8,r6,16
   42a9c:	5028d43a 	srli	r20,r10,16
   42aa0:	2489883a 	add	r4,r4,r18
   42aa4:	8abfffcc 	andi	r10,r17,65535
   42aa8:	3a95883a 	add	r10,r7,r10
   42aac:	4119883a 	add	r12,r8,r4
   42ab0:	a169883a 	add	r20,r20,r5
   42ab4:	1a87883a 	add	r3,r3,r10
   42ab8:	6d5b383a 	mul	r13,r13,r21
   42abc:	6480022e 	bgeu	r12,r18,42ac8 <__muldf3+0x400>
   42ac0:	01000074 	movhi	r4,1
   42ac4:	691b883a 	add	r13,r13,r4
   42ac8:	7c25383a 	mul	r18,r15,r16
   42acc:	7d4b383a 	mul	r5,r15,r21
   42ad0:	84cf383a 	mul	r7,r16,r19
   42ad4:	901ed43a 	srli	r15,r18,16
   42ad8:	6008d43a 	srli	r4,r12,16
   42adc:	6010943a 	slli	r8,r12,16
   42ae0:	394f883a 	add	r7,r7,r5
   42ae4:	333fffcc 	andi	r12,r6,65535
   42ae8:	79df883a 	add	r15,r15,r7
   42aec:	235b883a 	add	r13,r4,r13
   42af0:	9d63383a 	mul	r17,r19,r21
   42af4:	4309883a 	add	r4,r8,r12
   42af8:	7940022e 	bgeu	r15,r5,42b04 <__muldf3+0x43c>
   42afc:	01400074 	movhi	r5,1
   42b00:	8963883a 	add	r17,r17,r5
   42b04:	780a943a 	slli	r5,r15,16
   42b08:	91bfffcc 	andi	r6,r18,65535
   42b0c:	70c7883a 	add	r3,r14,r3
   42b10:	298d883a 	add	r6,r5,r6
   42b14:	1a8f803a 	cmpltu	r7,r3,r10
   42b18:	350b883a 	add	r5,r6,r20
   42b1c:	20c7883a 	add	r3,r4,r3
   42b20:	3955883a 	add	r10,r7,r5
   42b24:	1909803a 	cmpltu	r4,r3,r4
   42b28:	6a91883a 	add	r8,r13,r10
   42b2c:	780cd43a 	srli	r6,r15,16
   42b30:	2219883a 	add	r12,r4,r8
   42b34:	2d0b803a 	cmpltu	r5,r5,r20
   42b38:	51cf803a 	cmpltu	r7,r10,r7
   42b3c:	29ceb03a 	or	r7,r5,r7
   42b40:	4351803a 	cmpltu	r8,r8,r13
   42b44:	610b803a 	cmpltu	r5,r12,r4
   42b48:	4148b03a 	or	r4,r8,r5
   42b4c:	398f883a 	add	r7,r7,r6
   42b50:	3909883a 	add	r4,r7,r4
   42b54:	1810927a 	slli	r8,r3,9
   42b58:	2449883a 	add	r4,r4,r17
   42b5c:	2008927a 	slli	r4,r4,9
   42b60:	6022d5fa 	srli	r17,r12,23
   42b64:	1806d5fa 	srli	r3,r3,23
   42b68:	4252b03a 	or	r9,r8,r9
   42b6c:	600a927a 	slli	r5,r12,9
   42b70:	4810c03a 	cmpne	r8,r9,zero
   42b74:	2462b03a 	or	r17,r4,r17
   42b78:	40c6b03a 	or	r3,r8,r3
   42b7c:	8900402c 	andhi	r4,r17,256
   42b80:	1950b03a 	or	r8,r3,r5
   42b84:	20000726 	beq	r4,zero,42ba4 <__muldf3+0x4dc>
   42b88:	4006d07a 	srli	r3,r8,1
   42b8c:	880497fa 	slli	r2,r17,31
   42b90:	4200004c 	andi	r8,r8,1
   42b94:	8822d07a 	srli	r17,r17,1
   42b98:	1a10b03a 	or	r8,r3,r8
   42b9c:	1210b03a 	or	r8,r2,r8
   42ba0:	5805883a 	mov	r2,r11
   42ba4:	1140ffc4 	addi	r5,r2,1023
   42ba8:	0140440e 	bge	zero,r5,42cbc <__muldf3+0x5f4>
   42bac:	40c001cc 	andi	r3,r8,7
   42bb0:	18000726 	beq	r3,zero,42bd0 <__muldf3+0x508>
   42bb4:	40c003cc 	andi	r3,r8,15
   42bb8:	01000104 	movi	r4,4
   42bbc:	19000426 	beq	r3,r4,42bd0 <__muldf3+0x508>
   42bc0:	4107883a 	add	r3,r8,r4
   42bc4:	1a11803a 	cmpltu	r8,r3,r8
   42bc8:	8a23883a 	add	r17,r17,r8
   42bcc:	1811883a 	mov	r8,r3
   42bd0:	88c0402c 	andhi	r3,r17,256
   42bd4:	18000426 	beq	r3,zero,42be8 <__muldf3+0x520>
   42bd8:	11410004 	addi	r5,r2,1024
   42bdc:	00bfc034 	movhi	r2,65280
   42be0:	10bfffc4 	addi	r2,r2,-1
   42be4:	88a2703a 	and	r17,r17,r2
   42be8:	0081ff84 	movi	r2,2046
   42bec:	117f6416 	blt	r2,r5,42980 <__alt_data_end+0xfffc2980>
   42bf0:	8828977a 	slli	r20,r17,29
   42bf4:	4010d0fa 	srli	r8,r8,3
   42bf8:	8822927a 	slli	r17,r17,9
   42bfc:	2881ffcc 	andi	r2,r5,2047
   42c00:	a228b03a 	or	r20,r20,r8
   42c04:	880ad33a 	srli	r5,r17,12
   42c08:	b02b883a 	mov	r21,r22
   42c0c:	003f0d06 	br	42844 <__alt_data_end+0xfffc2844>
   42c10:	8080022c 	andhi	r2,r16,8
   42c14:	10000926 	beq	r2,zero,42c3c <__muldf3+0x574>
   42c18:	8880022c 	andhi	r2,r17,8
   42c1c:	1000071e 	bne	r2,zero,42c3c <__muldf3+0x574>
   42c20:	00800434 	movhi	r2,16
   42c24:	89400234 	orhi	r5,r17,8
   42c28:	10bfffc4 	addi	r2,r2,-1
   42c2c:	b82b883a 	mov	r21,r23
   42c30:	288a703a 	and	r5,r5,r2
   42c34:	4029883a 	mov	r20,r8
   42c38:	003f6806 	br	429dc <__alt_data_end+0xfffc29dc>
   42c3c:	00800434 	movhi	r2,16
   42c40:	81400234 	orhi	r5,r16,8
   42c44:	10bfffc4 	addi	r2,r2,-1
   42c48:	288a703a 	and	r5,r5,r2
   42c4c:	003f6306 	br	429dc <__alt_data_end+0xfffc29dc>
   42c50:	147ff604 	addi	r17,r2,-40
   42c54:	3462983a 	sll	r17,r6,r17
   42c58:	0011883a 	mov	r8,zero
   42c5c:	003f4406 	br	42970 <__alt_data_end+0xfffc2970>
   42c60:	3009883a 	mov	r4,r6
   42c64:	d9800215 	stw	r6,8(sp)
   42c68:	da400115 	stw	r9,4(sp)
   42c6c:	da800015 	stw	r10,0(sp)
   42c70:	00430980 	call	43098 <__clzsi2>
   42c74:	10800804 	addi	r2,r2,32
   42c78:	da800017 	ldw	r10,0(sp)
   42c7c:	da400117 	ldw	r9,4(sp)
   42c80:	d9800217 	ldw	r6,8(sp)
   42c84:	003f3006 	br	42948 <__alt_data_end+0xfffc2948>
   42c88:	143ff604 	addi	r16,r2,-40
   42c8c:	9c20983a 	sll	r16,r19,r16
   42c90:	0029883a 	mov	r20,zero
   42c94:	003f1606 	br	428f0 <__alt_data_end+0xfffc28f0>
   42c98:	d9800215 	stw	r6,8(sp)
   42c9c:	d9c00015 	stw	r7,0(sp)
   42ca0:	da400115 	stw	r9,4(sp)
   42ca4:	00430980 	call	43098 <__clzsi2>
   42ca8:	10800804 	addi	r2,r2,32
   42cac:	da400117 	ldw	r9,4(sp)
   42cb0:	d9c00017 	ldw	r7,0(sp)
   42cb4:	d9800217 	ldw	r6,8(sp)
   42cb8:	003f0306 	br	428c8 <__alt_data_end+0xfffc28c8>
   42cbc:	00c00044 	movi	r3,1
   42cc0:	1947c83a 	sub	r3,r3,r5
   42cc4:	00800e04 	movi	r2,56
   42cc8:	10feda16 	blt	r2,r3,42834 <__alt_data_end+0xfffc2834>
   42ccc:	008007c4 	movi	r2,31
   42cd0:	10c01b16 	blt	r2,r3,42d40 <__muldf3+0x678>
   42cd4:	00800804 	movi	r2,32
   42cd8:	10c5c83a 	sub	r2,r2,r3
   42cdc:	888a983a 	sll	r5,r17,r2
   42ce0:	40c8d83a 	srl	r4,r8,r3
   42ce4:	4084983a 	sll	r2,r8,r2
   42ce8:	88e2d83a 	srl	r17,r17,r3
   42cec:	2906b03a 	or	r3,r5,r4
   42cf0:	1004c03a 	cmpne	r2,r2,zero
   42cf4:	1886b03a 	or	r3,r3,r2
   42cf8:	188001cc 	andi	r2,r3,7
   42cfc:	10000726 	beq	r2,zero,42d1c <__muldf3+0x654>
   42d00:	188003cc 	andi	r2,r3,15
   42d04:	01000104 	movi	r4,4
   42d08:	11000426 	beq	r2,r4,42d1c <__muldf3+0x654>
   42d0c:	1805883a 	mov	r2,r3
   42d10:	10c00104 	addi	r3,r2,4
   42d14:	1885803a 	cmpltu	r2,r3,r2
   42d18:	88a3883a 	add	r17,r17,r2
   42d1c:	8880202c 	andhi	r2,r17,128
   42d20:	10001c26 	beq	r2,zero,42d94 <__muldf3+0x6cc>
   42d24:	b02b883a 	mov	r21,r22
   42d28:	00800044 	movi	r2,1
   42d2c:	000b883a 	mov	r5,zero
   42d30:	0029883a 	mov	r20,zero
   42d34:	003ec306 	br	42844 <__alt_data_end+0xfffc2844>
   42d38:	5805883a 	mov	r2,r11
   42d3c:	003f9906 	br	42ba4 <__alt_data_end+0xfffc2ba4>
   42d40:	00bff844 	movi	r2,-31
   42d44:	1145c83a 	sub	r2,r2,r5
   42d48:	8888d83a 	srl	r4,r17,r2
   42d4c:	00800804 	movi	r2,32
   42d50:	18801a26 	beq	r3,r2,42dbc <__muldf3+0x6f4>
   42d54:	00801004 	movi	r2,64
   42d58:	10c5c83a 	sub	r2,r2,r3
   42d5c:	8884983a 	sll	r2,r17,r2
   42d60:	1204b03a 	or	r2,r2,r8
   42d64:	1004c03a 	cmpne	r2,r2,zero
   42d68:	2084b03a 	or	r2,r4,r2
   42d6c:	144001cc 	andi	r17,r2,7
   42d70:	88000d1e 	bne	r17,zero,42da8 <__muldf3+0x6e0>
   42d74:	000b883a 	mov	r5,zero
   42d78:	1028d0fa 	srli	r20,r2,3
   42d7c:	b02b883a 	mov	r21,r22
   42d80:	0005883a 	mov	r2,zero
   42d84:	a468b03a 	or	r20,r20,r17
   42d88:	003eae06 	br	42844 <__alt_data_end+0xfffc2844>
   42d8c:	1007883a 	mov	r3,r2
   42d90:	0023883a 	mov	r17,zero
   42d94:	880a927a 	slli	r5,r17,9
   42d98:	1805883a 	mov	r2,r3
   42d9c:	8822977a 	slli	r17,r17,29
   42da0:	280ad33a 	srli	r5,r5,12
   42da4:	003ff406 	br	42d78 <__alt_data_end+0xfffc2d78>
   42da8:	10c003cc 	andi	r3,r2,15
   42dac:	01000104 	movi	r4,4
   42db0:	193ff626 	beq	r3,r4,42d8c <__alt_data_end+0xfffc2d8c>
   42db4:	0023883a 	mov	r17,zero
   42db8:	003fd506 	br	42d10 <__alt_data_end+0xfffc2d10>
   42dbc:	0005883a 	mov	r2,zero
   42dc0:	003fe706 	br	42d60 <__alt_data_end+0xfffc2d60>
   42dc4:	00800434 	movhi	r2,16
   42dc8:	89400234 	orhi	r5,r17,8
   42dcc:	10bfffc4 	addi	r2,r2,-1
   42dd0:	b02b883a 	mov	r21,r22
   42dd4:	288a703a 	and	r5,r5,r2
   42dd8:	4029883a 	mov	r20,r8
   42ddc:	003eff06 	br	429dc <__alt_data_end+0xfffc29dc>

00042de0 <__extendsfdf2>:
   42de0:	200ad5fa 	srli	r5,r4,23
   42de4:	defffd04 	addi	sp,sp,-12
   42de8:	dc400115 	stw	r17,4(sp)
   42dec:	29403fcc 	andi	r5,r5,255
   42df0:	29800044 	addi	r6,r5,1
   42df4:	04402034 	movhi	r17,128
   42df8:	dc000015 	stw	r16,0(sp)
   42dfc:	8c7fffc4 	addi	r17,r17,-1
   42e00:	dfc00215 	stw	ra,8(sp)
   42e04:	31803fcc 	andi	r6,r6,255
   42e08:	00800044 	movi	r2,1
   42e0c:	8922703a 	and	r17,r17,r4
   42e10:	2020d7fa 	srli	r16,r4,31
   42e14:	1180110e 	bge	r2,r6,42e5c <__extendsfdf2+0x7c>
   42e18:	880cd0fa 	srli	r6,r17,3
   42e1c:	8822977a 	slli	r17,r17,29
   42e20:	2940e004 	addi	r5,r5,896
   42e24:	2941ffcc 	andi	r5,r5,2047
   42e28:	2804953a 	slli	r2,r5,20
   42e2c:	01400434 	movhi	r5,16
   42e30:	800697fa 	slli	r3,r16,31
   42e34:	297fffc4 	addi	r5,r5,-1
   42e38:	314a703a 	and	r5,r6,r5
   42e3c:	288ab03a 	or	r5,r5,r2
   42e40:	28c6b03a 	or	r3,r5,r3
   42e44:	8805883a 	mov	r2,r17
   42e48:	dfc00217 	ldw	ra,8(sp)
   42e4c:	dc400117 	ldw	r17,4(sp)
   42e50:	dc000017 	ldw	r16,0(sp)
   42e54:	dec00304 	addi	sp,sp,12
   42e58:	f800283a 	ret
   42e5c:	2800111e 	bne	r5,zero,42ea4 <__extendsfdf2+0xc4>
   42e60:	88001c26 	beq	r17,zero,42ed4 <__extendsfdf2+0xf4>
   42e64:	8809883a 	mov	r4,r17
   42e68:	00430980 	call	43098 <__clzsi2>
   42e6c:	00c00284 	movi	r3,10
   42e70:	18801b16 	blt	r3,r2,42ee0 <__extendsfdf2+0x100>
   42e74:	018002c4 	movi	r6,11
   42e78:	308dc83a 	sub	r6,r6,r2
   42e7c:	11000544 	addi	r4,r2,21
   42e80:	8986d83a 	srl	r3,r17,r6
   42e84:	8922983a 	sll	r17,r17,r4
   42e88:	0180e244 	movi	r6,905
   42e8c:	01400434 	movhi	r5,16
   42e90:	3085c83a 	sub	r2,r6,r2
   42e94:	297fffc4 	addi	r5,r5,-1
   42e98:	194c703a 	and	r6,r3,r5
   42e9c:	1141ffcc 	andi	r5,r2,2047
   42ea0:	003fe006 	br	42e24 <__alt_data_end+0xfffc2e24>
   42ea4:	88000826 	beq	r17,zero,42ec8 <__extendsfdf2+0xe8>
   42ea8:	880cd0fa 	srli	r6,r17,3
   42eac:	00800434 	movhi	r2,16
   42eb0:	10bfffc4 	addi	r2,r2,-1
   42eb4:	31800234 	orhi	r6,r6,8
   42eb8:	8822977a 	slli	r17,r17,29
   42ebc:	308c703a 	and	r6,r6,r2
   42ec0:	0141ffc4 	movi	r5,2047
   42ec4:	003fd706 	br	42e24 <__alt_data_end+0xfffc2e24>
   42ec8:	0141ffc4 	movi	r5,2047
   42ecc:	000d883a 	mov	r6,zero
   42ed0:	003fd406 	br	42e24 <__alt_data_end+0xfffc2e24>
   42ed4:	000b883a 	mov	r5,zero
   42ed8:	000d883a 	mov	r6,zero
   42edc:	003fd106 	br	42e24 <__alt_data_end+0xfffc2e24>
   42ee0:	11bffd44 	addi	r6,r2,-11
   42ee4:	8986983a 	sll	r3,r17,r6
   42ee8:	0023883a 	mov	r17,zero
   42eec:	003fe606 	br	42e88 <__alt_data_end+0xfffc2e88>

00042ef0 <__truncdfsf2>:
   42ef0:	2810d53a 	srli	r8,r5,20
   42ef4:	01c00434 	movhi	r7,16
   42ef8:	39ffffc4 	addi	r7,r7,-1
   42efc:	29ce703a 	and	r7,r5,r7
   42f00:	4201ffcc 	andi	r8,r8,2047
   42f04:	380e90fa 	slli	r7,r7,3
   42f08:	200cd77a 	srli	r6,r4,29
   42f0c:	42400044 	addi	r9,r8,1
   42f10:	4a41ffcc 	andi	r9,r9,2047
   42f14:	00c00044 	movi	r3,1
   42f18:	280ad7fa 	srli	r5,r5,31
   42f1c:	31ceb03a 	or	r7,r6,r7
   42f20:	200490fa 	slli	r2,r4,3
   42f24:	1a40230e 	bge	r3,r9,42fb4 <__truncdfsf2+0xc4>
   42f28:	40ff2004 	addi	r3,r8,-896
   42f2c:	01803f84 	movi	r6,254
   42f30:	30c01516 	blt	r6,r3,42f88 <__truncdfsf2+0x98>
   42f34:	00c0380e 	bge	zero,r3,43018 <__truncdfsf2+0x128>
   42f38:	200c91ba 	slli	r6,r4,6
   42f3c:	380e90fa 	slli	r7,r7,3
   42f40:	1004d77a 	srli	r2,r2,29
   42f44:	300cc03a 	cmpne	r6,r6,zero
   42f48:	31ccb03a 	or	r6,r6,r7
   42f4c:	308cb03a 	or	r6,r6,r2
   42f50:	308001cc 	andi	r2,r6,7
   42f54:	10000426 	beq	r2,zero,42f68 <__truncdfsf2+0x78>
   42f58:	308003cc 	andi	r2,r6,15
   42f5c:	01000104 	movi	r4,4
   42f60:	11000126 	beq	r2,r4,42f68 <__truncdfsf2+0x78>
   42f64:	31800104 	addi	r6,r6,4
   42f68:	3081002c 	andhi	r2,r6,1024
   42f6c:	10001626 	beq	r2,zero,42fc8 <__truncdfsf2+0xd8>
   42f70:	18c00044 	addi	r3,r3,1
   42f74:	00803fc4 	movi	r2,255
   42f78:	18800326 	beq	r3,r2,42f88 <__truncdfsf2+0x98>
   42f7c:	300c91ba 	slli	r6,r6,6
   42f80:	300cd27a 	srli	r6,r6,9
   42f84:	00000206 	br	42f90 <__truncdfsf2+0xa0>
   42f88:	00ffffc4 	movi	r3,-1
   42f8c:	000d883a 	mov	r6,zero
   42f90:	18c03fcc 	andi	r3,r3,255
   42f94:	180895fa 	slli	r4,r3,23
   42f98:	00c02034 	movhi	r3,128
   42f9c:	280a97fa 	slli	r5,r5,31
   42fa0:	18ffffc4 	addi	r3,r3,-1
   42fa4:	30c6703a 	and	r3,r6,r3
   42fa8:	1906b03a 	or	r3,r3,r4
   42fac:	1944b03a 	or	r2,r3,r5
   42fb0:	f800283a 	ret
   42fb4:	40000b1e 	bne	r8,zero,42fe4 <__truncdfsf2+0xf4>
   42fb8:	388cb03a 	or	r6,r7,r2
   42fbc:	0007883a 	mov	r3,zero
   42fc0:	30000426 	beq	r6,zero,42fd4 <__truncdfsf2+0xe4>
   42fc4:	01800144 	movi	r6,5
   42fc8:	00803fc4 	movi	r2,255
   42fcc:	300cd0fa 	srli	r6,r6,3
   42fd0:	18800a26 	beq	r3,r2,42ffc <__truncdfsf2+0x10c>
   42fd4:	00802034 	movhi	r2,128
   42fd8:	10bfffc4 	addi	r2,r2,-1
   42fdc:	308c703a 	and	r6,r6,r2
   42fe0:	003feb06 	br	42f90 <__alt_data_end+0xfffc2f90>
   42fe4:	3888b03a 	or	r4,r7,r2
   42fe8:	203fe726 	beq	r4,zero,42f88 <__alt_data_end+0xfffc2f88>
   42fec:	380c90fa 	slli	r6,r7,3
   42ff0:	00c03fc4 	movi	r3,255
   42ff4:	31808034 	orhi	r6,r6,512
   42ff8:	003fd506 	br	42f50 <__alt_data_end+0xfffc2f50>
   42ffc:	303fe226 	beq	r6,zero,42f88 <__alt_data_end+0xfffc2f88>
   43000:	00802034 	movhi	r2,128
   43004:	31801034 	orhi	r6,r6,64
   43008:	10bfffc4 	addi	r2,r2,-1
   4300c:	00ffffc4 	movi	r3,-1
   43010:	308c703a 	and	r6,r6,r2
   43014:	003fde06 	br	42f90 <__alt_data_end+0xfffc2f90>
   43018:	013ffa44 	movi	r4,-23
   4301c:	19000e16 	blt	r3,r4,43058 <__truncdfsf2+0x168>
   43020:	01000784 	movi	r4,30
   43024:	20c9c83a 	sub	r4,r4,r3
   43028:	018007c4 	movi	r6,31
   4302c:	39c02034 	orhi	r7,r7,128
   43030:	31000b16 	blt	r6,r4,43060 <__truncdfsf2+0x170>
   43034:	423f2084 	addi	r8,r8,-894
   43038:	120c983a 	sll	r6,r2,r8
   4303c:	3a0e983a 	sll	r7,r7,r8
   43040:	1104d83a 	srl	r2,r2,r4
   43044:	300cc03a 	cmpne	r6,r6,zero
   43048:	31ceb03a 	or	r7,r6,r7
   4304c:	388cb03a 	or	r6,r7,r2
   43050:	0007883a 	mov	r3,zero
   43054:	003fbe06 	br	42f50 <__alt_data_end+0xfffc2f50>
   43058:	0007883a 	mov	r3,zero
   4305c:	003fd906 	br	42fc4 <__alt_data_end+0xfffc2fc4>
   43060:	01bfff84 	movi	r6,-2
   43064:	30cdc83a 	sub	r6,r6,r3
   43068:	00c00804 	movi	r3,32
   4306c:	398cd83a 	srl	r6,r7,r6
   43070:	20c00726 	beq	r4,r3,43090 <__truncdfsf2+0x1a0>
   43074:	423f2884 	addi	r8,r8,-862
   43078:	3a0e983a 	sll	r7,r7,r8
   4307c:	3884b03a 	or	r2,r7,r2
   43080:	1004c03a 	cmpne	r2,r2,zero
   43084:	118cb03a 	or	r6,r2,r6
   43088:	0007883a 	mov	r3,zero
   4308c:	003fb006 	br	42f50 <__alt_data_end+0xfffc2f50>
   43090:	000f883a 	mov	r7,zero
   43094:	003ff906 	br	4307c <__alt_data_end+0xfffc307c>

00043098 <__clzsi2>:
   43098:	00bfffd4 	movui	r2,65535
   4309c:	11000536 	bltu	r2,r4,430b4 <__clzsi2+0x1c>
   430a0:	00803fc4 	movi	r2,255
   430a4:	11000f36 	bltu	r2,r4,430e4 <__clzsi2+0x4c>
   430a8:	00800804 	movi	r2,32
   430ac:	0007883a 	mov	r3,zero
   430b0:	00000506 	br	430c8 <__clzsi2+0x30>
   430b4:	00804034 	movhi	r2,256
   430b8:	10bfffc4 	addi	r2,r2,-1
   430bc:	11000c2e 	bgeu	r2,r4,430f0 <__clzsi2+0x58>
   430c0:	00800204 	movi	r2,8
   430c4:	00c00604 	movi	r3,24
   430c8:	20c8d83a 	srl	r4,r4,r3
   430cc:	00c00174 	movhi	r3,5
   430d0:	18c3fb04 	addi	r3,r3,4076
   430d4:	1909883a 	add	r4,r3,r4
   430d8:	20c00003 	ldbu	r3,0(r4)
   430dc:	10c5c83a 	sub	r2,r2,r3
   430e0:	f800283a 	ret
   430e4:	00800604 	movi	r2,24
   430e8:	00c00204 	movi	r3,8
   430ec:	003ff606 	br	430c8 <__alt_data_end+0xfffc30c8>
   430f0:	00800404 	movi	r2,16
   430f4:	1007883a 	mov	r3,r2
   430f8:	003ff306 	br	430c8 <__alt_data_end+0xfffc30c8>

000430fc <_printf_r>:
   430fc:	defffd04 	addi	sp,sp,-12
   43100:	2805883a 	mov	r2,r5
   43104:	dfc00015 	stw	ra,0(sp)
   43108:	d9800115 	stw	r6,4(sp)
   4310c:	d9c00215 	stw	r7,8(sp)
   43110:	21400217 	ldw	r5,8(r4)
   43114:	d9c00104 	addi	r7,sp,4
   43118:	100d883a 	mov	r6,r2
   4311c:	00431680 	call	43168 <___vfprintf_internal_r>
   43120:	dfc00017 	ldw	ra,0(sp)
   43124:	dec00304 	addi	sp,sp,12
   43128:	f800283a 	ret

0004312c <printf>:
   4312c:	defffc04 	addi	sp,sp,-16
   43130:	dfc00015 	stw	ra,0(sp)
   43134:	d9400115 	stw	r5,4(sp)
   43138:	d9800215 	stw	r6,8(sp)
   4313c:	d9c00315 	stw	r7,12(sp)
   43140:	00800174 	movhi	r2,5
   43144:	108b8e04 	addi	r2,r2,11832
   43148:	10800017 	ldw	r2,0(r2)
   4314c:	200b883a 	mov	r5,r4
   43150:	d9800104 	addi	r6,sp,4
   43154:	11000217 	ldw	r4,8(r2)
   43158:	00453600 	call	45360 <__vfprintf_internal>
   4315c:	dfc00017 	ldw	ra,0(sp)
   43160:	dec00404 	addi	sp,sp,16
   43164:	f800283a 	ret

00043168 <___vfprintf_internal_r>:
   43168:	deffb804 	addi	sp,sp,-288
   4316c:	dfc04715 	stw	ra,284(sp)
   43170:	ddc04515 	stw	r23,276(sp)
   43174:	dd404315 	stw	r21,268(sp)
   43178:	d9002c15 	stw	r4,176(sp)
   4317c:	282f883a 	mov	r23,r5
   43180:	302b883a 	mov	r21,r6
   43184:	d9c02d15 	stw	r7,180(sp)
   43188:	df004615 	stw	fp,280(sp)
   4318c:	dd804415 	stw	r22,272(sp)
   43190:	dd004215 	stw	r20,264(sp)
   43194:	dcc04115 	stw	r19,260(sp)
   43198:	dc804015 	stw	r18,256(sp)
   4319c:	dc403f15 	stw	r17,252(sp)
   431a0:	dc003e15 	stw	r16,248(sp)
   431a4:	0047ac40 	call	47ac4 <_localeconv_r>
   431a8:	10800017 	ldw	r2,0(r2)
   431ac:	1009883a 	mov	r4,r2
   431b0:	d8803415 	stw	r2,208(sp)
   431b4:	0049aec0 	call	49aec <strlen>
   431b8:	d8803715 	stw	r2,220(sp)
   431bc:	d8802c17 	ldw	r2,176(sp)
   431c0:	10000226 	beq	r2,zero,431cc <___vfprintf_internal_r+0x64>
   431c4:	10800e17 	ldw	r2,56(r2)
   431c8:	1000f926 	beq	r2,zero,435b0 <___vfprintf_internal_r+0x448>
   431cc:	b880030b 	ldhu	r2,12(r23)
   431d0:	10c8000c 	andi	r3,r2,8192
   431d4:	1800061e 	bne	r3,zero,431f0 <___vfprintf_internal_r+0x88>
   431d8:	b9001917 	ldw	r4,100(r23)
   431dc:	00f7ffc4 	movi	r3,-8193
   431e0:	10880014 	ori	r2,r2,8192
   431e4:	20c6703a 	and	r3,r4,r3
   431e8:	b880030d 	sth	r2,12(r23)
   431ec:	b8c01915 	stw	r3,100(r23)
   431f0:	10c0020c 	andi	r3,r2,8
   431f4:	1800c126 	beq	r3,zero,434fc <___vfprintf_internal_r+0x394>
   431f8:	b8c00417 	ldw	r3,16(r23)
   431fc:	1800bf26 	beq	r3,zero,434fc <___vfprintf_internal_r+0x394>
   43200:	1080068c 	andi	r2,r2,26
   43204:	00c00284 	movi	r3,10
   43208:	10c0c426 	beq	r2,r3,4351c <___vfprintf_internal_r+0x3b4>
   4320c:	d8c00404 	addi	r3,sp,16
   43210:	05000174 	movhi	r20,5
   43214:	d9001e04 	addi	r4,sp,120
   43218:	a5044b84 	addi	r20,r20,4398
   4321c:	d8c01e15 	stw	r3,120(sp)
   43220:	d8002015 	stw	zero,128(sp)
   43224:	d8001f15 	stw	zero,124(sp)
   43228:	d8003315 	stw	zero,204(sp)
   4322c:	d8003615 	stw	zero,216(sp)
   43230:	d8003815 	stw	zero,224(sp)
   43234:	1811883a 	mov	r8,r3
   43238:	d8003915 	stw	zero,228(sp)
   4323c:	d8003a15 	stw	zero,232(sp)
   43240:	d8002f15 	stw	zero,188(sp)
   43244:	d9002815 	stw	r4,160(sp)
   43248:	a8800007 	ldb	r2,0(r21)
   4324c:	10027b26 	beq	r2,zero,43c3c <___vfprintf_internal_r+0xad4>
   43250:	00c00944 	movi	r3,37
   43254:	a821883a 	mov	r16,r21
   43258:	10c0021e 	bne	r2,r3,43264 <___vfprintf_internal_r+0xfc>
   4325c:	00001406 	br	432b0 <___vfprintf_internal_r+0x148>
   43260:	10c00326 	beq	r2,r3,43270 <___vfprintf_internal_r+0x108>
   43264:	84000044 	addi	r16,r16,1
   43268:	80800007 	ldb	r2,0(r16)
   4326c:	103ffc1e 	bne	r2,zero,43260 <__alt_data_end+0xfffc3260>
   43270:	8563c83a 	sub	r17,r16,r21
   43274:	88000e26 	beq	r17,zero,432b0 <___vfprintf_internal_r+0x148>
   43278:	d8c02017 	ldw	r3,128(sp)
   4327c:	d8801f17 	ldw	r2,124(sp)
   43280:	45400015 	stw	r21,0(r8)
   43284:	1c47883a 	add	r3,r3,r17
   43288:	10800044 	addi	r2,r2,1
   4328c:	d8c02015 	stw	r3,128(sp)
   43290:	44400115 	stw	r17,4(r8)
   43294:	d8801f15 	stw	r2,124(sp)
   43298:	00c001c4 	movi	r3,7
   4329c:	1880a716 	blt	r3,r2,4353c <___vfprintf_internal_r+0x3d4>
   432a0:	42000204 	addi	r8,r8,8
   432a4:	d9402f17 	ldw	r5,188(sp)
   432a8:	2c4b883a 	add	r5,r5,r17
   432ac:	d9402f15 	stw	r5,188(sp)
   432b0:	80800007 	ldb	r2,0(r16)
   432b4:	1000a826 	beq	r2,zero,43558 <___vfprintf_internal_r+0x3f0>
   432b8:	84400047 	ldb	r17,1(r16)
   432bc:	00bfffc4 	movi	r2,-1
   432c0:	85400044 	addi	r21,r16,1
   432c4:	d8002785 	stb	zero,158(sp)
   432c8:	0007883a 	mov	r3,zero
   432cc:	000f883a 	mov	r7,zero
   432d0:	d8802915 	stw	r2,164(sp)
   432d4:	d8003115 	stw	zero,196(sp)
   432d8:	0025883a 	mov	r18,zero
   432dc:	01401604 	movi	r5,88
   432e0:	01800244 	movi	r6,9
   432e4:	02800a84 	movi	r10,42
   432e8:	02401b04 	movi	r9,108
   432ec:	ad400044 	addi	r21,r21,1
   432f0:	88bff804 	addi	r2,r17,-32
   432f4:	28830436 	bltu	r5,r2,43f08 <___vfprintf_internal_r+0xda0>
   432f8:	100490ba 	slli	r2,r2,2
   432fc:	01000134 	movhi	r4,4
   43300:	210cc404 	addi	r4,r4,13072
   43304:	1105883a 	add	r2,r2,r4
   43308:	10800017 	ldw	r2,0(r2)
   4330c:	1000683a 	jmp	r2
   43310:	00043e28 	cmpgeui	zero,zero,4344
   43314:	00043f08 	cmpgei	zero,zero,4348
   43318:	00043f08 	cmpgei	zero,zero,4348
   4331c:	00043e48 	cmpgei	zero,zero,4345
   43320:	00043f08 	cmpgei	zero,zero,4348
   43324:	00043f08 	cmpgei	zero,zero,4348
   43328:	00043f08 	cmpgei	zero,zero,4348
   4332c:	00043f08 	cmpgei	zero,zero,4348
   43330:	00043f08 	cmpgei	zero,zero,4348
   43334:	00043f08 	cmpgei	zero,zero,4348
   43338:	000435bc 	xorhi	zero,zero,4310
   4333c:	00043d64 	muli	zero,zero,4341
   43340:	00043f08 	cmpgei	zero,zero,4348
   43344:	00043484 	movi	zero,4306
   43348:	000435e4 	muli	zero,zero,4311
   4334c:	00043f08 	cmpgei	zero,zero,4348
   43350:	00043624 	muli	zero,zero,4312
   43354:	00043630 	cmpltui	zero,zero,4312
   43358:	00043630 	cmpltui	zero,zero,4312
   4335c:	00043630 	cmpltui	zero,zero,4312
   43360:	00043630 	cmpltui	zero,zero,4312
   43364:	00043630 	cmpltui	zero,zero,4312
   43368:	00043630 	cmpltui	zero,zero,4312
   4336c:	00043630 	cmpltui	zero,zero,4312
   43370:	00043630 	cmpltui	zero,zero,4312
   43374:	00043630 	cmpltui	zero,zero,4312
   43378:	00043f08 	cmpgei	zero,zero,4348
   4337c:	00043f08 	cmpgei	zero,zero,4348
   43380:	00043f08 	cmpgei	zero,zero,4348
   43384:	00043f08 	cmpgei	zero,zero,4348
   43388:	00043f08 	cmpgei	zero,zero,4348
   4338c:	00043f08 	cmpgei	zero,zero,4348
   43390:	00043f08 	cmpgei	zero,zero,4348
   43394:	00043f08 	cmpgei	zero,zero,4348
   43398:	00043f08 	cmpgei	zero,zero,4348
   4339c:	00043f08 	cmpgei	zero,zero,4348
   433a0:	00043664 	muli	zero,zero,4313
   433a4:	00043720 	cmpeqi	zero,zero,4316
   433a8:	00043f08 	cmpgei	zero,zero,4348
   433ac:	00043720 	cmpeqi	zero,zero,4316
   433b0:	00043f08 	cmpgei	zero,zero,4348
   433b4:	00043f08 	cmpgei	zero,zero,4348
   433b8:	00043f08 	cmpgei	zero,zero,4348
   433bc:	00043f08 	cmpgei	zero,zero,4348
   433c0:	000437c0 	call	437c <__alt_mem_onchip_memory2_0-0x3bc84>
   433c4:	00043f08 	cmpgei	zero,zero,4348
   433c8:	00043f08 	cmpgei	zero,zero,4348
   433cc:	000437cc 	andi	zero,zero,4319
   433d0:	00043f08 	cmpgei	zero,zero,4348
   433d4:	00043f08 	cmpgei	zero,zero,4348
   433d8:	00043f08 	cmpgei	zero,zero,4348
   433dc:	00043f08 	cmpgei	zero,zero,4348
   433e0:	00043f08 	cmpgei	zero,zero,4348
   433e4:	00043c44 	movi	zero,4337
   433e8:	00043f08 	cmpgei	zero,zero,4348
   433ec:	00043f08 	cmpgei	zero,zero,4348
   433f0:	00043ca4 	muli	zero,zero,4338
   433f4:	00043f08 	cmpgei	zero,zero,4348
   433f8:	00043f08 	cmpgei	zero,zero,4348
   433fc:	00043f08 	cmpgei	zero,zero,4348
   43400:	00043f08 	cmpgei	zero,zero,4348
   43404:	00043f08 	cmpgei	zero,zero,4348
   43408:	00043f08 	cmpgei	zero,zero,4348
   4340c:	00043f08 	cmpgei	zero,zero,4348
   43410:	00043f08 	cmpgei	zero,zero,4348
   43414:	00043f08 	cmpgei	zero,zero,4348
   43418:	00043f08 	cmpgei	zero,zero,4348
   4341c:	00043eb4 	movhi	zero,4346
   43420:	00043e54 	movui	zero,4345
   43424:	00043720 	cmpeqi	zero,zero,4316
   43428:	00043720 	cmpeqi	zero,zero,4316
   4342c:	00043720 	cmpeqi	zero,zero,4316
   43430:	00043e64 	muli	zero,zero,4345
   43434:	00043e54 	movui	zero,4345
   43438:	00043f08 	cmpgei	zero,zero,4348
   4343c:	00043f08 	cmpgei	zero,zero,4348
   43440:	00043e70 	cmpltui	zero,zero,4345
   43444:	00043f08 	cmpgei	zero,zero,4348
   43448:	00043e80 	call	43e8 <__alt_mem_onchip_memory2_0-0x3bc18>
   4344c:	00043d54 	movui	zero,4341
   43450:	00043490 	cmplti	zero,zero,4306
   43454:	00043d74 	movhi	zero,4341
   43458:	00043f08 	cmpgei	zero,zero,4348
   4345c:	00043d80 	call	43d8 <__alt_mem_onchip_memory2_0-0x3bc28>
   43460:	00043f08 	cmpgei	zero,zero,4348
   43464:	00043ddc 	xori	zero,zero,4343
   43468:	00043f08 	cmpgei	zero,zero,4348
   4346c:	00043f08 	cmpgei	zero,zero,4348
   43470:	00043dec 	andhi	zero,zero,4343
   43474:	d9003117 	ldw	r4,196(sp)
   43478:	d8802d15 	stw	r2,180(sp)
   4347c:	0109c83a 	sub	r4,zero,r4
   43480:	d9003115 	stw	r4,196(sp)
   43484:	94800114 	ori	r18,r18,4
   43488:	ac400007 	ldb	r17,0(r21)
   4348c:	003f9706 	br	432ec <__alt_data_end+0xfffc32ec>
   43490:	00800c04 	movi	r2,48
   43494:	d9002d17 	ldw	r4,180(sp)
   43498:	d9402917 	ldw	r5,164(sp)
   4349c:	d8802705 	stb	r2,156(sp)
   434a0:	00801e04 	movi	r2,120
   434a4:	d8802745 	stb	r2,157(sp)
   434a8:	d8002785 	stb	zero,158(sp)
   434ac:	20c00104 	addi	r3,r4,4
   434b0:	24c00017 	ldw	r19,0(r4)
   434b4:	002d883a 	mov	r22,zero
   434b8:	90800094 	ori	r2,r18,2
   434bc:	28029a16 	blt	r5,zero,43f28 <___vfprintf_internal_r+0xdc0>
   434c0:	00bfdfc4 	movi	r2,-129
   434c4:	90a4703a 	and	r18,r18,r2
   434c8:	d8c02d15 	stw	r3,180(sp)
   434cc:	94800094 	ori	r18,r18,2
   434d0:	9802871e 	bne	r19,zero,43ef0 <___vfprintf_internal_r+0xd88>
   434d4:	00800174 	movhi	r2,5
   434d8:	10844404 	addi	r2,r2,4368
   434dc:	d8803915 	stw	r2,228(sp)
   434e0:	04401e04 	movi	r17,120
   434e4:	d8802917 	ldw	r2,164(sp)
   434e8:	0039883a 	mov	fp,zero
   434ec:	1001e926 	beq	r2,zero,43c94 <___vfprintf_internal_r+0xb2c>
   434f0:	0027883a 	mov	r19,zero
   434f4:	002d883a 	mov	r22,zero
   434f8:	00020506 	br	43d10 <___vfprintf_internal_r+0xba8>
   434fc:	d9002c17 	ldw	r4,176(sp)
   43500:	b80b883a 	mov	r5,r23
   43504:	00454380 	call	45438 <__swsetup_r>
   43508:	1005ac1e 	bne	r2,zero,44bbc <___vfprintf_internal_r+0x1a54>
   4350c:	b880030b 	ldhu	r2,12(r23)
   43510:	00c00284 	movi	r3,10
   43514:	1080068c 	andi	r2,r2,26
   43518:	10ff3c1e 	bne	r2,r3,4320c <__alt_data_end+0xfffc320c>
   4351c:	b880038f 	ldh	r2,14(r23)
   43520:	103f3a16 	blt	r2,zero,4320c <__alt_data_end+0xfffc320c>
   43524:	d9c02d17 	ldw	r7,180(sp)
   43528:	d9002c17 	ldw	r4,176(sp)
   4352c:	a80d883a 	mov	r6,r21
   43530:	b80b883a 	mov	r5,r23
   43534:	004537c0 	call	4537c <__sbprintf>
   43538:	00001106 	br	43580 <___vfprintf_internal_r+0x418>
   4353c:	d9002c17 	ldw	r4,176(sp)
   43540:	d9801e04 	addi	r6,sp,120
   43544:	b80b883a 	mov	r5,r23
   43548:	0049c800 	call	49c80 <__sprint_r>
   4354c:	1000081e 	bne	r2,zero,43570 <___vfprintf_internal_r+0x408>
   43550:	da000404 	addi	r8,sp,16
   43554:	003f5306 	br	432a4 <__alt_data_end+0xfffc32a4>
   43558:	d8802017 	ldw	r2,128(sp)
   4355c:	10000426 	beq	r2,zero,43570 <___vfprintf_internal_r+0x408>
   43560:	d9002c17 	ldw	r4,176(sp)
   43564:	d9801e04 	addi	r6,sp,120
   43568:	b80b883a 	mov	r5,r23
   4356c:	0049c800 	call	49c80 <__sprint_r>
   43570:	b880030b 	ldhu	r2,12(r23)
   43574:	1080100c 	andi	r2,r2,64
   43578:	1005901e 	bne	r2,zero,44bbc <___vfprintf_internal_r+0x1a54>
   4357c:	d8802f17 	ldw	r2,188(sp)
   43580:	dfc04717 	ldw	ra,284(sp)
   43584:	df004617 	ldw	fp,280(sp)
   43588:	ddc04517 	ldw	r23,276(sp)
   4358c:	dd804417 	ldw	r22,272(sp)
   43590:	dd404317 	ldw	r21,268(sp)
   43594:	dd004217 	ldw	r20,264(sp)
   43598:	dcc04117 	ldw	r19,260(sp)
   4359c:	dc804017 	ldw	r18,256(sp)
   435a0:	dc403f17 	ldw	r17,252(sp)
   435a4:	dc003e17 	ldw	r16,248(sp)
   435a8:	dec04804 	addi	sp,sp,288
   435ac:	f800283a 	ret
   435b0:	d9002c17 	ldw	r4,176(sp)
   435b4:	004740c0 	call	4740c <__sinit>
   435b8:	003f0406 	br	431cc <__alt_data_end+0xfffc31cc>
   435bc:	d8802d17 	ldw	r2,180(sp)
   435c0:	d9002d17 	ldw	r4,180(sp)
   435c4:	10800017 	ldw	r2,0(r2)
   435c8:	d8803115 	stw	r2,196(sp)
   435cc:	20800104 	addi	r2,r4,4
   435d0:	d9003117 	ldw	r4,196(sp)
   435d4:	203fa716 	blt	r4,zero,43474 <__alt_data_end+0xfffc3474>
   435d8:	d8802d15 	stw	r2,180(sp)
   435dc:	ac400007 	ldb	r17,0(r21)
   435e0:	003f4206 	br	432ec <__alt_data_end+0xfffc32ec>
   435e4:	ac400007 	ldb	r17,0(r21)
   435e8:	aac00044 	addi	r11,r21,1
   435ec:	8a872826 	beq	r17,r10,45290 <___vfprintf_internal_r+0x2128>
   435f0:	88bff404 	addi	r2,r17,-48
   435f4:	0009883a 	mov	r4,zero
   435f8:	30867d36 	bltu	r6,r2,44ff0 <___vfprintf_internal_r+0x1e88>
   435fc:	5c400007 	ldb	r17,0(r11)
   43600:	210002a4 	muli	r4,r4,10
   43604:	5d400044 	addi	r21,r11,1
   43608:	a817883a 	mov	r11,r21
   4360c:	2089883a 	add	r4,r4,r2
   43610:	88bff404 	addi	r2,r17,-48
   43614:	30bff92e 	bgeu	r6,r2,435fc <__alt_data_end+0xfffc35fc>
   43618:	2005c916 	blt	r4,zero,44d40 <___vfprintf_internal_r+0x1bd8>
   4361c:	d9002915 	stw	r4,164(sp)
   43620:	003f3306 	br	432f0 <__alt_data_end+0xfffc32f0>
   43624:	94802014 	ori	r18,r18,128
   43628:	ac400007 	ldb	r17,0(r21)
   4362c:	003f2f06 	br	432ec <__alt_data_end+0xfffc32ec>
   43630:	a809883a 	mov	r4,r21
   43634:	d8003115 	stw	zero,196(sp)
   43638:	88bff404 	addi	r2,r17,-48
   4363c:	0017883a 	mov	r11,zero
   43640:	24400007 	ldb	r17,0(r4)
   43644:	5ac002a4 	muli	r11,r11,10
   43648:	ad400044 	addi	r21,r21,1
   4364c:	a809883a 	mov	r4,r21
   43650:	12d7883a 	add	r11,r2,r11
   43654:	88bff404 	addi	r2,r17,-48
   43658:	30bff92e 	bgeu	r6,r2,43640 <__alt_data_end+0xfffc3640>
   4365c:	dac03115 	stw	r11,196(sp)
   43660:	003f2306 	br	432f0 <__alt_data_end+0xfffc32f0>
   43664:	18c03fcc 	andi	r3,r3,255
   43668:	18072b1e 	bne	r3,zero,45318 <___vfprintf_internal_r+0x21b0>
   4366c:	94800414 	ori	r18,r18,16
   43670:	9080080c 	andi	r2,r18,32
   43674:	10037b26 	beq	r2,zero,44464 <___vfprintf_internal_r+0x12fc>
   43678:	d9402d17 	ldw	r5,180(sp)
   4367c:	28800117 	ldw	r2,4(r5)
   43680:	2cc00017 	ldw	r19,0(r5)
   43684:	29400204 	addi	r5,r5,8
   43688:	d9402d15 	stw	r5,180(sp)
   4368c:	102d883a 	mov	r22,r2
   43690:	10044b16 	blt	r2,zero,447c0 <___vfprintf_internal_r+0x1658>
   43694:	d9402917 	ldw	r5,164(sp)
   43698:	df002783 	ldbu	fp,158(sp)
   4369c:	2803bc16 	blt	r5,zero,44590 <___vfprintf_internal_r+0x1428>
   436a0:	00ffdfc4 	movi	r3,-129
   436a4:	9d84b03a 	or	r2,r19,r22
   436a8:	90e4703a 	and	r18,r18,r3
   436ac:	10017726 	beq	r2,zero,43c8c <___vfprintf_internal_r+0xb24>
   436b0:	b0038326 	beq	r22,zero,444c0 <___vfprintf_internal_r+0x1358>
   436b4:	dc402a15 	stw	r17,168(sp)
   436b8:	dc001e04 	addi	r16,sp,120
   436bc:	b023883a 	mov	r17,r22
   436c0:	402d883a 	mov	r22,r8
   436c4:	9809883a 	mov	r4,r19
   436c8:	880b883a 	mov	r5,r17
   436cc:	01800284 	movi	r6,10
   436d0:	000f883a 	mov	r7,zero
   436d4:	004cbf40 	call	4cbf4 <__umoddi3>
   436d8:	10800c04 	addi	r2,r2,48
   436dc:	843fffc4 	addi	r16,r16,-1
   436e0:	9809883a 	mov	r4,r19
   436e4:	880b883a 	mov	r5,r17
   436e8:	80800005 	stb	r2,0(r16)
   436ec:	01800284 	movi	r6,10
   436f0:	000f883a 	mov	r7,zero
   436f4:	004c67c0 	call	4c67c <__udivdi3>
   436f8:	1027883a 	mov	r19,r2
   436fc:	10c4b03a 	or	r2,r2,r3
   43700:	1823883a 	mov	r17,r3
   43704:	103fef1e 	bne	r2,zero,436c4 <__alt_data_end+0xfffc36c4>
   43708:	d8c02817 	ldw	r3,160(sp)
   4370c:	dc402a17 	ldw	r17,168(sp)
   43710:	b011883a 	mov	r8,r22
   43714:	1c07c83a 	sub	r3,r3,r16
   43718:	d8c02e15 	stw	r3,184(sp)
   4371c:	00005906 	br	43884 <___vfprintf_internal_r+0x71c>
   43720:	18c03fcc 	andi	r3,r3,255
   43724:	1806fa1e 	bne	r3,zero,45310 <___vfprintf_internal_r+0x21a8>
   43728:	9080020c 	andi	r2,r18,8
   4372c:	10048a26 	beq	r2,zero,44958 <___vfprintf_internal_r+0x17f0>
   43730:	d8c02d17 	ldw	r3,180(sp)
   43734:	d9002d17 	ldw	r4,180(sp)
   43738:	d9402d17 	ldw	r5,180(sp)
   4373c:	18c00017 	ldw	r3,0(r3)
   43740:	21000117 	ldw	r4,4(r4)
   43744:	29400204 	addi	r5,r5,8
   43748:	d8c03615 	stw	r3,216(sp)
   4374c:	d9003815 	stw	r4,224(sp)
   43750:	d9402d15 	stw	r5,180(sp)
   43754:	d9003617 	ldw	r4,216(sp)
   43758:	d9403817 	ldw	r5,224(sp)
   4375c:	da003d15 	stw	r8,244(sp)
   43760:	04000044 	movi	r16,1
   43764:	004980c0 	call	4980c <__fpclassifyd>
   43768:	da003d17 	ldw	r8,244(sp)
   4376c:	14041f1e 	bne	r2,r16,447ec <___vfprintf_internal_r+0x1684>
   43770:	d9003617 	ldw	r4,216(sp)
   43774:	d9403817 	ldw	r5,224(sp)
   43778:	000d883a 	mov	r6,zero
   4377c:	000f883a 	mov	r7,zero
   43780:	004db780 	call	4db78 <__ledf2>
   43784:	da003d17 	ldw	r8,244(sp)
   43788:	1005be16 	blt	r2,zero,44e84 <___vfprintf_internal_r+0x1d1c>
   4378c:	df002783 	ldbu	fp,158(sp)
   43790:	008011c4 	movi	r2,71
   43794:	1445330e 	bge	r2,r17,44c64 <___vfprintf_internal_r+0x1afc>
   43798:	04000174 	movhi	r16,5
   4379c:	84043c04 	addi	r16,r16,4336
   437a0:	00c000c4 	movi	r3,3
   437a4:	00bfdfc4 	movi	r2,-129
   437a8:	d8c02a15 	stw	r3,168(sp)
   437ac:	90a4703a 	and	r18,r18,r2
   437b0:	d8c02e15 	stw	r3,184(sp)
   437b4:	d8002915 	stw	zero,164(sp)
   437b8:	d8003215 	stw	zero,200(sp)
   437bc:	00003706 	br	4389c <___vfprintf_internal_r+0x734>
   437c0:	94800214 	ori	r18,r18,8
   437c4:	ac400007 	ldb	r17,0(r21)
   437c8:	003ec806 	br	432ec <__alt_data_end+0xfffc32ec>
   437cc:	18c03fcc 	andi	r3,r3,255
   437d0:	1806db1e 	bne	r3,zero,45340 <___vfprintf_internal_r+0x21d8>
   437d4:	94800414 	ori	r18,r18,16
   437d8:	9080080c 	andi	r2,r18,32
   437dc:	1002d826 	beq	r2,zero,44340 <___vfprintf_internal_r+0x11d8>
   437e0:	d9402d17 	ldw	r5,180(sp)
   437e4:	d8c02917 	ldw	r3,164(sp)
   437e8:	d8002785 	stb	zero,158(sp)
   437ec:	28800204 	addi	r2,r5,8
   437f0:	2cc00017 	ldw	r19,0(r5)
   437f4:	2d800117 	ldw	r22,4(r5)
   437f8:	18048f16 	blt	r3,zero,44a38 <___vfprintf_internal_r+0x18d0>
   437fc:	013fdfc4 	movi	r4,-129
   43800:	9d86b03a 	or	r3,r19,r22
   43804:	d8802d15 	stw	r2,180(sp)
   43808:	9124703a 	and	r18,r18,r4
   4380c:	1802d91e 	bne	r3,zero,44374 <___vfprintf_internal_r+0x120c>
   43810:	d8c02917 	ldw	r3,164(sp)
   43814:	0039883a 	mov	fp,zero
   43818:	1805c326 	beq	r3,zero,44f28 <___vfprintf_internal_r+0x1dc0>
   4381c:	0027883a 	mov	r19,zero
   43820:	002d883a 	mov	r22,zero
   43824:	dc001e04 	addi	r16,sp,120
   43828:	9806d0fa 	srli	r3,r19,3
   4382c:	b008977a 	slli	r4,r22,29
   43830:	b02cd0fa 	srli	r22,r22,3
   43834:	9cc001cc 	andi	r19,r19,7
   43838:	98800c04 	addi	r2,r19,48
   4383c:	843fffc4 	addi	r16,r16,-1
   43840:	20e6b03a 	or	r19,r4,r3
   43844:	80800005 	stb	r2,0(r16)
   43848:	9d86b03a 	or	r3,r19,r22
   4384c:	183ff61e 	bne	r3,zero,43828 <__alt_data_end+0xfffc3828>
   43850:	90c0004c 	andi	r3,r18,1
   43854:	18013b26 	beq	r3,zero,43d44 <___vfprintf_internal_r+0xbdc>
   43858:	10803fcc 	andi	r2,r2,255
   4385c:	1080201c 	xori	r2,r2,128
   43860:	10bfe004 	addi	r2,r2,-128
   43864:	00c00c04 	movi	r3,48
   43868:	10c13626 	beq	r2,r3,43d44 <___vfprintf_internal_r+0xbdc>
   4386c:	80ffffc5 	stb	r3,-1(r16)
   43870:	d8c02817 	ldw	r3,160(sp)
   43874:	80bfffc4 	addi	r2,r16,-1
   43878:	1021883a 	mov	r16,r2
   4387c:	1887c83a 	sub	r3,r3,r2
   43880:	d8c02e15 	stw	r3,184(sp)
   43884:	d8802e17 	ldw	r2,184(sp)
   43888:	d9002917 	ldw	r4,164(sp)
   4388c:	1100010e 	bge	r2,r4,43894 <___vfprintf_internal_r+0x72c>
   43890:	2005883a 	mov	r2,r4
   43894:	d8802a15 	stw	r2,168(sp)
   43898:	d8003215 	stw	zero,200(sp)
   4389c:	e7003fcc 	andi	fp,fp,255
   438a0:	e700201c 	xori	fp,fp,128
   438a4:	e73fe004 	addi	fp,fp,-128
   438a8:	e0000326 	beq	fp,zero,438b8 <___vfprintf_internal_r+0x750>
   438ac:	d8c02a17 	ldw	r3,168(sp)
   438b0:	18c00044 	addi	r3,r3,1
   438b4:	d8c02a15 	stw	r3,168(sp)
   438b8:	90c0008c 	andi	r3,r18,2
   438bc:	d8c02b15 	stw	r3,172(sp)
   438c0:	18000326 	beq	r3,zero,438d0 <___vfprintf_internal_r+0x768>
   438c4:	d8c02a17 	ldw	r3,168(sp)
   438c8:	18c00084 	addi	r3,r3,2
   438cc:	d8c02a15 	stw	r3,168(sp)
   438d0:	90c0210c 	andi	r3,r18,132
   438d4:	d8c03015 	stw	r3,192(sp)
   438d8:	1801a31e 	bne	r3,zero,43f68 <___vfprintf_internal_r+0xe00>
   438dc:	d9003117 	ldw	r4,196(sp)
   438e0:	d8c02a17 	ldw	r3,168(sp)
   438e4:	20e7c83a 	sub	r19,r4,r3
   438e8:	04c19f0e 	bge	zero,r19,43f68 <___vfprintf_internal_r+0xe00>
   438ec:	02400404 	movi	r9,16
   438f0:	d8c02017 	ldw	r3,128(sp)
   438f4:	d8801f17 	ldw	r2,124(sp)
   438f8:	4cc50d0e 	bge	r9,r19,44d30 <___vfprintf_internal_r+0x1bc8>
   438fc:	01400174 	movhi	r5,5
   43900:	29444f84 	addi	r5,r5,4414
   43904:	dc403b15 	stw	r17,236(sp)
   43908:	d9403515 	stw	r5,212(sp)
   4390c:	9823883a 	mov	r17,r19
   43910:	482d883a 	mov	r22,r9
   43914:	9027883a 	mov	r19,r18
   43918:	070001c4 	movi	fp,7
   4391c:	8025883a 	mov	r18,r16
   43920:	dc002c17 	ldw	r16,176(sp)
   43924:	00000306 	br	43934 <___vfprintf_internal_r+0x7cc>
   43928:	8c7ffc04 	addi	r17,r17,-16
   4392c:	42000204 	addi	r8,r8,8
   43930:	b440130e 	bge	r22,r17,43980 <___vfprintf_internal_r+0x818>
   43934:	01000174 	movhi	r4,5
   43938:	18c00404 	addi	r3,r3,16
   4393c:	10800044 	addi	r2,r2,1
   43940:	21044f84 	addi	r4,r4,4414
   43944:	41000015 	stw	r4,0(r8)
   43948:	45800115 	stw	r22,4(r8)
   4394c:	d8c02015 	stw	r3,128(sp)
   43950:	d8801f15 	stw	r2,124(sp)
   43954:	e0bff40e 	bge	fp,r2,43928 <__alt_data_end+0xfffc3928>
   43958:	d9801e04 	addi	r6,sp,120
   4395c:	b80b883a 	mov	r5,r23
   43960:	8009883a 	mov	r4,r16
   43964:	0049c800 	call	49c80 <__sprint_r>
   43968:	103f011e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   4396c:	8c7ffc04 	addi	r17,r17,-16
   43970:	d8c02017 	ldw	r3,128(sp)
   43974:	d8801f17 	ldw	r2,124(sp)
   43978:	da000404 	addi	r8,sp,16
   4397c:	b47fed16 	blt	r22,r17,43934 <__alt_data_end+0xfffc3934>
   43980:	9021883a 	mov	r16,r18
   43984:	9825883a 	mov	r18,r19
   43988:	8827883a 	mov	r19,r17
   4398c:	dc403b17 	ldw	r17,236(sp)
   43990:	d9403517 	ldw	r5,212(sp)
   43994:	98c7883a 	add	r3,r19,r3
   43998:	10800044 	addi	r2,r2,1
   4399c:	41400015 	stw	r5,0(r8)
   439a0:	44c00115 	stw	r19,4(r8)
   439a4:	d8c02015 	stw	r3,128(sp)
   439a8:	d8801f15 	stw	r2,124(sp)
   439ac:	010001c4 	movi	r4,7
   439b0:	2082a316 	blt	r4,r2,44440 <___vfprintf_internal_r+0x12d8>
   439b4:	df002787 	ldb	fp,158(sp)
   439b8:	42000204 	addi	r8,r8,8
   439bc:	e0000c26 	beq	fp,zero,439f0 <___vfprintf_internal_r+0x888>
   439c0:	d8801f17 	ldw	r2,124(sp)
   439c4:	d9002784 	addi	r4,sp,158
   439c8:	18c00044 	addi	r3,r3,1
   439cc:	10800044 	addi	r2,r2,1
   439d0:	41000015 	stw	r4,0(r8)
   439d4:	01000044 	movi	r4,1
   439d8:	41000115 	stw	r4,4(r8)
   439dc:	d8c02015 	stw	r3,128(sp)
   439e0:	d8801f15 	stw	r2,124(sp)
   439e4:	010001c4 	movi	r4,7
   439e8:	20823c16 	blt	r4,r2,442dc <___vfprintf_internal_r+0x1174>
   439ec:	42000204 	addi	r8,r8,8
   439f0:	d8802b17 	ldw	r2,172(sp)
   439f4:	10000c26 	beq	r2,zero,43a28 <___vfprintf_internal_r+0x8c0>
   439f8:	d8801f17 	ldw	r2,124(sp)
   439fc:	d9002704 	addi	r4,sp,156
   43a00:	18c00084 	addi	r3,r3,2
   43a04:	10800044 	addi	r2,r2,1
   43a08:	41000015 	stw	r4,0(r8)
   43a0c:	01000084 	movi	r4,2
   43a10:	41000115 	stw	r4,4(r8)
   43a14:	d8c02015 	stw	r3,128(sp)
   43a18:	d8801f15 	stw	r2,124(sp)
   43a1c:	010001c4 	movi	r4,7
   43a20:	20823616 	blt	r4,r2,442fc <___vfprintf_internal_r+0x1194>
   43a24:	42000204 	addi	r8,r8,8
   43a28:	d9003017 	ldw	r4,192(sp)
   43a2c:	00802004 	movi	r2,128
   43a30:	20819926 	beq	r4,r2,44098 <___vfprintf_internal_r+0xf30>
   43a34:	d9402917 	ldw	r5,164(sp)
   43a38:	d8802e17 	ldw	r2,184(sp)
   43a3c:	28adc83a 	sub	r22,r5,r2
   43a40:	0580310e 	bge	zero,r22,43b08 <___vfprintf_internal_r+0x9a0>
   43a44:	07000404 	movi	fp,16
   43a48:	d8801f17 	ldw	r2,124(sp)
   43a4c:	e584140e 	bge	fp,r22,44aa0 <___vfprintf_internal_r+0x1938>
   43a50:	01400174 	movhi	r5,5
   43a54:	29444b84 	addi	r5,r5,4398
   43a58:	dc402915 	stw	r17,164(sp)
   43a5c:	d9402b15 	stw	r5,172(sp)
   43a60:	b023883a 	mov	r17,r22
   43a64:	04c001c4 	movi	r19,7
   43a68:	a82d883a 	mov	r22,r21
   43a6c:	902b883a 	mov	r21,r18
   43a70:	8025883a 	mov	r18,r16
   43a74:	dc002c17 	ldw	r16,176(sp)
   43a78:	00000306 	br	43a88 <___vfprintf_internal_r+0x920>
   43a7c:	8c7ffc04 	addi	r17,r17,-16
   43a80:	42000204 	addi	r8,r8,8
   43a84:	e440110e 	bge	fp,r17,43acc <___vfprintf_internal_r+0x964>
   43a88:	18c00404 	addi	r3,r3,16
   43a8c:	10800044 	addi	r2,r2,1
   43a90:	45000015 	stw	r20,0(r8)
   43a94:	47000115 	stw	fp,4(r8)
   43a98:	d8c02015 	stw	r3,128(sp)
   43a9c:	d8801f15 	stw	r2,124(sp)
   43aa0:	98bff60e 	bge	r19,r2,43a7c <__alt_data_end+0xfffc3a7c>
   43aa4:	d9801e04 	addi	r6,sp,120
   43aa8:	b80b883a 	mov	r5,r23
   43aac:	8009883a 	mov	r4,r16
   43ab0:	0049c800 	call	49c80 <__sprint_r>
   43ab4:	103eae1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   43ab8:	8c7ffc04 	addi	r17,r17,-16
   43abc:	d8c02017 	ldw	r3,128(sp)
   43ac0:	d8801f17 	ldw	r2,124(sp)
   43ac4:	da000404 	addi	r8,sp,16
   43ac8:	e47fef16 	blt	fp,r17,43a88 <__alt_data_end+0xfffc3a88>
   43acc:	9021883a 	mov	r16,r18
   43ad0:	a825883a 	mov	r18,r21
   43ad4:	b02b883a 	mov	r21,r22
   43ad8:	882d883a 	mov	r22,r17
   43adc:	dc402917 	ldw	r17,164(sp)
   43ae0:	d9002b17 	ldw	r4,172(sp)
   43ae4:	1d87883a 	add	r3,r3,r22
   43ae8:	10800044 	addi	r2,r2,1
   43aec:	41000015 	stw	r4,0(r8)
   43af0:	45800115 	stw	r22,4(r8)
   43af4:	d8c02015 	stw	r3,128(sp)
   43af8:	d8801f15 	stw	r2,124(sp)
   43afc:	010001c4 	movi	r4,7
   43b00:	2081ee16 	blt	r4,r2,442bc <___vfprintf_internal_r+0x1154>
   43b04:	42000204 	addi	r8,r8,8
   43b08:	9080400c 	andi	r2,r18,256
   43b0c:	1001181e 	bne	r2,zero,43f70 <___vfprintf_internal_r+0xe08>
   43b10:	d9402e17 	ldw	r5,184(sp)
   43b14:	d8801f17 	ldw	r2,124(sp)
   43b18:	44000015 	stw	r16,0(r8)
   43b1c:	1947883a 	add	r3,r3,r5
   43b20:	10800044 	addi	r2,r2,1
   43b24:	41400115 	stw	r5,4(r8)
   43b28:	d8c02015 	stw	r3,128(sp)
   43b2c:	d8801f15 	stw	r2,124(sp)
   43b30:	010001c4 	movi	r4,7
   43b34:	2081d316 	blt	r4,r2,44284 <___vfprintf_internal_r+0x111c>
   43b38:	42000204 	addi	r8,r8,8
   43b3c:	9480010c 	andi	r18,r18,4
   43b40:	90003226 	beq	r18,zero,43c0c <___vfprintf_internal_r+0xaa4>
   43b44:	d9403117 	ldw	r5,196(sp)
   43b48:	d8802a17 	ldw	r2,168(sp)
   43b4c:	28a1c83a 	sub	r16,r5,r2
   43b50:	04002e0e 	bge	zero,r16,43c0c <___vfprintf_internal_r+0xaa4>
   43b54:	04400404 	movi	r17,16
   43b58:	d8801f17 	ldw	r2,124(sp)
   43b5c:	8c04a20e 	bge	r17,r16,44de8 <___vfprintf_internal_r+0x1c80>
   43b60:	01400174 	movhi	r5,5
   43b64:	29444f84 	addi	r5,r5,4414
   43b68:	d9403515 	stw	r5,212(sp)
   43b6c:	048001c4 	movi	r18,7
   43b70:	dcc02c17 	ldw	r19,176(sp)
   43b74:	00000306 	br	43b84 <___vfprintf_internal_r+0xa1c>
   43b78:	843ffc04 	addi	r16,r16,-16
   43b7c:	42000204 	addi	r8,r8,8
   43b80:	8c00130e 	bge	r17,r16,43bd0 <___vfprintf_internal_r+0xa68>
   43b84:	01000174 	movhi	r4,5
   43b88:	18c00404 	addi	r3,r3,16
   43b8c:	10800044 	addi	r2,r2,1
   43b90:	21044f84 	addi	r4,r4,4414
   43b94:	41000015 	stw	r4,0(r8)
   43b98:	44400115 	stw	r17,4(r8)
   43b9c:	d8c02015 	stw	r3,128(sp)
   43ba0:	d8801f15 	stw	r2,124(sp)
   43ba4:	90bff40e 	bge	r18,r2,43b78 <__alt_data_end+0xfffc3b78>
   43ba8:	d9801e04 	addi	r6,sp,120
   43bac:	b80b883a 	mov	r5,r23
   43bb0:	9809883a 	mov	r4,r19
   43bb4:	0049c800 	call	49c80 <__sprint_r>
   43bb8:	103e6d1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   43bbc:	843ffc04 	addi	r16,r16,-16
   43bc0:	d8c02017 	ldw	r3,128(sp)
   43bc4:	d8801f17 	ldw	r2,124(sp)
   43bc8:	da000404 	addi	r8,sp,16
   43bcc:	8c3fed16 	blt	r17,r16,43b84 <__alt_data_end+0xfffc3b84>
   43bd0:	d9403517 	ldw	r5,212(sp)
   43bd4:	1c07883a 	add	r3,r3,r16
   43bd8:	10800044 	addi	r2,r2,1
   43bdc:	41400015 	stw	r5,0(r8)
   43be0:	44000115 	stw	r16,4(r8)
   43be4:	d8c02015 	stw	r3,128(sp)
   43be8:	d8801f15 	stw	r2,124(sp)
   43bec:	010001c4 	movi	r4,7
   43bf0:	2080060e 	bge	r4,r2,43c0c <___vfprintf_internal_r+0xaa4>
   43bf4:	d9002c17 	ldw	r4,176(sp)
   43bf8:	d9801e04 	addi	r6,sp,120
   43bfc:	b80b883a 	mov	r5,r23
   43c00:	0049c800 	call	49c80 <__sprint_r>
   43c04:	103e5a1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   43c08:	d8c02017 	ldw	r3,128(sp)
   43c0c:	d8803117 	ldw	r2,196(sp)
   43c10:	d9002a17 	ldw	r4,168(sp)
   43c14:	1100010e 	bge	r2,r4,43c1c <___vfprintf_internal_r+0xab4>
   43c18:	2005883a 	mov	r2,r4
   43c1c:	d9402f17 	ldw	r5,188(sp)
   43c20:	288b883a 	add	r5,r5,r2
   43c24:	d9402f15 	stw	r5,188(sp)
   43c28:	18019e1e 	bne	r3,zero,442a4 <___vfprintf_internal_r+0x113c>
   43c2c:	a8800007 	ldb	r2,0(r21)
   43c30:	d8001f15 	stw	zero,124(sp)
   43c34:	da000404 	addi	r8,sp,16
   43c38:	103d851e 	bne	r2,zero,43250 <__alt_data_end+0xfffc3250>
   43c3c:	a821883a 	mov	r16,r21
   43c40:	003d9b06 	br	432b0 <__alt_data_end+0xfffc32b0>
   43c44:	18c03fcc 	andi	r3,r3,255
   43c48:	1805c11e 	bne	r3,zero,45350 <___vfprintf_internal_r+0x21e8>
   43c4c:	94800414 	ori	r18,r18,16
   43c50:	9080080c 	andi	r2,r18,32
   43c54:	10020c26 	beq	r2,zero,44488 <___vfprintf_internal_r+0x1320>
   43c58:	d8802d17 	ldw	r2,180(sp)
   43c5c:	d9002917 	ldw	r4,164(sp)
   43c60:	d8002785 	stb	zero,158(sp)
   43c64:	10c00204 	addi	r3,r2,8
   43c68:	14c00017 	ldw	r19,0(r2)
   43c6c:	15800117 	ldw	r22,4(r2)
   43c70:	20040f16 	blt	r4,zero,44cb0 <___vfprintf_internal_r+0x1b48>
   43c74:	013fdfc4 	movi	r4,-129
   43c78:	9d84b03a 	or	r2,r19,r22
   43c7c:	d8c02d15 	stw	r3,180(sp)
   43c80:	9124703a 	and	r18,r18,r4
   43c84:	0039883a 	mov	fp,zero
   43c88:	103e891e 	bne	r2,zero,436b0 <__alt_data_end+0xfffc36b0>
   43c8c:	d9002917 	ldw	r4,164(sp)
   43c90:	2002c11e 	bne	r4,zero,44798 <___vfprintf_internal_r+0x1630>
   43c94:	d8002915 	stw	zero,164(sp)
   43c98:	d8002e15 	stw	zero,184(sp)
   43c9c:	dc001e04 	addi	r16,sp,120
   43ca0:	003ef806 	br	43884 <__alt_data_end+0xfffc3884>
   43ca4:	18c03fcc 	andi	r3,r3,255
   43ca8:	18059d1e 	bne	r3,zero,45320 <___vfprintf_internal_r+0x21b8>
   43cac:	01400174 	movhi	r5,5
   43cb0:	29443f04 	addi	r5,r5,4348
   43cb4:	d9403915 	stw	r5,228(sp)
   43cb8:	9080080c 	andi	r2,r18,32
   43cbc:	10005226 	beq	r2,zero,43e08 <___vfprintf_internal_r+0xca0>
   43cc0:	d8802d17 	ldw	r2,180(sp)
   43cc4:	14c00017 	ldw	r19,0(r2)
   43cc8:	15800117 	ldw	r22,4(r2)
   43ccc:	10800204 	addi	r2,r2,8
   43cd0:	d8802d15 	stw	r2,180(sp)
   43cd4:	9080004c 	andi	r2,r18,1
   43cd8:	10019026 	beq	r2,zero,4431c <___vfprintf_internal_r+0x11b4>
   43cdc:	9d84b03a 	or	r2,r19,r22
   43ce0:	10036926 	beq	r2,zero,44a88 <___vfprintf_internal_r+0x1920>
   43ce4:	d8c02917 	ldw	r3,164(sp)
   43ce8:	00800c04 	movi	r2,48
   43cec:	d8802705 	stb	r2,156(sp)
   43cf0:	dc402745 	stb	r17,157(sp)
   43cf4:	d8002785 	stb	zero,158(sp)
   43cf8:	90800094 	ori	r2,r18,2
   43cfc:	18045d16 	blt	r3,zero,44e74 <___vfprintf_internal_r+0x1d0c>
   43d00:	00bfdfc4 	movi	r2,-129
   43d04:	90a4703a 	and	r18,r18,r2
   43d08:	94800094 	ori	r18,r18,2
   43d0c:	0039883a 	mov	fp,zero
   43d10:	d9003917 	ldw	r4,228(sp)
   43d14:	dc001e04 	addi	r16,sp,120
   43d18:	988003cc 	andi	r2,r19,15
   43d1c:	b006973a 	slli	r3,r22,28
   43d20:	2085883a 	add	r2,r4,r2
   43d24:	9826d13a 	srli	r19,r19,4
   43d28:	10800003 	ldbu	r2,0(r2)
   43d2c:	b02cd13a 	srli	r22,r22,4
   43d30:	843fffc4 	addi	r16,r16,-1
   43d34:	1ce6b03a 	or	r19,r3,r19
   43d38:	80800005 	stb	r2,0(r16)
   43d3c:	9d84b03a 	or	r2,r19,r22
   43d40:	103ff51e 	bne	r2,zero,43d18 <__alt_data_end+0xfffc3d18>
   43d44:	d8c02817 	ldw	r3,160(sp)
   43d48:	1c07c83a 	sub	r3,r3,r16
   43d4c:	d8c02e15 	stw	r3,184(sp)
   43d50:	003ecc06 	br	43884 <__alt_data_end+0xfffc3884>
   43d54:	18c03fcc 	andi	r3,r3,255
   43d58:	183e9f26 	beq	r3,zero,437d8 <__alt_data_end+0xfffc37d8>
   43d5c:	d9c02785 	stb	r7,158(sp)
   43d60:	003e9d06 	br	437d8 <__alt_data_end+0xfffc37d8>
   43d64:	00c00044 	movi	r3,1
   43d68:	01c00ac4 	movi	r7,43
   43d6c:	ac400007 	ldb	r17,0(r21)
   43d70:	003d5e06 	br	432ec <__alt_data_end+0xfffc32ec>
   43d74:	94800814 	ori	r18,r18,32
   43d78:	ac400007 	ldb	r17,0(r21)
   43d7c:	003d5b06 	br	432ec <__alt_data_end+0xfffc32ec>
   43d80:	d8c02d17 	ldw	r3,180(sp)
   43d84:	d8002785 	stb	zero,158(sp)
   43d88:	1c000017 	ldw	r16,0(r3)
   43d8c:	1cc00104 	addi	r19,r3,4
   43d90:	80041926 	beq	r16,zero,44df8 <___vfprintf_internal_r+0x1c90>
   43d94:	d9002917 	ldw	r4,164(sp)
   43d98:	2003d016 	blt	r4,zero,44cdc <___vfprintf_internal_r+0x1b74>
   43d9c:	200d883a 	mov	r6,r4
   43da0:	000b883a 	mov	r5,zero
   43da4:	8009883a 	mov	r4,r16
   43da8:	da003d15 	stw	r8,244(sp)
   43dac:	00484bc0 	call	484bc <memchr>
   43db0:	da003d17 	ldw	r8,244(sp)
   43db4:	10045426 	beq	r2,zero,44f08 <___vfprintf_internal_r+0x1da0>
   43db8:	1405c83a 	sub	r2,r2,r16
   43dbc:	d8802e15 	stw	r2,184(sp)
   43dc0:	1003cc16 	blt	r2,zero,44cf4 <___vfprintf_internal_r+0x1b8c>
   43dc4:	df002783 	ldbu	fp,158(sp)
   43dc8:	d8802a15 	stw	r2,168(sp)
   43dcc:	dcc02d15 	stw	r19,180(sp)
   43dd0:	d8002915 	stw	zero,164(sp)
   43dd4:	d8003215 	stw	zero,200(sp)
   43dd8:	003eb006 	br	4389c <__alt_data_end+0xfffc389c>
   43ddc:	18c03fcc 	andi	r3,r3,255
   43de0:	183f9b26 	beq	r3,zero,43c50 <__alt_data_end+0xfffc3c50>
   43de4:	d9c02785 	stb	r7,158(sp)
   43de8:	003f9906 	br	43c50 <__alt_data_end+0xfffc3c50>
   43dec:	18c03fcc 	andi	r3,r3,255
   43df0:	1805551e 	bne	r3,zero,45348 <___vfprintf_internal_r+0x21e0>
   43df4:	01400174 	movhi	r5,5
   43df8:	29444404 	addi	r5,r5,4368
   43dfc:	d9403915 	stw	r5,228(sp)
   43e00:	9080080c 	andi	r2,r18,32
   43e04:	103fae1e 	bne	r2,zero,43cc0 <__alt_data_end+0xfffc3cc0>
   43e08:	9080040c 	andi	r2,r18,16
   43e0c:	1002de26 	beq	r2,zero,44988 <___vfprintf_internal_r+0x1820>
   43e10:	d8c02d17 	ldw	r3,180(sp)
   43e14:	002d883a 	mov	r22,zero
   43e18:	1cc00017 	ldw	r19,0(r3)
   43e1c:	18c00104 	addi	r3,r3,4
   43e20:	d8c02d15 	stw	r3,180(sp)
   43e24:	003fab06 	br	43cd4 <__alt_data_end+0xfffc3cd4>
   43e28:	38803fcc 	andi	r2,r7,255
   43e2c:	1080201c 	xori	r2,r2,128
   43e30:	10bfe004 	addi	r2,r2,-128
   43e34:	1002d21e 	bne	r2,zero,44980 <___vfprintf_internal_r+0x1818>
   43e38:	00c00044 	movi	r3,1
   43e3c:	01c00804 	movi	r7,32
   43e40:	ac400007 	ldb	r17,0(r21)
   43e44:	003d2906 	br	432ec <__alt_data_end+0xfffc32ec>
   43e48:	94800054 	ori	r18,r18,1
   43e4c:	ac400007 	ldb	r17,0(r21)
   43e50:	003d2606 	br	432ec <__alt_data_end+0xfffc32ec>
   43e54:	18c03fcc 	andi	r3,r3,255
   43e58:	183e0526 	beq	r3,zero,43670 <__alt_data_end+0xfffc3670>
   43e5c:	d9c02785 	stb	r7,158(sp)
   43e60:	003e0306 	br	43670 <__alt_data_end+0xfffc3670>
   43e64:	94801014 	ori	r18,r18,64
   43e68:	ac400007 	ldb	r17,0(r21)
   43e6c:	003d1f06 	br	432ec <__alt_data_end+0xfffc32ec>
   43e70:	ac400007 	ldb	r17,0(r21)
   43e74:	8a438726 	beq	r17,r9,44c94 <___vfprintf_internal_r+0x1b2c>
   43e78:	94800414 	ori	r18,r18,16
   43e7c:	003d1b06 	br	432ec <__alt_data_end+0xfffc32ec>
   43e80:	18c03fcc 	andi	r3,r3,255
   43e84:	1805341e 	bne	r3,zero,45358 <___vfprintf_internal_r+0x21f0>
   43e88:	9080080c 	andi	r2,r18,32
   43e8c:	1002cd26 	beq	r2,zero,449c4 <___vfprintf_internal_r+0x185c>
   43e90:	d9402d17 	ldw	r5,180(sp)
   43e94:	d9002f17 	ldw	r4,188(sp)
   43e98:	28800017 	ldw	r2,0(r5)
   43e9c:	2007d7fa 	srai	r3,r4,31
   43ea0:	29400104 	addi	r5,r5,4
   43ea4:	d9402d15 	stw	r5,180(sp)
   43ea8:	11000015 	stw	r4,0(r2)
   43eac:	10c00115 	stw	r3,4(r2)
   43eb0:	003ce506 	br	43248 <__alt_data_end+0xfffc3248>
   43eb4:	d8c02d17 	ldw	r3,180(sp)
   43eb8:	d9002d17 	ldw	r4,180(sp)
   43ebc:	d8002785 	stb	zero,158(sp)
   43ec0:	18800017 	ldw	r2,0(r3)
   43ec4:	21000104 	addi	r4,r4,4
   43ec8:	00c00044 	movi	r3,1
   43ecc:	d8c02a15 	stw	r3,168(sp)
   43ed0:	d8801405 	stb	r2,80(sp)
   43ed4:	d9002d15 	stw	r4,180(sp)
   43ed8:	d8c02e15 	stw	r3,184(sp)
   43edc:	d8002915 	stw	zero,164(sp)
   43ee0:	d8003215 	stw	zero,200(sp)
   43ee4:	dc001404 	addi	r16,sp,80
   43ee8:	0039883a 	mov	fp,zero
   43eec:	003e7206 	br	438b8 <__alt_data_end+0xfffc38b8>
   43ef0:	01000174 	movhi	r4,5
   43ef4:	21044404 	addi	r4,r4,4368
   43ef8:	0039883a 	mov	fp,zero
   43efc:	d9003915 	stw	r4,228(sp)
   43f00:	04401e04 	movi	r17,120
   43f04:	003f8206 	br	43d10 <__alt_data_end+0xfffc3d10>
   43f08:	18c03fcc 	andi	r3,r3,255
   43f0c:	1805061e 	bne	r3,zero,45328 <___vfprintf_internal_r+0x21c0>
   43f10:	883d9126 	beq	r17,zero,43558 <__alt_data_end+0xfffc3558>
   43f14:	00c00044 	movi	r3,1
   43f18:	d8c02a15 	stw	r3,168(sp)
   43f1c:	dc401405 	stb	r17,80(sp)
   43f20:	d8002785 	stb	zero,158(sp)
   43f24:	003fec06 	br	43ed8 <__alt_data_end+0xfffc3ed8>
   43f28:	01400174 	movhi	r5,5
   43f2c:	29444404 	addi	r5,r5,4368
   43f30:	d9403915 	stw	r5,228(sp)
   43f34:	d8c02d15 	stw	r3,180(sp)
   43f38:	1025883a 	mov	r18,r2
   43f3c:	04401e04 	movi	r17,120
   43f40:	9d84b03a 	or	r2,r19,r22
   43f44:	1000fc1e 	bne	r2,zero,44338 <___vfprintf_internal_r+0x11d0>
   43f48:	0039883a 	mov	fp,zero
   43f4c:	00800084 	movi	r2,2
   43f50:	10803fcc 	andi	r2,r2,255
   43f54:	00c00044 	movi	r3,1
   43f58:	10c20f26 	beq	r2,r3,44798 <___vfprintf_internal_r+0x1630>
   43f5c:	00c00084 	movi	r3,2
   43f60:	10fd6326 	beq	r2,r3,434f0 <__alt_data_end+0xfffc34f0>
   43f64:	003e2d06 	br	4381c <__alt_data_end+0xfffc381c>
   43f68:	d8c02017 	ldw	r3,128(sp)
   43f6c:	003e9306 	br	439bc <__alt_data_end+0xfffc39bc>
   43f70:	00801944 	movi	r2,101
   43f74:	14407e0e 	bge	r2,r17,44170 <___vfprintf_internal_r+0x1008>
   43f78:	d9003617 	ldw	r4,216(sp)
   43f7c:	d9403817 	ldw	r5,224(sp)
   43f80:	000d883a 	mov	r6,zero
   43f84:	000f883a 	mov	r7,zero
   43f88:	d8c03c15 	stw	r3,240(sp)
   43f8c:	da003d15 	stw	r8,244(sp)
   43f90:	004da140 	call	4da14 <__eqdf2>
   43f94:	d8c03c17 	ldw	r3,240(sp)
   43f98:	da003d17 	ldw	r8,244(sp)
   43f9c:	1000f71e 	bne	r2,zero,4437c <___vfprintf_internal_r+0x1214>
   43fa0:	d8801f17 	ldw	r2,124(sp)
   43fa4:	01000174 	movhi	r4,5
   43fa8:	21044b04 	addi	r4,r4,4396
   43fac:	18c00044 	addi	r3,r3,1
   43fb0:	10800044 	addi	r2,r2,1
   43fb4:	41000015 	stw	r4,0(r8)
   43fb8:	01000044 	movi	r4,1
   43fbc:	41000115 	stw	r4,4(r8)
   43fc0:	d8c02015 	stw	r3,128(sp)
   43fc4:	d8801f15 	stw	r2,124(sp)
   43fc8:	010001c4 	movi	r4,7
   43fcc:	2082b816 	blt	r4,r2,44ab0 <___vfprintf_internal_r+0x1948>
   43fd0:	42000204 	addi	r8,r8,8
   43fd4:	d8802617 	ldw	r2,152(sp)
   43fd8:	d9403317 	ldw	r5,204(sp)
   43fdc:	11400216 	blt	r2,r5,43fe8 <___vfprintf_internal_r+0xe80>
   43fe0:	9080004c 	andi	r2,r18,1
   43fe4:	103ed526 	beq	r2,zero,43b3c <__alt_data_end+0xfffc3b3c>
   43fe8:	d8803717 	ldw	r2,220(sp)
   43fec:	d9003417 	ldw	r4,208(sp)
   43ff0:	d9403717 	ldw	r5,220(sp)
   43ff4:	1887883a 	add	r3,r3,r2
   43ff8:	d8801f17 	ldw	r2,124(sp)
   43ffc:	41000015 	stw	r4,0(r8)
   44000:	41400115 	stw	r5,4(r8)
   44004:	10800044 	addi	r2,r2,1
   44008:	d8c02015 	stw	r3,128(sp)
   4400c:	d8801f15 	stw	r2,124(sp)
   44010:	010001c4 	movi	r4,7
   44014:	20832916 	blt	r4,r2,44cbc <___vfprintf_internal_r+0x1b54>
   44018:	42000204 	addi	r8,r8,8
   4401c:	d8803317 	ldw	r2,204(sp)
   44020:	143fffc4 	addi	r16,r2,-1
   44024:	043ec50e 	bge	zero,r16,43b3c <__alt_data_end+0xfffc3b3c>
   44028:	04400404 	movi	r17,16
   4402c:	d8801f17 	ldw	r2,124(sp)
   44030:	8c00880e 	bge	r17,r16,44254 <___vfprintf_internal_r+0x10ec>
   44034:	01400174 	movhi	r5,5
   44038:	29444b84 	addi	r5,r5,4398
   4403c:	d9402b15 	stw	r5,172(sp)
   44040:	058001c4 	movi	r22,7
   44044:	dcc02c17 	ldw	r19,176(sp)
   44048:	00000306 	br	44058 <___vfprintf_internal_r+0xef0>
   4404c:	42000204 	addi	r8,r8,8
   44050:	843ffc04 	addi	r16,r16,-16
   44054:	8c00820e 	bge	r17,r16,44260 <___vfprintf_internal_r+0x10f8>
   44058:	18c00404 	addi	r3,r3,16
   4405c:	10800044 	addi	r2,r2,1
   44060:	45000015 	stw	r20,0(r8)
   44064:	44400115 	stw	r17,4(r8)
   44068:	d8c02015 	stw	r3,128(sp)
   4406c:	d8801f15 	stw	r2,124(sp)
   44070:	b0bff60e 	bge	r22,r2,4404c <__alt_data_end+0xfffc404c>
   44074:	d9801e04 	addi	r6,sp,120
   44078:	b80b883a 	mov	r5,r23
   4407c:	9809883a 	mov	r4,r19
   44080:	0049c800 	call	49c80 <__sprint_r>
   44084:	103d3a1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44088:	d8c02017 	ldw	r3,128(sp)
   4408c:	d8801f17 	ldw	r2,124(sp)
   44090:	da000404 	addi	r8,sp,16
   44094:	003fee06 	br	44050 <__alt_data_end+0xfffc4050>
   44098:	d9403117 	ldw	r5,196(sp)
   4409c:	d8802a17 	ldw	r2,168(sp)
   440a0:	28adc83a 	sub	r22,r5,r2
   440a4:	05be630e 	bge	zero,r22,43a34 <__alt_data_end+0xfffc3a34>
   440a8:	07000404 	movi	fp,16
   440ac:	d8801f17 	ldw	r2,124(sp)
   440b0:	e5838f0e 	bge	fp,r22,44ef0 <___vfprintf_internal_r+0x1d88>
   440b4:	01400174 	movhi	r5,5
   440b8:	29444b84 	addi	r5,r5,4398
   440bc:	dc403015 	stw	r17,192(sp)
   440c0:	d9402b15 	stw	r5,172(sp)
   440c4:	b023883a 	mov	r17,r22
   440c8:	04c001c4 	movi	r19,7
   440cc:	a82d883a 	mov	r22,r21
   440d0:	902b883a 	mov	r21,r18
   440d4:	8025883a 	mov	r18,r16
   440d8:	dc002c17 	ldw	r16,176(sp)
   440dc:	00000306 	br	440ec <___vfprintf_internal_r+0xf84>
   440e0:	8c7ffc04 	addi	r17,r17,-16
   440e4:	42000204 	addi	r8,r8,8
   440e8:	e440110e 	bge	fp,r17,44130 <___vfprintf_internal_r+0xfc8>
   440ec:	18c00404 	addi	r3,r3,16
   440f0:	10800044 	addi	r2,r2,1
   440f4:	45000015 	stw	r20,0(r8)
   440f8:	47000115 	stw	fp,4(r8)
   440fc:	d8c02015 	stw	r3,128(sp)
   44100:	d8801f15 	stw	r2,124(sp)
   44104:	98bff60e 	bge	r19,r2,440e0 <__alt_data_end+0xfffc40e0>
   44108:	d9801e04 	addi	r6,sp,120
   4410c:	b80b883a 	mov	r5,r23
   44110:	8009883a 	mov	r4,r16
   44114:	0049c800 	call	49c80 <__sprint_r>
   44118:	103d151e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   4411c:	8c7ffc04 	addi	r17,r17,-16
   44120:	d8c02017 	ldw	r3,128(sp)
   44124:	d8801f17 	ldw	r2,124(sp)
   44128:	da000404 	addi	r8,sp,16
   4412c:	e47fef16 	blt	fp,r17,440ec <__alt_data_end+0xfffc40ec>
   44130:	9021883a 	mov	r16,r18
   44134:	a825883a 	mov	r18,r21
   44138:	b02b883a 	mov	r21,r22
   4413c:	882d883a 	mov	r22,r17
   44140:	dc403017 	ldw	r17,192(sp)
   44144:	d9002b17 	ldw	r4,172(sp)
   44148:	1d87883a 	add	r3,r3,r22
   4414c:	10800044 	addi	r2,r2,1
   44150:	41000015 	stw	r4,0(r8)
   44154:	45800115 	stw	r22,4(r8)
   44158:	d8c02015 	stw	r3,128(sp)
   4415c:	d8801f15 	stw	r2,124(sp)
   44160:	010001c4 	movi	r4,7
   44164:	20818e16 	blt	r4,r2,447a0 <___vfprintf_internal_r+0x1638>
   44168:	42000204 	addi	r8,r8,8
   4416c:	003e3106 	br	43a34 <__alt_data_end+0xfffc3a34>
   44170:	d9403317 	ldw	r5,204(sp)
   44174:	00800044 	movi	r2,1
   44178:	18c00044 	addi	r3,r3,1
   4417c:	1141530e 	bge	r2,r5,446cc <___vfprintf_internal_r+0x1564>
   44180:	dc401f17 	ldw	r17,124(sp)
   44184:	00800044 	movi	r2,1
   44188:	40800115 	stw	r2,4(r8)
   4418c:	8c400044 	addi	r17,r17,1
   44190:	44000015 	stw	r16,0(r8)
   44194:	d8c02015 	stw	r3,128(sp)
   44198:	dc401f15 	stw	r17,124(sp)
   4419c:	008001c4 	movi	r2,7
   441a0:	14416b16 	blt	r2,r17,44750 <___vfprintf_internal_r+0x15e8>
   441a4:	42000204 	addi	r8,r8,8
   441a8:	d8803717 	ldw	r2,220(sp)
   441ac:	d9003417 	ldw	r4,208(sp)
   441b0:	8c400044 	addi	r17,r17,1
   441b4:	10c7883a 	add	r3,r2,r3
   441b8:	40800115 	stw	r2,4(r8)
   441bc:	41000015 	stw	r4,0(r8)
   441c0:	d8c02015 	stw	r3,128(sp)
   441c4:	dc401f15 	stw	r17,124(sp)
   441c8:	008001c4 	movi	r2,7
   441cc:	14416916 	blt	r2,r17,44774 <___vfprintf_internal_r+0x160c>
   441d0:	45800204 	addi	r22,r8,8
   441d4:	d9003617 	ldw	r4,216(sp)
   441d8:	d9403817 	ldw	r5,224(sp)
   441dc:	000d883a 	mov	r6,zero
   441e0:	000f883a 	mov	r7,zero
   441e4:	d8c03c15 	stw	r3,240(sp)
   441e8:	004da140 	call	4da14 <__eqdf2>
   441ec:	d8c03c17 	ldw	r3,240(sp)
   441f0:	1000bc26 	beq	r2,zero,444e4 <___vfprintf_internal_r+0x137c>
   441f4:	d9403317 	ldw	r5,204(sp)
   441f8:	84000044 	addi	r16,r16,1
   441fc:	8c400044 	addi	r17,r17,1
   44200:	28bfffc4 	addi	r2,r5,-1
   44204:	1887883a 	add	r3,r3,r2
   44208:	b0800115 	stw	r2,4(r22)
   4420c:	b4000015 	stw	r16,0(r22)
   44210:	d8c02015 	stw	r3,128(sp)
   44214:	dc401f15 	stw	r17,124(sp)
   44218:	008001c4 	movi	r2,7
   4421c:	14414316 	blt	r2,r17,4472c <___vfprintf_internal_r+0x15c4>
   44220:	b5800204 	addi	r22,r22,8
   44224:	d9003a17 	ldw	r4,232(sp)
   44228:	df0022c4 	addi	fp,sp,139
   4422c:	8c400044 	addi	r17,r17,1
   44230:	20c7883a 	add	r3,r4,r3
   44234:	b7000015 	stw	fp,0(r22)
   44238:	b1000115 	stw	r4,4(r22)
   4423c:	d8c02015 	stw	r3,128(sp)
   44240:	dc401f15 	stw	r17,124(sp)
   44244:	008001c4 	movi	r2,7
   44248:	14400e16 	blt	r2,r17,44284 <___vfprintf_internal_r+0x111c>
   4424c:	b2000204 	addi	r8,r22,8
   44250:	003e3a06 	br	43b3c <__alt_data_end+0xfffc3b3c>
   44254:	01000174 	movhi	r4,5
   44258:	21044b84 	addi	r4,r4,4398
   4425c:	d9002b15 	stw	r4,172(sp)
   44260:	d9002b17 	ldw	r4,172(sp)
   44264:	1c07883a 	add	r3,r3,r16
   44268:	44000115 	stw	r16,4(r8)
   4426c:	41000015 	stw	r4,0(r8)
   44270:	10800044 	addi	r2,r2,1
   44274:	d8c02015 	stw	r3,128(sp)
   44278:	d8801f15 	stw	r2,124(sp)
   4427c:	010001c4 	movi	r4,7
   44280:	20be2d0e 	bge	r4,r2,43b38 <__alt_data_end+0xfffc3b38>
   44284:	d9002c17 	ldw	r4,176(sp)
   44288:	d9801e04 	addi	r6,sp,120
   4428c:	b80b883a 	mov	r5,r23
   44290:	0049c800 	call	49c80 <__sprint_r>
   44294:	103cb61e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44298:	d8c02017 	ldw	r3,128(sp)
   4429c:	da000404 	addi	r8,sp,16
   442a0:	003e2606 	br	43b3c <__alt_data_end+0xfffc3b3c>
   442a4:	d9002c17 	ldw	r4,176(sp)
   442a8:	d9801e04 	addi	r6,sp,120
   442ac:	b80b883a 	mov	r5,r23
   442b0:	0049c800 	call	49c80 <__sprint_r>
   442b4:	103e5d26 	beq	r2,zero,43c2c <__alt_data_end+0xfffc3c2c>
   442b8:	003cad06 	br	43570 <__alt_data_end+0xfffc3570>
   442bc:	d9002c17 	ldw	r4,176(sp)
   442c0:	d9801e04 	addi	r6,sp,120
   442c4:	b80b883a 	mov	r5,r23
   442c8:	0049c800 	call	49c80 <__sprint_r>
   442cc:	103ca81e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   442d0:	d8c02017 	ldw	r3,128(sp)
   442d4:	da000404 	addi	r8,sp,16
   442d8:	003e0b06 	br	43b08 <__alt_data_end+0xfffc3b08>
   442dc:	d9002c17 	ldw	r4,176(sp)
   442e0:	d9801e04 	addi	r6,sp,120
   442e4:	b80b883a 	mov	r5,r23
   442e8:	0049c800 	call	49c80 <__sprint_r>
   442ec:	103ca01e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   442f0:	d8c02017 	ldw	r3,128(sp)
   442f4:	da000404 	addi	r8,sp,16
   442f8:	003dbd06 	br	439f0 <__alt_data_end+0xfffc39f0>
   442fc:	d9002c17 	ldw	r4,176(sp)
   44300:	d9801e04 	addi	r6,sp,120
   44304:	b80b883a 	mov	r5,r23
   44308:	0049c800 	call	49c80 <__sprint_r>
   4430c:	103c981e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44310:	d8c02017 	ldw	r3,128(sp)
   44314:	da000404 	addi	r8,sp,16
   44318:	003dc306 	br	43a28 <__alt_data_end+0xfffc3a28>
   4431c:	d8802917 	ldw	r2,164(sp)
   44320:	d8002785 	stb	zero,158(sp)
   44324:	103f0616 	blt	r2,zero,43f40 <__alt_data_end+0xfffc3f40>
   44328:	00ffdfc4 	movi	r3,-129
   4432c:	9d84b03a 	or	r2,r19,r22
   44330:	90e4703a 	and	r18,r18,r3
   44334:	103c6b26 	beq	r2,zero,434e4 <__alt_data_end+0xfffc34e4>
   44338:	0039883a 	mov	fp,zero
   4433c:	003e7406 	br	43d10 <__alt_data_end+0xfffc3d10>
   44340:	9080040c 	andi	r2,r18,16
   44344:	1001b326 	beq	r2,zero,44a14 <___vfprintf_internal_r+0x18ac>
   44348:	d9002d17 	ldw	r4,180(sp)
   4434c:	d9402917 	ldw	r5,164(sp)
   44350:	d8002785 	stb	zero,158(sp)
   44354:	20800104 	addi	r2,r4,4
   44358:	24c00017 	ldw	r19,0(r4)
   4435c:	002d883a 	mov	r22,zero
   44360:	2801b516 	blt	r5,zero,44a38 <___vfprintf_internal_r+0x18d0>
   44364:	00ffdfc4 	movi	r3,-129
   44368:	d8802d15 	stw	r2,180(sp)
   4436c:	90e4703a 	and	r18,r18,r3
   44370:	983d2726 	beq	r19,zero,43810 <__alt_data_end+0xfffc3810>
   44374:	0039883a 	mov	fp,zero
   44378:	003d2a06 	br	43824 <__alt_data_end+0xfffc3824>
   4437c:	dc402617 	ldw	r17,152(sp)
   44380:	0441d30e 	bge	zero,r17,44ad0 <___vfprintf_internal_r+0x1968>
   44384:	dc403217 	ldw	r17,200(sp)
   44388:	d8803317 	ldw	r2,204(sp)
   4438c:	1440010e 	bge	r2,r17,44394 <___vfprintf_internal_r+0x122c>
   44390:	1023883a 	mov	r17,r2
   44394:	04400a0e 	bge	zero,r17,443c0 <___vfprintf_internal_r+0x1258>
   44398:	d8801f17 	ldw	r2,124(sp)
   4439c:	1c47883a 	add	r3,r3,r17
   443a0:	44000015 	stw	r16,0(r8)
   443a4:	10800044 	addi	r2,r2,1
   443a8:	44400115 	stw	r17,4(r8)
   443ac:	d8c02015 	stw	r3,128(sp)
   443b0:	d8801f15 	stw	r2,124(sp)
   443b4:	010001c4 	movi	r4,7
   443b8:	20826516 	blt	r4,r2,44d50 <___vfprintf_internal_r+0x1be8>
   443bc:	42000204 	addi	r8,r8,8
   443c0:	88026116 	blt	r17,zero,44d48 <___vfprintf_internal_r+0x1be0>
   443c4:	d9003217 	ldw	r4,200(sp)
   443c8:	2463c83a 	sub	r17,r4,r17
   443cc:	04407b0e 	bge	zero,r17,445bc <___vfprintf_internal_r+0x1454>
   443d0:	05800404 	movi	r22,16
   443d4:	d8801f17 	ldw	r2,124(sp)
   443d8:	b4419d0e 	bge	r22,r17,44a50 <___vfprintf_internal_r+0x18e8>
   443dc:	01000174 	movhi	r4,5
   443e0:	21044b84 	addi	r4,r4,4398
   443e4:	d9002b15 	stw	r4,172(sp)
   443e8:	070001c4 	movi	fp,7
   443ec:	dcc02c17 	ldw	r19,176(sp)
   443f0:	00000306 	br	44400 <___vfprintf_internal_r+0x1298>
   443f4:	42000204 	addi	r8,r8,8
   443f8:	8c7ffc04 	addi	r17,r17,-16
   443fc:	b441970e 	bge	r22,r17,44a5c <___vfprintf_internal_r+0x18f4>
   44400:	18c00404 	addi	r3,r3,16
   44404:	10800044 	addi	r2,r2,1
   44408:	45000015 	stw	r20,0(r8)
   4440c:	45800115 	stw	r22,4(r8)
   44410:	d8c02015 	stw	r3,128(sp)
   44414:	d8801f15 	stw	r2,124(sp)
   44418:	e0bff60e 	bge	fp,r2,443f4 <__alt_data_end+0xfffc43f4>
   4441c:	d9801e04 	addi	r6,sp,120
   44420:	b80b883a 	mov	r5,r23
   44424:	9809883a 	mov	r4,r19
   44428:	0049c800 	call	49c80 <__sprint_r>
   4442c:	103c501e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44430:	d8c02017 	ldw	r3,128(sp)
   44434:	d8801f17 	ldw	r2,124(sp)
   44438:	da000404 	addi	r8,sp,16
   4443c:	003fee06 	br	443f8 <__alt_data_end+0xfffc43f8>
   44440:	d9002c17 	ldw	r4,176(sp)
   44444:	d9801e04 	addi	r6,sp,120
   44448:	b80b883a 	mov	r5,r23
   4444c:	0049c800 	call	49c80 <__sprint_r>
   44450:	103c471e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44454:	d8c02017 	ldw	r3,128(sp)
   44458:	df002787 	ldb	fp,158(sp)
   4445c:	da000404 	addi	r8,sp,16
   44460:	003d5606 	br	439bc <__alt_data_end+0xfffc39bc>
   44464:	9080040c 	andi	r2,r18,16
   44468:	10016126 	beq	r2,zero,449f0 <___vfprintf_internal_r+0x1888>
   4446c:	d8802d17 	ldw	r2,180(sp)
   44470:	14c00017 	ldw	r19,0(r2)
   44474:	10800104 	addi	r2,r2,4
   44478:	d8802d15 	stw	r2,180(sp)
   4447c:	982dd7fa 	srai	r22,r19,31
   44480:	b005883a 	mov	r2,r22
   44484:	003c8206 	br	43690 <__alt_data_end+0xfffc3690>
   44488:	9080040c 	andi	r2,r18,16
   4448c:	10003526 	beq	r2,zero,44564 <___vfprintf_internal_r+0x13fc>
   44490:	d9402d17 	ldw	r5,180(sp)
   44494:	d8c02917 	ldw	r3,164(sp)
   44498:	d8002785 	stb	zero,158(sp)
   4449c:	28800104 	addi	r2,r5,4
   444a0:	2cc00017 	ldw	r19,0(r5)
   444a4:	002d883a 	mov	r22,zero
   444a8:	18003716 	blt	r3,zero,44588 <___vfprintf_internal_r+0x1420>
   444ac:	00ffdfc4 	movi	r3,-129
   444b0:	d8802d15 	stw	r2,180(sp)
   444b4:	90e4703a 	and	r18,r18,r3
   444b8:	0039883a 	mov	fp,zero
   444bc:	983df326 	beq	r19,zero,43c8c <__alt_data_end+0xfffc3c8c>
   444c0:	00800244 	movi	r2,9
   444c4:	14fc7b36 	bltu	r2,r19,436b4 <__alt_data_end+0xfffc36b4>
   444c8:	d8c02817 	ldw	r3,160(sp)
   444cc:	dc001dc4 	addi	r16,sp,119
   444d0:	9cc00c04 	addi	r19,r19,48
   444d4:	1c07c83a 	sub	r3,r3,r16
   444d8:	dcc01dc5 	stb	r19,119(sp)
   444dc:	d8c02e15 	stw	r3,184(sp)
   444e0:	003ce806 	br	43884 <__alt_data_end+0xfffc3884>
   444e4:	d8803317 	ldw	r2,204(sp)
   444e8:	143fffc4 	addi	r16,r2,-1
   444ec:	043f4d0e 	bge	zero,r16,44224 <__alt_data_end+0xfffc4224>
   444f0:	07000404 	movi	fp,16
   444f4:	e400810e 	bge	fp,r16,446fc <___vfprintf_internal_r+0x1594>
   444f8:	01400174 	movhi	r5,5
   444fc:	29444b84 	addi	r5,r5,4398
   44500:	d9402b15 	stw	r5,172(sp)
   44504:	01c001c4 	movi	r7,7
   44508:	dcc02c17 	ldw	r19,176(sp)
   4450c:	00000306 	br	4451c <___vfprintf_internal_r+0x13b4>
   44510:	b5800204 	addi	r22,r22,8
   44514:	843ffc04 	addi	r16,r16,-16
   44518:	e4007b0e 	bge	fp,r16,44708 <___vfprintf_internal_r+0x15a0>
   4451c:	18c00404 	addi	r3,r3,16
   44520:	8c400044 	addi	r17,r17,1
   44524:	b5000015 	stw	r20,0(r22)
   44528:	b7000115 	stw	fp,4(r22)
   4452c:	d8c02015 	stw	r3,128(sp)
   44530:	dc401f15 	stw	r17,124(sp)
   44534:	3c7ff60e 	bge	r7,r17,44510 <__alt_data_end+0xfffc4510>
   44538:	d9801e04 	addi	r6,sp,120
   4453c:	b80b883a 	mov	r5,r23
   44540:	9809883a 	mov	r4,r19
   44544:	d9c03c15 	stw	r7,240(sp)
   44548:	0049c800 	call	49c80 <__sprint_r>
   4454c:	d9c03c17 	ldw	r7,240(sp)
   44550:	103c071e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44554:	d8c02017 	ldw	r3,128(sp)
   44558:	dc401f17 	ldw	r17,124(sp)
   4455c:	dd800404 	addi	r22,sp,16
   44560:	003fec06 	br	44514 <__alt_data_end+0xfffc4514>
   44564:	9080100c 	andi	r2,r18,64
   44568:	d8002785 	stb	zero,158(sp)
   4456c:	10010e26 	beq	r2,zero,449a8 <___vfprintf_internal_r+0x1840>
   44570:	d9002d17 	ldw	r4,180(sp)
   44574:	d9402917 	ldw	r5,164(sp)
   44578:	002d883a 	mov	r22,zero
   4457c:	20800104 	addi	r2,r4,4
   44580:	24c0000b 	ldhu	r19,0(r4)
   44584:	283fc90e 	bge	r5,zero,444ac <__alt_data_end+0xfffc44ac>
   44588:	d8802d15 	stw	r2,180(sp)
   4458c:	0039883a 	mov	fp,zero
   44590:	9d84b03a 	or	r2,r19,r22
   44594:	103c461e 	bne	r2,zero,436b0 <__alt_data_end+0xfffc36b0>
   44598:	00800044 	movi	r2,1
   4459c:	003e6c06 	br	43f50 <__alt_data_end+0xfffc3f50>
   445a0:	d9002c17 	ldw	r4,176(sp)
   445a4:	d9801e04 	addi	r6,sp,120
   445a8:	b80b883a 	mov	r5,r23
   445ac:	0049c800 	call	49c80 <__sprint_r>
   445b0:	103bef1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   445b4:	d8c02017 	ldw	r3,128(sp)
   445b8:	da000404 	addi	r8,sp,16
   445bc:	d9003217 	ldw	r4,200(sp)
   445c0:	d8802617 	ldw	r2,152(sp)
   445c4:	d9403317 	ldw	r5,204(sp)
   445c8:	8123883a 	add	r17,r16,r4
   445cc:	11400216 	blt	r2,r5,445d8 <___vfprintf_internal_r+0x1470>
   445d0:	9100004c 	andi	r4,r18,1
   445d4:	20000d26 	beq	r4,zero,4460c <___vfprintf_internal_r+0x14a4>
   445d8:	d9003717 	ldw	r4,220(sp)
   445dc:	d9403417 	ldw	r5,208(sp)
   445e0:	1907883a 	add	r3,r3,r4
   445e4:	d9001f17 	ldw	r4,124(sp)
   445e8:	41400015 	stw	r5,0(r8)
   445ec:	d9403717 	ldw	r5,220(sp)
   445f0:	21000044 	addi	r4,r4,1
   445f4:	d8c02015 	stw	r3,128(sp)
   445f8:	41400115 	stw	r5,4(r8)
   445fc:	d9001f15 	stw	r4,124(sp)
   44600:	014001c4 	movi	r5,7
   44604:	2901e816 	blt	r5,r4,44da8 <___vfprintf_internal_r+0x1c40>
   44608:	42000204 	addi	r8,r8,8
   4460c:	d9003317 	ldw	r4,204(sp)
   44610:	8121883a 	add	r16,r16,r4
   44614:	2085c83a 	sub	r2,r4,r2
   44618:	8461c83a 	sub	r16,r16,r17
   4461c:	1400010e 	bge	r2,r16,44624 <___vfprintf_internal_r+0x14bc>
   44620:	1021883a 	mov	r16,r2
   44624:	04000a0e 	bge	zero,r16,44650 <___vfprintf_internal_r+0x14e8>
   44628:	d9001f17 	ldw	r4,124(sp)
   4462c:	1c07883a 	add	r3,r3,r16
   44630:	44400015 	stw	r17,0(r8)
   44634:	21000044 	addi	r4,r4,1
   44638:	44000115 	stw	r16,4(r8)
   4463c:	d8c02015 	stw	r3,128(sp)
   44640:	d9001f15 	stw	r4,124(sp)
   44644:	014001c4 	movi	r5,7
   44648:	2901fb16 	blt	r5,r4,44e38 <___vfprintf_internal_r+0x1cd0>
   4464c:	42000204 	addi	r8,r8,8
   44650:	8001f716 	blt	r16,zero,44e30 <___vfprintf_internal_r+0x1cc8>
   44654:	1421c83a 	sub	r16,r2,r16
   44658:	043d380e 	bge	zero,r16,43b3c <__alt_data_end+0xfffc3b3c>
   4465c:	04400404 	movi	r17,16
   44660:	d8801f17 	ldw	r2,124(sp)
   44664:	8c3efb0e 	bge	r17,r16,44254 <__alt_data_end+0xfffc4254>
   44668:	01400174 	movhi	r5,5
   4466c:	29444b84 	addi	r5,r5,4398
   44670:	d9402b15 	stw	r5,172(sp)
   44674:	058001c4 	movi	r22,7
   44678:	dcc02c17 	ldw	r19,176(sp)
   4467c:	00000306 	br	4468c <___vfprintf_internal_r+0x1524>
   44680:	42000204 	addi	r8,r8,8
   44684:	843ffc04 	addi	r16,r16,-16
   44688:	8c3ef50e 	bge	r17,r16,44260 <__alt_data_end+0xfffc4260>
   4468c:	18c00404 	addi	r3,r3,16
   44690:	10800044 	addi	r2,r2,1
   44694:	45000015 	stw	r20,0(r8)
   44698:	44400115 	stw	r17,4(r8)
   4469c:	d8c02015 	stw	r3,128(sp)
   446a0:	d8801f15 	stw	r2,124(sp)
   446a4:	b0bff60e 	bge	r22,r2,44680 <__alt_data_end+0xfffc4680>
   446a8:	d9801e04 	addi	r6,sp,120
   446ac:	b80b883a 	mov	r5,r23
   446b0:	9809883a 	mov	r4,r19
   446b4:	0049c800 	call	49c80 <__sprint_r>
   446b8:	103bad1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   446bc:	d8c02017 	ldw	r3,128(sp)
   446c0:	d8801f17 	ldw	r2,124(sp)
   446c4:	da000404 	addi	r8,sp,16
   446c8:	003fee06 	br	44684 <__alt_data_end+0xfffc4684>
   446cc:	9088703a 	and	r4,r18,r2
   446d0:	203eab1e 	bne	r4,zero,44180 <__alt_data_end+0xfffc4180>
   446d4:	dc401f17 	ldw	r17,124(sp)
   446d8:	40800115 	stw	r2,4(r8)
   446dc:	44000015 	stw	r16,0(r8)
   446e0:	8c400044 	addi	r17,r17,1
   446e4:	d8c02015 	stw	r3,128(sp)
   446e8:	dc401f15 	stw	r17,124(sp)
   446ec:	008001c4 	movi	r2,7
   446f0:	14400e16 	blt	r2,r17,4472c <___vfprintf_internal_r+0x15c4>
   446f4:	45800204 	addi	r22,r8,8
   446f8:	003eca06 	br	44224 <__alt_data_end+0xfffc4224>
   446fc:	01000174 	movhi	r4,5
   44700:	21044b84 	addi	r4,r4,4398
   44704:	d9002b15 	stw	r4,172(sp)
   44708:	d8802b17 	ldw	r2,172(sp)
   4470c:	1c07883a 	add	r3,r3,r16
   44710:	8c400044 	addi	r17,r17,1
   44714:	b0800015 	stw	r2,0(r22)
   44718:	b4000115 	stw	r16,4(r22)
   4471c:	d8c02015 	stw	r3,128(sp)
   44720:	dc401f15 	stw	r17,124(sp)
   44724:	008001c4 	movi	r2,7
   44728:	147ebd0e 	bge	r2,r17,44220 <__alt_data_end+0xfffc4220>
   4472c:	d9002c17 	ldw	r4,176(sp)
   44730:	d9801e04 	addi	r6,sp,120
   44734:	b80b883a 	mov	r5,r23
   44738:	0049c800 	call	49c80 <__sprint_r>
   4473c:	103b8c1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44740:	d8c02017 	ldw	r3,128(sp)
   44744:	dc401f17 	ldw	r17,124(sp)
   44748:	dd800404 	addi	r22,sp,16
   4474c:	003eb506 	br	44224 <__alt_data_end+0xfffc4224>
   44750:	d9002c17 	ldw	r4,176(sp)
   44754:	d9801e04 	addi	r6,sp,120
   44758:	b80b883a 	mov	r5,r23
   4475c:	0049c800 	call	49c80 <__sprint_r>
   44760:	103b831e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44764:	d8c02017 	ldw	r3,128(sp)
   44768:	dc401f17 	ldw	r17,124(sp)
   4476c:	da000404 	addi	r8,sp,16
   44770:	003e8d06 	br	441a8 <__alt_data_end+0xfffc41a8>
   44774:	d9002c17 	ldw	r4,176(sp)
   44778:	d9801e04 	addi	r6,sp,120
   4477c:	b80b883a 	mov	r5,r23
   44780:	0049c800 	call	49c80 <__sprint_r>
   44784:	103b7a1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44788:	d8c02017 	ldw	r3,128(sp)
   4478c:	dc401f17 	ldw	r17,124(sp)
   44790:	dd800404 	addi	r22,sp,16
   44794:	003e8f06 	br	441d4 <__alt_data_end+0xfffc41d4>
   44798:	0027883a 	mov	r19,zero
   4479c:	003f4a06 	br	444c8 <__alt_data_end+0xfffc44c8>
   447a0:	d9002c17 	ldw	r4,176(sp)
   447a4:	d9801e04 	addi	r6,sp,120
   447a8:	b80b883a 	mov	r5,r23
   447ac:	0049c800 	call	49c80 <__sprint_r>
   447b0:	103b6f1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   447b4:	d8c02017 	ldw	r3,128(sp)
   447b8:	da000404 	addi	r8,sp,16
   447bc:	003c9d06 	br	43a34 <__alt_data_end+0xfffc3a34>
   447c0:	04e7c83a 	sub	r19,zero,r19
   447c4:	9804c03a 	cmpne	r2,r19,zero
   447c8:	05adc83a 	sub	r22,zero,r22
   447cc:	b0adc83a 	sub	r22,r22,r2
   447d0:	d8802917 	ldw	r2,164(sp)
   447d4:	07000b44 	movi	fp,45
   447d8:	df002785 	stb	fp,158(sp)
   447dc:	10017b16 	blt	r2,zero,44dcc <___vfprintf_internal_r+0x1c64>
   447e0:	00bfdfc4 	movi	r2,-129
   447e4:	90a4703a 	and	r18,r18,r2
   447e8:	003bb106 	br	436b0 <__alt_data_end+0xfffc36b0>
   447ec:	d9003617 	ldw	r4,216(sp)
   447f0:	d9403817 	ldw	r5,224(sp)
   447f4:	da003d15 	stw	r8,244(sp)
   447f8:	004980c0 	call	4980c <__fpclassifyd>
   447fc:	da003d17 	ldw	r8,244(sp)
   44800:	1000f026 	beq	r2,zero,44bc4 <___vfprintf_internal_r+0x1a5c>
   44804:	d9002917 	ldw	r4,164(sp)
   44808:	05bff7c4 	movi	r22,-33
   4480c:	00bfffc4 	movi	r2,-1
   44810:	8dac703a 	and	r22,r17,r22
   44814:	20820026 	beq	r4,r2,45018 <___vfprintf_internal_r+0x1eb0>
   44818:	008011c4 	movi	r2,71
   4481c:	b081f726 	beq	r22,r2,44ffc <___vfprintf_internal_r+0x1e94>
   44820:	d9003817 	ldw	r4,224(sp)
   44824:	90c04014 	ori	r3,r18,256
   44828:	d8c02b15 	stw	r3,172(sp)
   4482c:	20021516 	blt	r4,zero,45084 <___vfprintf_internal_r+0x1f1c>
   44830:	dcc03817 	ldw	r19,224(sp)
   44834:	d8002a05 	stb	zero,168(sp)
   44838:	00801984 	movi	r2,102
   4483c:	8881f926 	beq	r17,r2,45024 <___vfprintf_internal_r+0x1ebc>
   44840:	00801184 	movi	r2,70
   44844:	88821c26 	beq	r17,r2,450b8 <___vfprintf_internal_r+0x1f50>
   44848:	00801144 	movi	r2,69
   4484c:	b081ef26 	beq	r22,r2,4500c <___vfprintf_internal_r+0x1ea4>
   44850:	d8c02917 	ldw	r3,164(sp)
   44854:	d8802104 	addi	r2,sp,132
   44858:	d8800315 	stw	r2,12(sp)
   4485c:	d9403617 	ldw	r5,216(sp)
   44860:	d8802504 	addi	r2,sp,148
   44864:	d9002c17 	ldw	r4,176(sp)
   44868:	d8800215 	stw	r2,8(sp)
   4486c:	d8802604 	addi	r2,sp,152
   44870:	d8c00015 	stw	r3,0(sp)
   44874:	d8800115 	stw	r2,4(sp)
   44878:	01c00084 	movi	r7,2
   4487c:	980d883a 	mov	r6,r19
   44880:	d8c03c15 	stw	r3,240(sp)
   44884:	da003d15 	stw	r8,244(sp)
   44888:	004578c0 	call	4578c <_dtoa_r>
   4488c:	1021883a 	mov	r16,r2
   44890:	008019c4 	movi	r2,103
   44894:	d8c03c17 	ldw	r3,240(sp)
   44898:	da003d17 	ldw	r8,244(sp)
   4489c:	88817126 	beq	r17,r2,44e64 <___vfprintf_internal_r+0x1cfc>
   448a0:	008011c4 	movi	r2,71
   448a4:	88829226 	beq	r17,r2,452f0 <___vfprintf_internal_r+0x2188>
   448a8:	80f9883a 	add	fp,r16,r3
   448ac:	d9003617 	ldw	r4,216(sp)
   448b0:	000d883a 	mov	r6,zero
   448b4:	000f883a 	mov	r7,zero
   448b8:	980b883a 	mov	r5,r19
   448bc:	da003d15 	stw	r8,244(sp)
   448c0:	004da140 	call	4da14 <__eqdf2>
   448c4:	da003d17 	ldw	r8,244(sp)
   448c8:	10018d26 	beq	r2,zero,44f00 <___vfprintf_internal_r+0x1d98>
   448cc:	d8802117 	ldw	r2,132(sp)
   448d0:	1700062e 	bgeu	r2,fp,448ec <___vfprintf_internal_r+0x1784>
   448d4:	01000c04 	movi	r4,48
   448d8:	10c00044 	addi	r3,r2,1
   448dc:	d8c02115 	stw	r3,132(sp)
   448e0:	11000005 	stb	r4,0(r2)
   448e4:	d8802117 	ldw	r2,132(sp)
   448e8:	173ffb36 	bltu	r2,fp,448d8 <__alt_data_end+0xfffc48d8>
   448ec:	1405c83a 	sub	r2,r2,r16
   448f0:	d8803315 	stw	r2,204(sp)
   448f4:	008011c4 	movi	r2,71
   448f8:	b0817626 	beq	r22,r2,44ed4 <___vfprintf_internal_r+0x1d6c>
   448fc:	00801944 	movi	r2,101
   44900:	1442810e 	bge	r2,r17,45308 <___vfprintf_internal_r+0x21a0>
   44904:	d8c02617 	ldw	r3,152(sp)
   44908:	00801984 	movi	r2,102
   4490c:	d8c03215 	stw	r3,200(sp)
   44910:	8881fe26 	beq	r17,r2,4510c <___vfprintf_internal_r+0x1fa4>
   44914:	d8c03217 	ldw	r3,200(sp)
   44918:	d9003317 	ldw	r4,204(sp)
   4491c:	1901dd16 	blt	r3,r4,45094 <___vfprintf_internal_r+0x1f2c>
   44920:	9480004c 	andi	r18,r18,1
   44924:	90022b1e 	bne	r18,zero,451d4 <___vfprintf_internal_r+0x206c>
   44928:	1805883a 	mov	r2,r3
   4492c:	18028016 	blt	r3,zero,45330 <___vfprintf_internal_r+0x21c8>
   44930:	d8c03217 	ldw	r3,200(sp)
   44934:	044019c4 	movi	r17,103
   44938:	d8c02e15 	stw	r3,184(sp)
   4493c:	df002a07 	ldb	fp,168(sp)
   44940:	e001531e 	bne	fp,zero,44e90 <___vfprintf_internal_r+0x1d28>
   44944:	df002783 	ldbu	fp,158(sp)
   44948:	d8802a15 	stw	r2,168(sp)
   4494c:	dc802b17 	ldw	r18,172(sp)
   44950:	d8002915 	stw	zero,164(sp)
   44954:	003bd106 	br	4389c <__alt_data_end+0xfffc389c>
   44958:	d8802d17 	ldw	r2,180(sp)
   4495c:	d8c02d17 	ldw	r3,180(sp)
   44960:	d9002d17 	ldw	r4,180(sp)
   44964:	10800017 	ldw	r2,0(r2)
   44968:	18c00117 	ldw	r3,4(r3)
   4496c:	21000204 	addi	r4,r4,8
   44970:	d8803615 	stw	r2,216(sp)
   44974:	d8c03815 	stw	r3,224(sp)
   44978:	d9002d15 	stw	r4,180(sp)
   4497c:	003b7506 	br	43754 <__alt_data_end+0xfffc3754>
   44980:	ac400007 	ldb	r17,0(r21)
   44984:	003a5906 	br	432ec <__alt_data_end+0xfffc32ec>
   44988:	9080100c 	andi	r2,r18,64
   4498c:	1000a826 	beq	r2,zero,44c30 <___vfprintf_internal_r+0x1ac8>
   44990:	d9002d17 	ldw	r4,180(sp)
   44994:	002d883a 	mov	r22,zero
   44998:	24c0000b 	ldhu	r19,0(r4)
   4499c:	21000104 	addi	r4,r4,4
   449a0:	d9002d15 	stw	r4,180(sp)
   449a4:	003ccb06 	br	43cd4 <__alt_data_end+0xfffc3cd4>
   449a8:	d8c02d17 	ldw	r3,180(sp)
   449ac:	d9002917 	ldw	r4,164(sp)
   449b0:	002d883a 	mov	r22,zero
   449b4:	18800104 	addi	r2,r3,4
   449b8:	1cc00017 	ldw	r19,0(r3)
   449bc:	203ebb0e 	bge	r4,zero,444ac <__alt_data_end+0xfffc44ac>
   449c0:	003ef106 	br	44588 <__alt_data_end+0xfffc4588>
   449c4:	9080040c 	andi	r2,r18,16
   449c8:	1000921e 	bne	r2,zero,44c14 <___vfprintf_internal_r+0x1aac>
   449cc:	9480100c 	andi	r18,r18,64
   449d0:	90013926 	beq	r18,zero,44eb8 <___vfprintf_internal_r+0x1d50>
   449d4:	d9002d17 	ldw	r4,180(sp)
   449d8:	d9402f17 	ldw	r5,188(sp)
   449dc:	20800017 	ldw	r2,0(r4)
   449e0:	21000104 	addi	r4,r4,4
   449e4:	d9002d15 	stw	r4,180(sp)
   449e8:	1140000d 	sth	r5,0(r2)
   449ec:	003a1606 	br	43248 <__alt_data_end+0xfffc3248>
   449f0:	9080100c 	andi	r2,r18,64
   449f4:	10008026 	beq	r2,zero,44bf8 <___vfprintf_internal_r+0x1a90>
   449f8:	d8c02d17 	ldw	r3,180(sp)
   449fc:	1cc0000f 	ldh	r19,0(r3)
   44a00:	18c00104 	addi	r3,r3,4
   44a04:	d8c02d15 	stw	r3,180(sp)
   44a08:	982dd7fa 	srai	r22,r19,31
   44a0c:	b005883a 	mov	r2,r22
   44a10:	003b1f06 	br	43690 <__alt_data_end+0xfffc3690>
   44a14:	9080100c 	andi	r2,r18,64
   44a18:	d8002785 	stb	zero,158(sp)
   44a1c:	10008a1e 	bne	r2,zero,44c48 <___vfprintf_internal_r+0x1ae0>
   44a20:	d9402d17 	ldw	r5,180(sp)
   44a24:	d8c02917 	ldw	r3,164(sp)
   44a28:	002d883a 	mov	r22,zero
   44a2c:	28800104 	addi	r2,r5,4
   44a30:	2cc00017 	ldw	r19,0(r5)
   44a34:	183e4b0e 	bge	r3,zero,44364 <__alt_data_end+0xfffc4364>
   44a38:	9d86b03a 	or	r3,r19,r22
   44a3c:	d8802d15 	stw	r2,180(sp)
   44a40:	183e4c1e 	bne	r3,zero,44374 <__alt_data_end+0xfffc4374>
   44a44:	0039883a 	mov	fp,zero
   44a48:	0005883a 	mov	r2,zero
   44a4c:	003d4006 	br	43f50 <__alt_data_end+0xfffc3f50>
   44a50:	01400174 	movhi	r5,5
   44a54:	29444b84 	addi	r5,r5,4398
   44a58:	d9402b15 	stw	r5,172(sp)
   44a5c:	d9402b17 	ldw	r5,172(sp)
   44a60:	1c47883a 	add	r3,r3,r17
   44a64:	10800044 	addi	r2,r2,1
   44a68:	41400015 	stw	r5,0(r8)
   44a6c:	44400115 	stw	r17,4(r8)
   44a70:	d8c02015 	stw	r3,128(sp)
   44a74:	d8801f15 	stw	r2,124(sp)
   44a78:	010001c4 	movi	r4,7
   44a7c:	20bec816 	blt	r4,r2,445a0 <__alt_data_end+0xfffc45a0>
   44a80:	42000204 	addi	r8,r8,8
   44a84:	003ecd06 	br	445bc <__alt_data_end+0xfffc45bc>
   44a88:	d9002917 	ldw	r4,164(sp)
   44a8c:	d8002785 	stb	zero,158(sp)
   44a90:	203d2d16 	blt	r4,zero,43f48 <__alt_data_end+0xfffc3f48>
   44a94:	00bfdfc4 	movi	r2,-129
   44a98:	90a4703a 	and	r18,r18,r2
   44a9c:	003a9106 	br	434e4 <__alt_data_end+0xfffc34e4>
   44aa0:	01000174 	movhi	r4,5
   44aa4:	21044b84 	addi	r4,r4,4398
   44aa8:	d9002b15 	stw	r4,172(sp)
   44aac:	003c0c06 	br	43ae0 <__alt_data_end+0xfffc3ae0>
   44ab0:	d9002c17 	ldw	r4,176(sp)
   44ab4:	d9801e04 	addi	r6,sp,120
   44ab8:	b80b883a 	mov	r5,r23
   44abc:	0049c800 	call	49c80 <__sprint_r>
   44ac0:	103aab1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44ac4:	d8c02017 	ldw	r3,128(sp)
   44ac8:	da000404 	addi	r8,sp,16
   44acc:	003d4106 	br	43fd4 <__alt_data_end+0xfffc3fd4>
   44ad0:	d8801f17 	ldw	r2,124(sp)
   44ad4:	01400174 	movhi	r5,5
   44ad8:	01000044 	movi	r4,1
   44adc:	18c00044 	addi	r3,r3,1
   44ae0:	10800044 	addi	r2,r2,1
   44ae4:	29444b04 	addi	r5,r5,4396
   44ae8:	41000115 	stw	r4,4(r8)
   44aec:	41400015 	stw	r5,0(r8)
   44af0:	d8c02015 	stw	r3,128(sp)
   44af4:	d8801f15 	stw	r2,124(sp)
   44af8:	010001c4 	movi	r4,7
   44afc:	20805c16 	blt	r4,r2,44c70 <___vfprintf_internal_r+0x1b08>
   44b00:	42000204 	addi	r8,r8,8
   44b04:	8800041e 	bne	r17,zero,44b18 <___vfprintf_internal_r+0x19b0>
   44b08:	d8803317 	ldw	r2,204(sp)
   44b0c:	1000021e 	bne	r2,zero,44b18 <___vfprintf_internal_r+0x19b0>
   44b10:	9080004c 	andi	r2,r18,1
   44b14:	103c0926 	beq	r2,zero,43b3c <__alt_data_end+0xfffc3b3c>
   44b18:	d9003717 	ldw	r4,220(sp)
   44b1c:	d8801f17 	ldw	r2,124(sp)
   44b20:	d9403417 	ldw	r5,208(sp)
   44b24:	20c7883a 	add	r3,r4,r3
   44b28:	10800044 	addi	r2,r2,1
   44b2c:	41000115 	stw	r4,4(r8)
   44b30:	41400015 	stw	r5,0(r8)
   44b34:	d8c02015 	stw	r3,128(sp)
   44b38:	d8801f15 	stw	r2,124(sp)
   44b3c:	010001c4 	movi	r4,7
   44b40:	20812116 	blt	r4,r2,44fc8 <___vfprintf_internal_r+0x1e60>
   44b44:	42000204 	addi	r8,r8,8
   44b48:	0463c83a 	sub	r17,zero,r17
   44b4c:	0440730e 	bge	zero,r17,44d1c <___vfprintf_internal_r+0x1bb4>
   44b50:	05800404 	movi	r22,16
   44b54:	b440860e 	bge	r22,r17,44d70 <___vfprintf_internal_r+0x1c08>
   44b58:	01400174 	movhi	r5,5
   44b5c:	29444b84 	addi	r5,r5,4398
   44b60:	d9402b15 	stw	r5,172(sp)
   44b64:	070001c4 	movi	fp,7
   44b68:	dcc02c17 	ldw	r19,176(sp)
   44b6c:	00000306 	br	44b7c <___vfprintf_internal_r+0x1a14>
   44b70:	42000204 	addi	r8,r8,8
   44b74:	8c7ffc04 	addi	r17,r17,-16
   44b78:	b440800e 	bge	r22,r17,44d7c <___vfprintf_internal_r+0x1c14>
   44b7c:	18c00404 	addi	r3,r3,16
   44b80:	10800044 	addi	r2,r2,1
   44b84:	45000015 	stw	r20,0(r8)
   44b88:	45800115 	stw	r22,4(r8)
   44b8c:	d8c02015 	stw	r3,128(sp)
   44b90:	d8801f15 	stw	r2,124(sp)
   44b94:	e0bff60e 	bge	fp,r2,44b70 <__alt_data_end+0xfffc4b70>
   44b98:	d9801e04 	addi	r6,sp,120
   44b9c:	b80b883a 	mov	r5,r23
   44ba0:	9809883a 	mov	r4,r19
   44ba4:	0049c800 	call	49c80 <__sprint_r>
   44ba8:	103a711e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44bac:	d8c02017 	ldw	r3,128(sp)
   44bb0:	d8801f17 	ldw	r2,124(sp)
   44bb4:	da000404 	addi	r8,sp,16
   44bb8:	003fee06 	br	44b74 <__alt_data_end+0xfffc4b74>
   44bbc:	00bfffc4 	movi	r2,-1
   44bc0:	003a6f06 	br	43580 <__alt_data_end+0xfffc3580>
   44bc4:	008011c4 	movi	r2,71
   44bc8:	1440b816 	blt	r2,r17,44eac <___vfprintf_internal_r+0x1d44>
   44bcc:	04000174 	movhi	r16,5
   44bd0:	84043d04 	addi	r16,r16,4340
   44bd4:	00c000c4 	movi	r3,3
   44bd8:	00bfdfc4 	movi	r2,-129
   44bdc:	d8c02a15 	stw	r3,168(sp)
   44be0:	90a4703a 	and	r18,r18,r2
   44be4:	df002783 	ldbu	fp,158(sp)
   44be8:	d8c02e15 	stw	r3,184(sp)
   44bec:	d8002915 	stw	zero,164(sp)
   44bf0:	d8003215 	stw	zero,200(sp)
   44bf4:	003b2906 	br	4389c <__alt_data_end+0xfffc389c>
   44bf8:	d9002d17 	ldw	r4,180(sp)
   44bfc:	24c00017 	ldw	r19,0(r4)
   44c00:	21000104 	addi	r4,r4,4
   44c04:	d9002d15 	stw	r4,180(sp)
   44c08:	982dd7fa 	srai	r22,r19,31
   44c0c:	b005883a 	mov	r2,r22
   44c10:	003a9f06 	br	43690 <__alt_data_end+0xfffc3690>
   44c14:	d9402d17 	ldw	r5,180(sp)
   44c18:	d8c02f17 	ldw	r3,188(sp)
   44c1c:	28800017 	ldw	r2,0(r5)
   44c20:	29400104 	addi	r5,r5,4
   44c24:	d9402d15 	stw	r5,180(sp)
   44c28:	10c00015 	stw	r3,0(r2)
   44c2c:	00398606 	br	43248 <__alt_data_end+0xfffc3248>
   44c30:	d9402d17 	ldw	r5,180(sp)
   44c34:	002d883a 	mov	r22,zero
   44c38:	2cc00017 	ldw	r19,0(r5)
   44c3c:	29400104 	addi	r5,r5,4
   44c40:	d9402d15 	stw	r5,180(sp)
   44c44:	003c2306 	br	43cd4 <__alt_data_end+0xfffc3cd4>
   44c48:	d8c02d17 	ldw	r3,180(sp)
   44c4c:	d9002917 	ldw	r4,164(sp)
   44c50:	002d883a 	mov	r22,zero
   44c54:	18800104 	addi	r2,r3,4
   44c58:	1cc0000b 	ldhu	r19,0(r3)
   44c5c:	203dc10e 	bge	r4,zero,44364 <__alt_data_end+0xfffc4364>
   44c60:	003f7506 	br	44a38 <__alt_data_end+0xfffc4a38>
   44c64:	04000174 	movhi	r16,5
   44c68:	84043b04 	addi	r16,r16,4332
   44c6c:	003acc06 	br	437a0 <__alt_data_end+0xfffc37a0>
   44c70:	d9002c17 	ldw	r4,176(sp)
   44c74:	d9801e04 	addi	r6,sp,120
   44c78:	b80b883a 	mov	r5,r23
   44c7c:	0049c800 	call	49c80 <__sprint_r>
   44c80:	103a3b1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44c84:	dc402617 	ldw	r17,152(sp)
   44c88:	d8c02017 	ldw	r3,128(sp)
   44c8c:	da000404 	addi	r8,sp,16
   44c90:	003f9c06 	br	44b04 <__alt_data_end+0xfffc4b04>
   44c94:	ac400043 	ldbu	r17,1(r21)
   44c98:	94800814 	ori	r18,r18,32
   44c9c:	ad400044 	addi	r21,r21,1
   44ca0:	8c403fcc 	andi	r17,r17,255
   44ca4:	8c40201c 	xori	r17,r17,128
   44ca8:	8c7fe004 	addi	r17,r17,-128
   44cac:	00398f06 	br	432ec <__alt_data_end+0xfffc32ec>
   44cb0:	d8c02d15 	stw	r3,180(sp)
   44cb4:	0039883a 	mov	fp,zero
   44cb8:	003e3506 	br	44590 <__alt_data_end+0xfffc4590>
   44cbc:	d9002c17 	ldw	r4,176(sp)
   44cc0:	d9801e04 	addi	r6,sp,120
   44cc4:	b80b883a 	mov	r5,r23
   44cc8:	0049c800 	call	49c80 <__sprint_r>
   44ccc:	103a281e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44cd0:	d8c02017 	ldw	r3,128(sp)
   44cd4:	da000404 	addi	r8,sp,16
   44cd8:	003cd006 	br	4401c <__alt_data_end+0xfffc401c>
   44cdc:	8009883a 	mov	r4,r16
   44ce0:	da003d15 	stw	r8,244(sp)
   44ce4:	0049aec0 	call	49aec <strlen>
   44ce8:	d8802e15 	stw	r2,184(sp)
   44cec:	da003d17 	ldw	r8,244(sp)
   44cf0:	103c340e 	bge	r2,zero,43dc4 <__alt_data_end+0xfffc3dc4>
   44cf4:	0005883a 	mov	r2,zero
   44cf8:	003c3206 	br	43dc4 <__alt_data_end+0xfffc3dc4>
   44cfc:	d9002c17 	ldw	r4,176(sp)
   44d00:	d9801e04 	addi	r6,sp,120
   44d04:	b80b883a 	mov	r5,r23
   44d08:	0049c800 	call	49c80 <__sprint_r>
   44d0c:	103a181e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44d10:	d8c02017 	ldw	r3,128(sp)
   44d14:	d8801f17 	ldw	r2,124(sp)
   44d18:	da000404 	addi	r8,sp,16
   44d1c:	d9403317 	ldw	r5,204(sp)
   44d20:	10800044 	addi	r2,r2,1
   44d24:	44000015 	stw	r16,0(r8)
   44d28:	28c7883a 	add	r3,r5,r3
   44d2c:	003b7d06 	br	43b24 <__alt_data_end+0xfffc3b24>
   44d30:	01000174 	movhi	r4,5
   44d34:	21044f84 	addi	r4,r4,4414
   44d38:	d9003515 	stw	r4,212(sp)
   44d3c:	003b1406 	br	43990 <__alt_data_end+0xfffc3990>
   44d40:	013fffc4 	movi	r4,-1
   44d44:	003a3506 	br	4361c <__alt_data_end+0xfffc361c>
   44d48:	0023883a 	mov	r17,zero
   44d4c:	003d9d06 	br	443c4 <__alt_data_end+0xfffc43c4>
   44d50:	d9002c17 	ldw	r4,176(sp)
   44d54:	d9801e04 	addi	r6,sp,120
   44d58:	b80b883a 	mov	r5,r23
   44d5c:	0049c800 	call	49c80 <__sprint_r>
   44d60:	103a031e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44d64:	d8c02017 	ldw	r3,128(sp)
   44d68:	da000404 	addi	r8,sp,16
   44d6c:	003d9406 	br	443c0 <__alt_data_end+0xfffc43c0>
   44d70:	01000174 	movhi	r4,5
   44d74:	21044b84 	addi	r4,r4,4398
   44d78:	d9002b15 	stw	r4,172(sp)
   44d7c:	d9002b17 	ldw	r4,172(sp)
   44d80:	1c47883a 	add	r3,r3,r17
   44d84:	10800044 	addi	r2,r2,1
   44d88:	41000015 	stw	r4,0(r8)
   44d8c:	44400115 	stw	r17,4(r8)
   44d90:	d8c02015 	stw	r3,128(sp)
   44d94:	d8801f15 	stw	r2,124(sp)
   44d98:	010001c4 	movi	r4,7
   44d9c:	20bfd716 	blt	r4,r2,44cfc <__alt_data_end+0xfffc4cfc>
   44da0:	42000204 	addi	r8,r8,8
   44da4:	003fdd06 	br	44d1c <__alt_data_end+0xfffc4d1c>
   44da8:	d9002c17 	ldw	r4,176(sp)
   44dac:	d9801e04 	addi	r6,sp,120
   44db0:	b80b883a 	mov	r5,r23
   44db4:	0049c800 	call	49c80 <__sprint_r>
   44db8:	1039ed1e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44dbc:	d8802617 	ldw	r2,152(sp)
   44dc0:	d8c02017 	ldw	r3,128(sp)
   44dc4:	da000404 	addi	r8,sp,16
   44dc8:	003e1006 	br	4460c <__alt_data_end+0xfffc460c>
   44dcc:	00800044 	movi	r2,1
   44dd0:	10803fcc 	andi	r2,r2,255
   44dd4:	00c00044 	movi	r3,1
   44dd8:	10fa3526 	beq	r2,r3,436b0 <__alt_data_end+0xfffc36b0>
   44ddc:	00c00084 	movi	r3,2
   44de0:	10fbcb26 	beq	r2,r3,43d10 <__alt_data_end+0xfffc3d10>
   44de4:	003a8f06 	br	43824 <__alt_data_end+0xfffc3824>
   44de8:	01000174 	movhi	r4,5
   44dec:	21044f84 	addi	r4,r4,4414
   44df0:	d9003515 	stw	r4,212(sp)
   44df4:	003b7606 	br	43bd0 <__alt_data_end+0xfffc3bd0>
   44df8:	d8802917 	ldw	r2,164(sp)
   44dfc:	00c00184 	movi	r3,6
   44e00:	1880012e 	bgeu	r3,r2,44e08 <___vfprintf_internal_r+0x1ca0>
   44e04:	1805883a 	mov	r2,r3
   44e08:	d8802e15 	stw	r2,184(sp)
   44e0c:	1000ef16 	blt	r2,zero,451cc <___vfprintf_internal_r+0x2064>
   44e10:	04000174 	movhi	r16,5
   44e14:	d8802a15 	stw	r2,168(sp)
   44e18:	dcc02d15 	stw	r19,180(sp)
   44e1c:	d8002915 	stw	zero,164(sp)
   44e20:	d8003215 	stw	zero,200(sp)
   44e24:	84044904 	addi	r16,r16,4388
   44e28:	0039883a 	mov	fp,zero
   44e2c:	003aa206 	br	438b8 <__alt_data_end+0xfffc38b8>
   44e30:	0021883a 	mov	r16,zero
   44e34:	003e0706 	br	44654 <__alt_data_end+0xfffc4654>
   44e38:	d9002c17 	ldw	r4,176(sp)
   44e3c:	d9801e04 	addi	r6,sp,120
   44e40:	b80b883a 	mov	r5,r23
   44e44:	0049c800 	call	49c80 <__sprint_r>
   44e48:	1039c91e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44e4c:	d8802617 	ldw	r2,152(sp)
   44e50:	d9403317 	ldw	r5,204(sp)
   44e54:	d8c02017 	ldw	r3,128(sp)
   44e58:	da000404 	addi	r8,sp,16
   44e5c:	2885c83a 	sub	r2,r5,r2
   44e60:	003dfb06 	br	44650 <__alt_data_end+0xfffc4650>
   44e64:	9080004c 	andi	r2,r18,1
   44e68:	103e8f1e 	bne	r2,zero,448a8 <__alt_data_end+0xfffc48a8>
   44e6c:	d8802117 	ldw	r2,132(sp)
   44e70:	003e9e06 	br	448ec <__alt_data_end+0xfffc48ec>
   44e74:	1025883a 	mov	r18,r2
   44e78:	0039883a 	mov	fp,zero
   44e7c:	00800084 	movi	r2,2
   44e80:	003fd306 	br	44dd0 <__alt_data_end+0xfffc4dd0>
   44e84:	07000b44 	movi	fp,45
   44e88:	df002785 	stb	fp,158(sp)
   44e8c:	003a4006 	br	43790 <__alt_data_end+0xfffc3790>
   44e90:	00c00b44 	movi	r3,45
   44e94:	d8c02785 	stb	r3,158(sp)
   44e98:	d8802a15 	stw	r2,168(sp)
   44e9c:	dc802b17 	ldw	r18,172(sp)
   44ea0:	d8002915 	stw	zero,164(sp)
   44ea4:	07000b44 	movi	fp,45
   44ea8:	003a8006 	br	438ac <__alt_data_end+0xfffc38ac>
   44eac:	04000174 	movhi	r16,5
   44eb0:	84043e04 	addi	r16,r16,4344
   44eb4:	003f4706 	br	44bd4 <__alt_data_end+0xfffc4bd4>
   44eb8:	d8c02d17 	ldw	r3,180(sp)
   44ebc:	d9002f17 	ldw	r4,188(sp)
   44ec0:	18800017 	ldw	r2,0(r3)
   44ec4:	18c00104 	addi	r3,r3,4
   44ec8:	d8c02d15 	stw	r3,180(sp)
   44ecc:	11000015 	stw	r4,0(r2)
   44ed0:	0038dd06 	br	43248 <__alt_data_end+0xfffc3248>
   44ed4:	dd802617 	ldw	r22,152(sp)
   44ed8:	00bfff44 	movi	r2,-3
   44edc:	b0801c16 	blt	r22,r2,44f50 <___vfprintf_internal_r+0x1de8>
   44ee0:	d9402917 	ldw	r5,164(sp)
   44ee4:	2d801a16 	blt	r5,r22,44f50 <___vfprintf_internal_r+0x1de8>
   44ee8:	dd803215 	stw	r22,200(sp)
   44eec:	003e8906 	br	44914 <__alt_data_end+0xfffc4914>
   44ef0:	01000174 	movhi	r4,5
   44ef4:	21044b84 	addi	r4,r4,4398
   44ef8:	d9002b15 	stw	r4,172(sp)
   44efc:	003c9106 	br	44144 <__alt_data_end+0xfffc4144>
   44f00:	e005883a 	mov	r2,fp
   44f04:	003e7906 	br	448ec <__alt_data_end+0xfffc48ec>
   44f08:	d9402917 	ldw	r5,164(sp)
   44f0c:	df002783 	ldbu	fp,158(sp)
   44f10:	dcc02d15 	stw	r19,180(sp)
   44f14:	d9402a15 	stw	r5,168(sp)
   44f18:	d9402e15 	stw	r5,184(sp)
   44f1c:	d8002915 	stw	zero,164(sp)
   44f20:	d8003215 	stw	zero,200(sp)
   44f24:	003a5d06 	br	4389c <__alt_data_end+0xfffc389c>
   44f28:	9080004c 	andi	r2,r18,1
   44f2c:	0039883a 	mov	fp,zero
   44f30:	10000426 	beq	r2,zero,44f44 <___vfprintf_internal_r+0x1ddc>
   44f34:	00800c04 	movi	r2,48
   44f38:	dc001dc4 	addi	r16,sp,119
   44f3c:	d8801dc5 	stb	r2,119(sp)
   44f40:	003b8006 	br	43d44 <__alt_data_end+0xfffc3d44>
   44f44:	d8002e15 	stw	zero,184(sp)
   44f48:	dc001e04 	addi	r16,sp,120
   44f4c:	003a4d06 	br	43884 <__alt_data_end+0xfffc3884>
   44f50:	8c7fff84 	addi	r17,r17,-2
   44f54:	b5bfffc4 	addi	r22,r22,-1
   44f58:	dd802615 	stw	r22,152(sp)
   44f5c:	dc4022c5 	stb	r17,139(sp)
   44f60:	b000bf16 	blt	r22,zero,45260 <___vfprintf_internal_r+0x20f8>
   44f64:	00800ac4 	movi	r2,43
   44f68:	d8802305 	stb	r2,140(sp)
   44f6c:	00800244 	movi	r2,9
   44f70:	15807016 	blt	r2,r22,45134 <___vfprintf_internal_r+0x1fcc>
   44f74:	00800c04 	movi	r2,48
   44f78:	b5800c04 	addi	r22,r22,48
   44f7c:	d8802345 	stb	r2,141(sp)
   44f80:	dd802385 	stb	r22,142(sp)
   44f84:	d88023c4 	addi	r2,sp,143
   44f88:	df0022c4 	addi	fp,sp,139
   44f8c:	d8c03317 	ldw	r3,204(sp)
   44f90:	1739c83a 	sub	fp,r2,fp
   44f94:	d9003317 	ldw	r4,204(sp)
   44f98:	e0c7883a 	add	r3,fp,r3
   44f9c:	df003a15 	stw	fp,232(sp)
   44fa0:	d8c02e15 	stw	r3,184(sp)
   44fa4:	00800044 	movi	r2,1
   44fa8:	1100b30e 	bge	r2,r4,45278 <___vfprintf_internal_r+0x2110>
   44fac:	d8c02e17 	ldw	r3,184(sp)
   44fb0:	18c00044 	addi	r3,r3,1
   44fb4:	d8c02e15 	stw	r3,184(sp)
   44fb8:	1805883a 	mov	r2,r3
   44fbc:	1800ac16 	blt	r3,zero,45270 <___vfprintf_internal_r+0x2108>
   44fc0:	d8003215 	stw	zero,200(sp)
   44fc4:	003e5d06 	br	4493c <__alt_data_end+0xfffc493c>
   44fc8:	d9002c17 	ldw	r4,176(sp)
   44fcc:	d9801e04 	addi	r6,sp,120
   44fd0:	b80b883a 	mov	r5,r23
   44fd4:	0049c800 	call	49c80 <__sprint_r>
   44fd8:	1039651e 	bne	r2,zero,43570 <__alt_data_end+0xfffc3570>
   44fdc:	dc402617 	ldw	r17,152(sp)
   44fe0:	d8c02017 	ldw	r3,128(sp)
   44fe4:	d8801f17 	ldw	r2,124(sp)
   44fe8:	da000404 	addi	r8,sp,16
   44fec:	003ed606 	br	44b48 <__alt_data_end+0xfffc4b48>
   44ff0:	582b883a 	mov	r21,r11
   44ff4:	d8002915 	stw	zero,164(sp)
   44ff8:	0038bd06 	br	432f0 <__alt_data_end+0xfffc32f0>
   44ffc:	d8802917 	ldw	r2,164(sp)
   45000:	103e071e 	bne	r2,zero,44820 <__alt_data_end+0xfffc4820>
   45004:	dc002915 	stw	r16,164(sp)
   45008:	003e0506 	br	44820 <__alt_data_end+0xfffc4820>
   4500c:	d9002917 	ldw	r4,164(sp)
   45010:	20c00044 	addi	r3,r4,1
   45014:	003e0f06 	br	44854 <__alt_data_end+0xfffc4854>
   45018:	01400184 	movi	r5,6
   4501c:	d9402915 	stw	r5,164(sp)
   45020:	003dff06 	br	44820 <__alt_data_end+0xfffc4820>
   45024:	d8802104 	addi	r2,sp,132
   45028:	d8800315 	stw	r2,12(sp)
   4502c:	d8802504 	addi	r2,sp,148
   45030:	d8800215 	stw	r2,8(sp)
   45034:	d8802604 	addi	r2,sp,152
   45038:	d8800115 	stw	r2,4(sp)
   4503c:	d8802917 	ldw	r2,164(sp)
   45040:	d9403617 	ldw	r5,216(sp)
   45044:	d9002c17 	ldw	r4,176(sp)
   45048:	d8800015 	stw	r2,0(sp)
   4504c:	01c000c4 	movi	r7,3
   45050:	980d883a 	mov	r6,r19
   45054:	da003d15 	stw	r8,244(sp)
   45058:	004578c0 	call	4578c <_dtoa_r>
   4505c:	d8c02917 	ldw	r3,164(sp)
   45060:	da003d17 	ldw	r8,244(sp)
   45064:	1021883a 	mov	r16,r2
   45068:	10f9883a 	add	fp,r2,r3
   4506c:	81000007 	ldb	r4,0(r16)
   45070:	00800c04 	movi	r2,48
   45074:	20805e26 	beq	r4,r2,451f0 <___vfprintf_internal_r+0x2088>
   45078:	d8c02617 	ldw	r3,152(sp)
   4507c:	e0f9883a 	add	fp,fp,r3
   45080:	003e0a06 	br	448ac <__alt_data_end+0xfffc48ac>
   45084:	00c00b44 	movi	r3,45
   45088:	24e0003c 	xorhi	r19,r4,32768
   4508c:	d8c02a05 	stb	r3,168(sp)
   45090:	003de906 	br	44838 <__alt_data_end+0xfffc4838>
   45094:	d8c03217 	ldw	r3,200(sp)
   45098:	00c07a0e 	bge	zero,r3,45284 <___vfprintf_internal_r+0x211c>
   4509c:	00800044 	movi	r2,1
   450a0:	d9003317 	ldw	r4,204(sp)
   450a4:	1105883a 	add	r2,r2,r4
   450a8:	d8802e15 	stw	r2,184(sp)
   450ac:	10004e16 	blt	r2,zero,451e8 <___vfprintf_internal_r+0x2080>
   450b0:	044019c4 	movi	r17,103
   450b4:	003e2106 	br	4493c <__alt_data_end+0xfffc493c>
   450b8:	d9002917 	ldw	r4,164(sp)
   450bc:	d8802104 	addi	r2,sp,132
   450c0:	d8800315 	stw	r2,12(sp)
   450c4:	d9000015 	stw	r4,0(sp)
   450c8:	d8802504 	addi	r2,sp,148
   450cc:	d9403617 	ldw	r5,216(sp)
   450d0:	d9002c17 	ldw	r4,176(sp)
   450d4:	d8800215 	stw	r2,8(sp)
   450d8:	d8802604 	addi	r2,sp,152
   450dc:	d8800115 	stw	r2,4(sp)
   450e0:	01c000c4 	movi	r7,3
   450e4:	980d883a 	mov	r6,r19
   450e8:	da003d15 	stw	r8,244(sp)
   450ec:	004578c0 	call	4578c <_dtoa_r>
   450f0:	d8c02917 	ldw	r3,164(sp)
   450f4:	da003d17 	ldw	r8,244(sp)
   450f8:	1021883a 	mov	r16,r2
   450fc:	00801184 	movi	r2,70
   45100:	80f9883a 	add	fp,r16,r3
   45104:	88bfd926 	beq	r17,r2,4506c <__alt_data_end+0xfffc506c>
   45108:	003de806 	br	448ac <__alt_data_end+0xfffc48ac>
   4510c:	d9002917 	ldw	r4,164(sp)
   45110:	00c04d0e 	bge	zero,r3,45248 <___vfprintf_internal_r+0x20e0>
   45114:	2000441e 	bne	r4,zero,45228 <___vfprintf_internal_r+0x20c0>
   45118:	9480004c 	andi	r18,r18,1
   4511c:	9000421e 	bne	r18,zero,45228 <___vfprintf_internal_r+0x20c0>
   45120:	1805883a 	mov	r2,r3
   45124:	18007016 	blt	r3,zero,452e8 <___vfprintf_internal_r+0x2180>
   45128:	d8c03217 	ldw	r3,200(sp)
   4512c:	d8c02e15 	stw	r3,184(sp)
   45130:	003e0206 	br	4493c <__alt_data_end+0xfffc493c>
   45134:	df0022c4 	addi	fp,sp,139
   45138:	dc002915 	stw	r16,164(sp)
   4513c:	4027883a 	mov	r19,r8
   45140:	e021883a 	mov	r16,fp
   45144:	b009883a 	mov	r4,r22
   45148:	01400284 	movi	r5,10
   4514c:	0040b040 	call	40b04 <__modsi3>
   45150:	10800c04 	addi	r2,r2,48
   45154:	843fffc4 	addi	r16,r16,-1
   45158:	b009883a 	mov	r4,r22
   4515c:	01400284 	movi	r5,10
   45160:	80800005 	stb	r2,0(r16)
   45164:	0040a800 	call	40a80 <__divsi3>
   45168:	102d883a 	mov	r22,r2
   4516c:	00800244 	movi	r2,9
   45170:	15bff416 	blt	r2,r22,45144 <__alt_data_end+0xfffc5144>
   45174:	9811883a 	mov	r8,r19
   45178:	b0800c04 	addi	r2,r22,48
   4517c:	8027883a 	mov	r19,r16
   45180:	997fffc4 	addi	r5,r19,-1
   45184:	98bfffc5 	stb	r2,-1(r19)
   45188:	dc002917 	ldw	r16,164(sp)
   4518c:	2f006a2e 	bgeu	r5,fp,45338 <___vfprintf_internal_r+0x21d0>
   45190:	d9c02384 	addi	r7,sp,142
   45194:	3ccfc83a 	sub	r7,r7,r19
   45198:	d9002344 	addi	r4,sp,141
   4519c:	e1cf883a 	add	r7,fp,r7
   451a0:	00000106 	br	451a8 <___vfprintf_internal_r+0x2040>
   451a4:	28800003 	ldbu	r2,0(r5)
   451a8:	20800005 	stb	r2,0(r4)
   451ac:	21000044 	addi	r4,r4,1
   451b0:	29400044 	addi	r5,r5,1
   451b4:	393ffb1e 	bne	r7,r4,451a4 <__alt_data_end+0xfffc51a4>
   451b8:	d8802304 	addi	r2,sp,140
   451bc:	14c5c83a 	sub	r2,r2,r19
   451c0:	d8c02344 	addi	r3,sp,141
   451c4:	1885883a 	add	r2,r3,r2
   451c8:	003f7006 	br	44f8c <__alt_data_end+0xfffc4f8c>
   451cc:	0005883a 	mov	r2,zero
   451d0:	003f0f06 	br	44e10 <__alt_data_end+0xfffc4e10>
   451d4:	d8c03217 	ldw	r3,200(sp)
   451d8:	18c00044 	addi	r3,r3,1
   451dc:	d8c02e15 	stw	r3,184(sp)
   451e0:	1805883a 	mov	r2,r3
   451e4:	183fb20e 	bge	r3,zero,450b0 <__alt_data_end+0xfffc50b0>
   451e8:	0005883a 	mov	r2,zero
   451ec:	003fb006 	br	450b0 <__alt_data_end+0xfffc50b0>
   451f0:	d9003617 	ldw	r4,216(sp)
   451f4:	000d883a 	mov	r6,zero
   451f8:	000f883a 	mov	r7,zero
   451fc:	980b883a 	mov	r5,r19
   45200:	d8c03c15 	stw	r3,240(sp)
   45204:	da003d15 	stw	r8,244(sp)
   45208:	004da140 	call	4da14 <__eqdf2>
   4520c:	d8c03c17 	ldw	r3,240(sp)
   45210:	da003d17 	ldw	r8,244(sp)
   45214:	103f9826 	beq	r2,zero,45078 <__alt_data_end+0xfffc5078>
   45218:	00800044 	movi	r2,1
   4521c:	10c7c83a 	sub	r3,r2,r3
   45220:	d8c02615 	stw	r3,152(sp)
   45224:	003f9506 	br	4507c <__alt_data_end+0xfffc507c>
   45228:	d9002917 	ldw	r4,164(sp)
   4522c:	d8c03217 	ldw	r3,200(sp)
   45230:	20800044 	addi	r2,r4,1
   45234:	1885883a 	add	r2,r3,r2
   45238:	d8802e15 	stw	r2,184(sp)
   4523c:	103dbf0e 	bge	r2,zero,4493c <__alt_data_end+0xfffc493c>
   45240:	0005883a 	mov	r2,zero
   45244:	003dbd06 	br	4493c <__alt_data_end+0xfffc493c>
   45248:	2000211e 	bne	r4,zero,452d0 <___vfprintf_internal_r+0x2168>
   4524c:	9480004c 	andi	r18,r18,1
   45250:	90001f1e 	bne	r18,zero,452d0 <___vfprintf_internal_r+0x2168>
   45254:	00800044 	movi	r2,1
   45258:	d8802e15 	stw	r2,184(sp)
   4525c:	003db706 	br	4493c <__alt_data_end+0xfffc493c>
   45260:	00800b44 	movi	r2,45
   45264:	05adc83a 	sub	r22,zero,r22
   45268:	d8802305 	stb	r2,140(sp)
   4526c:	003f3f06 	br	44f6c <__alt_data_end+0xfffc4f6c>
   45270:	0005883a 	mov	r2,zero
   45274:	003f5206 	br	44fc0 <__alt_data_end+0xfffc4fc0>
   45278:	90a4703a 	and	r18,r18,r2
   4527c:	903f4e26 	beq	r18,zero,44fb8 <__alt_data_end+0xfffc4fb8>
   45280:	003f4a06 	br	44fac <__alt_data_end+0xfffc4fac>
   45284:	00800084 	movi	r2,2
   45288:	10c5c83a 	sub	r2,r2,r3
   4528c:	003f8406 	br	450a0 <__alt_data_end+0xfffc50a0>
   45290:	d8802d17 	ldw	r2,180(sp)
   45294:	d9002d17 	ldw	r4,180(sp)
   45298:	ac400043 	ldbu	r17,1(r21)
   4529c:	10800017 	ldw	r2,0(r2)
   452a0:	582b883a 	mov	r21,r11
   452a4:	d8802915 	stw	r2,164(sp)
   452a8:	20800104 	addi	r2,r4,4
   452ac:	d9002917 	ldw	r4,164(sp)
   452b0:	d8802d15 	stw	r2,180(sp)
   452b4:	203e7a0e 	bge	r4,zero,44ca0 <__alt_data_end+0xfffc4ca0>
   452b8:	8c403fcc 	andi	r17,r17,255
   452bc:	00bfffc4 	movi	r2,-1
   452c0:	8c40201c 	xori	r17,r17,128
   452c4:	d8802915 	stw	r2,164(sp)
   452c8:	8c7fe004 	addi	r17,r17,-128
   452cc:	00380706 	br	432ec <__alt_data_end+0xfffc32ec>
   452d0:	d8c02917 	ldw	r3,164(sp)
   452d4:	18c00084 	addi	r3,r3,2
   452d8:	d8c02e15 	stw	r3,184(sp)
   452dc:	1805883a 	mov	r2,r3
   452e0:	183d960e 	bge	r3,zero,4493c <__alt_data_end+0xfffc493c>
   452e4:	003fd606 	br	45240 <__alt_data_end+0xfffc5240>
   452e8:	0005883a 	mov	r2,zero
   452ec:	003f8e06 	br	45128 <__alt_data_end+0xfffc5128>
   452f0:	9080004c 	andi	r2,r18,1
   452f4:	103f811e 	bne	r2,zero,450fc <__alt_data_end+0xfffc50fc>
   452f8:	d8802117 	ldw	r2,132(sp)
   452fc:	1405c83a 	sub	r2,r2,r16
   45300:	d8803315 	stw	r2,204(sp)
   45304:	b47ef326 	beq	r22,r17,44ed4 <__alt_data_end+0xfffc4ed4>
   45308:	dd802617 	ldw	r22,152(sp)
   4530c:	003f1106 	br	44f54 <__alt_data_end+0xfffc4f54>
   45310:	d9c02785 	stb	r7,158(sp)
   45314:	00390406 	br	43728 <__alt_data_end+0xfffc3728>
   45318:	d9c02785 	stb	r7,158(sp)
   4531c:	0038d306 	br	4366c <__alt_data_end+0xfffc366c>
   45320:	d9c02785 	stb	r7,158(sp)
   45324:	003a6106 	br	43cac <__alt_data_end+0xfffc3cac>
   45328:	d9c02785 	stb	r7,158(sp)
   4532c:	003af806 	br	43f10 <__alt_data_end+0xfffc3f10>
   45330:	0005883a 	mov	r2,zero
   45334:	003d7e06 	br	44930 <__alt_data_end+0xfffc4930>
   45338:	d8802344 	addi	r2,sp,141
   4533c:	003f1306 	br	44f8c <__alt_data_end+0xfffc4f8c>
   45340:	d9c02785 	stb	r7,158(sp)
   45344:	00392306 	br	437d4 <__alt_data_end+0xfffc37d4>
   45348:	d9c02785 	stb	r7,158(sp)
   4534c:	003aa906 	br	43df4 <__alt_data_end+0xfffc3df4>
   45350:	d9c02785 	stb	r7,158(sp)
   45354:	003a3d06 	br	43c4c <__alt_data_end+0xfffc3c4c>
   45358:	d9c02785 	stb	r7,158(sp)
   4535c:	003aca06 	br	43e88 <__alt_data_end+0xfffc3e88>

00045360 <__vfprintf_internal>:
   45360:	00800174 	movhi	r2,5
   45364:	108b8e04 	addi	r2,r2,11832
   45368:	300f883a 	mov	r7,r6
   4536c:	280d883a 	mov	r6,r5
   45370:	200b883a 	mov	r5,r4
   45374:	11000017 	ldw	r4,0(r2)
   45378:	00431681 	jmpi	43168 <___vfprintf_internal_r>

0004537c <__sbprintf>:
   4537c:	2880030b 	ldhu	r2,12(r5)
   45380:	2ac01917 	ldw	r11,100(r5)
   45384:	2a80038b 	ldhu	r10,14(r5)
   45388:	2a400717 	ldw	r9,28(r5)
   4538c:	2a000917 	ldw	r8,36(r5)
   45390:	defee204 	addi	sp,sp,-1144
   45394:	00c10004 	movi	r3,1024
   45398:	dc011a15 	stw	r16,1128(sp)
   4539c:	10bfff4c 	andi	r2,r2,65533
   453a0:	2821883a 	mov	r16,r5
   453a4:	d8cb883a 	add	r5,sp,r3
   453a8:	dc811c15 	stw	r18,1136(sp)
   453ac:	dc411b15 	stw	r17,1132(sp)
   453b0:	dfc11d15 	stw	ra,1140(sp)
   453b4:	2025883a 	mov	r18,r4
   453b8:	d881030d 	sth	r2,1036(sp)
   453bc:	dac11915 	stw	r11,1124(sp)
   453c0:	da81038d 	sth	r10,1038(sp)
   453c4:	da410715 	stw	r9,1052(sp)
   453c8:	da010915 	stw	r8,1060(sp)
   453cc:	dec10015 	stw	sp,1024(sp)
   453d0:	dec10415 	stw	sp,1040(sp)
   453d4:	d8c10215 	stw	r3,1032(sp)
   453d8:	d8c10515 	stw	r3,1044(sp)
   453dc:	d8010615 	stw	zero,1048(sp)
   453e0:	00431680 	call	43168 <___vfprintf_internal_r>
   453e4:	1023883a 	mov	r17,r2
   453e8:	10000416 	blt	r2,zero,453fc <__sbprintf+0x80>
   453ec:	d9410004 	addi	r5,sp,1024
   453f0:	9009883a 	mov	r4,r18
   453f4:	00470300 	call	47030 <_fflush_r>
   453f8:	10000d1e 	bne	r2,zero,45430 <__sbprintf+0xb4>
   453fc:	d881030b 	ldhu	r2,1036(sp)
   45400:	1080100c 	andi	r2,r2,64
   45404:	10000326 	beq	r2,zero,45414 <__sbprintf+0x98>
   45408:	8080030b 	ldhu	r2,12(r16)
   4540c:	10801014 	ori	r2,r2,64
   45410:	8080030d 	sth	r2,12(r16)
   45414:	8805883a 	mov	r2,r17
   45418:	dfc11d17 	ldw	ra,1140(sp)
   4541c:	dc811c17 	ldw	r18,1136(sp)
   45420:	dc411b17 	ldw	r17,1132(sp)
   45424:	dc011a17 	ldw	r16,1128(sp)
   45428:	dec11e04 	addi	sp,sp,1144
   4542c:	f800283a 	ret
   45430:	047fffc4 	movi	r17,-1
   45434:	003ff106 	br	453fc <__alt_data_end+0xfffc53fc>

00045438 <__swsetup_r>:
   45438:	00800174 	movhi	r2,5
   4543c:	defffd04 	addi	sp,sp,-12
   45440:	108b8e04 	addi	r2,r2,11832
   45444:	dc400115 	stw	r17,4(sp)
   45448:	2023883a 	mov	r17,r4
   4544c:	11000017 	ldw	r4,0(r2)
   45450:	dc000015 	stw	r16,0(sp)
   45454:	dfc00215 	stw	ra,8(sp)
   45458:	2821883a 	mov	r16,r5
   4545c:	20000226 	beq	r4,zero,45468 <__swsetup_r+0x30>
   45460:	20800e17 	ldw	r2,56(r4)
   45464:	10003126 	beq	r2,zero,4552c <__swsetup_r+0xf4>
   45468:	8080030b 	ldhu	r2,12(r16)
   4546c:	10c0020c 	andi	r3,r2,8
   45470:	1009883a 	mov	r4,r2
   45474:	18000f26 	beq	r3,zero,454b4 <__swsetup_r+0x7c>
   45478:	80c00417 	ldw	r3,16(r16)
   4547c:	18001526 	beq	r3,zero,454d4 <__swsetup_r+0x9c>
   45480:	1100004c 	andi	r4,r2,1
   45484:	20001c1e 	bne	r4,zero,454f8 <__swsetup_r+0xc0>
   45488:	1080008c 	andi	r2,r2,2
   4548c:	1000291e 	bne	r2,zero,45534 <__swsetup_r+0xfc>
   45490:	80800517 	ldw	r2,20(r16)
   45494:	80800215 	stw	r2,8(r16)
   45498:	18001c26 	beq	r3,zero,4550c <__swsetup_r+0xd4>
   4549c:	0005883a 	mov	r2,zero
   454a0:	dfc00217 	ldw	ra,8(sp)
   454a4:	dc400117 	ldw	r17,4(sp)
   454a8:	dc000017 	ldw	r16,0(sp)
   454ac:	dec00304 	addi	sp,sp,12
   454b0:	f800283a 	ret
   454b4:	2080040c 	andi	r2,r4,16
   454b8:	10002e26 	beq	r2,zero,45574 <__swsetup_r+0x13c>
   454bc:	2080010c 	andi	r2,r4,4
   454c0:	10001e1e 	bne	r2,zero,4553c <__swsetup_r+0x104>
   454c4:	80c00417 	ldw	r3,16(r16)
   454c8:	20800214 	ori	r2,r4,8
   454cc:	8080030d 	sth	r2,12(r16)
   454d0:	183feb1e 	bne	r3,zero,45480 <__alt_data_end+0xfffc5480>
   454d4:	1100a00c 	andi	r4,r2,640
   454d8:	01408004 	movi	r5,512
   454dc:	217fe826 	beq	r4,r5,45480 <__alt_data_end+0xfffc5480>
   454e0:	800b883a 	mov	r5,r16
   454e4:	8809883a 	mov	r4,r17
   454e8:	0047af40 	call	47af4 <__smakebuf_r>
   454ec:	8080030b 	ldhu	r2,12(r16)
   454f0:	80c00417 	ldw	r3,16(r16)
   454f4:	003fe206 	br	45480 <__alt_data_end+0xfffc5480>
   454f8:	80800517 	ldw	r2,20(r16)
   454fc:	80000215 	stw	zero,8(r16)
   45500:	0085c83a 	sub	r2,zero,r2
   45504:	80800615 	stw	r2,24(r16)
   45508:	183fe41e 	bne	r3,zero,4549c <__alt_data_end+0xfffc549c>
   4550c:	80c0030b 	ldhu	r3,12(r16)
   45510:	0005883a 	mov	r2,zero
   45514:	1900200c 	andi	r4,r3,128
   45518:	203fe126 	beq	r4,zero,454a0 <__alt_data_end+0xfffc54a0>
   4551c:	18c01014 	ori	r3,r3,64
   45520:	80c0030d 	sth	r3,12(r16)
   45524:	00bfffc4 	movi	r2,-1
   45528:	003fdd06 	br	454a0 <__alt_data_end+0xfffc54a0>
   4552c:	004740c0 	call	4740c <__sinit>
   45530:	003fcd06 	br	45468 <__alt_data_end+0xfffc5468>
   45534:	0005883a 	mov	r2,zero
   45538:	003fd606 	br	45494 <__alt_data_end+0xfffc5494>
   4553c:	81400c17 	ldw	r5,48(r16)
   45540:	28000626 	beq	r5,zero,4555c <__swsetup_r+0x124>
   45544:	80801004 	addi	r2,r16,64
   45548:	28800326 	beq	r5,r2,45558 <__swsetup_r+0x120>
   4554c:	8809883a 	mov	r4,r17
   45550:	00475800 	call	47580 <_free_r>
   45554:	8100030b 	ldhu	r4,12(r16)
   45558:	80000c15 	stw	zero,48(r16)
   4555c:	80c00417 	ldw	r3,16(r16)
   45560:	00bff6c4 	movi	r2,-37
   45564:	1108703a 	and	r4,r2,r4
   45568:	80000115 	stw	zero,4(r16)
   4556c:	80c00015 	stw	r3,0(r16)
   45570:	003fd506 	br	454c8 <__alt_data_end+0xfffc54c8>
   45574:	00800244 	movi	r2,9
   45578:	88800015 	stw	r2,0(r17)
   4557c:	20801014 	ori	r2,r4,64
   45580:	8080030d 	sth	r2,12(r16)
   45584:	00bfffc4 	movi	r2,-1
   45588:	003fc506 	br	454a0 <__alt_data_end+0xfffc54a0>

0004558c <quorem>:
   4558c:	defff704 	addi	sp,sp,-36
   45590:	dc800215 	stw	r18,8(sp)
   45594:	20800417 	ldw	r2,16(r4)
   45598:	2c800417 	ldw	r18,16(r5)
   4559c:	dfc00815 	stw	ra,32(sp)
   455a0:	ddc00715 	stw	r23,28(sp)
   455a4:	dd800615 	stw	r22,24(sp)
   455a8:	dd400515 	stw	r21,20(sp)
   455ac:	dd000415 	stw	r20,16(sp)
   455b0:	dcc00315 	stw	r19,12(sp)
   455b4:	dc400115 	stw	r17,4(sp)
   455b8:	dc000015 	stw	r16,0(sp)
   455bc:	14807116 	blt	r2,r18,45784 <quorem+0x1f8>
   455c0:	94bfffc4 	addi	r18,r18,-1
   455c4:	94ad883a 	add	r22,r18,r18
   455c8:	b5ad883a 	add	r22,r22,r22
   455cc:	2c400504 	addi	r17,r5,20
   455d0:	8da9883a 	add	r20,r17,r22
   455d4:	25400504 	addi	r21,r4,20
   455d8:	282f883a 	mov	r23,r5
   455dc:	adad883a 	add	r22,r21,r22
   455e0:	a1400017 	ldw	r5,0(r20)
   455e4:	2021883a 	mov	r16,r4
   455e8:	b1000017 	ldw	r4,0(r22)
   455ec:	29400044 	addi	r5,r5,1
   455f0:	0040b780 	call	40b78 <__udivsi3>
   455f4:	1027883a 	mov	r19,r2
   455f8:	10002c26 	beq	r2,zero,456ac <quorem+0x120>
   455fc:	a813883a 	mov	r9,r21
   45600:	880b883a 	mov	r5,r17
   45604:	0009883a 	mov	r4,zero
   45608:	000d883a 	mov	r6,zero
   4560c:	2a000017 	ldw	r8,0(r5)
   45610:	49c00017 	ldw	r7,0(r9)
   45614:	29400104 	addi	r5,r5,4
   45618:	40bfffcc 	andi	r2,r8,65535
   4561c:	14c5383a 	mul	r2,r2,r19
   45620:	4010d43a 	srli	r8,r8,16
   45624:	38ffffcc 	andi	r3,r7,65535
   45628:	1105883a 	add	r2,r2,r4
   4562c:	1008d43a 	srli	r4,r2,16
   45630:	44d1383a 	mul	r8,r8,r19
   45634:	198d883a 	add	r6,r3,r6
   45638:	10ffffcc 	andi	r3,r2,65535
   4563c:	30c7c83a 	sub	r3,r6,r3
   45640:	380ed43a 	srli	r7,r7,16
   45644:	4105883a 	add	r2,r8,r4
   45648:	180dd43a 	srai	r6,r3,16
   4564c:	113fffcc 	andi	r4,r2,65535
   45650:	390fc83a 	sub	r7,r7,r4
   45654:	398d883a 	add	r6,r7,r6
   45658:	300e943a 	slli	r7,r6,16
   4565c:	18ffffcc 	andi	r3,r3,65535
   45660:	1008d43a 	srli	r4,r2,16
   45664:	38ceb03a 	or	r7,r7,r3
   45668:	49c00015 	stw	r7,0(r9)
   4566c:	300dd43a 	srai	r6,r6,16
   45670:	4a400104 	addi	r9,r9,4
   45674:	a17fe52e 	bgeu	r20,r5,4560c <__alt_data_end+0xfffc560c>
   45678:	b0800017 	ldw	r2,0(r22)
   4567c:	10000b1e 	bne	r2,zero,456ac <quorem+0x120>
   45680:	b0bfff04 	addi	r2,r22,-4
   45684:	a880082e 	bgeu	r21,r2,456a8 <quorem+0x11c>
   45688:	b0ffff17 	ldw	r3,-4(r22)
   4568c:	18000326 	beq	r3,zero,4569c <quorem+0x110>
   45690:	00000506 	br	456a8 <quorem+0x11c>
   45694:	10c00017 	ldw	r3,0(r2)
   45698:	1800031e 	bne	r3,zero,456a8 <quorem+0x11c>
   4569c:	10bfff04 	addi	r2,r2,-4
   456a0:	94bfffc4 	addi	r18,r18,-1
   456a4:	a8bffb36 	bltu	r21,r2,45694 <__alt_data_end+0xfffc5694>
   456a8:	84800415 	stw	r18,16(r16)
   456ac:	b80b883a 	mov	r5,r23
   456b0:	8009883a 	mov	r4,r16
   456b4:	00490d80 	call	490d8 <__mcmp>
   456b8:	10002616 	blt	r2,zero,45754 <quorem+0x1c8>
   456bc:	9cc00044 	addi	r19,r19,1
   456c0:	a805883a 	mov	r2,r21
   456c4:	000b883a 	mov	r5,zero
   456c8:	11000017 	ldw	r4,0(r2)
   456cc:	89800017 	ldw	r6,0(r17)
   456d0:	10800104 	addi	r2,r2,4
   456d4:	20ffffcc 	andi	r3,r4,65535
   456d8:	194b883a 	add	r5,r3,r5
   456dc:	30ffffcc 	andi	r3,r6,65535
   456e0:	28c7c83a 	sub	r3,r5,r3
   456e4:	300cd43a 	srli	r6,r6,16
   456e8:	2008d43a 	srli	r4,r4,16
   456ec:	180bd43a 	srai	r5,r3,16
   456f0:	18ffffcc 	andi	r3,r3,65535
   456f4:	2189c83a 	sub	r4,r4,r6
   456f8:	2149883a 	add	r4,r4,r5
   456fc:	200c943a 	slli	r6,r4,16
   45700:	8c400104 	addi	r17,r17,4
   45704:	200bd43a 	srai	r5,r4,16
   45708:	30c6b03a 	or	r3,r6,r3
   4570c:	10ffff15 	stw	r3,-4(r2)
   45710:	a47fed2e 	bgeu	r20,r17,456c8 <__alt_data_end+0xfffc56c8>
   45714:	9485883a 	add	r2,r18,r18
   45718:	1085883a 	add	r2,r2,r2
   4571c:	a887883a 	add	r3,r21,r2
   45720:	18800017 	ldw	r2,0(r3)
   45724:	10000b1e 	bne	r2,zero,45754 <quorem+0x1c8>
   45728:	18bfff04 	addi	r2,r3,-4
   4572c:	a880082e 	bgeu	r21,r2,45750 <quorem+0x1c4>
   45730:	18ffff17 	ldw	r3,-4(r3)
   45734:	18000326 	beq	r3,zero,45744 <quorem+0x1b8>
   45738:	00000506 	br	45750 <quorem+0x1c4>
   4573c:	10c00017 	ldw	r3,0(r2)
   45740:	1800031e 	bne	r3,zero,45750 <quorem+0x1c4>
   45744:	10bfff04 	addi	r2,r2,-4
   45748:	94bfffc4 	addi	r18,r18,-1
   4574c:	a8bffb36 	bltu	r21,r2,4573c <__alt_data_end+0xfffc573c>
   45750:	84800415 	stw	r18,16(r16)
   45754:	9805883a 	mov	r2,r19
   45758:	dfc00817 	ldw	ra,32(sp)
   4575c:	ddc00717 	ldw	r23,28(sp)
   45760:	dd800617 	ldw	r22,24(sp)
   45764:	dd400517 	ldw	r21,20(sp)
   45768:	dd000417 	ldw	r20,16(sp)
   4576c:	dcc00317 	ldw	r19,12(sp)
   45770:	dc800217 	ldw	r18,8(sp)
   45774:	dc400117 	ldw	r17,4(sp)
   45778:	dc000017 	ldw	r16,0(sp)
   4577c:	dec00904 	addi	sp,sp,36
   45780:	f800283a 	ret
   45784:	0005883a 	mov	r2,zero
   45788:	003ff306 	br	45758 <__alt_data_end+0xfffc5758>

0004578c <_dtoa_r>:
   4578c:	20801017 	ldw	r2,64(r4)
   45790:	deffde04 	addi	sp,sp,-136
   45794:	df002015 	stw	fp,128(sp)
   45798:	dcc01b15 	stw	r19,108(sp)
   4579c:	dc801a15 	stw	r18,104(sp)
   457a0:	dc401915 	stw	r17,100(sp)
   457a4:	dc001815 	stw	r16,96(sp)
   457a8:	dfc02115 	stw	ra,132(sp)
   457ac:	ddc01f15 	stw	r23,124(sp)
   457b0:	dd801e15 	stw	r22,120(sp)
   457b4:	dd401d15 	stw	r21,116(sp)
   457b8:	dd001c15 	stw	r20,112(sp)
   457bc:	d9c00315 	stw	r7,12(sp)
   457c0:	2039883a 	mov	fp,r4
   457c4:	3023883a 	mov	r17,r6
   457c8:	2825883a 	mov	r18,r5
   457cc:	dc002417 	ldw	r16,144(sp)
   457d0:	3027883a 	mov	r19,r6
   457d4:	10000826 	beq	r2,zero,457f8 <_dtoa_r+0x6c>
   457d8:	21801117 	ldw	r6,68(r4)
   457dc:	00c00044 	movi	r3,1
   457e0:	100b883a 	mov	r5,r2
   457e4:	1986983a 	sll	r3,r3,r6
   457e8:	11800115 	stw	r6,4(r2)
   457ec:	10c00215 	stw	r3,8(r2)
   457f0:	00488b80 	call	488b8 <_Bfree>
   457f4:	e0001015 	stw	zero,64(fp)
   457f8:	88002e16 	blt	r17,zero,458b4 <_dtoa_r+0x128>
   457fc:	80000015 	stw	zero,0(r16)
   45800:	889ffc2c 	andhi	r2,r17,32752
   45804:	00dffc34 	movhi	r3,32752
   45808:	10c01c26 	beq	r2,r3,4587c <_dtoa_r+0xf0>
   4580c:	000d883a 	mov	r6,zero
   45810:	000f883a 	mov	r7,zero
   45814:	9009883a 	mov	r4,r18
   45818:	980b883a 	mov	r5,r19
   4581c:	004da140 	call	4da14 <__eqdf2>
   45820:	10002b1e 	bne	r2,zero,458d0 <_dtoa_r+0x144>
   45824:	d9c02317 	ldw	r7,140(sp)
   45828:	00800044 	movi	r2,1
   4582c:	38800015 	stw	r2,0(r7)
   45830:	d8802517 	ldw	r2,148(sp)
   45834:	10019e26 	beq	r2,zero,45eb0 <_dtoa_r+0x724>
   45838:	d8c02517 	ldw	r3,148(sp)
   4583c:	00800174 	movhi	r2,5
   45840:	10844b44 	addi	r2,r2,4397
   45844:	18800015 	stw	r2,0(r3)
   45848:	10bfffc4 	addi	r2,r2,-1
   4584c:	dfc02117 	ldw	ra,132(sp)
   45850:	df002017 	ldw	fp,128(sp)
   45854:	ddc01f17 	ldw	r23,124(sp)
   45858:	dd801e17 	ldw	r22,120(sp)
   4585c:	dd401d17 	ldw	r21,116(sp)
   45860:	dd001c17 	ldw	r20,112(sp)
   45864:	dcc01b17 	ldw	r19,108(sp)
   45868:	dc801a17 	ldw	r18,104(sp)
   4586c:	dc401917 	ldw	r17,100(sp)
   45870:	dc001817 	ldw	r16,96(sp)
   45874:	dec02204 	addi	sp,sp,136
   45878:	f800283a 	ret
   4587c:	d8c02317 	ldw	r3,140(sp)
   45880:	0089c3c4 	movi	r2,9999
   45884:	18800015 	stw	r2,0(r3)
   45888:	90017726 	beq	r18,zero,45e68 <_dtoa_r+0x6dc>
   4588c:	00800174 	movhi	r2,5
   45890:	10845704 	addi	r2,r2,4444
   45894:	d9002517 	ldw	r4,148(sp)
   45898:	203fec26 	beq	r4,zero,4584c <__alt_data_end+0xfffc584c>
   4589c:	10c000c7 	ldb	r3,3(r2)
   458a0:	1801781e 	bne	r3,zero,45e84 <_dtoa_r+0x6f8>
   458a4:	10c000c4 	addi	r3,r2,3
   458a8:	d9802517 	ldw	r6,148(sp)
   458ac:	30c00015 	stw	r3,0(r6)
   458b0:	003fe606 	br	4584c <__alt_data_end+0xfffc584c>
   458b4:	04e00034 	movhi	r19,32768
   458b8:	9cffffc4 	addi	r19,r19,-1
   458bc:	00800044 	movi	r2,1
   458c0:	8ce6703a 	and	r19,r17,r19
   458c4:	80800015 	stw	r2,0(r16)
   458c8:	9823883a 	mov	r17,r19
   458cc:	003fcc06 	br	45800 <__alt_data_end+0xfffc5800>
   458d0:	d8800204 	addi	r2,sp,8
   458d4:	d8800015 	stw	r2,0(sp)
   458d8:	d9c00104 	addi	r7,sp,4
   458dc:	900b883a 	mov	r5,r18
   458e0:	980d883a 	mov	r6,r19
   458e4:	e009883a 	mov	r4,fp
   458e8:	8820d53a 	srli	r16,r17,20
   458ec:	00494a40 	call	494a4 <__d2b>
   458f0:	d8800915 	stw	r2,36(sp)
   458f4:	8001651e 	bne	r16,zero,45e8c <_dtoa_r+0x700>
   458f8:	dd800217 	ldw	r22,8(sp)
   458fc:	dc000117 	ldw	r16,4(sp)
   45900:	00800804 	movi	r2,32
   45904:	b421883a 	add	r16,r22,r16
   45908:	80c10c84 	addi	r3,r16,1074
   4590c:	10c2d10e 	bge	r2,r3,46454 <_dtoa_r+0xcc8>
   45910:	00801004 	movi	r2,64
   45914:	81010484 	addi	r4,r16,1042
   45918:	10c7c83a 	sub	r3,r2,r3
   4591c:	9108d83a 	srl	r4,r18,r4
   45920:	88e2983a 	sll	r17,r17,r3
   45924:	2448b03a 	or	r4,r4,r17
   45928:	004e6c40 	call	4e6c4 <__floatunsidf>
   4592c:	017f8434 	movhi	r5,65040
   45930:	01800044 	movi	r6,1
   45934:	1009883a 	mov	r4,r2
   45938:	194b883a 	add	r5,r3,r5
   4593c:	843fffc4 	addi	r16,r16,-1
   45940:	d9801115 	stw	r6,68(sp)
   45944:	000d883a 	mov	r6,zero
   45948:	01cffe34 	movhi	r7,16376
   4594c:	004dc6c0 	call	4dc6c <__subdf3>
   45950:	0198dbf4 	movhi	r6,25455
   45954:	01cff4f4 	movhi	r7,16339
   45958:	3190d844 	addi	r6,r6,17249
   4595c:	39e1e9c4 	addi	r7,r7,-30809
   45960:	1009883a 	mov	r4,r2
   45964:	180b883a 	mov	r5,r3
   45968:	00426c80 	call	426c8 <__muldf3>
   4596c:	01a2d874 	movhi	r6,35681
   45970:	01cff1f4 	movhi	r7,16327
   45974:	31b22cc4 	addi	r6,r6,-14157
   45978:	39e28a04 	addi	r7,r7,-30168
   4597c:	180b883a 	mov	r5,r3
   45980:	1009883a 	mov	r4,r2
   45984:	0041e1c0 	call	41e1c <__adddf3>
   45988:	8009883a 	mov	r4,r16
   4598c:	1029883a 	mov	r20,r2
   45990:	1823883a 	mov	r17,r3
   45994:	004e5e80 	call	4e5e8 <__floatsidf>
   45998:	019427f4 	movhi	r6,20639
   4599c:	01cff4f4 	movhi	r7,16339
   459a0:	319e7ec4 	addi	r6,r6,31227
   459a4:	39d104c4 	addi	r7,r7,17427
   459a8:	1009883a 	mov	r4,r2
   459ac:	180b883a 	mov	r5,r3
   459b0:	00426c80 	call	426c8 <__muldf3>
   459b4:	100d883a 	mov	r6,r2
   459b8:	180f883a 	mov	r7,r3
   459bc:	a009883a 	mov	r4,r20
   459c0:	880b883a 	mov	r5,r17
   459c4:	0041e1c0 	call	41e1c <__adddf3>
   459c8:	1009883a 	mov	r4,r2
   459cc:	180b883a 	mov	r5,r3
   459d0:	1029883a 	mov	r20,r2
   459d4:	1823883a 	mov	r17,r3
   459d8:	004e5680 	call	4e568 <__fixdfsi>
   459dc:	000d883a 	mov	r6,zero
   459e0:	000f883a 	mov	r7,zero
   459e4:	a009883a 	mov	r4,r20
   459e8:	880b883a 	mov	r5,r17
   459ec:	d8800515 	stw	r2,20(sp)
   459f0:	004db780 	call	4db78 <__ledf2>
   459f4:	10028716 	blt	r2,zero,46414 <_dtoa_r+0xc88>
   459f8:	d8c00517 	ldw	r3,20(sp)
   459fc:	00800584 	movi	r2,22
   45a00:	10c27536 	bltu	r2,r3,463d8 <_dtoa_r+0xc4c>
   45a04:	180490fa 	slli	r2,r3,3
   45a08:	00c00174 	movhi	r3,5
   45a0c:	18c47304 	addi	r3,r3,4556
   45a10:	1885883a 	add	r2,r3,r2
   45a14:	11000017 	ldw	r4,0(r2)
   45a18:	11400117 	ldw	r5,4(r2)
   45a1c:	900d883a 	mov	r6,r18
   45a20:	980f883a 	mov	r7,r19
   45a24:	004da9c0 	call	4da9c <__gedf2>
   45a28:	00828d0e 	bge	zero,r2,46460 <_dtoa_r+0xcd4>
   45a2c:	d9000517 	ldw	r4,20(sp)
   45a30:	d8000e15 	stw	zero,56(sp)
   45a34:	213fffc4 	addi	r4,r4,-1
   45a38:	d9000515 	stw	r4,20(sp)
   45a3c:	b42dc83a 	sub	r22,r22,r16
   45a40:	b5bfffc4 	addi	r22,r22,-1
   45a44:	b0026f16 	blt	r22,zero,46404 <_dtoa_r+0xc78>
   45a48:	d8000815 	stw	zero,32(sp)
   45a4c:	d9c00517 	ldw	r7,20(sp)
   45a50:	38026416 	blt	r7,zero,463e4 <_dtoa_r+0xc58>
   45a54:	b1ed883a 	add	r22,r22,r7
   45a58:	d9c00d15 	stw	r7,52(sp)
   45a5c:	d8000a15 	stw	zero,40(sp)
   45a60:	d9800317 	ldw	r6,12(sp)
   45a64:	00800244 	movi	r2,9
   45a68:	11811436 	bltu	r2,r6,45ebc <_dtoa_r+0x730>
   45a6c:	00800144 	movi	r2,5
   45a70:	1184e10e 	bge	r2,r6,46df8 <_dtoa_r+0x166c>
   45a74:	31bfff04 	addi	r6,r6,-4
   45a78:	d9800315 	stw	r6,12(sp)
   45a7c:	0023883a 	mov	r17,zero
   45a80:	d9800317 	ldw	r6,12(sp)
   45a84:	008000c4 	movi	r2,3
   45a88:	30836726 	beq	r6,r2,46828 <_dtoa_r+0x109c>
   45a8c:	1183410e 	bge	r2,r6,46794 <_dtoa_r+0x1008>
   45a90:	d9c00317 	ldw	r7,12(sp)
   45a94:	00800104 	movi	r2,4
   45a98:	38827c26 	beq	r7,r2,4648c <_dtoa_r+0xd00>
   45a9c:	00800144 	movi	r2,5
   45aa0:	3884c41e 	bne	r7,r2,46db4 <_dtoa_r+0x1628>
   45aa4:	00800044 	movi	r2,1
   45aa8:	d8800b15 	stw	r2,44(sp)
   45aac:	d8c00517 	ldw	r3,20(sp)
   45ab0:	d9002217 	ldw	r4,136(sp)
   45ab4:	1907883a 	add	r3,r3,r4
   45ab8:	19800044 	addi	r6,r3,1
   45abc:	d8c00c15 	stw	r3,48(sp)
   45ac0:	d9800615 	stw	r6,24(sp)
   45ac4:	0183a40e 	bge	zero,r6,46958 <_dtoa_r+0x11cc>
   45ac8:	d9800617 	ldw	r6,24(sp)
   45acc:	3021883a 	mov	r16,r6
   45ad0:	e0001115 	stw	zero,68(fp)
   45ad4:	008005c4 	movi	r2,23
   45ad8:	1184c92e 	bgeu	r2,r6,46e00 <_dtoa_r+0x1674>
   45adc:	00c00044 	movi	r3,1
   45ae0:	00800104 	movi	r2,4
   45ae4:	1085883a 	add	r2,r2,r2
   45ae8:	11000504 	addi	r4,r2,20
   45aec:	180b883a 	mov	r5,r3
   45af0:	18c00044 	addi	r3,r3,1
   45af4:	313ffb2e 	bgeu	r6,r4,45ae4 <__alt_data_end+0xfffc5ae4>
   45af8:	e1401115 	stw	r5,68(fp)
   45afc:	e009883a 	mov	r4,fp
   45b00:	00488100 	call	48810 <_Balloc>
   45b04:	d8800715 	stw	r2,28(sp)
   45b08:	e0801015 	stw	r2,64(fp)
   45b0c:	00800384 	movi	r2,14
   45b10:	1400f736 	bltu	r2,r16,45ef0 <_dtoa_r+0x764>
   45b14:	8800f626 	beq	r17,zero,45ef0 <_dtoa_r+0x764>
   45b18:	d9c00517 	ldw	r7,20(sp)
   45b1c:	01c39a0e 	bge	zero,r7,46988 <_dtoa_r+0x11fc>
   45b20:	388003cc 	andi	r2,r7,15
   45b24:	100490fa 	slli	r2,r2,3
   45b28:	382bd13a 	srai	r21,r7,4
   45b2c:	00c00174 	movhi	r3,5
   45b30:	18c47304 	addi	r3,r3,4556
   45b34:	1885883a 	add	r2,r3,r2
   45b38:	a8c0040c 	andi	r3,r21,16
   45b3c:	12400017 	ldw	r9,0(r2)
   45b40:	12000117 	ldw	r8,4(r2)
   45b44:	18037926 	beq	r3,zero,4692c <_dtoa_r+0x11a0>
   45b48:	00800174 	movhi	r2,5
   45b4c:	10846904 	addi	r2,r2,4516
   45b50:	11800817 	ldw	r6,32(r2)
   45b54:	11c00917 	ldw	r7,36(r2)
   45b58:	9009883a 	mov	r4,r18
   45b5c:	980b883a 	mov	r5,r19
   45b60:	da001715 	stw	r8,92(sp)
   45b64:	da401615 	stw	r9,88(sp)
   45b68:	004d12c0 	call	4d12c <__divdf3>
   45b6c:	da001717 	ldw	r8,92(sp)
   45b70:	da401617 	ldw	r9,88(sp)
   45b74:	ad4003cc 	andi	r21,r21,15
   45b78:	040000c4 	movi	r16,3
   45b7c:	1023883a 	mov	r17,r2
   45b80:	1829883a 	mov	r20,r3
   45b84:	a8001126 	beq	r21,zero,45bcc <_dtoa_r+0x440>
   45b88:	05c00174 	movhi	r23,5
   45b8c:	bdc46904 	addi	r23,r23,4516
   45b90:	4805883a 	mov	r2,r9
   45b94:	4007883a 	mov	r3,r8
   45b98:	a980004c 	andi	r6,r21,1
   45b9c:	1009883a 	mov	r4,r2
   45ba0:	a82bd07a 	srai	r21,r21,1
   45ba4:	180b883a 	mov	r5,r3
   45ba8:	30000426 	beq	r6,zero,45bbc <_dtoa_r+0x430>
   45bac:	b9800017 	ldw	r6,0(r23)
   45bb0:	b9c00117 	ldw	r7,4(r23)
   45bb4:	84000044 	addi	r16,r16,1
   45bb8:	00426c80 	call	426c8 <__muldf3>
   45bbc:	bdc00204 	addi	r23,r23,8
   45bc0:	a83ff51e 	bne	r21,zero,45b98 <__alt_data_end+0xfffc5b98>
   45bc4:	1013883a 	mov	r9,r2
   45bc8:	1811883a 	mov	r8,r3
   45bcc:	480d883a 	mov	r6,r9
   45bd0:	400f883a 	mov	r7,r8
   45bd4:	8809883a 	mov	r4,r17
   45bd8:	a00b883a 	mov	r5,r20
   45bdc:	004d12c0 	call	4d12c <__divdf3>
   45be0:	d8800f15 	stw	r2,60(sp)
   45be4:	d8c01015 	stw	r3,64(sp)
   45be8:	d8c00e17 	ldw	r3,56(sp)
   45bec:	18000626 	beq	r3,zero,45c08 <_dtoa_r+0x47c>
   45bf0:	d9000f17 	ldw	r4,60(sp)
   45bf4:	d9401017 	ldw	r5,64(sp)
   45bf8:	000d883a 	mov	r6,zero
   45bfc:	01cffc34 	movhi	r7,16368
   45c00:	004db780 	call	4db78 <__ledf2>
   45c04:	10040b16 	blt	r2,zero,46c34 <_dtoa_r+0x14a8>
   45c08:	8009883a 	mov	r4,r16
   45c0c:	004e5e80 	call	4e5e8 <__floatsidf>
   45c10:	d9800f17 	ldw	r6,60(sp)
   45c14:	d9c01017 	ldw	r7,64(sp)
   45c18:	1009883a 	mov	r4,r2
   45c1c:	180b883a 	mov	r5,r3
   45c20:	00426c80 	call	426c8 <__muldf3>
   45c24:	000d883a 	mov	r6,zero
   45c28:	01d00734 	movhi	r7,16412
   45c2c:	1009883a 	mov	r4,r2
   45c30:	180b883a 	mov	r5,r3
   45c34:	0041e1c0 	call	41e1c <__adddf3>
   45c38:	1021883a 	mov	r16,r2
   45c3c:	d8800617 	ldw	r2,24(sp)
   45c40:	047f3034 	movhi	r17,64704
   45c44:	1c63883a 	add	r17,r3,r17
   45c48:	10031826 	beq	r2,zero,468ac <_dtoa_r+0x1120>
   45c4c:	d8c00517 	ldw	r3,20(sp)
   45c50:	db000617 	ldw	r12,24(sp)
   45c54:	d8c01315 	stw	r3,76(sp)
   45c58:	d9000b17 	ldw	r4,44(sp)
   45c5c:	20038f26 	beq	r4,zero,46a9c <_dtoa_r+0x1310>
   45c60:	60bfffc4 	addi	r2,r12,-1
   45c64:	100490fa 	slli	r2,r2,3
   45c68:	00c00174 	movhi	r3,5
   45c6c:	18c47304 	addi	r3,r3,4556
   45c70:	1885883a 	add	r2,r3,r2
   45c74:	11800017 	ldw	r6,0(r2)
   45c78:	11c00117 	ldw	r7,4(r2)
   45c7c:	d8800717 	ldw	r2,28(sp)
   45c80:	0009883a 	mov	r4,zero
   45c84:	014ff834 	movhi	r5,16352
   45c88:	db001615 	stw	r12,88(sp)
   45c8c:	15c00044 	addi	r23,r2,1
   45c90:	004d12c0 	call	4d12c <__divdf3>
   45c94:	800d883a 	mov	r6,r16
   45c98:	880f883a 	mov	r7,r17
   45c9c:	1009883a 	mov	r4,r2
   45ca0:	180b883a 	mov	r5,r3
   45ca4:	004dc6c0 	call	4dc6c <__subdf3>
   45ca8:	d9401017 	ldw	r5,64(sp)
   45cac:	d9000f17 	ldw	r4,60(sp)
   45cb0:	102b883a 	mov	r21,r2
   45cb4:	d8c01215 	stw	r3,72(sp)
   45cb8:	004e5680 	call	4e568 <__fixdfsi>
   45cbc:	1009883a 	mov	r4,r2
   45cc0:	1029883a 	mov	r20,r2
   45cc4:	004e5e80 	call	4e5e8 <__floatsidf>
   45cc8:	d9000f17 	ldw	r4,60(sp)
   45ccc:	d9401017 	ldw	r5,64(sp)
   45cd0:	100d883a 	mov	r6,r2
   45cd4:	180f883a 	mov	r7,r3
   45cd8:	004dc6c0 	call	4dc6c <__subdf3>
   45cdc:	1823883a 	mov	r17,r3
   45ce0:	d8c00717 	ldw	r3,28(sp)
   45ce4:	d9401217 	ldw	r5,72(sp)
   45ce8:	a2000c04 	addi	r8,r20,48
   45cec:	1021883a 	mov	r16,r2
   45cf0:	1a000005 	stb	r8,0(r3)
   45cf4:	800d883a 	mov	r6,r16
   45cf8:	880f883a 	mov	r7,r17
   45cfc:	a809883a 	mov	r4,r21
   45d00:	4029883a 	mov	r20,r8
   45d04:	004da9c0 	call	4da9c <__gedf2>
   45d08:	00841d16 	blt	zero,r2,46d80 <_dtoa_r+0x15f4>
   45d0c:	800d883a 	mov	r6,r16
   45d10:	880f883a 	mov	r7,r17
   45d14:	0009883a 	mov	r4,zero
   45d18:	014ffc34 	movhi	r5,16368
   45d1c:	004dc6c0 	call	4dc6c <__subdf3>
   45d20:	d9401217 	ldw	r5,72(sp)
   45d24:	100d883a 	mov	r6,r2
   45d28:	180f883a 	mov	r7,r3
   45d2c:	a809883a 	mov	r4,r21
   45d30:	004da9c0 	call	4da9c <__gedf2>
   45d34:	db001617 	ldw	r12,88(sp)
   45d38:	00840e16 	blt	zero,r2,46d74 <_dtoa_r+0x15e8>
   45d3c:	00800044 	movi	r2,1
   45d40:	13006b0e 	bge	r2,r12,45ef0 <_dtoa_r+0x764>
   45d44:	d9000717 	ldw	r4,28(sp)
   45d48:	dd800f15 	stw	r22,60(sp)
   45d4c:	dcc01015 	stw	r19,64(sp)
   45d50:	2319883a 	add	r12,r4,r12
   45d54:	dcc01217 	ldw	r19,72(sp)
   45d58:	602d883a 	mov	r22,r12
   45d5c:	dc801215 	stw	r18,72(sp)
   45d60:	b825883a 	mov	r18,r23
   45d64:	00000906 	br	45d8c <_dtoa_r+0x600>
   45d68:	004dc6c0 	call	4dc6c <__subdf3>
   45d6c:	a80d883a 	mov	r6,r21
   45d70:	980f883a 	mov	r7,r19
   45d74:	1009883a 	mov	r4,r2
   45d78:	180b883a 	mov	r5,r3
   45d7c:	004db780 	call	4db78 <__ledf2>
   45d80:	1003e816 	blt	r2,zero,46d24 <_dtoa_r+0x1598>
   45d84:	b825883a 	mov	r18,r23
   45d88:	bd83e926 	beq	r23,r22,46d30 <_dtoa_r+0x15a4>
   45d8c:	a809883a 	mov	r4,r21
   45d90:	980b883a 	mov	r5,r19
   45d94:	000d883a 	mov	r6,zero
   45d98:	01d00934 	movhi	r7,16420
   45d9c:	00426c80 	call	426c8 <__muldf3>
   45da0:	000d883a 	mov	r6,zero
   45da4:	01d00934 	movhi	r7,16420
   45da8:	8009883a 	mov	r4,r16
   45dac:	880b883a 	mov	r5,r17
   45db0:	102b883a 	mov	r21,r2
   45db4:	1827883a 	mov	r19,r3
   45db8:	00426c80 	call	426c8 <__muldf3>
   45dbc:	180b883a 	mov	r5,r3
   45dc0:	1009883a 	mov	r4,r2
   45dc4:	1821883a 	mov	r16,r3
   45dc8:	1023883a 	mov	r17,r2
   45dcc:	004e5680 	call	4e568 <__fixdfsi>
   45dd0:	1009883a 	mov	r4,r2
   45dd4:	1029883a 	mov	r20,r2
   45dd8:	004e5e80 	call	4e5e8 <__floatsidf>
   45ddc:	8809883a 	mov	r4,r17
   45de0:	800b883a 	mov	r5,r16
   45de4:	100d883a 	mov	r6,r2
   45de8:	180f883a 	mov	r7,r3
   45dec:	004dc6c0 	call	4dc6c <__subdf3>
   45df0:	a5000c04 	addi	r20,r20,48
   45df4:	a80d883a 	mov	r6,r21
   45df8:	980f883a 	mov	r7,r19
   45dfc:	1009883a 	mov	r4,r2
   45e00:	180b883a 	mov	r5,r3
   45e04:	95000005 	stb	r20,0(r18)
   45e08:	1021883a 	mov	r16,r2
   45e0c:	1823883a 	mov	r17,r3
   45e10:	004db780 	call	4db78 <__ledf2>
   45e14:	bdc00044 	addi	r23,r23,1
   45e18:	800d883a 	mov	r6,r16
   45e1c:	880f883a 	mov	r7,r17
   45e20:	0009883a 	mov	r4,zero
   45e24:	014ffc34 	movhi	r5,16368
   45e28:	103fcf0e 	bge	r2,zero,45d68 <__alt_data_end+0xfffc5d68>
   45e2c:	d8c01317 	ldw	r3,76(sp)
   45e30:	d8c00515 	stw	r3,20(sp)
   45e34:	d9400917 	ldw	r5,36(sp)
   45e38:	e009883a 	mov	r4,fp
   45e3c:	00488b80 	call	488b8 <_Bfree>
   45e40:	d9000517 	ldw	r4,20(sp)
   45e44:	d9802317 	ldw	r6,140(sp)
   45e48:	d9c02517 	ldw	r7,148(sp)
   45e4c:	b8000005 	stb	zero,0(r23)
   45e50:	20800044 	addi	r2,r4,1
   45e54:	30800015 	stw	r2,0(r6)
   45e58:	3802aa26 	beq	r7,zero,46904 <_dtoa_r+0x1178>
   45e5c:	3dc00015 	stw	r23,0(r7)
   45e60:	d8800717 	ldw	r2,28(sp)
   45e64:	003e7906 	br	4584c <__alt_data_end+0xfffc584c>
   45e68:	00800434 	movhi	r2,16
   45e6c:	10bfffc4 	addi	r2,r2,-1
   45e70:	88a2703a 	and	r17,r17,r2
   45e74:	883e851e 	bne	r17,zero,4588c <__alt_data_end+0xfffc588c>
   45e78:	00800174 	movhi	r2,5
   45e7c:	10845404 	addi	r2,r2,4432
   45e80:	003e8406 	br	45894 <__alt_data_end+0xfffc5894>
   45e84:	10c00204 	addi	r3,r2,8
   45e88:	003e8706 	br	458a8 <__alt_data_end+0xfffc58a8>
   45e8c:	01400434 	movhi	r5,16
   45e90:	297fffc4 	addi	r5,r5,-1
   45e94:	994a703a 	and	r5,r19,r5
   45e98:	9009883a 	mov	r4,r18
   45e9c:	843f0044 	addi	r16,r16,-1023
   45ea0:	294ffc34 	orhi	r5,r5,16368
   45ea4:	dd800217 	ldw	r22,8(sp)
   45ea8:	d8001115 	stw	zero,68(sp)
   45eac:	003ea506 	br	45944 <__alt_data_end+0xfffc5944>
   45eb0:	00800174 	movhi	r2,5
   45eb4:	10844b04 	addi	r2,r2,4396
   45eb8:	003e6406 	br	4584c <__alt_data_end+0xfffc584c>
   45ebc:	e0001115 	stw	zero,68(fp)
   45ec0:	000b883a 	mov	r5,zero
   45ec4:	e009883a 	mov	r4,fp
   45ec8:	00488100 	call	48810 <_Balloc>
   45ecc:	01bfffc4 	movi	r6,-1
   45ed0:	01c00044 	movi	r7,1
   45ed4:	d8800715 	stw	r2,28(sp)
   45ed8:	d9800c15 	stw	r6,48(sp)
   45edc:	e0801015 	stw	r2,64(fp)
   45ee0:	d8000315 	stw	zero,12(sp)
   45ee4:	d9c00b15 	stw	r7,44(sp)
   45ee8:	d9800615 	stw	r6,24(sp)
   45eec:	d8002215 	stw	zero,136(sp)
   45ef0:	d8800117 	ldw	r2,4(sp)
   45ef4:	10008916 	blt	r2,zero,4611c <_dtoa_r+0x990>
   45ef8:	d9000517 	ldw	r4,20(sp)
   45efc:	00c00384 	movi	r3,14
   45f00:	19008616 	blt	r3,r4,4611c <_dtoa_r+0x990>
   45f04:	200490fa 	slli	r2,r4,3
   45f08:	00c00174 	movhi	r3,5
   45f0c:	d9802217 	ldw	r6,136(sp)
   45f10:	18c47304 	addi	r3,r3,4556
   45f14:	1885883a 	add	r2,r3,r2
   45f18:	14000017 	ldw	r16,0(r2)
   45f1c:	14400117 	ldw	r17,4(r2)
   45f20:	30016316 	blt	r6,zero,464b0 <_dtoa_r+0xd24>
   45f24:	800d883a 	mov	r6,r16
   45f28:	880f883a 	mov	r7,r17
   45f2c:	9009883a 	mov	r4,r18
   45f30:	980b883a 	mov	r5,r19
   45f34:	004d12c0 	call	4d12c <__divdf3>
   45f38:	180b883a 	mov	r5,r3
   45f3c:	1009883a 	mov	r4,r2
   45f40:	004e5680 	call	4e568 <__fixdfsi>
   45f44:	1009883a 	mov	r4,r2
   45f48:	102b883a 	mov	r21,r2
   45f4c:	004e5e80 	call	4e5e8 <__floatsidf>
   45f50:	800d883a 	mov	r6,r16
   45f54:	880f883a 	mov	r7,r17
   45f58:	1009883a 	mov	r4,r2
   45f5c:	180b883a 	mov	r5,r3
   45f60:	00426c80 	call	426c8 <__muldf3>
   45f64:	100d883a 	mov	r6,r2
   45f68:	180f883a 	mov	r7,r3
   45f6c:	9009883a 	mov	r4,r18
   45f70:	980b883a 	mov	r5,r19
   45f74:	004dc6c0 	call	4dc6c <__subdf3>
   45f78:	d9c00717 	ldw	r7,28(sp)
   45f7c:	1009883a 	mov	r4,r2
   45f80:	a8800c04 	addi	r2,r21,48
   45f84:	38800005 	stb	r2,0(r7)
   45f88:	3dc00044 	addi	r23,r7,1
   45f8c:	d9c00617 	ldw	r7,24(sp)
   45f90:	01800044 	movi	r6,1
   45f94:	180b883a 	mov	r5,r3
   45f98:	2005883a 	mov	r2,r4
   45f9c:	39803826 	beq	r7,r6,46080 <_dtoa_r+0x8f4>
   45fa0:	000d883a 	mov	r6,zero
   45fa4:	01d00934 	movhi	r7,16420
   45fa8:	00426c80 	call	426c8 <__muldf3>
   45fac:	000d883a 	mov	r6,zero
   45fb0:	000f883a 	mov	r7,zero
   45fb4:	1009883a 	mov	r4,r2
   45fb8:	180b883a 	mov	r5,r3
   45fbc:	1025883a 	mov	r18,r2
   45fc0:	1827883a 	mov	r19,r3
   45fc4:	004da140 	call	4da14 <__eqdf2>
   45fc8:	103f9a26 	beq	r2,zero,45e34 <__alt_data_end+0xfffc5e34>
   45fcc:	d9c00617 	ldw	r7,24(sp)
   45fd0:	d8c00717 	ldw	r3,28(sp)
   45fd4:	b829883a 	mov	r20,r23
   45fd8:	38bfffc4 	addi	r2,r7,-1
   45fdc:	18ad883a 	add	r22,r3,r2
   45fe0:	00000a06 	br	4600c <_dtoa_r+0x880>
   45fe4:	00426c80 	call	426c8 <__muldf3>
   45fe8:	000d883a 	mov	r6,zero
   45fec:	000f883a 	mov	r7,zero
   45ff0:	1009883a 	mov	r4,r2
   45ff4:	180b883a 	mov	r5,r3
   45ff8:	1025883a 	mov	r18,r2
   45ffc:	1827883a 	mov	r19,r3
   46000:	b829883a 	mov	r20,r23
   46004:	004da140 	call	4da14 <__eqdf2>
   46008:	103f8a26 	beq	r2,zero,45e34 <__alt_data_end+0xfffc5e34>
   4600c:	800d883a 	mov	r6,r16
   46010:	880f883a 	mov	r7,r17
   46014:	9009883a 	mov	r4,r18
   46018:	980b883a 	mov	r5,r19
   4601c:	004d12c0 	call	4d12c <__divdf3>
   46020:	180b883a 	mov	r5,r3
   46024:	1009883a 	mov	r4,r2
   46028:	004e5680 	call	4e568 <__fixdfsi>
   4602c:	1009883a 	mov	r4,r2
   46030:	102b883a 	mov	r21,r2
   46034:	004e5e80 	call	4e5e8 <__floatsidf>
   46038:	800d883a 	mov	r6,r16
   4603c:	880f883a 	mov	r7,r17
   46040:	1009883a 	mov	r4,r2
   46044:	180b883a 	mov	r5,r3
   46048:	00426c80 	call	426c8 <__muldf3>
   4604c:	100d883a 	mov	r6,r2
   46050:	180f883a 	mov	r7,r3
   46054:	9009883a 	mov	r4,r18
   46058:	980b883a 	mov	r5,r19
   4605c:	004dc6c0 	call	4dc6c <__subdf3>
   46060:	aa000c04 	addi	r8,r21,48
   46064:	a2000005 	stb	r8,0(r20)
   46068:	000d883a 	mov	r6,zero
   4606c:	01d00934 	movhi	r7,16420
   46070:	1009883a 	mov	r4,r2
   46074:	180b883a 	mov	r5,r3
   46078:	a5c00044 	addi	r23,r20,1
   4607c:	b53fd91e 	bne	r22,r20,45fe4 <__alt_data_end+0xfffc5fe4>
   46080:	100d883a 	mov	r6,r2
   46084:	180f883a 	mov	r7,r3
   46088:	1009883a 	mov	r4,r2
   4608c:	180b883a 	mov	r5,r3
   46090:	0041e1c0 	call	41e1c <__adddf3>
   46094:	100d883a 	mov	r6,r2
   46098:	180f883a 	mov	r7,r3
   4609c:	8009883a 	mov	r4,r16
   460a0:	880b883a 	mov	r5,r17
   460a4:	1027883a 	mov	r19,r2
   460a8:	1825883a 	mov	r18,r3
   460ac:	004db780 	call	4db78 <__ledf2>
   460b0:	10000816 	blt	r2,zero,460d4 <_dtoa_r+0x948>
   460b4:	980d883a 	mov	r6,r19
   460b8:	900f883a 	mov	r7,r18
   460bc:	8009883a 	mov	r4,r16
   460c0:	880b883a 	mov	r5,r17
   460c4:	004da140 	call	4da14 <__eqdf2>
   460c8:	103f5a1e 	bne	r2,zero,45e34 <__alt_data_end+0xfffc5e34>
   460cc:	ad40004c 	andi	r21,r21,1
   460d0:	a83f5826 	beq	r21,zero,45e34 <__alt_data_end+0xfffc5e34>
   460d4:	bd3fffc3 	ldbu	r20,-1(r23)
   460d8:	b8bfffc4 	addi	r2,r23,-1
   460dc:	1007883a 	mov	r3,r2
   460e0:	01400e44 	movi	r5,57
   460e4:	d9800717 	ldw	r6,28(sp)
   460e8:	00000506 	br	46100 <_dtoa_r+0x974>
   460ec:	18ffffc4 	addi	r3,r3,-1
   460f0:	11824726 	beq	r2,r6,46a10 <_dtoa_r+0x1284>
   460f4:	1d000003 	ldbu	r20,0(r3)
   460f8:	102f883a 	mov	r23,r2
   460fc:	10bfffc4 	addi	r2,r2,-1
   46100:	a1003fcc 	andi	r4,r20,255
   46104:	2100201c 	xori	r4,r4,128
   46108:	213fe004 	addi	r4,r4,-128
   4610c:	217ff726 	beq	r4,r5,460ec <__alt_data_end+0xfffc60ec>
   46110:	a2000044 	addi	r8,r20,1
   46114:	12000005 	stb	r8,0(r2)
   46118:	003f4606 	br	45e34 <__alt_data_end+0xfffc5e34>
   4611c:	d9000b17 	ldw	r4,44(sp)
   46120:	2000c826 	beq	r4,zero,46444 <_dtoa_r+0xcb8>
   46124:	d9800317 	ldw	r6,12(sp)
   46128:	00c00044 	movi	r3,1
   4612c:	1980f90e 	bge	r3,r6,46514 <_dtoa_r+0xd88>
   46130:	d8800617 	ldw	r2,24(sp)
   46134:	d8c00a17 	ldw	r3,40(sp)
   46138:	157fffc4 	addi	r21,r2,-1
   4613c:	1d41f316 	blt	r3,r21,4690c <_dtoa_r+0x1180>
   46140:	1d6bc83a 	sub	r21,r3,r21
   46144:	d9c00617 	ldw	r7,24(sp)
   46148:	3802aa16 	blt	r7,zero,46bf4 <_dtoa_r+0x1468>
   4614c:	dd000817 	ldw	r20,32(sp)
   46150:	d8800617 	ldw	r2,24(sp)
   46154:	d8c00817 	ldw	r3,32(sp)
   46158:	01400044 	movi	r5,1
   4615c:	e009883a 	mov	r4,fp
   46160:	1887883a 	add	r3,r3,r2
   46164:	d8c00815 	stw	r3,32(sp)
   46168:	b0ad883a 	add	r22,r22,r2
   4616c:	0048c1c0 	call	48c1c <__i2b>
   46170:	1023883a 	mov	r17,r2
   46174:	a0000826 	beq	r20,zero,46198 <_dtoa_r+0xa0c>
   46178:	0580070e 	bge	zero,r22,46198 <_dtoa_r+0xa0c>
   4617c:	a005883a 	mov	r2,r20
   46180:	b500b916 	blt	r22,r20,46468 <_dtoa_r+0xcdc>
   46184:	d9000817 	ldw	r4,32(sp)
   46188:	a0a9c83a 	sub	r20,r20,r2
   4618c:	b0adc83a 	sub	r22,r22,r2
   46190:	2089c83a 	sub	r4,r4,r2
   46194:	d9000815 	stw	r4,32(sp)
   46198:	d9800a17 	ldw	r6,40(sp)
   4619c:	0181810e 	bge	zero,r6,467a4 <_dtoa_r+0x1018>
   461a0:	d9c00b17 	ldw	r7,44(sp)
   461a4:	3800b326 	beq	r7,zero,46474 <_dtoa_r+0xce8>
   461a8:	a800b226 	beq	r21,zero,46474 <_dtoa_r+0xce8>
   461ac:	880b883a 	mov	r5,r17
   461b0:	a80d883a 	mov	r6,r21
   461b4:	e009883a 	mov	r4,fp
   461b8:	0048e500 	call	48e50 <__pow5mult>
   461bc:	d9800917 	ldw	r6,36(sp)
   461c0:	100b883a 	mov	r5,r2
   461c4:	e009883a 	mov	r4,fp
   461c8:	1023883a 	mov	r17,r2
   461cc:	0048c580 	call	48c58 <__multiply>
   461d0:	1021883a 	mov	r16,r2
   461d4:	d8800a17 	ldw	r2,40(sp)
   461d8:	d9400917 	ldw	r5,36(sp)
   461dc:	e009883a 	mov	r4,fp
   461e0:	1545c83a 	sub	r2,r2,r21
   461e4:	d8800a15 	stw	r2,40(sp)
   461e8:	00488b80 	call	488b8 <_Bfree>
   461ec:	d8c00a17 	ldw	r3,40(sp)
   461f0:	18009f1e 	bne	r3,zero,46470 <_dtoa_r+0xce4>
   461f4:	05c00044 	movi	r23,1
   461f8:	e009883a 	mov	r4,fp
   461fc:	b80b883a 	mov	r5,r23
   46200:	0048c1c0 	call	48c1c <__i2b>
   46204:	d9000d17 	ldw	r4,52(sp)
   46208:	102b883a 	mov	r21,r2
   4620c:	2000ce26 	beq	r4,zero,46548 <_dtoa_r+0xdbc>
   46210:	200d883a 	mov	r6,r4
   46214:	100b883a 	mov	r5,r2
   46218:	e009883a 	mov	r4,fp
   4621c:	0048e500 	call	48e50 <__pow5mult>
   46220:	d9800317 	ldw	r6,12(sp)
   46224:	102b883a 	mov	r21,r2
   46228:	b981810e 	bge	r23,r6,46830 <_dtoa_r+0x10a4>
   4622c:	0027883a 	mov	r19,zero
   46230:	a8800417 	ldw	r2,16(r21)
   46234:	05c00804 	movi	r23,32
   46238:	10800104 	addi	r2,r2,4
   4623c:	1085883a 	add	r2,r2,r2
   46240:	1085883a 	add	r2,r2,r2
   46244:	a885883a 	add	r2,r21,r2
   46248:	11000017 	ldw	r4,0(r2)
   4624c:	0048b040 	call	48b04 <__hi0bits>
   46250:	b885c83a 	sub	r2,r23,r2
   46254:	1585883a 	add	r2,r2,r22
   46258:	108007cc 	andi	r2,r2,31
   4625c:	1000b326 	beq	r2,zero,4652c <_dtoa_r+0xda0>
   46260:	00c00804 	movi	r3,32
   46264:	1887c83a 	sub	r3,r3,r2
   46268:	01000104 	movi	r4,4
   4626c:	20c2cd0e 	bge	r4,r3,46da4 <_dtoa_r+0x1618>
   46270:	00c00704 	movi	r3,28
   46274:	1885c83a 	sub	r2,r3,r2
   46278:	d8c00817 	ldw	r3,32(sp)
   4627c:	a0a9883a 	add	r20,r20,r2
   46280:	b0ad883a 	add	r22,r22,r2
   46284:	1887883a 	add	r3,r3,r2
   46288:	d8c00815 	stw	r3,32(sp)
   4628c:	d9800817 	ldw	r6,32(sp)
   46290:	0180040e 	bge	zero,r6,462a4 <_dtoa_r+0xb18>
   46294:	800b883a 	mov	r5,r16
   46298:	e009883a 	mov	r4,fp
   4629c:	0048f900 	call	48f90 <__lshift>
   462a0:	1021883a 	mov	r16,r2
   462a4:	0580050e 	bge	zero,r22,462bc <_dtoa_r+0xb30>
   462a8:	a80b883a 	mov	r5,r21
   462ac:	b00d883a 	mov	r6,r22
   462b0:	e009883a 	mov	r4,fp
   462b4:	0048f900 	call	48f90 <__lshift>
   462b8:	102b883a 	mov	r21,r2
   462bc:	d9c00e17 	ldw	r7,56(sp)
   462c0:	3801211e 	bne	r7,zero,46748 <_dtoa_r+0xfbc>
   462c4:	d9800617 	ldw	r6,24(sp)
   462c8:	0181380e 	bge	zero,r6,467ac <_dtoa_r+0x1020>
   462cc:	d8c00b17 	ldw	r3,44(sp)
   462d0:	1800ab1e 	bne	r3,zero,46580 <_dtoa_r+0xdf4>
   462d4:	dc800717 	ldw	r18,28(sp)
   462d8:	dcc00617 	ldw	r19,24(sp)
   462dc:	9029883a 	mov	r20,r18
   462e0:	00000206 	br	462ec <_dtoa_r+0xb60>
   462e4:	00488e00 	call	488e0 <__multadd>
   462e8:	1021883a 	mov	r16,r2
   462ec:	a80b883a 	mov	r5,r21
   462f0:	8009883a 	mov	r4,r16
   462f4:	004558c0 	call	4558c <quorem>
   462f8:	10800c04 	addi	r2,r2,48
   462fc:	90800005 	stb	r2,0(r18)
   46300:	94800044 	addi	r18,r18,1
   46304:	9507c83a 	sub	r3,r18,r20
   46308:	000f883a 	mov	r7,zero
   4630c:	01800284 	movi	r6,10
   46310:	800b883a 	mov	r5,r16
   46314:	e009883a 	mov	r4,fp
   46318:	1cfff216 	blt	r3,r19,462e4 <__alt_data_end+0xfffc62e4>
   4631c:	1011883a 	mov	r8,r2
   46320:	d8800617 	ldw	r2,24(sp)
   46324:	0082370e 	bge	zero,r2,46c04 <_dtoa_r+0x1478>
   46328:	d9000717 	ldw	r4,28(sp)
   4632c:	0025883a 	mov	r18,zero
   46330:	20af883a 	add	r23,r4,r2
   46334:	01800044 	movi	r6,1
   46338:	800b883a 	mov	r5,r16
   4633c:	e009883a 	mov	r4,fp
   46340:	da001715 	stw	r8,92(sp)
   46344:	0048f900 	call	48f90 <__lshift>
   46348:	a80b883a 	mov	r5,r21
   4634c:	1009883a 	mov	r4,r2
   46350:	d8800915 	stw	r2,36(sp)
   46354:	00490d80 	call	490d8 <__mcmp>
   46358:	da001717 	ldw	r8,92(sp)
   4635c:	0081800e 	bge	zero,r2,46960 <_dtoa_r+0x11d4>
   46360:	b93fffc3 	ldbu	r4,-1(r23)
   46364:	b8bfffc4 	addi	r2,r23,-1
   46368:	1007883a 	mov	r3,r2
   4636c:	01800e44 	movi	r6,57
   46370:	d9c00717 	ldw	r7,28(sp)
   46374:	00000506 	br	4638c <_dtoa_r+0xc00>
   46378:	18ffffc4 	addi	r3,r3,-1
   4637c:	11c12326 	beq	r2,r7,4680c <_dtoa_r+0x1080>
   46380:	19000003 	ldbu	r4,0(r3)
   46384:	102f883a 	mov	r23,r2
   46388:	10bfffc4 	addi	r2,r2,-1
   4638c:	21403fcc 	andi	r5,r4,255
   46390:	2940201c 	xori	r5,r5,128
   46394:	297fe004 	addi	r5,r5,-128
   46398:	29bff726 	beq	r5,r6,46378 <__alt_data_end+0xfffc6378>
   4639c:	21000044 	addi	r4,r4,1
   463a0:	11000005 	stb	r4,0(r2)
   463a4:	a80b883a 	mov	r5,r21
   463a8:	e009883a 	mov	r4,fp
   463ac:	00488b80 	call	488b8 <_Bfree>
   463b0:	883ea026 	beq	r17,zero,45e34 <__alt_data_end+0xfffc5e34>
   463b4:	90000426 	beq	r18,zero,463c8 <_dtoa_r+0xc3c>
   463b8:	94400326 	beq	r18,r17,463c8 <_dtoa_r+0xc3c>
   463bc:	900b883a 	mov	r5,r18
   463c0:	e009883a 	mov	r4,fp
   463c4:	00488b80 	call	488b8 <_Bfree>
   463c8:	880b883a 	mov	r5,r17
   463cc:	e009883a 	mov	r4,fp
   463d0:	00488b80 	call	488b8 <_Bfree>
   463d4:	003e9706 	br	45e34 <__alt_data_end+0xfffc5e34>
   463d8:	01800044 	movi	r6,1
   463dc:	d9800e15 	stw	r6,56(sp)
   463e0:	003d9606 	br	45a3c <__alt_data_end+0xfffc5a3c>
   463e4:	d8800817 	ldw	r2,32(sp)
   463e8:	d8c00517 	ldw	r3,20(sp)
   463ec:	d8000d15 	stw	zero,52(sp)
   463f0:	10c5c83a 	sub	r2,r2,r3
   463f4:	00c9c83a 	sub	r4,zero,r3
   463f8:	d8800815 	stw	r2,32(sp)
   463fc:	d9000a15 	stw	r4,40(sp)
   46400:	003d9706 	br	45a60 <__alt_data_end+0xfffc5a60>
   46404:	05adc83a 	sub	r22,zero,r22
   46408:	dd800815 	stw	r22,32(sp)
   4640c:	002d883a 	mov	r22,zero
   46410:	003d8e06 	br	45a4c <__alt_data_end+0xfffc5a4c>
   46414:	d9000517 	ldw	r4,20(sp)
   46418:	004e5e80 	call	4e5e8 <__floatsidf>
   4641c:	100d883a 	mov	r6,r2
   46420:	180f883a 	mov	r7,r3
   46424:	a009883a 	mov	r4,r20
   46428:	880b883a 	mov	r5,r17
   4642c:	004da140 	call	4da14 <__eqdf2>
   46430:	103d7126 	beq	r2,zero,459f8 <__alt_data_end+0xfffc59f8>
   46434:	d9c00517 	ldw	r7,20(sp)
   46438:	39ffffc4 	addi	r7,r7,-1
   4643c:	d9c00515 	stw	r7,20(sp)
   46440:	003d6d06 	br	459f8 <__alt_data_end+0xfffc59f8>
   46444:	dd400a17 	ldw	r21,40(sp)
   46448:	dd000817 	ldw	r20,32(sp)
   4644c:	0023883a 	mov	r17,zero
   46450:	003f4806 	br	46174 <__alt_data_end+0xfffc6174>
   46454:	10e3c83a 	sub	r17,r2,r3
   46458:	9448983a 	sll	r4,r18,r17
   4645c:	003d3206 	br	45928 <__alt_data_end+0xfffc5928>
   46460:	d8000e15 	stw	zero,56(sp)
   46464:	003d7506 	br	45a3c <__alt_data_end+0xfffc5a3c>
   46468:	b005883a 	mov	r2,r22
   4646c:	003f4506 	br	46184 <__alt_data_end+0xfffc6184>
   46470:	dc000915 	stw	r16,36(sp)
   46474:	d9800a17 	ldw	r6,40(sp)
   46478:	d9400917 	ldw	r5,36(sp)
   4647c:	e009883a 	mov	r4,fp
   46480:	0048e500 	call	48e50 <__pow5mult>
   46484:	1021883a 	mov	r16,r2
   46488:	003f5a06 	br	461f4 <__alt_data_end+0xfffc61f4>
   4648c:	01c00044 	movi	r7,1
   46490:	d9c00b15 	stw	r7,44(sp)
   46494:	d8802217 	ldw	r2,136(sp)
   46498:	0081280e 	bge	zero,r2,4693c <_dtoa_r+0x11b0>
   4649c:	100d883a 	mov	r6,r2
   464a0:	1021883a 	mov	r16,r2
   464a4:	d8800c15 	stw	r2,48(sp)
   464a8:	d8800615 	stw	r2,24(sp)
   464ac:	003d8806 	br	45ad0 <__alt_data_end+0xfffc5ad0>
   464b0:	d8800617 	ldw	r2,24(sp)
   464b4:	00be9b16 	blt	zero,r2,45f24 <__alt_data_end+0xfffc5f24>
   464b8:	10010f1e 	bne	r2,zero,468f8 <_dtoa_r+0x116c>
   464bc:	880b883a 	mov	r5,r17
   464c0:	000d883a 	mov	r6,zero
   464c4:	01d00534 	movhi	r7,16404
   464c8:	8009883a 	mov	r4,r16
   464cc:	00426c80 	call	426c8 <__muldf3>
   464d0:	900d883a 	mov	r6,r18
   464d4:	980f883a 	mov	r7,r19
   464d8:	1009883a 	mov	r4,r2
   464dc:	180b883a 	mov	r5,r3
   464e0:	004da9c0 	call	4da9c <__gedf2>
   464e4:	002b883a 	mov	r21,zero
   464e8:	0023883a 	mov	r17,zero
   464ec:	1000bf16 	blt	r2,zero,467ec <_dtoa_r+0x1060>
   464f0:	d9802217 	ldw	r6,136(sp)
   464f4:	ddc00717 	ldw	r23,28(sp)
   464f8:	018c303a 	nor	r6,zero,r6
   464fc:	d9800515 	stw	r6,20(sp)
   46500:	a80b883a 	mov	r5,r21
   46504:	e009883a 	mov	r4,fp
   46508:	00488b80 	call	488b8 <_Bfree>
   4650c:	883e4926 	beq	r17,zero,45e34 <__alt_data_end+0xfffc5e34>
   46510:	003fad06 	br	463c8 <__alt_data_end+0xfffc63c8>
   46514:	d9c01117 	ldw	r7,68(sp)
   46518:	3801bc26 	beq	r7,zero,46c0c <_dtoa_r+0x1480>
   4651c:	10810cc4 	addi	r2,r2,1075
   46520:	dd400a17 	ldw	r21,40(sp)
   46524:	dd000817 	ldw	r20,32(sp)
   46528:	003f0a06 	br	46154 <__alt_data_end+0xfffc6154>
   4652c:	00800704 	movi	r2,28
   46530:	d9000817 	ldw	r4,32(sp)
   46534:	a0a9883a 	add	r20,r20,r2
   46538:	b0ad883a 	add	r22,r22,r2
   4653c:	2089883a 	add	r4,r4,r2
   46540:	d9000815 	stw	r4,32(sp)
   46544:	003f5106 	br	4628c <__alt_data_end+0xfffc628c>
   46548:	d8c00317 	ldw	r3,12(sp)
   4654c:	b8c1fc0e 	bge	r23,r3,46d40 <_dtoa_r+0x15b4>
   46550:	0027883a 	mov	r19,zero
   46554:	b805883a 	mov	r2,r23
   46558:	003f3e06 	br	46254 <__alt_data_end+0xfffc6254>
   4655c:	880b883a 	mov	r5,r17
   46560:	e009883a 	mov	r4,fp
   46564:	000f883a 	mov	r7,zero
   46568:	01800284 	movi	r6,10
   4656c:	00488e00 	call	488e0 <__multadd>
   46570:	d9000c17 	ldw	r4,48(sp)
   46574:	1023883a 	mov	r17,r2
   46578:	0102040e 	bge	zero,r4,46d8c <_dtoa_r+0x1600>
   4657c:	d9000615 	stw	r4,24(sp)
   46580:	0500050e 	bge	zero,r20,46598 <_dtoa_r+0xe0c>
   46584:	880b883a 	mov	r5,r17
   46588:	a00d883a 	mov	r6,r20
   4658c:	e009883a 	mov	r4,fp
   46590:	0048f900 	call	48f90 <__lshift>
   46594:	1023883a 	mov	r17,r2
   46598:	9801241e 	bne	r19,zero,46a2c <_dtoa_r+0x12a0>
   4659c:	8829883a 	mov	r20,r17
   465a0:	d9000617 	ldw	r4,24(sp)
   465a4:	dcc00717 	ldw	r19,28(sp)
   465a8:	9480004c 	andi	r18,r18,1
   465ac:	20bfffc4 	addi	r2,r4,-1
   465b0:	9885883a 	add	r2,r19,r2
   465b4:	d8800415 	stw	r2,16(sp)
   465b8:	dc800615 	stw	r18,24(sp)
   465bc:	a80b883a 	mov	r5,r21
   465c0:	8009883a 	mov	r4,r16
   465c4:	004558c0 	call	4558c <quorem>
   465c8:	880b883a 	mov	r5,r17
   465cc:	8009883a 	mov	r4,r16
   465d0:	102f883a 	mov	r23,r2
   465d4:	00490d80 	call	490d8 <__mcmp>
   465d8:	a80b883a 	mov	r5,r21
   465dc:	a00d883a 	mov	r6,r20
   465e0:	e009883a 	mov	r4,fp
   465e4:	102d883a 	mov	r22,r2
   465e8:	00491380 	call	49138 <__mdiff>
   465ec:	1007883a 	mov	r3,r2
   465f0:	10800317 	ldw	r2,12(r2)
   465f4:	bc800c04 	addi	r18,r23,48
   465f8:	180b883a 	mov	r5,r3
   465fc:	10004e1e 	bne	r2,zero,46738 <_dtoa_r+0xfac>
   46600:	8009883a 	mov	r4,r16
   46604:	d8c01615 	stw	r3,88(sp)
   46608:	00490d80 	call	490d8 <__mcmp>
   4660c:	d8c01617 	ldw	r3,88(sp)
   46610:	e009883a 	mov	r4,fp
   46614:	d8801615 	stw	r2,88(sp)
   46618:	180b883a 	mov	r5,r3
   4661c:	00488b80 	call	488b8 <_Bfree>
   46620:	d8801617 	ldw	r2,88(sp)
   46624:	1000041e 	bne	r2,zero,46638 <_dtoa_r+0xeac>
   46628:	d9800317 	ldw	r6,12(sp)
   4662c:	3000021e 	bne	r6,zero,46638 <_dtoa_r+0xeac>
   46630:	d8c00617 	ldw	r3,24(sp)
   46634:	18003726 	beq	r3,zero,46714 <_dtoa_r+0xf88>
   46638:	b0002016 	blt	r22,zero,466bc <_dtoa_r+0xf30>
   4663c:	b000041e 	bne	r22,zero,46650 <_dtoa_r+0xec4>
   46640:	d9000317 	ldw	r4,12(sp)
   46644:	2000021e 	bne	r4,zero,46650 <_dtoa_r+0xec4>
   46648:	d8c00617 	ldw	r3,24(sp)
   4664c:	18001b26 	beq	r3,zero,466bc <_dtoa_r+0xf30>
   46650:	00810716 	blt	zero,r2,46a70 <_dtoa_r+0x12e4>
   46654:	d8c00417 	ldw	r3,16(sp)
   46658:	9d800044 	addi	r22,r19,1
   4665c:	9c800005 	stb	r18,0(r19)
   46660:	b02f883a 	mov	r23,r22
   46664:	98c10626 	beq	r19,r3,46a80 <_dtoa_r+0x12f4>
   46668:	800b883a 	mov	r5,r16
   4666c:	000f883a 	mov	r7,zero
   46670:	01800284 	movi	r6,10
   46674:	e009883a 	mov	r4,fp
   46678:	00488e00 	call	488e0 <__multadd>
   4667c:	1021883a 	mov	r16,r2
   46680:	000f883a 	mov	r7,zero
   46684:	01800284 	movi	r6,10
   46688:	880b883a 	mov	r5,r17
   4668c:	e009883a 	mov	r4,fp
   46690:	8d002526 	beq	r17,r20,46728 <_dtoa_r+0xf9c>
   46694:	00488e00 	call	488e0 <__multadd>
   46698:	a00b883a 	mov	r5,r20
   4669c:	000f883a 	mov	r7,zero
   466a0:	01800284 	movi	r6,10
   466a4:	e009883a 	mov	r4,fp
   466a8:	1023883a 	mov	r17,r2
   466ac:	00488e00 	call	488e0 <__multadd>
   466b0:	1029883a 	mov	r20,r2
   466b4:	b027883a 	mov	r19,r22
   466b8:	003fc006 	br	465bc <__alt_data_end+0xfffc65bc>
   466bc:	9011883a 	mov	r8,r18
   466c0:	00800e0e 	bge	zero,r2,466fc <_dtoa_r+0xf70>
   466c4:	800b883a 	mov	r5,r16
   466c8:	01800044 	movi	r6,1
   466cc:	e009883a 	mov	r4,fp
   466d0:	da001715 	stw	r8,92(sp)
   466d4:	0048f900 	call	48f90 <__lshift>
   466d8:	a80b883a 	mov	r5,r21
   466dc:	1009883a 	mov	r4,r2
   466e0:	1021883a 	mov	r16,r2
   466e4:	00490d80 	call	490d8 <__mcmp>
   466e8:	da001717 	ldw	r8,92(sp)
   466ec:	0081960e 	bge	zero,r2,46d48 <_dtoa_r+0x15bc>
   466f0:	00800e44 	movi	r2,57
   466f4:	40817026 	beq	r8,r2,46cb8 <_dtoa_r+0x152c>
   466f8:	ba000c44 	addi	r8,r23,49
   466fc:	8825883a 	mov	r18,r17
   46700:	9dc00044 	addi	r23,r19,1
   46704:	9a000005 	stb	r8,0(r19)
   46708:	a023883a 	mov	r17,r20
   4670c:	dc000915 	stw	r16,36(sp)
   46710:	003f2406 	br	463a4 <__alt_data_end+0xfffc63a4>
   46714:	00800e44 	movi	r2,57
   46718:	9011883a 	mov	r8,r18
   4671c:	90816626 	beq	r18,r2,46cb8 <_dtoa_r+0x152c>
   46720:	05bff516 	blt	zero,r22,466f8 <__alt_data_end+0xfffc66f8>
   46724:	003ff506 	br	466fc <__alt_data_end+0xfffc66fc>
   46728:	00488e00 	call	488e0 <__multadd>
   4672c:	1023883a 	mov	r17,r2
   46730:	1029883a 	mov	r20,r2
   46734:	003fdf06 	br	466b4 <__alt_data_end+0xfffc66b4>
   46738:	e009883a 	mov	r4,fp
   4673c:	00488b80 	call	488b8 <_Bfree>
   46740:	00800044 	movi	r2,1
   46744:	003fbc06 	br	46638 <__alt_data_end+0xfffc6638>
   46748:	a80b883a 	mov	r5,r21
   4674c:	8009883a 	mov	r4,r16
   46750:	00490d80 	call	490d8 <__mcmp>
   46754:	103edb0e 	bge	r2,zero,462c4 <__alt_data_end+0xfffc62c4>
   46758:	800b883a 	mov	r5,r16
   4675c:	000f883a 	mov	r7,zero
   46760:	01800284 	movi	r6,10
   46764:	e009883a 	mov	r4,fp
   46768:	00488e00 	call	488e0 <__multadd>
   4676c:	1021883a 	mov	r16,r2
   46770:	d8800517 	ldw	r2,20(sp)
   46774:	d8c00b17 	ldw	r3,44(sp)
   46778:	10bfffc4 	addi	r2,r2,-1
   4677c:	d8800515 	stw	r2,20(sp)
   46780:	183f761e 	bne	r3,zero,4655c <__alt_data_end+0xfffc655c>
   46784:	d9000c17 	ldw	r4,48(sp)
   46788:	0101730e 	bge	zero,r4,46d58 <_dtoa_r+0x15cc>
   4678c:	d9000615 	stw	r4,24(sp)
   46790:	003ed006 	br	462d4 <__alt_data_end+0xfffc62d4>
   46794:	00800084 	movi	r2,2
   46798:	3081861e 	bne	r6,r2,46db4 <_dtoa_r+0x1628>
   4679c:	d8000b15 	stw	zero,44(sp)
   467a0:	003f3c06 	br	46494 <__alt_data_end+0xfffc6494>
   467a4:	dc000917 	ldw	r16,36(sp)
   467a8:	003e9206 	br	461f4 <__alt_data_end+0xfffc61f4>
   467ac:	d9c00317 	ldw	r7,12(sp)
   467b0:	00800084 	movi	r2,2
   467b4:	11fec50e 	bge	r2,r7,462cc <__alt_data_end+0xfffc62cc>
   467b8:	d9000617 	ldw	r4,24(sp)
   467bc:	20013c1e 	bne	r4,zero,46cb0 <_dtoa_r+0x1524>
   467c0:	a80b883a 	mov	r5,r21
   467c4:	000f883a 	mov	r7,zero
   467c8:	01800144 	movi	r6,5
   467cc:	e009883a 	mov	r4,fp
   467d0:	00488e00 	call	488e0 <__multadd>
   467d4:	100b883a 	mov	r5,r2
   467d8:	8009883a 	mov	r4,r16
   467dc:	102b883a 	mov	r21,r2
   467e0:	00490d80 	call	490d8 <__mcmp>
   467e4:	dc000915 	stw	r16,36(sp)
   467e8:	00bf410e 	bge	zero,r2,464f0 <__alt_data_end+0xfffc64f0>
   467ec:	d9c00717 	ldw	r7,28(sp)
   467f0:	00800c44 	movi	r2,49
   467f4:	38800005 	stb	r2,0(r7)
   467f8:	d8800517 	ldw	r2,20(sp)
   467fc:	3dc00044 	addi	r23,r7,1
   46800:	10800044 	addi	r2,r2,1
   46804:	d8800515 	stw	r2,20(sp)
   46808:	003f3d06 	br	46500 <__alt_data_end+0xfffc6500>
   4680c:	d9800517 	ldw	r6,20(sp)
   46810:	d9c00717 	ldw	r7,28(sp)
   46814:	00800c44 	movi	r2,49
   46818:	31800044 	addi	r6,r6,1
   4681c:	d9800515 	stw	r6,20(sp)
   46820:	38800005 	stb	r2,0(r7)
   46824:	003edf06 	br	463a4 <__alt_data_end+0xfffc63a4>
   46828:	d8000b15 	stw	zero,44(sp)
   4682c:	003c9f06 	br	45aac <__alt_data_end+0xfffc5aac>
   46830:	903e7e1e 	bne	r18,zero,4622c <__alt_data_end+0xfffc622c>
   46834:	00800434 	movhi	r2,16
   46838:	10bfffc4 	addi	r2,r2,-1
   4683c:	9884703a 	and	r2,r19,r2
   46840:	1000ea1e 	bne	r2,zero,46bec <_dtoa_r+0x1460>
   46844:	9cdffc2c 	andhi	r19,r19,32752
   46848:	9800e826 	beq	r19,zero,46bec <_dtoa_r+0x1460>
   4684c:	d9c00817 	ldw	r7,32(sp)
   46850:	b5800044 	addi	r22,r22,1
   46854:	04c00044 	movi	r19,1
   46858:	39c00044 	addi	r7,r7,1
   4685c:	d9c00815 	stw	r7,32(sp)
   46860:	d8800d17 	ldw	r2,52(sp)
   46864:	103e721e 	bne	r2,zero,46230 <__alt_data_end+0xfffc6230>
   46868:	00800044 	movi	r2,1
   4686c:	003e7906 	br	46254 <__alt_data_end+0xfffc6254>
   46870:	8009883a 	mov	r4,r16
   46874:	004e5e80 	call	4e5e8 <__floatsidf>
   46878:	d9800f17 	ldw	r6,60(sp)
   4687c:	d9c01017 	ldw	r7,64(sp)
   46880:	1009883a 	mov	r4,r2
   46884:	180b883a 	mov	r5,r3
   46888:	00426c80 	call	426c8 <__muldf3>
   4688c:	000d883a 	mov	r6,zero
   46890:	01d00734 	movhi	r7,16412
   46894:	1009883a 	mov	r4,r2
   46898:	180b883a 	mov	r5,r3
   4689c:	0041e1c0 	call	41e1c <__adddf3>
   468a0:	047f3034 	movhi	r17,64704
   468a4:	1021883a 	mov	r16,r2
   468a8:	1c63883a 	add	r17,r3,r17
   468ac:	d9000f17 	ldw	r4,60(sp)
   468b0:	d9401017 	ldw	r5,64(sp)
   468b4:	000d883a 	mov	r6,zero
   468b8:	01d00534 	movhi	r7,16404
   468bc:	004dc6c0 	call	4dc6c <__subdf3>
   468c0:	800d883a 	mov	r6,r16
   468c4:	880f883a 	mov	r7,r17
   468c8:	1009883a 	mov	r4,r2
   468cc:	180b883a 	mov	r5,r3
   468d0:	102b883a 	mov	r21,r2
   468d4:	1829883a 	mov	r20,r3
   468d8:	004da9c0 	call	4da9c <__gedf2>
   468dc:	00806c16 	blt	zero,r2,46a90 <_dtoa_r+0x1304>
   468e0:	89e0003c 	xorhi	r7,r17,32768
   468e4:	800d883a 	mov	r6,r16
   468e8:	a809883a 	mov	r4,r21
   468ec:	a00b883a 	mov	r5,r20
   468f0:	004db780 	call	4db78 <__ledf2>
   468f4:	103d7e0e 	bge	r2,zero,45ef0 <__alt_data_end+0xfffc5ef0>
   468f8:	002b883a 	mov	r21,zero
   468fc:	0023883a 	mov	r17,zero
   46900:	003efb06 	br	464f0 <__alt_data_end+0xfffc64f0>
   46904:	d8800717 	ldw	r2,28(sp)
   46908:	003bd006 	br	4584c <__alt_data_end+0xfffc584c>
   4690c:	d9000a17 	ldw	r4,40(sp)
   46910:	d9800d17 	ldw	r6,52(sp)
   46914:	dd400a15 	stw	r21,40(sp)
   46918:	a905c83a 	sub	r2,r21,r4
   4691c:	308d883a 	add	r6,r6,r2
   46920:	d9800d15 	stw	r6,52(sp)
   46924:	002b883a 	mov	r21,zero
   46928:	003e0606 	br	46144 <__alt_data_end+0xfffc6144>
   4692c:	9023883a 	mov	r17,r18
   46930:	9829883a 	mov	r20,r19
   46934:	04000084 	movi	r16,2
   46938:	003c9206 	br	45b84 <__alt_data_end+0xfffc5b84>
   4693c:	04000044 	movi	r16,1
   46940:	dc000c15 	stw	r16,48(sp)
   46944:	dc000615 	stw	r16,24(sp)
   46948:	dc002215 	stw	r16,136(sp)
   4694c:	e0001115 	stw	zero,68(fp)
   46950:	000b883a 	mov	r5,zero
   46954:	003c6906 	br	45afc <__alt_data_end+0xfffc5afc>
   46958:	3021883a 	mov	r16,r6
   4695c:	003ffb06 	br	4694c <__alt_data_end+0xfffc694c>
   46960:	1000021e 	bne	r2,zero,4696c <_dtoa_r+0x11e0>
   46964:	4200004c 	andi	r8,r8,1
   46968:	403e7d1e 	bne	r8,zero,46360 <__alt_data_end+0xfffc6360>
   4696c:	01000c04 	movi	r4,48
   46970:	00000106 	br	46978 <_dtoa_r+0x11ec>
   46974:	102f883a 	mov	r23,r2
   46978:	b8bfffc4 	addi	r2,r23,-1
   4697c:	10c00007 	ldb	r3,0(r2)
   46980:	193ffc26 	beq	r3,r4,46974 <__alt_data_end+0xfffc6974>
   46984:	003e8706 	br	463a4 <__alt_data_end+0xfffc63a4>
   46988:	d8800517 	ldw	r2,20(sp)
   4698c:	00a3c83a 	sub	r17,zero,r2
   46990:	8800a426 	beq	r17,zero,46c24 <_dtoa_r+0x1498>
   46994:	888003cc 	andi	r2,r17,15
   46998:	100490fa 	slli	r2,r2,3
   4699c:	00c00174 	movhi	r3,5
   469a0:	18c47304 	addi	r3,r3,4556
   469a4:	1885883a 	add	r2,r3,r2
   469a8:	11800017 	ldw	r6,0(r2)
   469ac:	11c00117 	ldw	r7,4(r2)
   469b0:	9009883a 	mov	r4,r18
   469b4:	980b883a 	mov	r5,r19
   469b8:	8823d13a 	srai	r17,r17,4
   469bc:	00426c80 	call	426c8 <__muldf3>
   469c0:	d8800f15 	stw	r2,60(sp)
   469c4:	d8c01015 	stw	r3,64(sp)
   469c8:	8800e826 	beq	r17,zero,46d6c <_dtoa_r+0x15e0>
   469cc:	05000174 	movhi	r20,5
   469d0:	a5046904 	addi	r20,r20,4516
   469d4:	04000084 	movi	r16,2
   469d8:	8980004c 	andi	r6,r17,1
   469dc:	1009883a 	mov	r4,r2
   469e0:	8823d07a 	srai	r17,r17,1
   469e4:	180b883a 	mov	r5,r3
   469e8:	30000426 	beq	r6,zero,469fc <_dtoa_r+0x1270>
   469ec:	a1800017 	ldw	r6,0(r20)
   469f0:	a1c00117 	ldw	r7,4(r20)
   469f4:	84000044 	addi	r16,r16,1
   469f8:	00426c80 	call	426c8 <__muldf3>
   469fc:	a5000204 	addi	r20,r20,8
   46a00:	883ff51e 	bne	r17,zero,469d8 <__alt_data_end+0xfffc69d8>
   46a04:	d8800f15 	stw	r2,60(sp)
   46a08:	d8c01015 	stw	r3,64(sp)
   46a0c:	003c7606 	br	45be8 <__alt_data_end+0xfffc5be8>
   46a10:	00c00c04 	movi	r3,48
   46a14:	10c00005 	stb	r3,0(r2)
   46a18:	d8c00517 	ldw	r3,20(sp)
   46a1c:	bd3fffc3 	ldbu	r20,-1(r23)
   46a20:	18c00044 	addi	r3,r3,1
   46a24:	d8c00515 	stw	r3,20(sp)
   46a28:	003db906 	br	46110 <__alt_data_end+0xfffc6110>
   46a2c:	89400117 	ldw	r5,4(r17)
   46a30:	e009883a 	mov	r4,fp
   46a34:	00488100 	call	48810 <_Balloc>
   46a38:	89800417 	ldw	r6,16(r17)
   46a3c:	89400304 	addi	r5,r17,12
   46a40:	11000304 	addi	r4,r2,12
   46a44:	31800084 	addi	r6,r6,2
   46a48:	318d883a 	add	r6,r6,r6
   46a4c:	318d883a 	add	r6,r6,r6
   46a50:	1027883a 	mov	r19,r2
   46a54:	00485a00 	call	485a0 <memcpy>
   46a58:	01800044 	movi	r6,1
   46a5c:	980b883a 	mov	r5,r19
   46a60:	e009883a 	mov	r4,fp
   46a64:	0048f900 	call	48f90 <__lshift>
   46a68:	1029883a 	mov	r20,r2
   46a6c:	003ecc06 	br	465a0 <__alt_data_end+0xfffc65a0>
   46a70:	00800e44 	movi	r2,57
   46a74:	90809026 	beq	r18,r2,46cb8 <_dtoa_r+0x152c>
   46a78:	92000044 	addi	r8,r18,1
   46a7c:	003f1f06 	br	466fc <__alt_data_end+0xfffc66fc>
   46a80:	9011883a 	mov	r8,r18
   46a84:	8825883a 	mov	r18,r17
   46a88:	a023883a 	mov	r17,r20
   46a8c:	003e2906 	br	46334 <__alt_data_end+0xfffc6334>
   46a90:	002b883a 	mov	r21,zero
   46a94:	0023883a 	mov	r17,zero
   46a98:	003f5406 	br	467ec <__alt_data_end+0xfffc67ec>
   46a9c:	61bfffc4 	addi	r6,r12,-1
   46aa0:	300490fa 	slli	r2,r6,3
   46aa4:	00c00174 	movhi	r3,5
   46aa8:	18c47304 	addi	r3,r3,4556
   46aac:	1885883a 	add	r2,r3,r2
   46ab0:	11000017 	ldw	r4,0(r2)
   46ab4:	11400117 	ldw	r5,4(r2)
   46ab8:	d8800717 	ldw	r2,28(sp)
   46abc:	880f883a 	mov	r7,r17
   46ac0:	d9801215 	stw	r6,72(sp)
   46ac4:	800d883a 	mov	r6,r16
   46ac8:	db001615 	stw	r12,88(sp)
   46acc:	15c00044 	addi	r23,r2,1
   46ad0:	00426c80 	call	426c8 <__muldf3>
   46ad4:	d9401017 	ldw	r5,64(sp)
   46ad8:	d9000f17 	ldw	r4,60(sp)
   46adc:	d8c01515 	stw	r3,84(sp)
   46ae0:	d8801415 	stw	r2,80(sp)
   46ae4:	004e5680 	call	4e568 <__fixdfsi>
   46ae8:	1009883a 	mov	r4,r2
   46aec:	1021883a 	mov	r16,r2
   46af0:	004e5e80 	call	4e5e8 <__floatsidf>
   46af4:	d9000f17 	ldw	r4,60(sp)
   46af8:	d9401017 	ldw	r5,64(sp)
   46afc:	100d883a 	mov	r6,r2
   46b00:	180f883a 	mov	r7,r3
   46b04:	004dc6c0 	call	4dc6c <__subdf3>
   46b08:	1829883a 	mov	r20,r3
   46b0c:	d8c00717 	ldw	r3,28(sp)
   46b10:	84000c04 	addi	r16,r16,48
   46b14:	1023883a 	mov	r17,r2
   46b18:	1c000005 	stb	r16,0(r3)
   46b1c:	db001617 	ldw	r12,88(sp)
   46b20:	00800044 	movi	r2,1
   46b24:	60802226 	beq	r12,r2,46bb0 <_dtoa_r+0x1424>
   46b28:	d9c00717 	ldw	r7,28(sp)
   46b2c:	8805883a 	mov	r2,r17
   46b30:	b82b883a 	mov	r21,r23
   46b34:	3b19883a 	add	r12,r7,r12
   46b38:	6023883a 	mov	r17,r12
   46b3c:	a007883a 	mov	r3,r20
   46b40:	dc800f15 	stw	r18,60(sp)
   46b44:	000d883a 	mov	r6,zero
   46b48:	01d00934 	movhi	r7,16420
   46b4c:	1009883a 	mov	r4,r2
   46b50:	180b883a 	mov	r5,r3
   46b54:	00426c80 	call	426c8 <__muldf3>
   46b58:	180b883a 	mov	r5,r3
   46b5c:	1009883a 	mov	r4,r2
   46b60:	1829883a 	mov	r20,r3
   46b64:	1025883a 	mov	r18,r2
   46b68:	004e5680 	call	4e568 <__fixdfsi>
   46b6c:	1009883a 	mov	r4,r2
   46b70:	1021883a 	mov	r16,r2
   46b74:	004e5e80 	call	4e5e8 <__floatsidf>
   46b78:	100d883a 	mov	r6,r2
   46b7c:	180f883a 	mov	r7,r3
   46b80:	9009883a 	mov	r4,r18
   46b84:	a00b883a 	mov	r5,r20
   46b88:	84000c04 	addi	r16,r16,48
   46b8c:	004dc6c0 	call	4dc6c <__subdf3>
   46b90:	ad400044 	addi	r21,r21,1
   46b94:	ac3fffc5 	stb	r16,-1(r21)
   46b98:	ac7fea1e 	bne	r21,r17,46b44 <__alt_data_end+0xfffc6b44>
   46b9c:	1023883a 	mov	r17,r2
   46ba0:	d8801217 	ldw	r2,72(sp)
   46ba4:	dc800f17 	ldw	r18,60(sp)
   46ba8:	1829883a 	mov	r20,r3
   46bac:	b8af883a 	add	r23,r23,r2
   46bb0:	d9001417 	ldw	r4,80(sp)
   46bb4:	d9401517 	ldw	r5,84(sp)
   46bb8:	000d883a 	mov	r6,zero
   46bbc:	01cff834 	movhi	r7,16352
   46bc0:	0041e1c0 	call	41e1c <__adddf3>
   46bc4:	880d883a 	mov	r6,r17
   46bc8:	a00f883a 	mov	r7,r20
   46bcc:	1009883a 	mov	r4,r2
   46bd0:	180b883a 	mov	r5,r3
   46bd4:	004db780 	call	4db78 <__ledf2>
   46bd8:	10003e0e 	bge	r2,zero,46cd4 <_dtoa_r+0x1548>
   46bdc:	d9001317 	ldw	r4,76(sp)
   46be0:	bd3fffc3 	ldbu	r20,-1(r23)
   46be4:	d9000515 	stw	r4,20(sp)
   46be8:	003d3b06 	br	460d8 <__alt_data_end+0xfffc60d8>
   46bec:	0027883a 	mov	r19,zero
   46bf0:	003f1b06 	br	46860 <__alt_data_end+0xfffc6860>
   46bf4:	d8800817 	ldw	r2,32(sp)
   46bf8:	11e9c83a 	sub	r20,r2,r7
   46bfc:	0005883a 	mov	r2,zero
   46c00:	003d5406 	br	46154 <__alt_data_end+0xfffc6154>
   46c04:	00800044 	movi	r2,1
   46c08:	003dc706 	br	46328 <__alt_data_end+0xfffc6328>
   46c0c:	d8c00217 	ldw	r3,8(sp)
   46c10:	00800d84 	movi	r2,54
   46c14:	dd400a17 	ldw	r21,40(sp)
   46c18:	10c5c83a 	sub	r2,r2,r3
   46c1c:	dd000817 	ldw	r20,32(sp)
   46c20:	003d4c06 	br	46154 <__alt_data_end+0xfffc6154>
   46c24:	dc800f15 	stw	r18,60(sp)
   46c28:	dcc01015 	stw	r19,64(sp)
   46c2c:	04000084 	movi	r16,2
   46c30:	003bed06 	br	45be8 <__alt_data_end+0xfffc5be8>
   46c34:	d9000617 	ldw	r4,24(sp)
   46c38:	203f0d26 	beq	r4,zero,46870 <__alt_data_end+0xfffc6870>
   46c3c:	d9800c17 	ldw	r6,48(sp)
   46c40:	01bcab0e 	bge	zero,r6,45ef0 <__alt_data_end+0xfffc5ef0>
   46c44:	d9401017 	ldw	r5,64(sp)
   46c48:	d9000f17 	ldw	r4,60(sp)
   46c4c:	000d883a 	mov	r6,zero
   46c50:	01d00934 	movhi	r7,16420
   46c54:	00426c80 	call	426c8 <__muldf3>
   46c58:	81000044 	addi	r4,r16,1
   46c5c:	d8800f15 	stw	r2,60(sp)
   46c60:	d8c01015 	stw	r3,64(sp)
   46c64:	004e5e80 	call	4e5e8 <__floatsidf>
   46c68:	d9800f17 	ldw	r6,60(sp)
   46c6c:	d9c01017 	ldw	r7,64(sp)
   46c70:	1009883a 	mov	r4,r2
   46c74:	180b883a 	mov	r5,r3
   46c78:	00426c80 	call	426c8 <__muldf3>
   46c7c:	01d00734 	movhi	r7,16412
   46c80:	000d883a 	mov	r6,zero
   46c84:	1009883a 	mov	r4,r2
   46c88:	180b883a 	mov	r5,r3
   46c8c:	0041e1c0 	call	41e1c <__adddf3>
   46c90:	d9c00517 	ldw	r7,20(sp)
   46c94:	047f3034 	movhi	r17,64704
   46c98:	1021883a 	mov	r16,r2
   46c9c:	39ffffc4 	addi	r7,r7,-1
   46ca0:	d9c01315 	stw	r7,76(sp)
   46ca4:	1c63883a 	add	r17,r3,r17
   46ca8:	db000c17 	ldw	r12,48(sp)
   46cac:	003bea06 	br	45c58 <__alt_data_end+0xfffc5c58>
   46cb0:	dc000915 	stw	r16,36(sp)
   46cb4:	003e0e06 	br	464f0 <__alt_data_end+0xfffc64f0>
   46cb8:	01000e44 	movi	r4,57
   46cbc:	8825883a 	mov	r18,r17
   46cc0:	9dc00044 	addi	r23,r19,1
   46cc4:	99000005 	stb	r4,0(r19)
   46cc8:	a023883a 	mov	r17,r20
   46ccc:	dc000915 	stw	r16,36(sp)
   46cd0:	003da406 	br	46364 <__alt_data_end+0xfffc6364>
   46cd4:	d9801417 	ldw	r6,80(sp)
   46cd8:	d9c01517 	ldw	r7,84(sp)
   46cdc:	0009883a 	mov	r4,zero
   46ce0:	014ff834 	movhi	r5,16352
   46ce4:	004dc6c0 	call	4dc6c <__subdf3>
   46ce8:	880d883a 	mov	r6,r17
   46cec:	a00f883a 	mov	r7,r20
   46cf0:	1009883a 	mov	r4,r2
   46cf4:	180b883a 	mov	r5,r3
   46cf8:	004da9c0 	call	4da9c <__gedf2>
   46cfc:	00bc7c0e 	bge	zero,r2,45ef0 <__alt_data_end+0xfffc5ef0>
   46d00:	01000c04 	movi	r4,48
   46d04:	00000106 	br	46d0c <_dtoa_r+0x1580>
   46d08:	102f883a 	mov	r23,r2
   46d0c:	b8bfffc4 	addi	r2,r23,-1
   46d10:	10c00007 	ldb	r3,0(r2)
   46d14:	193ffc26 	beq	r3,r4,46d08 <__alt_data_end+0xfffc6d08>
   46d18:	d9801317 	ldw	r6,76(sp)
   46d1c:	d9800515 	stw	r6,20(sp)
   46d20:	003c4406 	br	45e34 <__alt_data_end+0xfffc5e34>
   46d24:	d9801317 	ldw	r6,76(sp)
   46d28:	d9800515 	stw	r6,20(sp)
   46d2c:	003cea06 	br	460d8 <__alt_data_end+0xfffc60d8>
   46d30:	dd800f17 	ldw	r22,60(sp)
   46d34:	dcc01017 	ldw	r19,64(sp)
   46d38:	dc801217 	ldw	r18,72(sp)
   46d3c:	003c6c06 	br	45ef0 <__alt_data_end+0xfffc5ef0>
   46d40:	903e031e 	bne	r18,zero,46550 <__alt_data_end+0xfffc6550>
   46d44:	003ebb06 	br	46834 <__alt_data_end+0xfffc6834>
   46d48:	103e6c1e 	bne	r2,zero,466fc <__alt_data_end+0xfffc66fc>
   46d4c:	4080004c 	andi	r2,r8,1
   46d50:	103e6a26 	beq	r2,zero,466fc <__alt_data_end+0xfffc66fc>
   46d54:	003e6606 	br	466f0 <__alt_data_end+0xfffc66f0>
   46d58:	d8c00317 	ldw	r3,12(sp)
   46d5c:	00800084 	movi	r2,2
   46d60:	10c02916 	blt	r2,r3,46e08 <_dtoa_r+0x167c>
   46d64:	d9000c17 	ldw	r4,48(sp)
   46d68:	003e8806 	br	4678c <__alt_data_end+0xfffc678c>
   46d6c:	04000084 	movi	r16,2
   46d70:	003b9d06 	br	45be8 <__alt_data_end+0xfffc5be8>
   46d74:	d9001317 	ldw	r4,76(sp)
   46d78:	d9000515 	stw	r4,20(sp)
   46d7c:	003cd606 	br	460d8 <__alt_data_end+0xfffc60d8>
   46d80:	d8801317 	ldw	r2,76(sp)
   46d84:	d8800515 	stw	r2,20(sp)
   46d88:	003c2a06 	br	45e34 <__alt_data_end+0xfffc5e34>
   46d8c:	d9800317 	ldw	r6,12(sp)
   46d90:	00800084 	movi	r2,2
   46d94:	11801516 	blt	r2,r6,46dec <_dtoa_r+0x1660>
   46d98:	d9c00c17 	ldw	r7,48(sp)
   46d9c:	d9c00615 	stw	r7,24(sp)
   46da0:	003df706 	br	46580 <__alt_data_end+0xfffc6580>
   46da4:	193d3926 	beq	r3,r4,4628c <__alt_data_end+0xfffc628c>
   46da8:	00c00f04 	movi	r3,60
   46dac:	1885c83a 	sub	r2,r3,r2
   46db0:	003ddf06 	br	46530 <__alt_data_end+0xfffc6530>
   46db4:	e009883a 	mov	r4,fp
   46db8:	e0001115 	stw	zero,68(fp)
   46dbc:	000b883a 	mov	r5,zero
   46dc0:	00488100 	call	48810 <_Balloc>
   46dc4:	d8800715 	stw	r2,28(sp)
   46dc8:	d8c00717 	ldw	r3,28(sp)
   46dcc:	00bfffc4 	movi	r2,-1
   46dd0:	01000044 	movi	r4,1
   46dd4:	d8800c15 	stw	r2,48(sp)
   46dd8:	e0c01015 	stw	r3,64(fp)
   46ddc:	d9000b15 	stw	r4,44(sp)
   46de0:	d8800615 	stw	r2,24(sp)
   46de4:	d8002215 	stw	zero,136(sp)
   46de8:	003c4106 	br	45ef0 <__alt_data_end+0xfffc5ef0>
   46dec:	d8c00c17 	ldw	r3,48(sp)
   46df0:	d8c00615 	stw	r3,24(sp)
   46df4:	003e7006 	br	467b8 <__alt_data_end+0xfffc67b8>
   46df8:	04400044 	movi	r17,1
   46dfc:	003b2006 	br	45a80 <__alt_data_end+0xfffc5a80>
   46e00:	000b883a 	mov	r5,zero
   46e04:	003b3d06 	br	45afc <__alt_data_end+0xfffc5afc>
   46e08:	d8800c17 	ldw	r2,48(sp)
   46e0c:	d8800615 	stw	r2,24(sp)
   46e10:	003e6906 	br	467b8 <__alt_data_end+0xfffc67b8>

00046e14 <__sflush_r>:
   46e14:	2880030b 	ldhu	r2,12(r5)
   46e18:	defffb04 	addi	sp,sp,-20
   46e1c:	dcc00315 	stw	r19,12(sp)
   46e20:	dc400115 	stw	r17,4(sp)
   46e24:	dfc00415 	stw	ra,16(sp)
   46e28:	dc800215 	stw	r18,8(sp)
   46e2c:	dc000015 	stw	r16,0(sp)
   46e30:	10c0020c 	andi	r3,r2,8
   46e34:	2823883a 	mov	r17,r5
   46e38:	2027883a 	mov	r19,r4
   46e3c:	1800311e 	bne	r3,zero,46f04 <__sflush_r+0xf0>
   46e40:	28c00117 	ldw	r3,4(r5)
   46e44:	10820014 	ori	r2,r2,2048
   46e48:	2880030d 	sth	r2,12(r5)
   46e4c:	00c04b0e 	bge	zero,r3,46f7c <__sflush_r+0x168>
   46e50:	8a000a17 	ldw	r8,40(r17)
   46e54:	40002326 	beq	r8,zero,46ee4 <__sflush_r+0xd0>
   46e58:	9c000017 	ldw	r16,0(r19)
   46e5c:	10c4000c 	andi	r3,r2,4096
   46e60:	98000015 	stw	zero,0(r19)
   46e64:	18004826 	beq	r3,zero,46f88 <__sflush_r+0x174>
   46e68:	89801417 	ldw	r6,80(r17)
   46e6c:	10c0010c 	andi	r3,r2,4
   46e70:	18000626 	beq	r3,zero,46e8c <__sflush_r+0x78>
   46e74:	88c00117 	ldw	r3,4(r17)
   46e78:	88800c17 	ldw	r2,48(r17)
   46e7c:	30cdc83a 	sub	r6,r6,r3
   46e80:	10000226 	beq	r2,zero,46e8c <__sflush_r+0x78>
   46e84:	88800f17 	ldw	r2,60(r17)
   46e88:	308dc83a 	sub	r6,r6,r2
   46e8c:	89400717 	ldw	r5,28(r17)
   46e90:	000f883a 	mov	r7,zero
   46e94:	9809883a 	mov	r4,r19
   46e98:	403ee83a 	callr	r8
   46e9c:	00ffffc4 	movi	r3,-1
   46ea0:	10c04426 	beq	r2,r3,46fb4 <__sflush_r+0x1a0>
   46ea4:	88c0030b 	ldhu	r3,12(r17)
   46ea8:	89000417 	ldw	r4,16(r17)
   46eac:	88000115 	stw	zero,4(r17)
   46eb0:	197dffcc 	andi	r5,r3,63487
   46eb4:	8940030d 	sth	r5,12(r17)
   46eb8:	89000015 	stw	r4,0(r17)
   46ebc:	18c4000c 	andi	r3,r3,4096
   46ec0:	18002c1e 	bne	r3,zero,46f74 <__sflush_r+0x160>
   46ec4:	89400c17 	ldw	r5,48(r17)
   46ec8:	9c000015 	stw	r16,0(r19)
   46ecc:	28000526 	beq	r5,zero,46ee4 <__sflush_r+0xd0>
   46ed0:	88801004 	addi	r2,r17,64
   46ed4:	28800226 	beq	r5,r2,46ee0 <__sflush_r+0xcc>
   46ed8:	9809883a 	mov	r4,r19
   46edc:	00475800 	call	47580 <_free_r>
   46ee0:	88000c15 	stw	zero,48(r17)
   46ee4:	0005883a 	mov	r2,zero
   46ee8:	dfc00417 	ldw	ra,16(sp)
   46eec:	dcc00317 	ldw	r19,12(sp)
   46ef0:	dc800217 	ldw	r18,8(sp)
   46ef4:	dc400117 	ldw	r17,4(sp)
   46ef8:	dc000017 	ldw	r16,0(sp)
   46efc:	dec00504 	addi	sp,sp,20
   46f00:	f800283a 	ret
   46f04:	2c800417 	ldw	r18,16(r5)
   46f08:	903ff626 	beq	r18,zero,46ee4 <__alt_data_end+0xfffc6ee4>
   46f0c:	2c000017 	ldw	r16,0(r5)
   46f10:	108000cc 	andi	r2,r2,3
   46f14:	2c800015 	stw	r18,0(r5)
   46f18:	84a1c83a 	sub	r16,r16,r18
   46f1c:	1000131e 	bne	r2,zero,46f6c <__sflush_r+0x158>
   46f20:	28800517 	ldw	r2,20(r5)
   46f24:	88800215 	stw	r2,8(r17)
   46f28:	04000316 	blt	zero,r16,46f38 <__sflush_r+0x124>
   46f2c:	003fed06 	br	46ee4 <__alt_data_end+0xfffc6ee4>
   46f30:	90a5883a 	add	r18,r18,r2
   46f34:	043feb0e 	bge	zero,r16,46ee4 <__alt_data_end+0xfffc6ee4>
   46f38:	88800917 	ldw	r2,36(r17)
   46f3c:	89400717 	ldw	r5,28(r17)
   46f40:	800f883a 	mov	r7,r16
   46f44:	900d883a 	mov	r6,r18
   46f48:	9809883a 	mov	r4,r19
   46f4c:	103ee83a 	callr	r2
   46f50:	80a1c83a 	sub	r16,r16,r2
   46f54:	00bff616 	blt	zero,r2,46f30 <__alt_data_end+0xfffc6f30>
   46f58:	88c0030b 	ldhu	r3,12(r17)
   46f5c:	00bfffc4 	movi	r2,-1
   46f60:	18c01014 	ori	r3,r3,64
   46f64:	88c0030d 	sth	r3,12(r17)
   46f68:	003fdf06 	br	46ee8 <__alt_data_end+0xfffc6ee8>
   46f6c:	0005883a 	mov	r2,zero
   46f70:	003fec06 	br	46f24 <__alt_data_end+0xfffc6f24>
   46f74:	88801415 	stw	r2,80(r17)
   46f78:	003fd206 	br	46ec4 <__alt_data_end+0xfffc6ec4>
   46f7c:	28c00f17 	ldw	r3,60(r5)
   46f80:	00ffb316 	blt	zero,r3,46e50 <__alt_data_end+0xfffc6e50>
   46f84:	003fd706 	br	46ee4 <__alt_data_end+0xfffc6ee4>
   46f88:	89400717 	ldw	r5,28(r17)
   46f8c:	000d883a 	mov	r6,zero
   46f90:	01c00044 	movi	r7,1
   46f94:	9809883a 	mov	r4,r19
   46f98:	403ee83a 	callr	r8
   46f9c:	100d883a 	mov	r6,r2
   46fa0:	00bfffc4 	movi	r2,-1
   46fa4:	30801426 	beq	r6,r2,46ff8 <__sflush_r+0x1e4>
   46fa8:	8880030b 	ldhu	r2,12(r17)
   46fac:	8a000a17 	ldw	r8,40(r17)
   46fb0:	003fae06 	br	46e6c <__alt_data_end+0xfffc6e6c>
   46fb4:	98c00017 	ldw	r3,0(r19)
   46fb8:	183fba26 	beq	r3,zero,46ea4 <__alt_data_end+0xfffc6ea4>
   46fbc:	01000744 	movi	r4,29
   46fc0:	19000626 	beq	r3,r4,46fdc <__sflush_r+0x1c8>
   46fc4:	01000584 	movi	r4,22
   46fc8:	19000426 	beq	r3,r4,46fdc <__sflush_r+0x1c8>
   46fcc:	88c0030b 	ldhu	r3,12(r17)
   46fd0:	18c01014 	ori	r3,r3,64
   46fd4:	88c0030d 	sth	r3,12(r17)
   46fd8:	003fc306 	br	46ee8 <__alt_data_end+0xfffc6ee8>
   46fdc:	8880030b 	ldhu	r2,12(r17)
   46fe0:	88c00417 	ldw	r3,16(r17)
   46fe4:	88000115 	stw	zero,4(r17)
   46fe8:	10bdffcc 	andi	r2,r2,63487
   46fec:	8880030d 	sth	r2,12(r17)
   46ff0:	88c00015 	stw	r3,0(r17)
   46ff4:	003fb306 	br	46ec4 <__alt_data_end+0xfffc6ec4>
   46ff8:	98800017 	ldw	r2,0(r19)
   46ffc:	103fea26 	beq	r2,zero,46fa8 <__alt_data_end+0xfffc6fa8>
   47000:	00c00744 	movi	r3,29
   47004:	10c00226 	beq	r2,r3,47010 <__sflush_r+0x1fc>
   47008:	00c00584 	movi	r3,22
   4700c:	10c0031e 	bne	r2,r3,4701c <__sflush_r+0x208>
   47010:	9c000015 	stw	r16,0(r19)
   47014:	0005883a 	mov	r2,zero
   47018:	003fb306 	br	46ee8 <__alt_data_end+0xfffc6ee8>
   4701c:	88c0030b 	ldhu	r3,12(r17)
   47020:	3005883a 	mov	r2,r6
   47024:	18c01014 	ori	r3,r3,64
   47028:	88c0030d 	sth	r3,12(r17)
   4702c:	003fae06 	br	46ee8 <__alt_data_end+0xfffc6ee8>

00047030 <_fflush_r>:
   47030:	defffd04 	addi	sp,sp,-12
   47034:	dc000115 	stw	r16,4(sp)
   47038:	dfc00215 	stw	ra,8(sp)
   4703c:	2021883a 	mov	r16,r4
   47040:	20000226 	beq	r4,zero,4704c <_fflush_r+0x1c>
   47044:	20800e17 	ldw	r2,56(r4)
   47048:	10000c26 	beq	r2,zero,4707c <_fflush_r+0x4c>
   4704c:	2880030f 	ldh	r2,12(r5)
   47050:	1000051e 	bne	r2,zero,47068 <_fflush_r+0x38>
   47054:	0005883a 	mov	r2,zero
   47058:	dfc00217 	ldw	ra,8(sp)
   4705c:	dc000117 	ldw	r16,4(sp)
   47060:	dec00304 	addi	sp,sp,12
   47064:	f800283a 	ret
   47068:	8009883a 	mov	r4,r16
   4706c:	dfc00217 	ldw	ra,8(sp)
   47070:	dc000117 	ldw	r16,4(sp)
   47074:	dec00304 	addi	sp,sp,12
   47078:	0046e141 	jmpi	46e14 <__sflush_r>
   4707c:	d9400015 	stw	r5,0(sp)
   47080:	004740c0 	call	4740c <__sinit>
   47084:	d9400017 	ldw	r5,0(sp)
   47088:	003ff006 	br	4704c <__alt_data_end+0xfffc704c>

0004708c <fflush>:
   4708c:	20000526 	beq	r4,zero,470a4 <fflush+0x18>
   47090:	00800174 	movhi	r2,5
   47094:	108b8e04 	addi	r2,r2,11832
   47098:	200b883a 	mov	r5,r4
   4709c:	11000017 	ldw	r4,0(r2)
   470a0:	00470301 	jmpi	47030 <_fflush_r>
   470a4:	00800174 	movhi	r2,5
   470a8:	108b8d04 	addi	r2,r2,11828
   470ac:	11000017 	ldw	r4,0(r2)
   470b0:	01400134 	movhi	r5,4
   470b4:	295c0c04 	addi	r5,r5,28720
   470b8:	00479541 	jmpi	47954 <_fwalk_reent>

000470bc <__fp_unlock>:
   470bc:	0005883a 	mov	r2,zero
   470c0:	f800283a 	ret

000470c4 <_cleanup_r>:
   470c4:	01400174 	movhi	r5,5
   470c8:	296cd104 	addi	r5,r5,-19644
   470cc:	00479541 	jmpi	47954 <_fwalk_reent>

000470d0 <__sinit.part.1>:
   470d0:	defff704 	addi	sp,sp,-36
   470d4:	00c00134 	movhi	r3,4
   470d8:	dfc00815 	stw	ra,32(sp)
   470dc:	ddc00715 	stw	r23,28(sp)
   470e0:	dd800615 	stw	r22,24(sp)
   470e4:	dd400515 	stw	r21,20(sp)
   470e8:	dd000415 	stw	r20,16(sp)
   470ec:	dcc00315 	stw	r19,12(sp)
   470f0:	dc800215 	stw	r18,8(sp)
   470f4:	dc400115 	stw	r17,4(sp)
   470f8:	dc000015 	stw	r16,0(sp)
   470fc:	18dc3104 	addi	r3,r3,28868
   47100:	24000117 	ldw	r16,4(r4)
   47104:	20c00f15 	stw	r3,60(r4)
   47108:	2080bb04 	addi	r2,r4,748
   4710c:	00c000c4 	movi	r3,3
   47110:	20c0b915 	stw	r3,740(r4)
   47114:	2080ba15 	stw	r2,744(r4)
   47118:	2000b815 	stw	zero,736(r4)
   4711c:	05c00204 	movi	r23,8
   47120:	00800104 	movi	r2,4
   47124:	2025883a 	mov	r18,r4
   47128:	b80d883a 	mov	r6,r23
   4712c:	81001704 	addi	r4,r16,92
   47130:	000b883a 	mov	r5,zero
   47134:	80000015 	stw	zero,0(r16)
   47138:	80000115 	stw	zero,4(r16)
   4713c:	80000215 	stw	zero,8(r16)
   47140:	8080030d 	sth	r2,12(r16)
   47144:	80001915 	stw	zero,100(r16)
   47148:	8000038d 	sth	zero,14(r16)
   4714c:	80000415 	stw	zero,16(r16)
   47150:	80000515 	stw	zero,20(r16)
   47154:	80000615 	stw	zero,24(r16)
   47158:	00486e80 	call	486e8 <memset>
   4715c:	05800174 	movhi	r22,5
   47160:	94400217 	ldw	r17,8(r18)
   47164:	05400174 	movhi	r21,5
   47168:	05000174 	movhi	r20,5
   4716c:	04c00174 	movhi	r19,5
   47170:	b5a63504 	addi	r22,r22,-26412
   47174:	ad664c04 	addi	r21,r21,-26320
   47178:	a5266b04 	addi	r20,r20,-26196
   4717c:	9ce68204 	addi	r19,r19,-26104
   47180:	85800815 	stw	r22,32(r16)
   47184:	85400915 	stw	r21,36(r16)
   47188:	85000a15 	stw	r20,40(r16)
   4718c:	84c00b15 	stw	r19,44(r16)
   47190:	84000715 	stw	r16,28(r16)
   47194:	00800284 	movi	r2,10
   47198:	8880030d 	sth	r2,12(r17)
   4719c:	00800044 	movi	r2,1
   471a0:	b80d883a 	mov	r6,r23
   471a4:	89001704 	addi	r4,r17,92
   471a8:	000b883a 	mov	r5,zero
   471ac:	88000015 	stw	zero,0(r17)
   471b0:	88000115 	stw	zero,4(r17)
   471b4:	88000215 	stw	zero,8(r17)
   471b8:	88001915 	stw	zero,100(r17)
   471bc:	8880038d 	sth	r2,14(r17)
   471c0:	88000415 	stw	zero,16(r17)
   471c4:	88000515 	stw	zero,20(r17)
   471c8:	88000615 	stw	zero,24(r17)
   471cc:	00486e80 	call	486e8 <memset>
   471d0:	94000317 	ldw	r16,12(r18)
   471d4:	00800484 	movi	r2,18
   471d8:	8c400715 	stw	r17,28(r17)
   471dc:	8d800815 	stw	r22,32(r17)
   471e0:	8d400915 	stw	r21,36(r17)
   471e4:	8d000a15 	stw	r20,40(r17)
   471e8:	8cc00b15 	stw	r19,44(r17)
   471ec:	8080030d 	sth	r2,12(r16)
   471f0:	00800084 	movi	r2,2
   471f4:	80000015 	stw	zero,0(r16)
   471f8:	80000115 	stw	zero,4(r16)
   471fc:	80000215 	stw	zero,8(r16)
   47200:	80001915 	stw	zero,100(r16)
   47204:	8080038d 	sth	r2,14(r16)
   47208:	80000415 	stw	zero,16(r16)
   4720c:	80000515 	stw	zero,20(r16)
   47210:	80000615 	stw	zero,24(r16)
   47214:	b80d883a 	mov	r6,r23
   47218:	000b883a 	mov	r5,zero
   4721c:	81001704 	addi	r4,r16,92
   47220:	00486e80 	call	486e8 <memset>
   47224:	00800044 	movi	r2,1
   47228:	84000715 	stw	r16,28(r16)
   4722c:	85800815 	stw	r22,32(r16)
   47230:	85400915 	stw	r21,36(r16)
   47234:	85000a15 	stw	r20,40(r16)
   47238:	84c00b15 	stw	r19,44(r16)
   4723c:	90800e15 	stw	r2,56(r18)
   47240:	dfc00817 	ldw	ra,32(sp)
   47244:	ddc00717 	ldw	r23,28(sp)
   47248:	dd800617 	ldw	r22,24(sp)
   4724c:	dd400517 	ldw	r21,20(sp)
   47250:	dd000417 	ldw	r20,16(sp)
   47254:	dcc00317 	ldw	r19,12(sp)
   47258:	dc800217 	ldw	r18,8(sp)
   4725c:	dc400117 	ldw	r17,4(sp)
   47260:	dc000017 	ldw	r16,0(sp)
   47264:	dec00904 	addi	sp,sp,36
   47268:	f800283a 	ret

0004726c <__fp_lock>:
   4726c:	0005883a 	mov	r2,zero
   47270:	f800283a 	ret

00047274 <__sfmoreglue>:
   47274:	defffc04 	addi	sp,sp,-16
   47278:	dc400115 	stw	r17,4(sp)
   4727c:	2c7fffc4 	addi	r17,r5,-1
   47280:	8c401a24 	muli	r17,r17,104
   47284:	dc800215 	stw	r18,8(sp)
   47288:	2825883a 	mov	r18,r5
   4728c:	89401d04 	addi	r5,r17,116
   47290:	dc000015 	stw	r16,0(sp)
   47294:	dfc00315 	stw	ra,12(sp)
   47298:	0047cb00 	call	47cb0 <_malloc_r>
   4729c:	1021883a 	mov	r16,r2
   472a0:	10000726 	beq	r2,zero,472c0 <__sfmoreglue+0x4c>
   472a4:	11000304 	addi	r4,r2,12
   472a8:	10000015 	stw	zero,0(r2)
   472ac:	14800115 	stw	r18,4(r2)
   472b0:	11000215 	stw	r4,8(r2)
   472b4:	89801a04 	addi	r6,r17,104
   472b8:	000b883a 	mov	r5,zero
   472bc:	00486e80 	call	486e8 <memset>
   472c0:	8005883a 	mov	r2,r16
   472c4:	dfc00317 	ldw	ra,12(sp)
   472c8:	dc800217 	ldw	r18,8(sp)
   472cc:	dc400117 	ldw	r17,4(sp)
   472d0:	dc000017 	ldw	r16,0(sp)
   472d4:	dec00404 	addi	sp,sp,16
   472d8:	f800283a 	ret

000472dc <__sfp>:
   472dc:	defffb04 	addi	sp,sp,-20
   472e0:	dc000015 	stw	r16,0(sp)
   472e4:	04000174 	movhi	r16,5
   472e8:	840b8d04 	addi	r16,r16,11828
   472ec:	dcc00315 	stw	r19,12(sp)
   472f0:	2027883a 	mov	r19,r4
   472f4:	81000017 	ldw	r4,0(r16)
   472f8:	dfc00415 	stw	ra,16(sp)
   472fc:	dc800215 	stw	r18,8(sp)
   47300:	20800e17 	ldw	r2,56(r4)
   47304:	dc400115 	stw	r17,4(sp)
   47308:	1000021e 	bne	r2,zero,47314 <__sfp+0x38>
   4730c:	00470d00 	call	470d0 <__sinit.part.1>
   47310:	81000017 	ldw	r4,0(r16)
   47314:	2480b804 	addi	r18,r4,736
   47318:	047fffc4 	movi	r17,-1
   4731c:	91000117 	ldw	r4,4(r18)
   47320:	94000217 	ldw	r16,8(r18)
   47324:	213fffc4 	addi	r4,r4,-1
   47328:	20000a16 	blt	r4,zero,47354 <__sfp+0x78>
   4732c:	8080030f 	ldh	r2,12(r16)
   47330:	10000c26 	beq	r2,zero,47364 <__sfp+0x88>
   47334:	80c01d04 	addi	r3,r16,116
   47338:	00000206 	br	47344 <__sfp+0x68>
   4733c:	18bfe60f 	ldh	r2,-104(r3)
   47340:	10000826 	beq	r2,zero,47364 <__sfp+0x88>
   47344:	213fffc4 	addi	r4,r4,-1
   47348:	1c3ffd04 	addi	r16,r3,-12
   4734c:	18c01a04 	addi	r3,r3,104
   47350:	247ffa1e 	bne	r4,r17,4733c <__alt_data_end+0xfffc733c>
   47354:	90800017 	ldw	r2,0(r18)
   47358:	10001d26 	beq	r2,zero,473d0 <__sfp+0xf4>
   4735c:	1025883a 	mov	r18,r2
   47360:	003fee06 	br	4731c <__alt_data_end+0xfffc731c>
   47364:	00bfffc4 	movi	r2,-1
   47368:	8080038d 	sth	r2,14(r16)
   4736c:	00800044 	movi	r2,1
   47370:	8080030d 	sth	r2,12(r16)
   47374:	80001915 	stw	zero,100(r16)
   47378:	80000015 	stw	zero,0(r16)
   4737c:	80000215 	stw	zero,8(r16)
   47380:	80000115 	stw	zero,4(r16)
   47384:	80000415 	stw	zero,16(r16)
   47388:	80000515 	stw	zero,20(r16)
   4738c:	80000615 	stw	zero,24(r16)
   47390:	01800204 	movi	r6,8
   47394:	000b883a 	mov	r5,zero
   47398:	81001704 	addi	r4,r16,92
   4739c:	00486e80 	call	486e8 <memset>
   473a0:	8005883a 	mov	r2,r16
   473a4:	80000c15 	stw	zero,48(r16)
   473a8:	80000d15 	stw	zero,52(r16)
   473ac:	80001115 	stw	zero,68(r16)
   473b0:	80001215 	stw	zero,72(r16)
   473b4:	dfc00417 	ldw	ra,16(sp)
   473b8:	dcc00317 	ldw	r19,12(sp)
   473bc:	dc800217 	ldw	r18,8(sp)
   473c0:	dc400117 	ldw	r17,4(sp)
   473c4:	dc000017 	ldw	r16,0(sp)
   473c8:	dec00504 	addi	sp,sp,20
   473cc:	f800283a 	ret
   473d0:	01400104 	movi	r5,4
   473d4:	9809883a 	mov	r4,r19
   473d8:	00472740 	call	47274 <__sfmoreglue>
   473dc:	90800015 	stw	r2,0(r18)
   473e0:	103fde1e 	bne	r2,zero,4735c <__alt_data_end+0xfffc735c>
   473e4:	00800304 	movi	r2,12
   473e8:	98800015 	stw	r2,0(r19)
   473ec:	0005883a 	mov	r2,zero
   473f0:	003ff006 	br	473b4 <__alt_data_end+0xfffc73b4>

000473f4 <_cleanup>:
   473f4:	00800174 	movhi	r2,5
   473f8:	108b8d04 	addi	r2,r2,11828
   473fc:	11000017 	ldw	r4,0(r2)
   47400:	01400174 	movhi	r5,5
   47404:	296cd104 	addi	r5,r5,-19644
   47408:	00479541 	jmpi	47954 <_fwalk_reent>

0004740c <__sinit>:
   4740c:	20800e17 	ldw	r2,56(r4)
   47410:	10000126 	beq	r2,zero,47418 <__sinit+0xc>
   47414:	f800283a 	ret
   47418:	00470d01 	jmpi	470d0 <__sinit.part.1>

0004741c <__sfp_lock_acquire>:
   4741c:	f800283a 	ret

00047420 <__sfp_lock_release>:
   47420:	f800283a 	ret

00047424 <__sinit_lock_acquire>:
   47424:	f800283a 	ret

00047428 <__sinit_lock_release>:
   47428:	f800283a 	ret

0004742c <__fp_lock_all>:
   4742c:	00800174 	movhi	r2,5
   47430:	108b8e04 	addi	r2,r2,11832
   47434:	11000017 	ldw	r4,0(r2)
   47438:	01400134 	movhi	r5,4
   4743c:	295c9b04 	addi	r5,r5,29292
   47440:	00478901 	jmpi	47890 <_fwalk>

00047444 <__fp_unlock_all>:
   47444:	00800174 	movhi	r2,5
   47448:	108b8e04 	addi	r2,r2,11832
   4744c:	11000017 	ldw	r4,0(r2)
   47450:	01400134 	movhi	r5,4
   47454:	295c2f04 	addi	r5,r5,28860
   47458:	00478901 	jmpi	47890 <_fwalk>

0004745c <_malloc_trim_r>:
   4745c:	defffb04 	addi	sp,sp,-20
   47460:	dcc00315 	stw	r19,12(sp)
   47464:	04c00174 	movhi	r19,5
   47468:	dc800215 	stw	r18,8(sp)
   4746c:	dc400115 	stw	r17,4(sp)
   47470:	dc000015 	stw	r16,0(sp)
   47474:	dfc00415 	stw	ra,16(sp)
   47478:	2821883a 	mov	r16,r5
   4747c:	9cc60904 	addi	r19,r19,6180
   47480:	2025883a 	mov	r18,r4
   47484:	004ece80 	call	4ece8 <__malloc_lock>
   47488:	98800217 	ldw	r2,8(r19)
   4748c:	14400117 	ldw	r17,4(r2)
   47490:	00bfff04 	movi	r2,-4
   47494:	88a2703a 	and	r17,r17,r2
   47498:	8c21c83a 	sub	r16,r17,r16
   4749c:	8403fbc4 	addi	r16,r16,4079
   474a0:	8020d33a 	srli	r16,r16,12
   474a4:	0083ffc4 	movi	r2,4095
   474a8:	843fffc4 	addi	r16,r16,-1
   474ac:	8020933a 	slli	r16,r16,12
   474b0:	1400060e 	bge	r2,r16,474cc <_malloc_trim_r+0x70>
   474b4:	000b883a 	mov	r5,zero
   474b8:	9009883a 	mov	r4,r18
   474bc:	00498800 	call	49880 <_sbrk_r>
   474c0:	98c00217 	ldw	r3,8(r19)
   474c4:	1c47883a 	add	r3,r3,r17
   474c8:	10c00a26 	beq	r2,r3,474f4 <_malloc_trim_r+0x98>
   474cc:	9009883a 	mov	r4,r18
   474d0:	004ed0c0 	call	4ed0c <__malloc_unlock>
   474d4:	0005883a 	mov	r2,zero
   474d8:	dfc00417 	ldw	ra,16(sp)
   474dc:	dcc00317 	ldw	r19,12(sp)
   474e0:	dc800217 	ldw	r18,8(sp)
   474e4:	dc400117 	ldw	r17,4(sp)
   474e8:	dc000017 	ldw	r16,0(sp)
   474ec:	dec00504 	addi	sp,sp,20
   474f0:	f800283a 	ret
   474f4:	040bc83a 	sub	r5,zero,r16
   474f8:	9009883a 	mov	r4,r18
   474fc:	00498800 	call	49880 <_sbrk_r>
   47500:	00ffffc4 	movi	r3,-1
   47504:	10c00d26 	beq	r2,r3,4753c <_malloc_trim_r+0xe0>
   47508:	00c00174 	movhi	r3,5
   4750c:	18d29204 	addi	r3,r3,19016
   47510:	18800017 	ldw	r2,0(r3)
   47514:	99000217 	ldw	r4,8(r19)
   47518:	8c23c83a 	sub	r17,r17,r16
   4751c:	8c400054 	ori	r17,r17,1
   47520:	1421c83a 	sub	r16,r2,r16
   47524:	24400115 	stw	r17,4(r4)
   47528:	9009883a 	mov	r4,r18
   4752c:	1c000015 	stw	r16,0(r3)
   47530:	004ed0c0 	call	4ed0c <__malloc_unlock>
   47534:	00800044 	movi	r2,1
   47538:	003fe706 	br	474d8 <__alt_data_end+0xfffc74d8>
   4753c:	000b883a 	mov	r5,zero
   47540:	9009883a 	mov	r4,r18
   47544:	00498800 	call	49880 <_sbrk_r>
   47548:	99000217 	ldw	r4,8(r19)
   4754c:	014003c4 	movi	r5,15
   47550:	1107c83a 	sub	r3,r2,r4
   47554:	28ffdd0e 	bge	r5,r3,474cc <__alt_data_end+0xfffc74cc>
   47558:	01400174 	movhi	r5,5
   4755c:	294b9004 	addi	r5,r5,11840
   47560:	29400017 	ldw	r5,0(r5)
   47564:	18c00054 	ori	r3,r3,1
   47568:	20c00115 	stw	r3,4(r4)
   4756c:	00c00174 	movhi	r3,5
   47570:	1145c83a 	sub	r2,r2,r5
   47574:	18d29204 	addi	r3,r3,19016
   47578:	18800015 	stw	r2,0(r3)
   4757c:	003fd306 	br	474cc <__alt_data_end+0xfffc74cc>

00047580 <_free_r>:
   47580:	28004126 	beq	r5,zero,47688 <_free_r+0x108>
   47584:	defffd04 	addi	sp,sp,-12
   47588:	dc400115 	stw	r17,4(sp)
   4758c:	dc000015 	stw	r16,0(sp)
   47590:	2023883a 	mov	r17,r4
   47594:	2821883a 	mov	r16,r5
   47598:	dfc00215 	stw	ra,8(sp)
   4759c:	004ece80 	call	4ece8 <__malloc_lock>
   475a0:	81ffff17 	ldw	r7,-4(r16)
   475a4:	00bfff84 	movi	r2,-2
   475a8:	01000174 	movhi	r4,5
   475ac:	81bffe04 	addi	r6,r16,-8
   475b0:	3884703a 	and	r2,r7,r2
   475b4:	21060904 	addi	r4,r4,6180
   475b8:	308b883a 	add	r5,r6,r2
   475bc:	2a400117 	ldw	r9,4(r5)
   475c0:	22000217 	ldw	r8,8(r4)
   475c4:	00ffff04 	movi	r3,-4
   475c8:	48c6703a 	and	r3,r9,r3
   475cc:	2a005726 	beq	r5,r8,4772c <_free_r+0x1ac>
   475d0:	28c00115 	stw	r3,4(r5)
   475d4:	39c0004c 	andi	r7,r7,1
   475d8:	3800091e 	bne	r7,zero,47600 <_free_r+0x80>
   475dc:	823ffe17 	ldw	r8,-8(r16)
   475e0:	22400204 	addi	r9,r4,8
   475e4:	320dc83a 	sub	r6,r6,r8
   475e8:	31c00217 	ldw	r7,8(r6)
   475ec:	1205883a 	add	r2,r2,r8
   475f0:	3a406526 	beq	r7,r9,47788 <_free_r+0x208>
   475f4:	32000317 	ldw	r8,12(r6)
   475f8:	3a000315 	stw	r8,12(r7)
   475fc:	41c00215 	stw	r7,8(r8)
   47600:	28cf883a 	add	r7,r5,r3
   47604:	39c00117 	ldw	r7,4(r7)
   47608:	39c0004c 	andi	r7,r7,1
   4760c:	38003a26 	beq	r7,zero,476f8 <_free_r+0x178>
   47610:	10c00054 	ori	r3,r2,1
   47614:	30c00115 	stw	r3,4(r6)
   47618:	3087883a 	add	r3,r6,r2
   4761c:	18800015 	stw	r2,0(r3)
   47620:	00c07fc4 	movi	r3,511
   47624:	18801936 	bltu	r3,r2,4768c <_free_r+0x10c>
   47628:	1004d0fa 	srli	r2,r2,3
   4762c:	01c00044 	movi	r7,1
   47630:	21400117 	ldw	r5,4(r4)
   47634:	10c00044 	addi	r3,r2,1
   47638:	18c7883a 	add	r3,r3,r3
   4763c:	1005d0ba 	srai	r2,r2,2
   47640:	18c7883a 	add	r3,r3,r3
   47644:	18c7883a 	add	r3,r3,r3
   47648:	1907883a 	add	r3,r3,r4
   4764c:	3884983a 	sll	r2,r7,r2
   47650:	19c00017 	ldw	r7,0(r3)
   47654:	1a3ffe04 	addi	r8,r3,-8
   47658:	1144b03a 	or	r2,r2,r5
   4765c:	32000315 	stw	r8,12(r6)
   47660:	31c00215 	stw	r7,8(r6)
   47664:	20800115 	stw	r2,4(r4)
   47668:	19800015 	stw	r6,0(r3)
   4766c:	39800315 	stw	r6,12(r7)
   47670:	8809883a 	mov	r4,r17
   47674:	dfc00217 	ldw	ra,8(sp)
   47678:	dc400117 	ldw	r17,4(sp)
   4767c:	dc000017 	ldw	r16,0(sp)
   47680:	dec00304 	addi	sp,sp,12
   47684:	004ed0c1 	jmpi	4ed0c <__malloc_unlock>
   47688:	f800283a 	ret
   4768c:	100ad27a 	srli	r5,r2,9
   47690:	00c00104 	movi	r3,4
   47694:	19404a36 	bltu	r3,r5,477c0 <_free_r+0x240>
   47698:	100ad1ba 	srli	r5,r2,6
   4769c:	28c00e44 	addi	r3,r5,57
   476a0:	18c7883a 	add	r3,r3,r3
   476a4:	29400e04 	addi	r5,r5,56
   476a8:	18c7883a 	add	r3,r3,r3
   476ac:	18c7883a 	add	r3,r3,r3
   476b0:	1909883a 	add	r4,r3,r4
   476b4:	20c00017 	ldw	r3,0(r4)
   476b8:	01c00174 	movhi	r7,5
   476bc:	213ffe04 	addi	r4,r4,-8
   476c0:	39c60904 	addi	r7,r7,6180
   476c4:	20c04426 	beq	r4,r3,477d8 <_free_r+0x258>
   476c8:	01ffff04 	movi	r7,-4
   476cc:	19400117 	ldw	r5,4(r3)
   476d0:	29ca703a 	and	r5,r5,r7
   476d4:	1140022e 	bgeu	r2,r5,476e0 <_free_r+0x160>
   476d8:	18c00217 	ldw	r3,8(r3)
   476dc:	20fffb1e 	bne	r4,r3,476cc <__alt_data_end+0xfffc76cc>
   476e0:	19000317 	ldw	r4,12(r3)
   476e4:	31000315 	stw	r4,12(r6)
   476e8:	30c00215 	stw	r3,8(r6)
   476ec:	21800215 	stw	r6,8(r4)
   476f0:	19800315 	stw	r6,12(r3)
   476f4:	003fde06 	br	47670 <__alt_data_end+0xfffc7670>
   476f8:	29c00217 	ldw	r7,8(r5)
   476fc:	10c5883a 	add	r2,r2,r3
   47700:	00c00174 	movhi	r3,5
   47704:	18c60b04 	addi	r3,r3,6188
   47708:	38c03b26 	beq	r7,r3,477f8 <_free_r+0x278>
   4770c:	2a000317 	ldw	r8,12(r5)
   47710:	11400054 	ori	r5,r2,1
   47714:	3087883a 	add	r3,r6,r2
   47718:	3a000315 	stw	r8,12(r7)
   4771c:	41c00215 	stw	r7,8(r8)
   47720:	31400115 	stw	r5,4(r6)
   47724:	18800015 	stw	r2,0(r3)
   47728:	003fbd06 	br	47620 <__alt_data_end+0xfffc7620>
   4772c:	39c0004c 	andi	r7,r7,1
   47730:	10c5883a 	add	r2,r2,r3
   47734:	3800071e 	bne	r7,zero,47754 <_free_r+0x1d4>
   47738:	81fffe17 	ldw	r7,-8(r16)
   4773c:	31cdc83a 	sub	r6,r6,r7
   47740:	30c00317 	ldw	r3,12(r6)
   47744:	31400217 	ldw	r5,8(r6)
   47748:	11c5883a 	add	r2,r2,r7
   4774c:	28c00315 	stw	r3,12(r5)
   47750:	19400215 	stw	r5,8(r3)
   47754:	10c00054 	ori	r3,r2,1
   47758:	30c00115 	stw	r3,4(r6)
   4775c:	00c00174 	movhi	r3,5
   47760:	18cb9104 	addi	r3,r3,11844
   47764:	18c00017 	ldw	r3,0(r3)
   47768:	21800215 	stw	r6,8(r4)
   4776c:	10ffc036 	bltu	r2,r3,47670 <__alt_data_end+0xfffc7670>
   47770:	00800174 	movhi	r2,5
   47774:	10928904 	addi	r2,r2,18980
   47778:	11400017 	ldw	r5,0(r2)
   4777c:	8809883a 	mov	r4,r17
   47780:	004745c0 	call	4745c <_malloc_trim_r>
   47784:	003fba06 	br	47670 <__alt_data_end+0xfffc7670>
   47788:	28c9883a 	add	r4,r5,r3
   4778c:	21000117 	ldw	r4,4(r4)
   47790:	2100004c 	andi	r4,r4,1
   47794:	2000391e 	bne	r4,zero,4787c <_free_r+0x2fc>
   47798:	29c00217 	ldw	r7,8(r5)
   4779c:	29000317 	ldw	r4,12(r5)
   477a0:	1885883a 	add	r2,r3,r2
   477a4:	10c00054 	ori	r3,r2,1
   477a8:	39000315 	stw	r4,12(r7)
   477ac:	21c00215 	stw	r7,8(r4)
   477b0:	30c00115 	stw	r3,4(r6)
   477b4:	308d883a 	add	r6,r6,r2
   477b8:	30800015 	stw	r2,0(r6)
   477bc:	003fac06 	br	47670 <__alt_data_end+0xfffc7670>
   477c0:	00c00504 	movi	r3,20
   477c4:	19401536 	bltu	r3,r5,4781c <_free_r+0x29c>
   477c8:	28c01704 	addi	r3,r5,92
   477cc:	18c7883a 	add	r3,r3,r3
   477d0:	294016c4 	addi	r5,r5,91
   477d4:	003fb406 	br	476a8 <__alt_data_end+0xfffc76a8>
   477d8:	280bd0ba 	srai	r5,r5,2
   477dc:	00c00044 	movi	r3,1
   477e0:	38800117 	ldw	r2,4(r7)
   477e4:	194a983a 	sll	r5,r3,r5
   477e8:	2007883a 	mov	r3,r4
   477ec:	2884b03a 	or	r2,r5,r2
   477f0:	38800115 	stw	r2,4(r7)
   477f4:	003fbb06 	br	476e4 <__alt_data_end+0xfffc76e4>
   477f8:	21800515 	stw	r6,20(r4)
   477fc:	21800415 	stw	r6,16(r4)
   47800:	10c00054 	ori	r3,r2,1
   47804:	31c00315 	stw	r7,12(r6)
   47808:	31c00215 	stw	r7,8(r6)
   4780c:	30c00115 	stw	r3,4(r6)
   47810:	308d883a 	add	r6,r6,r2
   47814:	30800015 	stw	r2,0(r6)
   47818:	003f9506 	br	47670 <__alt_data_end+0xfffc7670>
   4781c:	00c01504 	movi	r3,84
   47820:	19400536 	bltu	r3,r5,47838 <_free_r+0x2b8>
   47824:	100ad33a 	srli	r5,r2,12
   47828:	28c01bc4 	addi	r3,r5,111
   4782c:	18c7883a 	add	r3,r3,r3
   47830:	29401b84 	addi	r5,r5,110
   47834:	003f9c06 	br	476a8 <__alt_data_end+0xfffc76a8>
   47838:	00c05504 	movi	r3,340
   4783c:	19400536 	bltu	r3,r5,47854 <_free_r+0x2d4>
   47840:	100ad3fa 	srli	r5,r2,15
   47844:	28c01e04 	addi	r3,r5,120
   47848:	18c7883a 	add	r3,r3,r3
   4784c:	29401dc4 	addi	r5,r5,119
   47850:	003f9506 	br	476a8 <__alt_data_end+0xfffc76a8>
   47854:	00c15504 	movi	r3,1364
   47858:	19400536 	bltu	r3,r5,47870 <_free_r+0x2f0>
   4785c:	100ad4ba 	srli	r5,r2,18
   47860:	28c01f44 	addi	r3,r5,125
   47864:	18c7883a 	add	r3,r3,r3
   47868:	29401f04 	addi	r5,r5,124
   4786c:	003f8e06 	br	476a8 <__alt_data_end+0xfffc76a8>
   47870:	00c03f84 	movi	r3,254
   47874:	01401f84 	movi	r5,126
   47878:	003f8b06 	br	476a8 <__alt_data_end+0xfffc76a8>
   4787c:	10c00054 	ori	r3,r2,1
   47880:	30c00115 	stw	r3,4(r6)
   47884:	308d883a 	add	r6,r6,r2
   47888:	30800015 	stw	r2,0(r6)
   4788c:	003f7806 	br	47670 <__alt_data_end+0xfffc7670>

00047890 <_fwalk>:
   47890:	defff704 	addi	sp,sp,-36
   47894:	dd000415 	stw	r20,16(sp)
   47898:	dfc00815 	stw	ra,32(sp)
   4789c:	ddc00715 	stw	r23,28(sp)
   478a0:	dd800615 	stw	r22,24(sp)
   478a4:	dd400515 	stw	r21,20(sp)
   478a8:	dcc00315 	stw	r19,12(sp)
   478ac:	dc800215 	stw	r18,8(sp)
   478b0:	dc400115 	stw	r17,4(sp)
   478b4:	dc000015 	stw	r16,0(sp)
   478b8:	2500b804 	addi	r20,r4,736
   478bc:	a0002326 	beq	r20,zero,4794c <_fwalk+0xbc>
   478c0:	282b883a 	mov	r21,r5
   478c4:	002f883a 	mov	r23,zero
   478c8:	05800044 	movi	r22,1
   478cc:	04ffffc4 	movi	r19,-1
   478d0:	a4400117 	ldw	r17,4(r20)
   478d4:	a4800217 	ldw	r18,8(r20)
   478d8:	8c7fffc4 	addi	r17,r17,-1
   478dc:	88000d16 	blt	r17,zero,47914 <_fwalk+0x84>
   478e0:	94000304 	addi	r16,r18,12
   478e4:	94800384 	addi	r18,r18,14
   478e8:	8080000b 	ldhu	r2,0(r16)
   478ec:	8c7fffc4 	addi	r17,r17,-1
   478f0:	813ffd04 	addi	r4,r16,-12
   478f4:	b080042e 	bgeu	r22,r2,47908 <_fwalk+0x78>
   478f8:	9080000f 	ldh	r2,0(r18)
   478fc:	14c00226 	beq	r2,r19,47908 <_fwalk+0x78>
   47900:	a83ee83a 	callr	r21
   47904:	b8aeb03a 	or	r23,r23,r2
   47908:	84001a04 	addi	r16,r16,104
   4790c:	94801a04 	addi	r18,r18,104
   47910:	8cfff51e 	bne	r17,r19,478e8 <__alt_data_end+0xfffc78e8>
   47914:	a5000017 	ldw	r20,0(r20)
   47918:	a03fed1e 	bne	r20,zero,478d0 <__alt_data_end+0xfffc78d0>
   4791c:	b805883a 	mov	r2,r23
   47920:	dfc00817 	ldw	ra,32(sp)
   47924:	ddc00717 	ldw	r23,28(sp)
   47928:	dd800617 	ldw	r22,24(sp)
   4792c:	dd400517 	ldw	r21,20(sp)
   47930:	dd000417 	ldw	r20,16(sp)
   47934:	dcc00317 	ldw	r19,12(sp)
   47938:	dc800217 	ldw	r18,8(sp)
   4793c:	dc400117 	ldw	r17,4(sp)
   47940:	dc000017 	ldw	r16,0(sp)
   47944:	dec00904 	addi	sp,sp,36
   47948:	f800283a 	ret
   4794c:	002f883a 	mov	r23,zero
   47950:	003ff206 	br	4791c <__alt_data_end+0xfffc791c>

00047954 <_fwalk_reent>:
   47954:	defff704 	addi	sp,sp,-36
   47958:	dd000415 	stw	r20,16(sp)
   4795c:	dfc00815 	stw	ra,32(sp)
   47960:	ddc00715 	stw	r23,28(sp)
   47964:	dd800615 	stw	r22,24(sp)
   47968:	dd400515 	stw	r21,20(sp)
   4796c:	dcc00315 	stw	r19,12(sp)
   47970:	dc800215 	stw	r18,8(sp)
   47974:	dc400115 	stw	r17,4(sp)
   47978:	dc000015 	stw	r16,0(sp)
   4797c:	2500b804 	addi	r20,r4,736
   47980:	a0002326 	beq	r20,zero,47a10 <_fwalk_reent+0xbc>
   47984:	282b883a 	mov	r21,r5
   47988:	2027883a 	mov	r19,r4
   4798c:	002f883a 	mov	r23,zero
   47990:	05800044 	movi	r22,1
   47994:	04bfffc4 	movi	r18,-1
   47998:	a4400117 	ldw	r17,4(r20)
   4799c:	a4000217 	ldw	r16,8(r20)
   479a0:	8c7fffc4 	addi	r17,r17,-1
   479a4:	88000c16 	blt	r17,zero,479d8 <_fwalk_reent+0x84>
   479a8:	84000304 	addi	r16,r16,12
   479ac:	8080000b 	ldhu	r2,0(r16)
   479b0:	8c7fffc4 	addi	r17,r17,-1
   479b4:	817ffd04 	addi	r5,r16,-12
   479b8:	b080052e 	bgeu	r22,r2,479d0 <_fwalk_reent+0x7c>
   479bc:	8080008f 	ldh	r2,2(r16)
   479c0:	9809883a 	mov	r4,r19
   479c4:	14800226 	beq	r2,r18,479d0 <_fwalk_reent+0x7c>
   479c8:	a83ee83a 	callr	r21
   479cc:	b8aeb03a 	or	r23,r23,r2
   479d0:	84001a04 	addi	r16,r16,104
   479d4:	8cbff51e 	bne	r17,r18,479ac <__alt_data_end+0xfffc79ac>
   479d8:	a5000017 	ldw	r20,0(r20)
   479dc:	a03fee1e 	bne	r20,zero,47998 <__alt_data_end+0xfffc7998>
   479e0:	b805883a 	mov	r2,r23
   479e4:	dfc00817 	ldw	ra,32(sp)
   479e8:	ddc00717 	ldw	r23,28(sp)
   479ec:	dd800617 	ldw	r22,24(sp)
   479f0:	dd400517 	ldw	r21,20(sp)
   479f4:	dd000417 	ldw	r20,16(sp)
   479f8:	dcc00317 	ldw	r19,12(sp)
   479fc:	dc800217 	ldw	r18,8(sp)
   47a00:	dc400117 	ldw	r17,4(sp)
   47a04:	dc000017 	ldw	r16,0(sp)
   47a08:	dec00904 	addi	sp,sp,36
   47a0c:	f800283a 	ret
   47a10:	002f883a 	mov	r23,zero
   47a14:	003ff206 	br	479e0 <__alt_data_end+0xfffc79e0>

00047a18 <_setlocale_r>:
   47a18:	30001b26 	beq	r6,zero,47a88 <_setlocale_r+0x70>
   47a1c:	01400174 	movhi	r5,5
   47a20:	defffe04 	addi	sp,sp,-8
   47a24:	29445904 	addi	r5,r5,4452
   47a28:	3009883a 	mov	r4,r6
   47a2c:	dc000015 	stw	r16,0(sp)
   47a30:	dfc00115 	stw	ra,4(sp)
   47a34:	3021883a 	mov	r16,r6
   47a38:	0049a100 	call	49a10 <strcmp>
   47a3c:	1000061e 	bne	r2,zero,47a58 <_setlocale_r+0x40>
   47a40:	00800174 	movhi	r2,5
   47a44:	10845804 	addi	r2,r2,4448
   47a48:	dfc00117 	ldw	ra,4(sp)
   47a4c:	dc000017 	ldw	r16,0(sp)
   47a50:	dec00204 	addi	sp,sp,8
   47a54:	f800283a 	ret
   47a58:	01400174 	movhi	r5,5
   47a5c:	29445804 	addi	r5,r5,4448
   47a60:	8009883a 	mov	r4,r16
   47a64:	0049a100 	call	49a10 <strcmp>
   47a68:	103ff526 	beq	r2,zero,47a40 <__alt_data_end+0xfffc7a40>
   47a6c:	01400174 	movhi	r5,5
   47a70:	29444304 	addi	r5,r5,4364
   47a74:	8009883a 	mov	r4,r16
   47a78:	0049a100 	call	49a10 <strcmp>
   47a7c:	103ff026 	beq	r2,zero,47a40 <__alt_data_end+0xfffc7a40>
   47a80:	0005883a 	mov	r2,zero
   47a84:	003ff006 	br	47a48 <__alt_data_end+0xfffc7a48>
   47a88:	00800174 	movhi	r2,5
   47a8c:	10845804 	addi	r2,r2,4448
   47a90:	f800283a 	ret

00047a94 <__locale_charset>:
   47a94:	00800174 	movhi	r2,5
   47a98:	1085f304 	addi	r2,r2,6092
   47a9c:	f800283a 	ret

00047aa0 <__locale_mb_cur_max>:
   47aa0:	00800174 	movhi	r2,5
   47aa4:	108b8f04 	addi	r2,r2,11836
   47aa8:	10800017 	ldw	r2,0(r2)
   47aac:	f800283a 	ret

00047ab0 <__locale_msgcharset>:
   47ab0:	00800174 	movhi	r2,5
   47ab4:	1085eb04 	addi	r2,r2,6060
   47ab8:	f800283a 	ret

00047abc <__locale_cjk_lang>:
   47abc:	0005883a 	mov	r2,zero
   47ac0:	f800283a 	ret

00047ac4 <_localeconv_r>:
   47ac4:	00800174 	movhi	r2,5
   47ac8:	1085fb04 	addi	r2,r2,6124
   47acc:	f800283a 	ret

00047ad0 <setlocale>:
   47ad0:	00800174 	movhi	r2,5
   47ad4:	108b8e04 	addi	r2,r2,11832
   47ad8:	280d883a 	mov	r6,r5
   47adc:	200b883a 	mov	r5,r4
   47ae0:	11000017 	ldw	r4,0(r2)
   47ae4:	0047a181 	jmpi	47a18 <_setlocale_r>

00047ae8 <localeconv>:
   47ae8:	00800174 	movhi	r2,5
   47aec:	1085fb04 	addi	r2,r2,6124
   47af0:	f800283a 	ret

00047af4 <__smakebuf_r>:
   47af4:	2880030b 	ldhu	r2,12(r5)
   47af8:	10c0008c 	andi	r3,r2,2
   47afc:	1800411e 	bne	r3,zero,47c04 <__smakebuf_r+0x110>
   47b00:	deffec04 	addi	sp,sp,-80
   47b04:	dc000f15 	stw	r16,60(sp)
   47b08:	2821883a 	mov	r16,r5
   47b0c:	2940038f 	ldh	r5,14(r5)
   47b10:	dc401015 	stw	r17,64(sp)
   47b14:	dfc01315 	stw	ra,76(sp)
   47b18:	dcc01215 	stw	r19,72(sp)
   47b1c:	dc801115 	stw	r18,68(sp)
   47b20:	2023883a 	mov	r17,r4
   47b24:	28001c16 	blt	r5,zero,47b98 <__smakebuf_r+0xa4>
   47b28:	d80d883a 	mov	r6,sp
   47b2c:	004b6500 	call	4b650 <_fstat_r>
   47b30:	10001816 	blt	r2,zero,47b94 <__smakebuf_r+0xa0>
   47b34:	d8800117 	ldw	r2,4(sp)
   47b38:	00e00014 	movui	r3,32768
   47b3c:	10bc000c 	andi	r2,r2,61440
   47b40:	14c80020 	cmpeqi	r19,r2,8192
   47b44:	10c03726 	beq	r2,r3,47c24 <__smakebuf_r+0x130>
   47b48:	80c0030b 	ldhu	r3,12(r16)
   47b4c:	18c20014 	ori	r3,r3,2048
   47b50:	80c0030d 	sth	r3,12(r16)
   47b54:	00c80004 	movi	r3,8192
   47b58:	10c0521e 	bne	r2,r3,47ca4 <__smakebuf_r+0x1b0>
   47b5c:	8140038f 	ldh	r5,14(r16)
   47b60:	8809883a 	mov	r4,r17
   47b64:	004bb680 	call	4bb68 <_isatty_r>
   47b68:	10004c26 	beq	r2,zero,47c9c <__smakebuf_r+0x1a8>
   47b6c:	8080030b 	ldhu	r2,12(r16)
   47b70:	80c010c4 	addi	r3,r16,67
   47b74:	80c00015 	stw	r3,0(r16)
   47b78:	10800054 	ori	r2,r2,1
   47b7c:	8080030d 	sth	r2,12(r16)
   47b80:	00800044 	movi	r2,1
   47b84:	80c00415 	stw	r3,16(r16)
   47b88:	80800515 	stw	r2,20(r16)
   47b8c:	04810004 	movi	r18,1024
   47b90:	00000706 	br	47bb0 <__smakebuf_r+0xbc>
   47b94:	8080030b 	ldhu	r2,12(r16)
   47b98:	10c0200c 	andi	r3,r2,128
   47b9c:	18001f1e 	bne	r3,zero,47c1c <__smakebuf_r+0x128>
   47ba0:	04810004 	movi	r18,1024
   47ba4:	10820014 	ori	r2,r2,2048
   47ba8:	8080030d 	sth	r2,12(r16)
   47bac:	0027883a 	mov	r19,zero
   47bb0:	900b883a 	mov	r5,r18
   47bb4:	8809883a 	mov	r4,r17
   47bb8:	0047cb00 	call	47cb0 <_malloc_r>
   47bbc:	10002c26 	beq	r2,zero,47c70 <__smakebuf_r+0x17c>
   47bc0:	80c0030b 	ldhu	r3,12(r16)
   47bc4:	01000134 	movhi	r4,4
   47bc8:	211c3104 	addi	r4,r4,28868
   47bcc:	89000f15 	stw	r4,60(r17)
   47bd0:	18c02014 	ori	r3,r3,128
   47bd4:	80c0030d 	sth	r3,12(r16)
   47bd8:	80800015 	stw	r2,0(r16)
   47bdc:	80800415 	stw	r2,16(r16)
   47be0:	84800515 	stw	r18,20(r16)
   47be4:	98001a1e 	bne	r19,zero,47c50 <__smakebuf_r+0x15c>
   47be8:	dfc01317 	ldw	ra,76(sp)
   47bec:	dcc01217 	ldw	r19,72(sp)
   47bf0:	dc801117 	ldw	r18,68(sp)
   47bf4:	dc401017 	ldw	r17,64(sp)
   47bf8:	dc000f17 	ldw	r16,60(sp)
   47bfc:	dec01404 	addi	sp,sp,80
   47c00:	f800283a 	ret
   47c04:	288010c4 	addi	r2,r5,67
   47c08:	28800015 	stw	r2,0(r5)
   47c0c:	28800415 	stw	r2,16(r5)
   47c10:	00800044 	movi	r2,1
   47c14:	28800515 	stw	r2,20(r5)
   47c18:	f800283a 	ret
   47c1c:	04801004 	movi	r18,64
   47c20:	003fe006 	br	47ba4 <__alt_data_end+0xfffc7ba4>
   47c24:	81000a17 	ldw	r4,40(r16)
   47c28:	00c00174 	movhi	r3,5
   47c2c:	18e66b04 	addi	r3,r3,-26196
   47c30:	20ffc51e 	bne	r4,r3,47b48 <__alt_data_end+0xfffc7b48>
   47c34:	8080030b 	ldhu	r2,12(r16)
   47c38:	04810004 	movi	r18,1024
   47c3c:	84801315 	stw	r18,76(r16)
   47c40:	1484b03a 	or	r2,r2,r18
   47c44:	8080030d 	sth	r2,12(r16)
   47c48:	0027883a 	mov	r19,zero
   47c4c:	003fd806 	br	47bb0 <__alt_data_end+0xfffc7bb0>
   47c50:	8140038f 	ldh	r5,14(r16)
   47c54:	8809883a 	mov	r4,r17
   47c58:	004bb680 	call	4bb68 <_isatty_r>
   47c5c:	103fe226 	beq	r2,zero,47be8 <__alt_data_end+0xfffc7be8>
   47c60:	8080030b 	ldhu	r2,12(r16)
   47c64:	10800054 	ori	r2,r2,1
   47c68:	8080030d 	sth	r2,12(r16)
   47c6c:	003fde06 	br	47be8 <__alt_data_end+0xfffc7be8>
   47c70:	8080030b 	ldhu	r2,12(r16)
   47c74:	10c0800c 	andi	r3,r2,512
   47c78:	183fdb1e 	bne	r3,zero,47be8 <__alt_data_end+0xfffc7be8>
   47c7c:	10800094 	ori	r2,r2,2
   47c80:	80c010c4 	addi	r3,r16,67
   47c84:	8080030d 	sth	r2,12(r16)
   47c88:	00800044 	movi	r2,1
   47c8c:	80c00015 	stw	r3,0(r16)
   47c90:	80c00415 	stw	r3,16(r16)
   47c94:	80800515 	stw	r2,20(r16)
   47c98:	003fd306 	br	47be8 <__alt_data_end+0xfffc7be8>
   47c9c:	04810004 	movi	r18,1024
   47ca0:	003fc306 	br	47bb0 <__alt_data_end+0xfffc7bb0>
   47ca4:	0027883a 	mov	r19,zero
   47ca8:	04810004 	movi	r18,1024
   47cac:	003fc006 	br	47bb0 <__alt_data_end+0xfffc7bb0>

00047cb0 <_malloc_r>:
   47cb0:	defff504 	addi	sp,sp,-44
   47cb4:	dc800315 	stw	r18,12(sp)
   47cb8:	dfc00a15 	stw	ra,40(sp)
   47cbc:	df000915 	stw	fp,36(sp)
   47cc0:	ddc00815 	stw	r23,32(sp)
   47cc4:	dd800715 	stw	r22,28(sp)
   47cc8:	dd400615 	stw	r21,24(sp)
   47ccc:	dd000515 	stw	r20,20(sp)
   47cd0:	dcc00415 	stw	r19,16(sp)
   47cd4:	dc400215 	stw	r17,8(sp)
   47cd8:	dc000115 	stw	r16,4(sp)
   47cdc:	288002c4 	addi	r2,r5,11
   47ce0:	00c00584 	movi	r3,22
   47ce4:	2025883a 	mov	r18,r4
   47ce8:	18807f2e 	bgeu	r3,r2,47ee8 <_malloc_r+0x238>
   47cec:	047ffe04 	movi	r17,-8
   47cf0:	1462703a 	and	r17,r2,r17
   47cf4:	8800a316 	blt	r17,zero,47f84 <_malloc_r+0x2d4>
   47cf8:	8940a236 	bltu	r17,r5,47f84 <_malloc_r+0x2d4>
   47cfc:	004ece80 	call	4ece8 <__malloc_lock>
   47d00:	00807dc4 	movi	r2,503
   47d04:	1441e92e 	bgeu	r2,r17,484ac <_malloc_r+0x7fc>
   47d08:	8804d27a 	srli	r2,r17,9
   47d0c:	1000a126 	beq	r2,zero,47f94 <_malloc_r+0x2e4>
   47d10:	00c00104 	movi	r3,4
   47d14:	18811e36 	bltu	r3,r2,48190 <_malloc_r+0x4e0>
   47d18:	8804d1ba 	srli	r2,r17,6
   47d1c:	12000e44 	addi	r8,r2,57
   47d20:	11c00e04 	addi	r7,r2,56
   47d24:	4209883a 	add	r4,r8,r8
   47d28:	04c00174 	movhi	r19,5
   47d2c:	2109883a 	add	r4,r4,r4
   47d30:	9cc60904 	addi	r19,r19,6180
   47d34:	2109883a 	add	r4,r4,r4
   47d38:	9909883a 	add	r4,r19,r4
   47d3c:	24000117 	ldw	r16,4(r4)
   47d40:	213ffe04 	addi	r4,r4,-8
   47d44:	24009726 	beq	r4,r16,47fa4 <_malloc_r+0x2f4>
   47d48:	80800117 	ldw	r2,4(r16)
   47d4c:	01bfff04 	movi	r6,-4
   47d50:	014003c4 	movi	r5,15
   47d54:	1184703a 	and	r2,r2,r6
   47d58:	1447c83a 	sub	r3,r2,r17
   47d5c:	28c00716 	blt	r5,r3,47d7c <_malloc_r+0xcc>
   47d60:	1800920e 	bge	r3,zero,47fac <_malloc_r+0x2fc>
   47d64:	84000317 	ldw	r16,12(r16)
   47d68:	24008e26 	beq	r4,r16,47fa4 <_malloc_r+0x2f4>
   47d6c:	80800117 	ldw	r2,4(r16)
   47d70:	1184703a 	and	r2,r2,r6
   47d74:	1447c83a 	sub	r3,r2,r17
   47d78:	28fff90e 	bge	r5,r3,47d60 <__alt_data_end+0xfffc7d60>
   47d7c:	3809883a 	mov	r4,r7
   47d80:	01800174 	movhi	r6,5
   47d84:	9c000417 	ldw	r16,16(r19)
   47d88:	31860904 	addi	r6,r6,6180
   47d8c:	32000204 	addi	r8,r6,8
   47d90:	82013426 	beq	r16,r8,48264 <_malloc_r+0x5b4>
   47d94:	80c00117 	ldw	r3,4(r16)
   47d98:	00bfff04 	movi	r2,-4
   47d9c:	188e703a 	and	r7,r3,r2
   47da0:	3c45c83a 	sub	r2,r7,r17
   47da4:	00c003c4 	movi	r3,15
   47da8:	18811f16 	blt	r3,r2,48228 <_malloc_r+0x578>
   47dac:	32000515 	stw	r8,20(r6)
   47db0:	32000415 	stw	r8,16(r6)
   47db4:	10007f0e 	bge	r2,zero,47fb4 <_malloc_r+0x304>
   47db8:	00807fc4 	movi	r2,511
   47dbc:	11c0fd36 	bltu	r2,r7,481b4 <_malloc_r+0x504>
   47dc0:	3806d0fa 	srli	r3,r7,3
   47dc4:	01c00044 	movi	r7,1
   47dc8:	30800117 	ldw	r2,4(r6)
   47dcc:	19400044 	addi	r5,r3,1
   47dd0:	294b883a 	add	r5,r5,r5
   47dd4:	1807d0ba 	srai	r3,r3,2
   47dd8:	294b883a 	add	r5,r5,r5
   47ddc:	294b883a 	add	r5,r5,r5
   47de0:	298b883a 	add	r5,r5,r6
   47de4:	38c6983a 	sll	r3,r7,r3
   47de8:	29c00017 	ldw	r7,0(r5)
   47dec:	2a7ffe04 	addi	r9,r5,-8
   47df0:	1886b03a 	or	r3,r3,r2
   47df4:	82400315 	stw	r9,12(r16)
   47df8:	81c00215 	stw	r7,8(r16)
   47dfc:	30c00115 	stw	r3,4(r6)
   47e00:	2c000015 	stw	r16,0(r5)
   47e04:	3c000315 	stw	r16,12(r7)
   47e08:	2005d0ba 	srai	r2,r4,2
   47e0c:	01400044 	movi	r5,1
   47e10:	288a983a 	sll	r5,r5,r2
   47e14:	19406f36 	bltu	r3,r5,47fd4 <_malloc_r+0x324>
   47e18:	28c4703a 	and	r2,r5,r3
   47e1c:	10000a1e 	bne	r2,zero,47e48 <_malloc_r+0x198>
   47e20:	00bfff04 	movi	r2,-4
   47e24:	294b883a 	add	r5,r5,r5
   47e28:	2088703a 	and	r4,r4,r2
   47e2c:	28c4703a 	and	r2,r5,r3
   47e30:	21000104 	addi	r4,r4,4
   47e34:	1000041e 	bne	r2,zero,47e48 <_malloc_r+0x198>
   47e38:	294b883a 	add	r5,r5,r5
   47e3c:	28c4703a 	and	r2,r5,r3
   47e40:	21000104 	addi	r4,r4,4
   47e44:	103ffc26 	beq	r2,zero,47e38 <__alt_data_end+0xfffc7e38>
   47e48:	02bfff04 	movi	r10,-4
   47e4c:	024003c4 	movi	r9,15
   47e50:	21800044 	addi	r6,r4,1
   47e54:	318d883a 	add	r6,r6,r6
   47e58:	318d883a 	add	r6,r6,r6
   47e5c:	318d883a 	add	r6,r6,r6
   47e60:	998d883a 	add	r6,r19,r6
   47e64:	333ffe04 	addi	r12,r6,-8
   47e68:	2017883a 	mov	r11,r4
   47e6c:	31800104 	addi	r6,r6,4
   47e70:	34000017 	ldw	r16,0(r6)
   47e74:	31fffd04 	addi	r7,r6,-12
   47e78:	81c0041e 	bne	r16,r7,47e8c <_malloc_r+0x1dc>
   47e7c:	0000fb06 	br	4826c <_malloc_r+0x5bc>
   47e80:	1801030e 	bge	r3,zero,48290 <_malloc_r+0x5e0>
   47e84:	84000317 	ldw	r16,12(r16)
   47e88:	81c0f826 	beq	r16,r7,4826c <_malloc_r+0x5bc>
   47e8c:	80800117 	ldw	r2,4(r16)
   47e90:	1284703a 	and	r2,r2,r10
   47e94:	1447c83a 	sub	r3,r2,r17
   47e98:	48fff90e 	bge	r9,r3,47e80 <__alt_data_end+0xfffc7e80>
   47e9c:	80800317 	ldw	r2,12(r16)
   47ea0:	81000217 	ldw	r4,8(r16)
   47ea4:	89400054 	ori	r5,r17,1
   47ea8:	81400115 	stw	r5,4(r16)
   47eac:	20800315 	stw	r2,12(r4)
   47eb0:	11000215 	stw	r4,8(r2)
   47eb4:	8463883a 	add	r17,r16,r17
   47eb8:	9c400515 	stw	r17,20(r19)
   47ebc:	9c400415 	stw	r17,16(r19)
   47ec0:	18800054 	ori	r2,r3,1
   47ec4:	88800115 	stw	r2,4(r17)
   47ec8:	8a000315 	stw	r8,12(r17)
   47ecc:	8a000215 	stw	r8,8(r17)
   47ed0:	88e3883a 	add	r17,r17,r3
   47ed4:	88c00015 	stw	r3,0(r17)
   47ed8:	9009883a 	mov	r4,r18
   47edc:	004ed0c0 	call	4ed0c <__malloc_unlock>
   47ee0:	80800204 	addi	r2,r16,8
   47ee4:	00001b06 	br	47f54 <_malloc_r+0x2a4>
   47ee8:	04400404 	movi	r17,16
   47eec:	89402536 	bltu	r17,r5,47f84 <_malloc_r+0x2d4>
   47ef0:	004ece80 	call	4ece8 <__malloc_lock>
   47ef4:	00800184 	movi	r2,6
   47ef8:	01000084 	movi	r4,2
   47efc:	04c00174 	movhi	r19,5
   47f00:	1085883a 	add	r2,r2,r2
   47f04:	9cc60904 	addi	r19,r19,6180
   47f08:	1085883a 	add	r2,r2,r2
   47f0c:	9885883a 	add	r2,r19,r2
   47f10:	14000117 	ldw	r16,4(r2)
   47f14:	10fffe04 	addi	r3,r2,-8
   47f18:	80c0d926 	beq	r16,r3,48280 <_malloc_r+0x5d0>
   47f1c:	80c00117 	ldw	r3,4(r16)
   47f20:	81000317 	ldw	r4,12(r16)
   47f24:	00bfff04 	movi	r2,-4
   47f28:	1884703a 	and	r2,r3,r2
   47f2c:	81400217 	ldw	r5,8(r16)
   47f30:	8085883a 	add	r2,r16,r2
   47f34:	10c00117 	ldw	r3,4(r2)
   47f38:	29000315 	stw	r4,12(r5)
   47f3c:	21400215 	stw	r5,8(r4)
   47f40:	18c00054 	ori	r3,r3,1
   47f44:	10c00115 	stw	r3,4(r2)
   47f48:	9009883a 	mov	r4,r18
   47f4c:	004ed0c0 	call	4ed0c <__malloc_unlock>
   47f50:	80800204 	addi	r2,r16,8
   47f54:	dfc00a17 	ldw	ra,40(sp)
   47f58:	df000917 	ldw	fp,36(sp)
   47f5c:	ddc00817 	ldw	r23,32(sp)
   47f60:	dd800717 	ldw	r22,28(sp)
   47f64:	dd400617 	ldw	r21,24(sp)
   47f68:	dd000517 	ldw	r20,20(sp)
   47f6c:	dcc00417 	ldw	r19,16(sp)
   47f70:	dc800317 	ldw	r18,12(sp)
   47f74:	dc400217 	ldw	r17,8(sp)
   47f78:	dc000117 	ldw	r16,4(sp)
   47f7c:	dec00b04 	addi	sp,sp,44
   47f80:	f800283a 	ret
   47f84:	00800304 	movi	r2,12
   47f88:	90800015 	stw	r2,0(r18)
   47f8c:	0005883a 	mov	r2,zero
   47f90:	003ff006 	br	47f54 <__alt_data_end+0xfffc7f54>
   47f94:	01002004 	movi	r4,128
   47f98:	02001004 	movi	r8,64
   47f9c:	01c00fc4 	movi	r7,63
   47fa0:	003f6106 	br	47d28 <__alt_data_end+0xfffc7d28>
   47fa4:	4009883a 	mov	r4,r8
   47fa8:	003f7506 	br	47d80 <__alt_data_end+0xfffc7d80>
   47fac:	81000317 	ldw	r4,12(r16)
   47fb0:	003fde06 	br	47f2c <__alt_data_end+0xfffc7f2c>
   47fb4:	81c5883a 	add	r2,r16,r7
   47fb8:	11400117 	ldw	r5,4(r2)
   47fbc:	9009883a 	mov	r4,r18
   47fc0:	29400054 	ori	r5,r5,1
   47fc4:	11400115 	stw	r5,4(r2)
   47fc8:	004ed0c0 	call	4ed0c <__malloc_unlock>
   47fcc:	80800204 	addi	r2,r16,8
   47fd0:	003fe006 	br	47f54 <__alt_data_end+0xfffc7f54>
   47fd4:	9c000217 	ldw	r16,8(r19)
   47fd8:	00bfff04 	movi	r2,-4
   47fdc:	85800117 	ldw	r22,4(r16)
   47fe0:	b0ac703a 	and	r22,r22,r2
   47fe4:	b4400336 	bltu	r22,r17,47ff4 <_malloc_r+0x344>
   47fe8:	b445c83a 	sub	r2,r22,r17
   47fec:	00c003c4 	movi	r3,15
   47ff0:	18805d16 	blt	r3,r2,48168 <_malloc_r+0x4b8>
   47ff4:	05c00174 	movhi	r23,5
   47ff8:	00800174 	movhi	r2,5
   47ffc:	10928904 	addi	r2,r2,18980
   48000:	bdcb9004 	addi	r23,r23,11840
   48004:	15400017 	ldw	r21,0(r2)
   48008:	b8c00017 	ldw	r3,0(r23)
   4800c:	00bfffc4 	movi	r2,-1
   48010:	858d883a 	add	r6,r16,r22
   48014:	8d6b883a 	add	r21,r17,r21
   48018:	1880ea26 	beq	r3,r2,483c4 <_malloc_r+0x714>
   4801c:	ad4403c4 	addi	r21,r21,4111
   48020:	00bc0004 	movi	r2,-4096
   48024:	a8aa703a 	and	r21,r21,r2
   48028:	a80b883a 	mov	r5,r21
   4802c:	9009883a 	mov	r4,r18
   48030:	d9800015 	stw	r6,0(sp)
   48034:	00498800 	call	49880 <_sbrk_r>
   48038:	1029883a 	mov	r20,r2
   4803c:	00bfffc4 	movi	r2,-1
   48040:	d9800017 	ldw	r6,0(sp)
   48044:	a080e826 	beq	r20,r2,483e8 <_malloc_r+0x738>
   48048:	a180a636 	bltu	r20,r6,482e4 <_malloc_r+0x634>
   4804c:	07000174 	movhi	fp,5
   48050:	e7129204 	addi	fp,fp,19016
   48054:	e0800017 	ldw	r2,0(fp)
   48058:	a887883a 	add	r3,r21,r2
   4805c:	e0c00015 	stw	r3,0(fp)
   48060:	3500e626 	beq	r6,r20,483fc <_malloc_r+0x74c>
   48064:	b9000017 	ldw	r4,0(r23)
   48068:	00bfffc4 	movi	r2,-1
   4806c:	2080ee26 	beq	r4,r2,48428 <_malloc_r+0x778>
   48070:	a185c83a 	sub	r2,r20,r6
   48074:	10c5883a 	add	r2,r2,r3
   48078:	e0800015 	stw	r2,0(fp)
   4807c:	a0c001cc 	andi	r3,r20,7
   48080:	1800bc26 	beq	r3,zero,48374 <_malloc_r+0x6c4>
   48084:	a0e9c83a 	sub	r20,r20,r3
   48088:	00840204 	movi	r2,4104
   4808c:	a5000204 	addi	r20,r20,8
   48090:	10c7c83a 	sub	r3,r2,r3
   48094:	a545883a 	add	r2,r20,r21
   48098:	1083ffcc 	andi	r2,r2,4095
   4809c:	18abc83a 	sub	r21,r3,r2
   480a0:	a80b883a 	mov	r5,r21
   480a4:	9009883a 	mov	r4,r18
   480a8:	00498800 	call	49880 <_sbrk_r>
   480ac:	00ffffc4 	movi	r3,-1
   480b0:	10c0e126 	beq	r2,r3,48438 <_malloc_r+0x788>
   480b4:	1505c83a 	sub	r2,r2,r20
   480b8:	1545883a 	add	r2,r2,r21
   480bc:	10800054 	ori	r2,r2,1
   480c0:	e0c00017 	ldw	r3,0(fp)
   480c4:	9d000215 	stw	r20,8(r19)
   480c8:	a0800115 	stw	r2,4(r20)
   480cc:	a8c7883a 	add	r3,r21,r3
   480d0:	e0c00015 	stw	r3,0(fp)
   480d4:	84c00e26 	beq	r16,r19,48110 <_malloc_r+0x460>
   480d8:	018003c4 	movi	r6,15
   480dc:	3580a72e 	bgeu	r6,r22,4837c <_malloc_r+0x6cc>
   480e0:	81400117 	ldw	r5,4(r16)
   480e4:	013ffe04 	movi	r4,-8
   480e8:	b0bffd04 	addi	r2,r22,-12
   480ec:	1104703a 	and	r2,r2,r4
   480f0:	2900004c 	andi	r4,r5,1
   480f4:	2088b03a 	or	r4,r4,r2
   480f8:	81000115 	stw	r4,4(r16)
   480fc:	01400144 	movi	r5,5
   48100:	8089883a 	add	r4,r16,r2
   48104:	21400115 	stw	r5,4(r4)
   48108:	21400215 	stw	r5,8(r4)
   4810c:	3080cd36 	bltu	r6,r2,48444 <_malloc_r+0x794>
   48110:	00800174 	movhi	r2,5
   48114:	10928804 	addi	r2,r2,18976
   48118:	11000017 	ldw	r4,0(r2)
   4811c:	20c0012e 	bgeu	r4,r3,48124 <_malloc_r+0x474>
   48120:	10c00015 	stw	r3,0(r2)
   48124:	00800174 	movhi	r2,5
   48128:	10928704 	addi	r2,r2,18972
   4812c:	11000017 	ldw	r4,0(r2)
   48130:	9c000217 	ldw	r16,8(r19)
   48134:	20c0012e 	bgeu	r4,r3,4813c <_malloc_r+0x48c>
   48138:	10c00015 	stw	r3,0(r2)
   4813c:	80c00117 	ldw	r3,4(r16)
   48140:	00bfff04 	movi	r2,-4
   48144:	1886703a 	and	r3,r3,r2
   48148:	1c45c83a 	sub	r2,r3,r17
   4814c:	1c400236 	bltu	r3,r17,48158 <_malloc_r+0x4a8>
   48150:	00c003c4 	movi	r3,15
   48154:	18800416 	blt	r3,r2,48168 <_malloc_r+0x4b8>
   48158:	9009883a 	mov	r4,r18
   4815c:	004ed0c0 	call	4ed0c <__malloc_unlock>
   48160:	0005883a 	mov	r2,zero
   48164:	003f7b06 	br	47f54 <__alt_data_end+0xfffc7f54>
   48168:	88c00054 	ori	r3,r17,1
   4816c:	80c00115 	stw	r3,4(r16)
   48170:	8463883a 	add	r17,r16,r17
   48174:	10800054 	ori	r2,r2,1
   48178:	9c400215 	stw	r17,8(r19)
   4817c:	88800115 	stw	r2,4(r17)
   48180:	9009883a 	mov	r4,r18
   48184:	004ed0c0 	call	4ed0c <__malloc_unlock>
   48188:	80800204 	addi	r2,r16,8
   4818c:	003f7106 	br	47f54 <__alt_data_end+0xfffc7f54>
   48190:	00c00504 	movi	r3,20
   48194:	18804a2e 	bgeu	r3,r2,482c0 <_malloc_r+0x610>
   48198:	00c01504 	movi	r3,84
   4819c:	18806e36 	bltu	r3,r2,48358 <_malloc_r+0x6a8>
   481a0:	8804d33a 	srli	r2,r17,12
   481a4:	12001bc4 	addi	r8,r2,111
   481a8:	11c01b84 	addi	r7,r2,110
   481ac:	4209883a 	add	r4,r8,r8
   481b0:	003edd06 	br	47d28 <__alt_data_end+0xfffc7d28>
   481b4:	3804d27a 	srli	r2,r7,9
   481b8:	00c00104 	movi	r3,4
   481bc:	1880442e 	bgeu	r3,r2,482d0 <_malloc_r+0x620>
   481c0:	00c00504 	movi	r3,20
   481c4:	18808136 	bltu	r3,r2,483cc <_malloc_r+0x71c>
   481c8:	11401704 	addi	r5,r2,92
   481cc:	10c016c4 	addi	r3,r2,91
   481d0:	294b883a 	add	r5,r5,r5
   481d4:	294b883a 	add	r5,r5,r5
   481d8:	294b883a 	add	r5,r5,r5
   481dc:	994b883a 	add	r5,r19,r5
   481e0:	28800017 	ldw	r2,0(r5)
   481e4:	01800174 	movhi	r6,5
   481e8:	297ffe04 	addi	r5,r5,-8
   481ec:	31860904 	addi	r6,r6,6180
   481f0:	28806526 	beq	r5,r2,48388 <_malloc_r+0x6d8>
   481f4:	01bfff04 	movi	r6,-4
   481f8:	10c00117 	ldw	r3,4(r2)
   481fc:	1986703a 	and	r3,r3,r6
   48200:	38c0022e 	bgeu	r7,r3,4820c <_malloc_r+0x55c>
   48204:	10800217 	ldw	r2,8(r2)
   48208:	28bffb1e 	bne	r5,r2,481f8 <__alt_data_end+0xfffc81f8>
   4820c:	11400317 	ldw	r5,12(r2)
   48210:	98c00117 	ldw	r3,4(r19)
   48214:	81400315 	stw	r5,12(r16)
   48218:	80800215 	stw	r2,8(r16)
   4821c:	2c000215 	stw	r16,8(r5)
   48220:	14000315 	stw	r16,12(r2)
   48224:	003ef806 	br	47e08 <__alt_data_end+0xfffc7e08>
   48228:	88c00054 	ori	r3,r17,1
   4822c:	80c00115 	stw	r3,4(r16)
   48230:	8463883a 	add	r17,r16,r17
   48234:	34400515 	stw	r17,20(r6)
   48238:	34400415 	stw	r17,16(r6)
   4823c:	10c00054 	ori	r3,r2,1
   48240:	8a000315 	stw	r8,12(r17)
   48244:	8a000215 	stw	r8,8(r17)
   48248:	88c00115 	stw	r3,4(r17)
   4824c:	88a3883a 	add	r17,r17,r2
   48250:	88800015 	stw	r2,0(r17)
   48254:	9009883a 	mov	r4,r18
   48258:	004ed0c0 	call	4ed0c <__malloc_unlock>
   4825c:	80800204 	addi	r2,r16,8
   48260:	003f3c06 	br	47f54 <__alt_data_end+0xfffc7f54>
   48264:	30c00117 	ldw	r3,4(r6)
   48268:	003ee706 	br	47e08 <__alt_data_end+0xfffc7e08>
   4826c:	5ac00044 	addi	r11,r11,1
   48270:	588000cc 	andi	r2,r11,3
   48274:	31800204 	addi	r6,r6,8
   48278:	103efd1e 	bne	r2,zero,47e70 <__alt_data_end+0xfffc7e70>
   4827c:	00002406 	br	48310 <_malloc_r+0x660>
   48280:	14000317 	ldw	r16,12(r2)
   48284:	143f251e 	bne	r2,r16,47f1c <__alt_data_end+0xfffc7f1c>
   48288:	21000084 	addi	r4,r4,2
   4828c:	003ebc06 	br	47d80 <__alt_data_end+0xfffc7d80>
   48290:	8085883a 	add	r2,r16,r2
   48294:	10c00117 	ldw	r3,4(r2)
   48298:	81000317 	ldw	r4,12(r16)
   4829c:	81400217 	ldw	r5,8(r16)
   482a0:	18c00054 	ori	r3,r3,1
   482a4:	10c00115 	stw	r3,4(r2)
   482a8:	29000315 	stw	r4,12(r5)
   482ac:	21400215 	stw	r5,8(r4)
   482b0:	9009883a 	mov	r4,r18
   482b4:	004ed0c0 	call	4ed0c <__malloc_unlock>
   482b8:	80800204 	addi	r2,r16,8
   482bc:	003f2506 	br	47f54 <__alt_data_end+0xfffc7f54>
   482c0:	12001704 	addi	r8,r2,92
   482c4:	11c016c4 	addi	r7,r2,91
   482c8:	4209883a 	add	r4,r8,r8
   482cc:	003e9606 	br	47d28 <__alt_data_end+0xfffc7d28>
   482d0:	3804d1ba 	srli	r2,r7,6
   482d4:	11400e44 	addi	r5,r2,57
   482d8:	10c00e04 	addi	r3,r2,56
   482dc:	294b883a 	add	r5,r5,r5
   482e0:	003fbc06 	br	481d4 <__alt_data_end+0xfffc81d4>
   482e4:	84ff5926 	beq	r16,r19,4804c <__alt_data_end+0xfffc804c>
   482e8:	00800174 	movhi	r2,5
   482ec:	10860904 	addi	r2,r2,6180
   482f0:	14000217 	ldw	r16,8(r2)
   482f4:	00bfff04 	movi	r2,-4
   482f8:	80c00117 	ldw	r3,4(r16)
   482fc:	1886703a 	and	r3,r3,r2
   48300:	003f9106 	br	48148 <__alt_data_end+0xfffc8148>
   48304:	60800217 	ldw	r2,8(r12)
   48308:	213fffc4 	addi	r4,r4,-1
   4830c:	1300651e 	bne	r2,r12,484a4 <_malloc_r+0x7f4>
   48310:	208000cc 	andi	r2,r4,3
   48314:	633ffe04 	addi	r12,r12,-8
   48318:	103ffa1e 	bne	r2,zero,48304 <__alt_data_end+0xfffc8304>
   4831c:	98800117 	ldw	r2,4(r19)
   48320:	0146303a 	nor	r3,zero,r5
   48324:	1884703a 	and	r2,r3,r2
   48328:	98800115 	stw	r2,4(r19)
   4832c:	294b883a 	add	r5,r5,r5
   48330:	117f2836 	bltu	r2,r5,47fd4 <__alt_data_end+0xfffc7fd4>
   48334:	283f2726 	beq	r5,zero,47fd4 <__alt_data_end+0xfffc7fd4>
   48338:	2886703a 	and	r3,r5,r2
   4833c:	5809883a 	mov	r4,r11
   48340:	183ec31e 	bne	r3,zero,47e50 <__alt_data_end+0xfffc7e50>
   48344:	294b883a 	add	r5,r5,r5
   48348:	2886703a 	and	r3,r5,r2
   4834c:	21000104 	addi	r4,r4,4
   48350:	183ffc26 	beq	r3,zero,48344 <__alt_data_end+0xfffc8344>
   48354:	003ebe06 	br	47e50 <__alt_data_end+0xfffc7e50>
   48358:	00c05504 	movi	r3,340
   4835c:	18801236 	bltu	r3,r2,483a8 <_malloc_r+0x6f8>
   48360:	8804d3fa 	srli	r2,r17,15
   48364:	12001e04 	addi	r8,r2,120
   48368:	11c01dc4 	addi	r7,r2,119
   4836c:	4209883a 	add	r4,r8,r8
   48370:	003e6d06 	br	47d28 <__alt_data_end+0xfffc7d28>
   48374:	00c40004 	movi	r3,4096
   48378:	003f4606 	br	48094 <__alt_data_end+0xfffc8094>
   4837c:	00800044 	movi	r2,1
   48380:	a0800115 	stw	r2,4(r20)
   48384:	003f7406 	br	48158 <__alt_data_end+0xfffc8158>
   48388:	1805d0ba 	srai	r2,r3,2
   4838c:	01c00044 	movi	r7,1
   48390:	30c00117 	ldw	r3,4(r6)
   48394:	388e983a 	sll	r7,r7,r2
   48398:	2805883a 	mov	r2,r5
   4839c:	38c6b03a 	or	r3,r7,r3
   483a0:	30c00115 	stw	r3,4(r6)
   483a4:	003f9b06 	br	48214 <__alt_data_end+0xfffc8214>
   483a8:	00c15504 	movi	r3,1364
   483ac:	18801a36 	bltu	r3,r2,48418 <_malloc_r+0x768>
   483b0:	8804d4ba 	srli	r2,r17,18
   483b4:	12001f44 	addi	r8,r2,125
   483b8:	11c01f04 	addi	r7,r2,124
   483bc:	4209883a 	add	r4,r8,r8
   483c0:	003e5906 	br	47d28 <__alt_data_end+0xfffc7d28>
   483c4:	ad400404 	addi	r21,r21,16
   483c8:	003f1706 	br	48028 <__alt_data_end+0xfffc8028>
   483cc:	00c01504 	movi	r3,84
   483d0:	18802336 	bltu	r3,r2,48460 <_malloc_r+0x7b0>
   483d4:	3804d33a 	srli	r2,r7,12
   483d8:	11401bc4 	addi	r5,r2,111
   483dc:	10c01b84 	addi	r3,r2,110
   483e0:	294b883a 	add	r5,r5,r5
   483e4:	003f7b06 	br	481d4 <__alt_data_end+0xfffc81d4>
   483e8:	9c000217 	ldw	r16,8(r19)
   483ec:	00bfff04 	movi	r2,-4
   483f0:	80c00117 	ldw	r3,4(r16)
   483f4:	1886703a 	and	r3,r3,r2
   483f8:	003f5306 	br	48148 <__alt_data_end+0xfffc8148>
   483fc:	3083ffcc 	andi	r2,r6,4095
   48400:	103f181e 	bne	r2,zero,48064 <__alt_data_end+0xfffc8064>
   48404:	99000217 	ldw	r4,8(r19)
   48408:	b545883a 	add	r2,r22,r21
   4840c:	10800054 	ori	r2,r2,1
   48410:	20800115 	stw	r2,4(r4)
   48414:	003f3e06 	br	48110 <__alt_data_end+0xfffc8110>
   48418:	01003f84 	movi	r4,254
   4841c:	02001fc4 	movi	r8,127
   48420:	01c01f84 	movi	r7,126
   48424:	003e4006 	br	47d28 <__alt_data_end+0xfffc7d28>
   48428:	00800174 	movhi	r2,5
   4842c:	108b9004 	addi	r2,r2,11840
   48430:	15000015 	stw	r20,0(r2)
   48434:	003f1106 	br	4807c <__alt_data_end+0xfffc807c>
   48438:	00800044 	movi	r2,1
   4843c:	002b883a 	mov	r21,zero
   48440:	003f1f06 	br	480c0 <__alt_data_end+0xfffc80c0>
   48444:	81400204 	addi	r5,r16,8
   48448:	9009883a 	mov	r4,r18
   4844c:	00475800 	call	47580 <_free_r>
   48450:	00800174 	movhi	r2,5
   48454:	10929204 	addi	r2,r2,19016
   48458:	10c00017 	ldw	r3,0(r2)
   4845c:	003f2c06 	br	48110 <__alt_data_end+0xfffc8110>
   48460:	00c05504 	movi	r3,340
   48464:	18800536 	bltu	r3,r2,4847c <_malloc_r+0x7cc>
   48468:	3804d3fa 	srli	r2,r7,15
   4846c:	11401e04 	addi	r5,r2,120
   48470:	10c01dc4 	addi	r3,r2,119
   48474:	294b883a 	add	r5,r5,r5
   48478:	003f5606 	br	481d4 <__alt_data_end+0xfffc81d4>
   4847c:	00c15504 	movi	r3,1364
   48480:	18800536 	bltu	r3,r2,48498 <_malloc_r+0x7e8>
   48484:	3804d4ba 	srli	r2,r7,18
   48488:	11401f44 	addi	r5,r2,125
   4848c:	10c01f04 	addi	r3,r2,124
   48490:	294b883a 	add	r5,r5,r5
   48494:	003f4f06 	br	481d4 <__alt_data_end+0xfffc81d4>
   48498:	01403f84 	movi	r5,254
   4849c:	00c01f84 	movi	r3,126
   484a0:	003f4c06 	br	481d4 <__alt_data_end+0xfffc81d4>
   484a4:	98800117 	ldw	r2,4(r19)
   484a8:	003fa006 	br	4832c <__alt_data_end+0xfffc832c>
   484ac:	8808d0fa 	srli	r4,r17,3
   484b0:	20800044 	addi	r2,r4,1
   484b4:	1085883a 	add	r2,r2,r2
   484b8:	003e9006 	br	47efc <__alt_data_end+0xfffc7efc>

000484bc <memchr>:
   484bc:	208000cc 	andi	r2,r4,3
   484c0:	280f883a 	mov	r7,r5
   484c4:	10003426 	beq	r2,zero,48598 <memchr+0xdc>
   484c8:	30bfffc4 	addi	r2,r6,-1
   484cc:	30001a26 	beq	r6,zero,48538 <memchr+0x7c>
   484d0:	20c00003 	ldbu	r3,0(r4)
   484d4:	29803fcc 	andi	r6,r5,255
   484d8:	30c0051e 	bne	r6,r3,484f0 <memchr+0x34>
   484dc:	00001806 	br	48540 <memchr+0x84>
   484e0:	10001526 	beq	r2,zero,48538 <memchr+0x7c>
   484e4:	20c00003 	ldbu	r3,0(r4)
   484e8:	10bfffc4 	addi	r2,r2,-1
   484ec:	30c01426 	beq	r6,r3,48540 <memchr+0x84>
   484f0:	21000044 	addi	r4,r4,1
   484f4:	20c000cc 	andi	r3,r4,3
   484f8:	183ff91e 	bne	r3,zero,484e0 <__alt_data_end+0xfffc84e0>
   484fc:	020000c4 	movi	r8,3
   48500:	40801136 	bltu	r8,r2,48548 <memchr+0x8c>
   48504:	10000c26 	beq	r2,zero,48538 <memchr+0x7c>
   48508:	20c00003 	ldbu	r3,0(r4)
   4850c:	29403fcc 	andi	r5,r5,255
   48510:	28c00b26 	beq	r5,r3,48540 <memchr+0x84>
   48514:	20c00044 	addi	r3,r4,1
   48518:	39803fcc 	andi	r6,r7,255
   4851c:	2089883a 	add	r4,r4,r2
   48520:	00000306 	br	48530 <memchr+0x74>
   48524:	18c00044 	addi	r3,r3,1
   48528:	197fffc3 	ldbu	r5,-1(r3)
   4852c:	31400526 	beq	r6,r5,48544 <memchr+0x88>
   48530:	1805883a 	mov	r2,r3
   48534:	20fffb1e 	bne	r4,r3,48524 <__alt_data_end+0xfffc8524>
   48538:	0005883a 	mov	r2,zero
   4853c:	f800283a 	ret
   48540:	2005883a 	mov	r2,r4
   48544:	f800283a 	ret
   48548:	28c03fcc 	andi	r3,r5,255
   4854c:	1812923a 	slli	r9,r3,8
   48550:	02ffbff4 	movhi	r11,65279
   48554:	02a02074 	movhi	r10,32897
   48558:	48d2b03a 	or	r9,r9,r3
   4855c:	4806943a 	slli	r3,r9,16
   48560:	5affbfc4 	addi	r11,r11,-257
   48564:	52a02004 	addi	r10,r10,-32640
   48568:	48d2b03a 	or	r9,r9,r3
   4856c:	20c00017 	ldw	r3,0(r4)
   48570:	48c6f03a 	xor	r3,r9,r3
   48574:	1acd883a 	add	r6,r3,r11
   48578:	00c6303a 	nor	r3,zero,r3
   4857c:	30c6703a 	and	r3,r6,r3
   48580:	1a86703a 	and	r3,r3,r10
   48584:	183fe01e 	bne	r3,zero,48508 <__alt_data_end+0xfffc8508>
   48588:	10bfff04 	addi	r2,r2,-4
   4858c:	21000104 	addi	r4,r4,4
   48590:	40bff636 	bltu	r8,r2,4856c <__alt_data_end+0xfffc856c>
   48594:	003fdb06 	br	48504 <__alt_data_end+0xfffc8504>
   48598:	3005883a 	mov	r2,r6
   4859c:	003fd706 	br	484fc <__alt_data_end+0xfffc84fc>

000485a0 <memcpy>:
   485a0:	defffd04 	addi	sp,sp,-12
   485a4:	dfc00215 	stw	ra,8(sp)
   485a8:	dc400115 	stw	r17,4(sp)
   485ac:	dc000015 	stw	r16,0(sp)
   485b0:	00c003c4 	movi	r3,15
   485b4:	2005883a 	mov	r2,r4
   485b8:	1980452e 	bgeu	r3,r6,486d0 <memcpy+0x130>
   485bc:	2906b03a 	or	r3,r5,r4
   485c0:	18c000cc 	andi	r3,r3,3
   485c4:	1800441e 	bne	r3,zero,486d8 <memcpy+0x138>
   485c8:	347ffc04 	addi	r17,r6,-16
   485cc:	8822d13a 	srli	r17,r17,4
   485d0:	28c00104 	addi	r3,r5,4
   485d4:	23400104 	addi	r13,r4,4
   485d8:	8820913a 	slli	r16,r17,4
   485dc:	2b000204 	addi	r12,r5,8
   485e0:	22c00204 	addi	r11,r4,8
   485e4:	84000504 	addi	r16,r16,20
   485e8:	2a800304 	addi	r10,r5,12
   485ec:	22400304 	addi	r9,r4,12
   485f0:	2c21883a 	add	r16,r5,r16
   485f4:	2811883a 	mov	r8,r5
   485f8:	200f883a 	mov	r7,r4
   485fc:	41000017 	ldw	r4,0(r8)
   48600:	1fc00017 	ldw	ra,0(r3)
   48604:	63c00017 	ldw	r15,0(r12)
   48608:	39000015 	stw	r4,0(r7)
   4860c:	53800017 	ldw	r14,0(r10)
   48610:	6fc00015 	stw	ra,0(r13)
   48614:	5bc00015 	stw	r15,0(r11)
   48618:	4b800015 	stw	r14,0(r9)
   4861c:	18c00404 	addi	r3,r3,16
   48620:	39c00404 	addi	r7,r7,16
   48624:	42000404 	addi	r8,r8,16
   48628:	6b400404 	addi	r13,r13,16
   4862c:	63000404 	addi	r12,r12,16
   48630:	5ac00404 	addi	r11,r11,16
   48634:	52800404 	addi	r10,r10,16
   48638:	4a400404 	addi	r9,r9,16
   4863c:	1c3fef1e 	bne	r3,r16,485fc <__alt_data_end+0xfffc85fc>
   48640:	89c00044 	addi	r7,r17,1
   48644:	380e913a 	slli	r7,r7,4
   48648:	310003cc 	andi	r4,r6,15
   4864c:	02c000c4 	movi	r11,3
   48650:	11c7883a 	add	r3,r2,r7
   48654:	29cb883a 	add	r5,r5,r7
   48658:	5900212e 	bgeu	r11,r4,486e0 <memcpy+0x140>
   4865c:	1813883a 	mov	r9,r3
   48660:	2811883a 	mov	r8,r5
   48664:	200f883a 	mov	r7,r4
   48668:	42800017 	ldw	r10,0(r8)
   4866c:	4a400104 	addi	r9,r9,4
   48670:	39ffff04 	addi	r7,r7,-4
   48674:	4abfff15 	stw	r10,-4(r9)
   48678:	42000104 	addi	r8,r8,4
   4867c:	59fffa36 	bltu	r11,r7,48668 <__alt_data_end+0xfffc8668>
   48680:	213fff04 	addi	r4,r4,-4
   48684:	2008d0ba 	srli	r4,r4,2
   48688:	318000cc 	andi	r6,r6,3
   4868c:	21000044 	addi	r4,r4,1
   48690:	2109883a 	add	r4,r4,r4
   48694:	2109883a 	add	r4,r4,r4
   48698:	1907883a 	add	r3,r3,r4
   4869c:	290b883a 	add	r5,r5,r4
   486a0:	30000626 	beq	r6,zero,486bc <memcpy+0x11c>
   486a4:	198d883a 	add	r6,r3,r6
   486a8:	29c00003 	ldbu	r7,0(r5)
   486ac:	18c00044 	addi	r3,r3,1
   486b0:	29400044 	addi	r5,r5,1
   486b4:	19ffffc5 	stb	r7,-1(r3)
   486b8:	19bffb1e 	bne	r3,r6,486a8 <__alt_data_end+0xfffc86a8>
   486bc:	dfc00217 	ldw	ra,8(sp)
   486c0:	dc400117 	ldw	r17,4(sp)
   486c4:	dc000017 	ldw	r16,0(sp)
   486c8:	dec00304 	addi	sp,sp,12
   486cc:	f800283a 	ret
   486d0:	2007883a 	mov	r3,r4
   486d4:	003ff206 	br	486a0 <__alt_data_end+0xfffc86a0>
   486d8:	2007883a 	mov	r3,r4
   486dc:	003ff106 	br	486a4 <__alt_data_end+0xfffc86a4>
   486e0:	200d883a 	mov	r6,r4
   486e4:	003fee06 	br	486a0 <__alt_data_end+0xfffc86a0>

000486e8 <memset>:
   486e8:	20c000cc 	andi	r3,r4,3
   486ec:	2005883a 	mov	r2,r4
   486f0:	18004426 	beq	r3,zero,48804 <memset+0x11c>
   486f4:	31ffffc4 	addi	r7,r6,-1
   486f8:	30004026 	beq	r6,zero,487fc <memset+0x114>
   486fc:	2813883a 	mov	r9,r5
   48700:	200d883a 	mov	r6,r4
   48704:	2007883a 	mov	r3,r4
   48708:	00000406 	br	4871c <memset+0x34>
   4870c:	3a3fffc4 	addi	r8,r7,-1
   48710:	31800044 	addi	r6,r6,1
   48714:	38003926 	beq	r7,zero,487fc <memset+0x114>
   48718:	400f883a 	mov	r7,r8
   4871c:	18c00044 	addi	r3,r3,1
   48720:	32400005 	stb	r9,0(r6)
   48724:	1a0000cc 	andi	r8,r3,3
   48728:	403ff81e 	bne	r8,zero,4870c <__alt_data_end+0xfffc870c>
   4872c:	010000c4 	movi	r4,3
   48730:	21c02d2e 	bgeu	r4,r7,487e8 <memset+0x100>
   48734:	29003fcc 	andi	r4,r5,255
   48738:	200c923a 	slli	r6,r4,8
   4873c:	3108b03a 	or	r4,r6,r4
   48740:	200c943a 	slli	r6,r4,16
   48744:	218cb03a 	or	r6,r4,r6
   48748:	010003c4 	movi	r4,15
   4874c:	21c0182e 	bgeu	r4,r7,487b0 <memset+0xc8>
   48750:	3b3ffc04 	addi	r12,r7,-16
   48754:	6018d13a 	srli	r12,r12,4
   48758:	1a000104 	addi	r8,r3,4
   4875c:	1ac00204 	addi	r11,r3,8
   48760:	6008913a 	slli	r4,r12,4
   48764:	1a800304 	addi	r10,r3,12
   48768:	1813883a 	mov	r9,r3
   4876c:	21000504 	addi	r4,r4,20
   48770:	1909883a 	add	r4,r3,r4
   48774:	49800015 	stw	r6,0(r9)
   48778:	41800015 	stw	r6,0(r8)
   4877c:	59800015 	stw	r6,0(r11)
   48780:	51800015 	stw	r6,0(r10)
   48784:	42000404 	addi	r8,r8,16
   48788:	4a400404 	addi	r9,r9,16
   4878c:	5ac00404 	addi	r11,r11,16
   48790:	52800404 	addi	r10,r10,16
   48794:	413ff71e 	bne	r8,r4,48774 <__alt_data_end+0xfffc8774>
   48798:	63000044 	addi	r12,r12,1
   4879c:	6018913a 	slli	r12,r12,4
   487a0:	39c003cc 	andi	r7,r7,15
   487a4:	010000c4 	movi	r4,3
   487a8:	1b07883a 	add	r3,r3,r12
   487ac:	21c00e2e 	bgeu	r4,r7,487e8 <memset+0x100>
   487b0:	1813883a 	mov	r9,r3
   487b4:	3811883a 	mov	r8,r7
   487b8:	010000c4 	movi	r4,3
   487bc:	49800015 	stw	r6,0(r9)
   487c0:	423fff04 	addi	r8,r8,-4
   487c4:	4a400104 	addi	r9,r9,4
   487c8:	223ffc36 	bltu	r4,r8,487bc <__alt_data_end+0xfffc87bc>
   487cc:	393fff04 	addi	r4,r7,-4
   487d0:	2008d0ba 	srli	r4,r4,2
   487d4:	39c000cc 	andi	r7,r7,3
   487d8:	21000044 	addi	r4,r4,1
   487dc:	2109883a 	add	r4,r4,r4
   487e0:	2109883a 	add	r4,r4,r4
   487e4:	1907883a 	add	r3,r3,r4
   487e8:	38000526 	beq	r7,zero,48800 <memset+0x118>
   487ec:	19cf883a 	add	r7,r3,r7
   487f0:	19400005 	stb	r5,0(r3)
   487f4:	18c00044 	addi	r3,r3,1
   487f8:	38fffd1e 	bne	r7,r3,487f0 <__alt_data_end+0xfffc87f0>
   487fc:	f800283a 	ret
   48800:	f800283a 	ret
   48804:	2007883a 	mov	r3,r4
   48808:	300f883a 	mov	r7,r6
   4880c:	003fc706 	br	4872c <__alt_data_end+0xfffc872c>

00048810 <_Balloc>:
   48810:	20801317 	ldw	r2,76(r4)
   48814:	defffc04 	addi	sp,sp,-16
   48818:	dc400115 	stw	r17,4(sp)
   4881c:	dc000015 	stw	r16,0(sp)
   48820:	dfc00315 	stw	ra,12(sp)
   48824:	dc800215 	stw	r18,8(sp)
   48828:	2023883a 	mov	r17,r4
   4882c:	2821883a 	mov	r16,r5
   48830:	10000f26 	beq	r2,zero,48870 <_Balloc+0x60>
   48834:	8407883a 	add	r3,r16,r16
   48838:	18c7883a 	add	r3,r3,r3
   4883c:	10c7883a 	add	r3,r2,r3
   48840:	18800017 	ldw	r2,0(r3)
   48844:	10001126 	beq	r2,zero,4888c <_Balloc+0x7c>
   48848:	11000017 	ldw	r4,0(r2)
   4884c:	19000015 	stw	r4,0(r3)
   48850:	10000415 	stw	zero,16(r2)
   48854:	10000315 	stw	zero,12(r2)
   48858:	dfc00317 	ldw	ra,12(sp)
   4885c:	dc800217 	ldw	r18,8(sp)
   48860:	dc400117 	ldw	r17,4(sp)
   48864:	dc000017 	ldw	r16,0(sp)
   48868:	dec00404 	addi	sp,sp,16
   4886c:	f800283a 	ret
   48870:	01800844 	movi	r6,33
   48874:	01400104 	movi	r5,4
   48878:	004b2800 	call	4b280 <_calloc_r>
   4887c:	88801315 	stw	r2,76(r17)
   48880:	103fec1e 	bne	r2,zero,48834 <__alt_data_end+0xfffc8834>
   48884:	0005883a 	mov	r2,zero
   48888:	003ff306 	br	48858 <__alt_data_end+0xfffc8858>
   4888c:	01400044 	movi	r5,1
   48890:	2c24983a 	sll	r18,r5,r16
   48894:	8809883a 	mov	r4,r17
   48898:	91800144 	addi	r6,r18,5
   4889c:	318d883a 	add	r6,r6,r6
   488a0:	318d883a 	add	r6,r6,r6
   488a4:	004b2800 	call	4b280 <_calloc_r>
   488a8:	103ff626 	beq	r2,zero,48884 <__alt_data_end+0xfffc8884>
   488ac:	14000115 	stw	r16,4(r2)
   488b0:	14800215 	stw	r18,8(r2)
   488b4:	003fe606 	br	48850 <__alt_data_end+0xfffc8850>

000488b8 <_Bfree>:
   488b8:	28000826 	beq	r5,zero,488dc <_Bfree+0x24>
   488bc:	28c00117 	ldw	r3,4(r5)
   488c0:	20801317 	ldw	r2,76(r4)
   488c4:	18c7883a 	add	r3,r3,r3
   488c8:	18c7883a 	add	r3,r3,r3
   488cc:	10c5883a 	add	r2,r2,r3
   488d0:	10c00017 	ldw	r3,0(r2)
   488d4:	28c00015 	stw	r3,0(r5)
   488d8:	11400015 	stw	r5,0(r2)
   488dc:	f800283a 	ret

000488e0 <__multadd>:
   488e0:	defffa04 	addi	sp,sp,-24
   488e4:	dc800315 	stw	r18,12(sp)
   488e8:	dc400215 	stw	r17,8(sp)
   488ec:	dc000115 	stw	r16,4(sp)
   488f0:	2823883a 	mov	r17,r5
   488f4:	2c000417 	ldw	r16,16(r5)
   488f8:	dfc00515 	stw	ra,20(sp)
   488fc:	dcc00415 	stw	r19,16(sp)
   48900:	2025883a 	mov	r18,r4
   48904:	29400504 	addi	r5,r5,20
   48908:	0011883a 	mov	r8,zero
   4890c:	28c00017 	ldw	r3,0(r5)
   48910:	29400104 	addi	r5,r5,4
   48914:	42000044 	addi	r8,r8,1
   48918:	18bfffcc 	andi	r2,r3,65535
   4891c:	1185383a 	mul	r2,r2,r6
   48920:	1806d43a 	srli	r3,r3,16
   48924:	11cf883a 	add	r7,r2,r7
   48928:	3808d43a 	srli	r4,r7,16
   4892c:	1987383a 	mul	r3,r3,r6
   48930:	38bfffcc 	andi	r2,r7,65535
   48934:	1907883a 	add	r3,r3,r4
   48938:	1808943a 	slli	r4,r3,16
   4893c:	180ed43a 	srli	r7,r3,16
   48940:	2085883a 	add	r2,r4,r2
   48944:	28bfff15 	stw	r2,-4(r5)
   48948:	443ff016 	blt	r8,r16,4890c <__alt_data_end+0xfffc890c>
   4894c:	38000926 	beq	r7,zero,48974 <__multadd+0x94>
   48950:	88800217 	ldw	r2,8(r17)
   48954:	80800f0e 	bge	r16,r2,48994 <__multadd+0xb4>
   48958:	80800144 	addi	r2,r16,5
   4895c:	1085883a 	add	r2,r2,r2
   48960:	1085883a 	add	r2,r2,r2
   48964:	8885883a 	add	r2,r17,r2
   48968:	11c00015 	stw	r7,0(r2)
   4896c:	84000044 	addi	r16,r16,1
   48970:	8c000415 	stw	r16,16(r17)
   48974:	8805883a 	mov	r2,r17
   48978:	dfc00517 	ldw	ra,20(sp)
   4897c:	dcc00417 	ldw	r19,16(sp)
   48980:	dc800317 	ldw	r18,12(sp)
   48984:	dc400217 	ldw	r17,8(sp)
   48988:	dc000117 	ldw	r16,4(sp)
   4898c:	dec00604 	addi	sp,sp,24
   48990:	f800283a 	ret
   48994:	89400117 	ldw	r5,4(r17)
   48998:	9009883a 	mov	r4,r18
   4899c:	d9c00015 	stw	r7,0(sp)
   489a0:	29400044 	addi	r5,r5,1
   489a4:	00488100 	call	48810 <_Balloc>
   489a8:	89800417 	ldw	r6,16(r17)
   489ac:	89400304 	addi	r5,r17,12
   489b0:	11000304 	addi	r4,r2,12
   489b4:	31800084 	addi	r6,r6,2
   489b8:	318d883a 	add	r6,r6,r6
   489bc:	318d883a 	add	r6,r6,r6
   489c0:	1027883a 	mov	r19,r2
   489c4:	00485a00 	call	485a0 <memcpy>
   489c8:	d9c00017 	ldw	r7,0(sp)
   489cc:	88000a26 	beq	r17,zero,489f8 <__multadd+0x118>
   489d0:	88c00117 	ldw	r3,4(r17)
   489d4:	90801317 	ldw	r2,76(r18)
   489d8:	18c7883a 	add	r3,r3,r3
   489dc:	18c7883a 	add	r3,r3,r3
   489e0:	10c5883a 	add	r2,r2,r3
   489e4:	10c00017 	ldw	r3,0(r2)
   489e8:	88c00015 	stw	r3,0(r17)
   489ec:	14400015 	stw	r17,0(r2)
   489f0:	9823883a 	mov	r17,r19
   489f4:	003fd806 	br	48958 <__alt_data_end+0xfffc8958>
   489f8:	9823883a 	mov	r17,r19
   489fc:	003fd606 	br	48958 <__alt_data_end+0xfffc8958>

00048a00 <__s2b>:
   48a00:	defff904 	addi	sp,sp,-28
   48a04:	dc400115 	stw	r17,4(sp)
   48a08:	dc000015 	stw	r16,0(sp)
   48a0c:	2023883a 	mov	r17,r4
   48a10:	2821883a 	mov	r16,r5
   48a14:	39000204 	addi	r4,r7,8
   48a18:	01400244 	movi	r5,9
   48a1c:	dcc00315 	stw	r19,12(sp)
   48a20:	dc800215 	stw	r18,8(sp)
   48a24:	dfc00615 	stw	ra,24(sp)
   48a28:	dd400515 	stw	r21,20(sp)
   48a2c:	dd000415 	stw	r20,16(sp)
   48a30:	3825883a 	mov	r18,r7
   48a34:	3027883a 	mov	r19,r6
   48a38:	0040a800 	call	40a80 <__divsi3>
   48a3c:	00c00044 	movi	r3,1
   48a40:	000b883a 	mov	r5,zero
   48a44:	1880030e 	bge	r3,r2,48a54 <__s2b+0x54>
   48a48:	18c7883a 	add	r3,r3,r3
   48a4c:	29400044 	addi	r5,r5,1
   48a50:	18bffd16 	blt	r3,r2,48a48 <__alt_data_end+0xfffc8a48>
   48a54:	8809883a 	mov	r4,r17
   48a58:	00488100 	call	48810 <_Balloc>
   48a5c:	d8c00717 	ldw	r3,28(sp)
   48a60:	10c00515 	stw	r3,20(r2)
   48a64:	00c00044 	movi	r3,1
   48a68:	10c00415 	stw	r3,16(r2)
   48a6c:	00c00244 	movi	r3,9
   48a70:	1cc0210e 	bge	r3,r19,48af8 <__s2b+0xf8>
   48a74:	80eb883a 	add	r21,r16,r3
   48a78:	a829883a 	mov	r20,r21
   48a7c:	84e1883a 	add	r16,r16,r19
   48a80:	a1c00007 	ldb	r7,0(r20)
   48a84:	01800284 	movi	r6,10
   48a88:	a5000044 	addi	r20,r20,1
   48a8c:	100b883a 	mov	r5,r2
   48a90:	39fff404 	addi	r7,r7,-48
   48a94:	8809883a 	mov	r4,r17
   48a98:	00488e00 	call	488e0 <__multadd>
   48a9c:	a43ff81e 	bne	r20,r16,48a80 <__alt_data_end+0xfffc8a80>
   48aa0:	ace1883a 	add	r16,r21,r19
   48aa4:	843ffe04 	addi	r16,r16,-8
   48aa8:	9c800a0e 	bge	r19,r18,48ad4 <__s2b+0xd4>
   48aac:	94e5c83a 	sub	r18,r18,r19
   48ab0:	84a5883a 	add	r18,r16,r18
   48ab4:	81c00007 	ldb	r7,0(r16)
   48ab8:	01800284 	movi	r6,10
   48abc:	84000044 	addi	r16,r16,1
   48ac0:	100b883a 	mov	r5,r2
   48ac4:	39fff404 	addi	r7,r7,-48
   48ac8:	8809883a 	mov	r4,r17
   48acc:	00488e00 	call	488e0 <__multadd>
   48ad0:	84bff81e 	bne	r16,r18,48ab4 <__alt_data_end+0xfffc8ab4>
   48ad4:	dfc00617 	ldw	ra,24(sp)
   48ad8:	dd400517 	ldw	r21,20(sp)
   48adc:	dd000417 	ldw	r20,16(sp)
   48ae0:	dcc00317 	ldw	r19,12(sp)
   48ae4:	dc800217 	ldw	r18,8(sp)
   48ae8:	dc400117 	ldw	r17,4(sp)
   48aec:	dc000017 	ldw	r16,0(sp)
   48af0:	dec00704 	addi	sp,sp,28
   48af4:	f800283a 	ret
   48af8:	84000284 	addi	r16,r16,10
   48afc:	1827883a 	mov	r19,r3
   48b00:	003fe906 	br	48aa8 <__alt_data_end+0xfffc8aa8>

00048b04 <__hi0bits>:
   48b04:	20bfffec 	andhi	r2,r4,65535
   48b08:	1000141e 	bne	r2,zero,48b5c <__hi0bits+0x58>
   48b0c:	2008943a 	slli	r4,r4,16
   48b10:	00800404 	movi	r2,16
   48b14:	20ffc02c 	andhi	r3,r4,65280
   48b18:	1800021e 	bne	r3,zero,48b24 <__hi0bits+0x20>
   48b1c:	2008923a 	slli	r4,r4,8
   48b20:	10800204 	addi	r2,r2,8
   48b24:	20fc002c 	andhi	r3,r4,61440
   48b28:	1800021e 	bne	r3,zero,48b34 <__hi0bits+0x30>
   48b2c:	2008913a 	slli	r4,r4,4
   48b30:	10800104 	addi	r2,r2,4
   48b34:	20f0002c 	andhi	r3,r4,49152
   48b38:	1800031e 	bne	r3,zero,48b48 <__hi0bits+0x44>
   48b3c:	2109883a 	add	r4,r4,r4
   48b40:	10800084 	addi	r2,r2,2
   48b44:	2109883a 	add	r4,r4,r4
   48b48:	20000316 	blt	r4,zero,48b58 <__hi0bits+0x54>
   48b4c:	2110002c 	andhi	r4,r4,16384
   48b50:	2000041e 	bne	r4,zero,48b64 <__hi0bits+0x60>
   48b54:	00800804 	movi	r2,32
   48b58:	f800283a 	ret
   48b5c:	0005883a 	mov	r2,zero
   48b60:	003fec06 	br	48b14 <__alt_data_end+0xfffc8b14>
   48b64:	10800044 	addi	r2,r2,1
   48b68:	f800283a 	ret

00048b6c <__lo0bits>:
   48b6c:	20c00017 	ldw	r3,0(r4)
   48b70:	188001cc 	andi	r2,r3,7
   48b74:	10000826 	beq	r2,zero,48b98 <__lo0bits+0x2c>
   48b78:	1880004c 	andi	r2,r3,1
   48b7c:	1000211e 	bne	r2,zero,48c04 <__lo0bits+0x98>
   48b80:	1880008c 	andi	r2,r3,2
   48b84:	1000211e 	bne	r2,zero,48c0c <__lo0bits+0xa0>
   48b88:	1806d0ba 	srli	r3,r3,2
   48b8c:	00800084 	movi	r2,2
   48b90:	20c00015 	stw	r3,0(r4)
   48b94:	f800283a 	ret
   48b98:	18bfffcc 	andi	r2,r3,65535
   48b9c:	10001326 	beq	r2,zero,48bec <__lo0bits+0x80>
   48ba0:	0005883a 	mov	r2,zero
   48ba4:	19403fcc 	andi	r5,r3,255
   48ba8:	2800021e 	bne	r5,zero,48bb4 <__lo0bits+0x48>
   48bac:	1806d23a 	srli	r3,r3,8
   48bb0:	10800204 	addi	r2,r2,8
   48bb4:	194003cc 	andi	r5,r3,15
   48bb8:	2800021e 	bne	r5,zero,48bc4 <__lo0bits+0x58>
   48bbc:	1806d13a 	srli	r3,r3,4
   48bc0:	10800104 	addi	r2,r2,4
   48bc4:	194000cc 	andi	r5,r3,3
   48bc8:	2800021e 	bne	r5,zero,48bd4 <__lo0bits+0x68>
   48bcc:	1806d0ba 	srli	r3,r3,2
   48bd0:	10800084 	addi	r2,r2,2
   48bd4:	1940004c 	andi	r5,r3,1
   48bd8:	2800081e 	bne	r5,zero,48bfc <__lo0bits+0x90>
   48bdc:	1806d07a 	srli	r3,r3,1
   48be0:	1800051e 	bne	r3,zero,48bf8 <__lo0bits+0x8c>
   48be4:	00800804 	movi	r2,32
   48be8:	f800283a 	ret
   48bec:	1806d43a 	srli	r3,r3,16
   48bf0:	00800404 	movi	r2,16
   48bf4:	003feb06 	br	48ba4 <__alt_data_end+0xfffc8ba4>
   48bf8:	10800044 	addi	r2,r2,1
   48bfc:	20c00015 	stw	r3,0(r4)
   48c00:	f800283a 	ret
   48c04:	0005883a 	mov	r2,zero
   48c08:	f800283a 	ret
   48c0c:	1806d07a 	srli	r3,r3,1
   48c10:	00800044 	movi	r2,1
   48c14:	20c00015 	stw	r3,0(r4)
   48c18:	f800283a 	ret

00048c1c <__i2b>:
   48c1c:	defffd04 	addi	sp,sp,-12
   48c20:	dc000015 	stw	r16,0(sp)
   48c24:	04000044 	movi	r16,1
   48c28:	dc400115 	stw	r17,4(sp)
   48c2c:	2823883a 	mov	r17,r5
   48c30:	800b883a 	mov	r5,r16
   48c34:	dfc00215 	stw	ra,8(sp)
   48c38:	00488100 	call	48810 <_Balloc>
   48c3c:	14400515 	stw	r17,20(r2)
   48c40:	14000415 	stw	r16,16(r2)
   48c44:	dfc00217 	ldw	ra,8(sp)
   48c48:	dc400117 	ldw	r17,4(sp)
   48c4c:	dc000017 	ldw	r16,0(sp)
   48c50:	dec00304 	addi	sp,sp,12
   48c54:	f800283a 	ret

00048c58 <__multiply>:
   48c58:	defffa04 	addi	sp,sp,-24
   48c5c:	dcc00315 	stw	r19,12(sp)
   48c60:	dc800215 	stw	r18,8(sp)
   48c64:	34c00417 	ldw	r19,16(r6)
   48c68:	2c800417 	ldw	r18,16(r5)
   48c6c:	dd000415 	stw	r20,16(sp)
   48c70:	dc400115 	stw	r17,4(sp)
   48c74:	dfc00515 	stw	ra,20(sp)
   48c78:	dc000015 	stw	r16,0(sp)
   48c7c:	2829883a 	mov	r20,r5
   48c80:	3023883a 	mov	r17,r6
   48c84:	94c0050e 	bge	r18,r19,48c9c <__multiply+0x44>
   48c88:	9007883a 	mov	r3,r18
   48c8c:	3029883a 	mov	r20,r6
   48c90:	9825883a 	mov	r18,r19
   48c94:	2823883a 	mov	r17,r5
   48c98:	1827883a 	mov	r19,r3
   48c9c:	a0800217 	ldw	r2,8(r20)
   48ca0:	94e1883a 	add	r16,r18,r19
   48ca4:	a1400117 	ldw	r5,4(r20)
   48ca8:	1400010e 	bge	r2,r16,48cb0 <__multiply+0x58>
   48cac:	29400044 	addi	r5,r5,1
   48cb0:	00488100 	call	48810 <_Balloc>
   48cb4:	8415883a 	add	r10,r16,r16
   48cb8:	12c00504 	addi	r11,r2,20
   48cbc:	5295883a 	add	r10,r10,r10
   48cc0:	5a95883a 	add	r10,r11,r10
   48cc4:	5807883a 	mov	r3,r11
   48cc8:	5a80032e 	bgeu	r11,r10,48cd8 <__multiply+0x80>
   48ccc:	18000015 	stw	zero,0(r3)
   48cd0:	18c00104 	addi	r3,r3,4
   48cd4:	1abffd36 	bltu	r3,r10,48ccc <__alt_data_end+0xfffc8ccc>
   48cd8:	9ce7883a 	add	r19,r19,r19
   48cdc:	94a5883a 	add	r18,r18,r18
   48ce0:	89800504 	addi	r6,r17,20
   48ce4:	9ce7883a 	add	r19,r19,r19
   48ce8:	a3400504 	addi	r13,r20,20
   48cec:	94a5883a 	add	r18,r18,r18
   48cf0:	34d9883a 	add	r12,r6,r19
   48cf4:	6c93883a 	add	r9,r13,r18
   48cf8:	3300422e 	bgeu	r6,r12,48e04 <__multiply+0x1ac>
   48cfc:	37c00017 	ldw	ra,0(r6)
   48d00:	fbffffcc 	andi	r15,ra,65535
   48d04:	78001b26 	beq	r15,zero,48d74 <__multiply+0x11c>
   48d08:	5811883a 	mov	r8,r11
   48d0c:	681d883a 	mov	r14,r13
   48d10:	000f883a 	mov	r7,zero
   48d14:	71000017 	ldw	r4,0(r14)
   48d18:	40c00017 	ldw	r3,0(r8)
   48d1c:	73800104 	addi	r14,r14,4
   48d20:	217fffcc 	andi	r5,r4,65535
   48d24:	2bcb383a 	mul	r5,r5,r15
   48d28:	2008d43a 	srli	r4,r4,16
   48d2c:	1c7fffcc 	andi	r17,r3,65535
   48d30:	2c4b883a 	add	r5,r5,r17
   48d34:	29cb883a 	add	r5,r5,r7
   48d38:	23c9383a 	mul	r4,r4,r15
   48d3c:	1806d43a 	srli	r3,r3,16
   48d40:	280ed43a 	srli	r7,r5,16
   48d44:	297fffcc 	andi	r5,r5,65535
   48d48:	20c7883a 	add	r3,r4,r3
   48d4c:	19c7883a 	add	r3,r3,r7
   48d50:	1808943a 	slli	r4,r3,16
   48d54:	4023883a 	mov	r17,r8
   48d58:	180ed43a 	srli	r7,r3,16
   48d5c:	214ab03a 	or	r5,r4,r5
   48d60:	41400015 	stw	r5,0(r8)
   48d64:	42000104 	addi	r8,r8,4
   48d68:	727fea36 	bltu	r14,r9,48d14 <__alt_data_end+0xfffc8d14>
   48d6c:	89c00115 	stw	r7,4(r17)
   48d70:	37c00017 	ldw	ra,0(r6)
   48d74:	f83ed43a 	srli	ra,ra,16
   48d78:	f8001f26 	beq	ra,zero,48df8 <__multiply+0x1a0>
   48d7c:	58c00017 	ldw	r3,0(r11)
   48d80:	681d883a 	mov	r14,r13
   48d84:	581f883a 	mov	r15,r11
   48d88:	1811883a 	mov	r8,r3
   48d8c:	5825883a 	mov	r18,r11
   48d90:	000f883a 	mov	r7,zero
   48d94:	00000106 	br	48d9c <__multiply+0x144>
   48d98:	8825883a 	mov	r18,r17
   48d9c:	7140000b 	ldhu	r5,0(r14)
   48da0:	4010d43a 	srli	r8,r8,16
   48da4:	193fffcc 	andi	r4,r3,65535
   48da8:	2fcb383a 	mul	r5,r5,ra
   48dac:	7bc00104 	addi	r15,r15,4
   48db0:	73800104 	addi	r14,r14,4
   48db4:	2a0b883a 	add	r5,r5,r8
   48db8:	29cb883a 	add	r5,r5,r7
   48dbc:	2806943a 	slli	r3,r5,16
   48dc0:	94400104 	addi	r17,r18,4
   48dc4:	280ad43a 	srli	r5,r5,16
   48dc8:	1908b03a 	or	r4,r3,r4
   48dcc:	793fff15 	stw	r4,-4(r15)
   48dd0:	70ffff17 	ldw	r3,-4(r14)
   48dd4:	8a000017 	ldw	r8,0(r17)
   48dd8:	1806d43a 	srli	r3,r3,16
   48ddc:	413fffcc 	andi	r4,r8,65535
   48de0:	1fc7383a 	mul	r3,r3,ra
   48de4:	1907883a 	add	r3,r3,r4
   48de8:	1947883a 	add	r3,r3,r5
   48dec:	180ed43a 	srli	r7,r3,16
   48df0:	727fe936 	bltu	r14,r9,48d98 <__alt_data_end+0xfffc8d98>
   48df4:	90c00115 	stw	r3,4(r18)
   48df8:	31800104 	addi	r6,r6,4
   48dfc:	5ac00104 	addi	r11,r11,4
   48e00:	333fbe36 	bltu	r6,r12,48cfc <__alt_data_end+0xfffc8cfc>
   48e04:	0400090e 	bge	zero,r16,48e2c <__multiply+0x1d4>
   48e08:	50ffff17 	ldw	r3,-4(r10)
   48e0c:	52bfff04 	addi	r10,r10,-4
   48e10:	18000326 	beq	r3,zero,48e20 <__multiply+0x1c8>
   48e14:	00000506 	br	48e2c <__multiply+0x1d4>
   48e18:	50c00017 	ldw	r3,0(r10)
   48e1c:	1800031e 	bne	r3,zero,48e2c <__multiply+0x1d4>
   48e20:	843fffc4 	addi	r16,r16,-1
   48e24:	52bfff04 	addi	r10,r10,-4
   48e28:	803ffb1e 	bne	r16,zero,48e18 <__alt_data_end+0xfffc8e18>
   48e2c:	14000415 	stw	r16,16(r2)
   48e30:	dfc00517 	ldw	ra,20(sp)
   48e34:	dd000417 	ldw	r20,16(sp)
   48e38:	dcc00317 	ldw	r19,12(sp)
   48e3c:	dc800217 	ldw	r18,8(sp)
   48e40:	dc400117 	ldw	r17,4(sp)
   48e44:	dc000017 	ldw	r16,0(sp)
   48e48:	dec00604 	addi	sp,sp,24
   48e4c:	f800283a 	ret

00048e50 <__pow5mult>:
   48e50:	defffa04 	addi	sp,sp,-24
   48e54:	dcc00315 	stw	r19,12(sp)
   48e58:	dc000015 	stw	r16,0(sp)
   48e5c:	dfc00515 	stw	ra,20(sp)
   48e60:	dd000415 	stw	r20,16(sp)
   48e64:	dc800215 	stw	r18,8(sp)
   48e68:	dc400115 	stw	r17,4(sp)
   48e6c:	308000cc 	andi	r2,r6,3
   48e70:	3021883a 	mov	r16,r6
   48e74:	2027883a 	mov	r19,r4
   48e78:	10002f1e 	bne	r2,zero,48f38 <__pow5mult+0xe8>
   48e7c:	2825883a 	mov	r18,r5
   48e80:	8021d0ba 	srai	r16,r16,2
   48e84:	80001a26 	beq	r16,zero,48ef0 <__pow5mult+0xa0>
   48e88:	9c401217 	ldw	r17,72(r19)
   48e8c:	8800061e 	bne	r17,zero,48ea8 <__pow5mult+0x58>
   48e90:	00003406 	br	48f64 <__pow5mult+0x114>
   48e94:	8021d07a 	srai	r16,r16,1
   48e98:	80001526 	beq	r16,zero,48ef0 <__pow5mult+0xa0>
   48e9c:	88800017 	ldw	r2,0(r17)
   48ea0:	10001c26 	beq	r2,zero,48f14 <__pow5mult+0xc4>
   48ea4:	1023883a 	mov	r17,r2
   48ea8:	8080004c 	andi	r2,r16,1
   48eac:	103ff926 	beq	r2,zero,48e94 <__alt_data_end+0xfffc8e94>
   48eb0:	880d883a 	mov	r6,r17
   48eb4:	900b883a 	mov	r5,r18
   48eb8:	9809883a 	mov	r4,r19
   48ebc:	0048c580 	call	48c58 <__multiply>
   48ec0:	90001b26 	beq	r18,zero,48f30 <__pow5mult+0xe0>
   48ec4:	91000117 	ldw	r4,4(r18)
   48ec8:	98c01317 	ldw	r3,76(r19)
   48ecc:	8021d07a 	srai	r16,r16,1
   48ed0:	2109883a 	add	r4,r4,r4
   48ed4:	2109883a 	add	r4,r4,r4
   48ed8:	1907883a 	add	r3,r3,r4
   48edc:	19000017 	ldw	r4,0(r3)
   48ee0:	91000015 	stw	r4,0(r18)
   48ee4:	1c800015 	stw	r18,0(r3)
   48ee8:	1025883a 	mov	r18,r2
   48eec:	803feb1e 	bne	r16,zero,48e9c <__alt_data_end+0xfffc8e9c>
   48ef0:	9005883a 	mov	r2,r18
   48ef4:	dfc00517 	ldw	ra,20(sp)
   48ef8:	dd000417 	ldw	r20,16(sp)
   48efc:	dcc00317 	ldw	r19,12(sp)
   48f00:	dc800217 	ldw	r18,8(sp)
   48f04:	dc400117 	ldw	r17,4(sp)
   48f08:	dc000017 	ldw	r16,0(sp)
   48f0c:	dec00604 	addi	sp,sp,24
   48f10:	f800283a 	ret
   48f14:	880d883a 	mov	r6,r17
   48f18:	880b883a 	mov	r5,r17
   48f1c:	9809883a 	mov	r4,r19
   48f20:	0048c580 	call	48c58 <__multiply>
   48f24:	88800015 	stw	r2,0(r17)
   48f28:	10000015 	stw	zero,0(r2)
   48f2c:	003fdd06 	br	48ea4 <__alt_data_end+0xfffc8ea4>
   48f30:	1025883a 	mov	r18,r2
   48f34:	003fd706 	br	48e94 <__alt_data_end+0xfffc8e94>
   48f38:	10bfffc4 	addi	r2,r2,-1
   48f3c:	1085883a 	add	r2,r2,r2
   48f40:	00c00174 	movhi	r3,5
   48f44:	18c45c04 	addi	r3,r3,4464
   48f48:	1085883a 	add	r2,r2,r2
   48f4c:	1885883a 	add	r2,r3,r2
   48f50:	11800017 	ldw	r6,0(r2)
   48f54:	000f883a 	mov	r7,zero
   48f58:	00488e00 	call	488e0 <__multadd>
   48f5c:	1025883a 	mov	r18,r2
   48f60:	003fc706 	br	48e80 <__alt_data_end+0xfffc8e80>
   48f64:	05000044 	movi	r20,1
   48f68:	a00b883a 	mov	r5,r20
   48f6c:	9809883a 	mov	r4,r19
   48f70:	00488100 	call	48810 <_Balloc>
   48f74:	1023883a 	mov	r17,r2
   48f78:	00809c44 	movi	r2,625
   48f7c:	88800515 	stw	r2,20(r17)
   48f80:	8d000415 	stw	r20,16(r17)
   48f84:	9c401215 	stw	r17,72(r19)
   48f88:	88000015 	stw	zero,0(r17)
   48f8c:	003fc606 	br	48ea8 <__alt_data_end+0xfffc8ea8>

00048f90 <__lshift>:
   48f90:	defff904 	addi	sp,sp,-28
   48f94:	dd400515 	stw	r21,20(sp)
   48f98:	dcc00315 	stw	r19,12(sp)
   48f9c:	302bd17a 	srai	r21,r6,5
   48fa0:	2cc00417 	ldw	r19,16(r5)
   48fa4:	28800217 	ldw	r2,8(r5)
   48fa8:	dd000415 	stw	r20,16(sp)
   48fac:	ace7883a 	add	r19,r21,r19
   48fb0:	dc800215 	stw	r18,8(sp)
   48fb4:	dc400115 	stw	r17,4(sp)
   48fb8:	dc000015 	stw	r16,0(sp)
   48fbc:	dfc00615 	stw	ra,24(sp)
   48fc0:	9c000044 	addi	r16,r19,1
   48fc4:	2823883a 	mov	r17,r5
   48fc8:	3029883a 	mov	r20,r6
   48fcc:	2025883a 	mov	r18,r4
   48fd0:	29400117 	ldw	r5,4(r5)
   48fd4:	1400030e 	bge	r2,r16,48fe4 <__lshift+0x54>
   48fd8:	1085883a 	add	r2,r2,r2
   48fdc:	29400044 	addi	r5,r5,1
   48fe0:	143ffd16 	blt	r2,r16,48fd8 <__alt_data_end+0xfffc8fd8>
   48fe4:	9009883a 	mov	r4,r18
   48fe8:	00488100 	call	48810 <_Balloc>
   48fec:	10c00504 	addi	r3,r2,20
   48ff0:	0540070e 	bge	zero,r21,49010 <__lshift+0x80>
   48ff4:	ad6b883a 	add	r21,r21,r21
   48ff8:	ad6b883a 	add	r21,r21,r21
   48ffc:	1809883a 	mov	r4,r3
   49000:	1d47883a 	add	r3,r3,r21
   49004:	20000015 	stw	zero,0(r4)
   49008:	21000104 	addi	r4,r4,4
   4900c:	193ffd1e 	bne	r3,r4,49004 <__alt_data_end+0xfffc9004>
   49010:	8a000417 	ldw	r8,16(r17)
   49014:	89000504 	addi	r4,r17,20
   49018:	a18007cc 	andi	r6,r20,31
   4901c:	4211883a 	add	r8,r8,r8
   49020:	4211883a 	add	r8,r8,r8
   49024:	2211883a 	add	r8,r4,r8
   49028:	30002326 	beq	r6,zero,490b8 <__lshift+0x128>
   4902c:	02400804 	movi	r9,32
   49030:	4993c83a 	sub	r9,r9,r6
   49034:	000b883a 	mov	r5,zero
   49038:	21c00017 	ldw	r7,0(r4)
   4903c:	1815883a 	mov	r10,r3
   49040:	18c00104 	addi	r3,r3,4
   49044:	398e983a 	sll	r7,r7,r6
   49048:	21000104 	addi	r4,r4,4
   4904c:	394ab03a 	or	r5,r7,r5
   49050:	197fff15 	stw	r5,-4(r3)
   49054:	217fff17 	ldw	r5,-4(r4)
   49058:	2a4ad83a 	srl	r5,r5,r9
   4905c:	223ff636 	bltu	r4,r8,49038 <__alt_data_end+0xfffc9038>
   49060:	51400115 	stw	r5,4(r10)
   49064:	28001a1e 	bne	r5,zero,490d0 <__lshift+0x140>
   49068:	843fffc4 	addi	r16,r16,-1
   4906c:	14000415 	stw	r16,16(r2)
   49070:	88000826 	beq	r17,zero,49094 <__lshift+0x104>
   49074:	89000117 	ldw	r4,4(r17)
   49078:	90c01317 	ldw	r3,76(r18)
   4907c:	2109883a 	add	r4,r4,r4
   49080:	2109883a 	add	r4,r4,r4
   49084:	1907883a 	add	r3,r3,r4
   49088:	19000017 	ldw	r4,0(r3)
   4908c:	89000015 	stw	r4,0(r17)
   49090:	1c400015 	stw	r17,0(r3)
   49094:	dfc00617 	ldw	ra,24(sp)
   49098:	dd400517 	ldw	r21,20(sp)
   4909c:	dd000417 	ldw	r20,16(sp)
   490a0:	dcc00317 	ldw	r19,12(sp)
   490a4:	dc800217 	ldw	r18,8(sp)
   490a8:	dc400117 	ldw	r17,4(sp)
   490ac:	dc000017 	ldw	r16,0(sp)
   490b0:	dec00704 	addi	sp,sp,28
   490b4:	f800283a 	ret
   490b8:	21400017 	ldw	r5,0(r4)
   490bc:	18c00104 	addi	r3,r3,4
   490c0:	21000104 	addi	r4,r4,4
   490c4:	197fff15 	stw	r5,-4(r3)
   490c8:	223ffb36 	bltu	r4,r8,490b8 <__alt_data_end+0xfffc90b8>
   490cc:	003fe606 	br	49068 <__alt_data_end+0xfffc9068>
   490d0:	9c000084 	addi	r16,r19,2
   490d4:	003fe406 	br	49068 <__alt_data_end+0xfffc9068>

000490d8 <__mcmp>:
   490d8:	20800417 	ldw	r2,16(r4)
   490dc:	28c00417 	ldw	r3,16(r5)
   490e0:	10c5c83a 	sub	r2,r2,r3
   490e4:	1000111e 	bne	r2,zero,4912c <__mcmp+0x54>
   490e8:	18c7883a 	add	r3,r3,r3
   490ec:	18c7883a 	add	r3,r3,r3
   490f0:	21000504 	addi	r4,r4,20
   490f4:	29400504 	addi	r5,r5,20
   490f8:	20c5883a 	add	r2,r4,r3
   490fc:	28cb883a 	add	r5,r5,r3
   49100:	00000106 	br	49108 <__mcmp+0x30>
   49104:	20800a2e 	bgeu	r4,r2,49130 <__mcmp+0x58>
   49108:	10bfff04 	addi	r2,r2,-4
   4910c:	297fff04 	addi	r5,r5,-4
   49110:	11800017 	ldw	r6,0(r2)
   49114:	28c00017 	ldw	r3,0(r5)
   49118:	30fffa26 	beq	r6,r3,49104 <__alt_data_end+0xfffc9104>
   4911c:	30c00236 	bltu	r6,r3,49128 <__mcmp+0x50>
   49120:	00800044 	movi	r2,1
   49124:	f800283a 	ret
   49128:	00bfffc4 	movi	r2,-1
   4912c:	f800283a 	ret
   49130:	0005883a 	mov	r2,zero
   49134:	f800283a 	ret

00049138 <__mdiff>:
   49138:	28c00417 	ldw	r3,16(r5)
   4913c:	30800417 	ldw	r2,16(r6)
   49140:	defffa04 	addi	sp,sp,-24
   49144:	dcc00315 	stw	r19,12(sp)
   49148:	dc800215 	stw	r18,8(sp)
   4914c:	dfc00515 	stw	ra,20(sp)
   49150:	dd000415 	stw	r20,16(sp)
   49154:	dc400115 	stw	r17,4(sp)
   49158:	dc000015 	stw	r16,0(sp)
   4915c:	1887c83a 	sub	r3,r3,r2
   49160:	2825883a 	mov	r18,r5
   49164:	3027883a 	mov	r19,r6
   49168:	1800141e 	bne	r3,zero,491bc <__mdiff+0x84>
   4916c:	1085883a 	add	r2,r2,r2
   49170:	1085883a 	add	r2,r2,r2
   49174:	2a000504 	addi	r8,r5,20
   49178:	34000504 	addi	r16,r6,20
   4917c:	4087883a 	add	r3,r8,r2
   49180:	8085883a 	add	r2,r16,r2
   49184:	00000106 	br	4918c <__mdiff+0x54>
   49188:	40c0592e 	bgeu	r8,r3,492f0 <__mdiff+0x1b8>
   4918c:	18ffff04 	addi	r3,r3,-4
   49190:	10bfff04 	addi	r2,r2,-4
   49194:	19c00017 	ldw	r7,0(r3)
   49198:	11400017 	ldw	r5,0(r2)
   4919c:	397ffa26 	beq	r7,r5,49188 <__alt_data_end+0xfffc9188>
   491a0:	3940592e 	bgeu	r7,r5,49308 <__mdiff+0x1d0>
   491a4:	9005883a 	mov	r2,r18
   491a8:	4023883a 	mov	r17,r8
   491ac:	9825883a 	mov	r18,r19
   491b0:	05000044 	movi	r20,1
   491b4:	1027883a 	mov	r19,r2
   491b8:	00000406 	br	491cc <__mdiff+0x94>
   491bc:	18005616 	blt	r3,zero,49318 <__mdiff+0x1e0>
   491c0:	34400504 	addi	r17,r6,20
   491c4:	2c000504 	addi	r16,r5,20
   491c8:	0029883a 	mov	r20,zero
   491cc:	91400117 	ldw	r5,4(r18)
   491d0:	00488100 	call	48810 <_Balloc>
   491d4:	92400417 	ldw	r9,16(r18)
   491d8:	9b000417 	ldw	r12,16(r19)
   491dc:	12c00504 	addi	r11,r2,20
   491e0:	4a51883a 	add	r8,r9,r9
   491e4:	6319883a 	add	r12,r12,r12
   491e8:	4211883a 	add	r8,r8,r8
   491ec:	6319883a 	add	r12,r12,r12
   491f0:	15000315 	stw	r20,12(r2)
   491f4:	8211883a 	add	r8,r16,r8
   491f8:	8b19883a 	add	r12,r17,r12
   491fc:	0007883a 	mov	r3,zero
   49200:	81400017 	ldw	r5,0(r16)
   49204:	89c00017 	ldw	r7,0(r17)
   49208:	59800104 	addi	r6,r11,4
   4920c:	293fffcc 	andi	r4,r5,65535
   49210:	20c7883a 	add	r3,r4,r3
   49214:	393fffcc 	andi	r4,r7,65535
   49218:	1909c83a 	sub	r4,r3,r4
   4921c:	280ad43a 	srli	r5,r5,16
   49220:	380ed43a 	srli	r7,r7,16
   49224:	2007d43a 	srai	r3,r4,16
   49228:	213fffcc 	andi	r4,r4,65535
   4922c:	29cbc83a 	sub	r5,r5,r7
   49230:	28c7883a 	add	r3,r5,r3
   49234:	180a943a 	slli	r5,r3,16
   49238:	8c400104 	addi	r17,r17,4
   4923c:	84000104 	addi	r16,r16,4
   49240:	2908b03a 	or	r4,r5,r4
   49244:	59000015 	stw	r4,0(r11)
   49248:	1807d43a 	srai	r3,r3,16
   4924c:	3015883a 	mov	r10,r6
   49250:	3017883a 	mov	r11,r6
   49254:	8b3fea36 	bltu	r17,r12,49200 <__alt_data_end+0xfffc9200>
   49258:	8200162e 	bgeu	r16,r8,492b4 <__mdiff+0x17c>
   4925c:	8017883a 	mov	r11,r16
   49260:	59400017 	ldw	r5,0(r11)
   49264:	31800104 	addi	r6,r6,4
   49268:	5ac00104 	addi	r11,r11,4
   4926c:	293fffcc 	andi	r4,r5,65535
   49270:	20c7883a 	add	r3,r4,r3
   49274:	280ed43a 	srli	r7,r5,16
   49278:	180bd43a 	srai	r5,r3,16
   4927c:	193fffcc 	andi	r4,r3,65535
   49280:	3947883a 	add	r3,r7,r5
   49284:	180a943a 	slli	r5,r3,16
   49288:	1807d43a 	srai	r3,r3,16
   4928c:	2908b03a 	or	r4,r5,r4
   49290:	313fff15 	stw	r4,-4(r6)
   49294:	5a3ff236 	bltu	r11,r8,49260 <__alt_data_end+0xfffc9260>
   49298:	0406303a 	nor	r3,zero,r16
   4929c:	1a07883a 	add	r3,r3,r8
   492a0:	1806d0ba 	srli	r3,r3,2
   492a4:	18c00044 	addi	r3,r3,1
   492a8:	18c7883a 	add	r3,r3,r3
   492ac:	18c7883a 	add	r3,r3,r3
   492b0:	50d5883a 	add	r10,r10,r3
   492b4:	50ffff04 	addi	r3,r10,-4
   492b8:	2000041e 	bne	r4,zero,492cc <__mdiff+0x194>
   492bc:	18ffff04 	addi	r3,r3,-4
   492c0:	19000017 	ldw	r4,0(r3)
   492c4:	4a7fffc4 	addi	r9,r9,-1
   492c8:	203ffc26 	beq	r4,zero,492bc <__alt_data_end+0xfffc92bc>
   492cc:	12400415 	stw	r9,16(r2)
   492d0:	dfc00517 	ldw	ra,20(sp)
   492d4:	dd000417 	ldw	r20,16(sp)
   492d8:	dcc00317 	ldw	r19,12(sp)
   492dc:	dc800217 	ldw	r18,8(sp)
   492e0:	dc400117 	ldw	r17,4(sp)
   492e4:	dc000017 	ldw	r16,0(sp)
   492e8:	dec00604 	addi	sp,sp,24
   492ec:	f800283a 	ret
   492f0:	000b883a 	mov	r5,zero
   492f4:	00488100 	call	48810 <_Balloc>
   492f8:	00c00044 	movi	r3,1
   492fc:	10c00415 	stw	r3,16(r2)
   49300:	10000515 	stw	zero,20(r2)
   49304:	003ff206 	br	492d0 <__alt_data_end+0xfffc92d0>
   49308:	8023883a 	mov	r17,r16
   4930c:	0029883a 	mov	r20,zero
   49310:	4021883a 	mov	r16,r8
   49314:	003fad06 	br	491cc <__alt_data_end+0xfffc91cc>
   49318:	9005883a 	mov	r2,r18
   4931c:	94400504 	addi	r17,r18,20
   49320:	9c000504 	addi	r16,r19,20
   49324:	9825883a 	mov	r18,r19
   49328:	05000044 	movi	r20,1
   4932c:	1027883a 	mov	r19,r2
   49330:	003fa606 	br	491cc <__alt_data_end+0xfffc91cc>

00049334 <__ulp>:
   49334:	295ffc2c 	andhi	r5,r5,32752
   49338:	00bf3034 	movhi	r2,64704
   4933c:	2887883a 	add	r3,r5,r2
   49340:	00c0020e 	bge	zero,r3,4934c <__ulp+0x18>
   49344:	0005883a 	mov	r2,zero
   49348:	f800283a 	ret
   4934c:	00c7c83a 	sub	r3,zero,r3
   49350:	1807d53a 	srai	r3,r3,20
   49354:	008004c4 	movi	r2,19
   49358:	10c00b0e 	bge	r2,r3,49388 <__ulp+0x54>
   4935c:	18bffb04 	addi	r2,r3,-20
   49360:	01000784 	movi	r4,30
   49364:	0007883a 	mov	r3,zero
   49368:	20800516 	blt	r4,r2,49380 <__ulp+0x4c>
   4936c:	010007c4 	movi	r4,31
   49370:	2089c83a 	sub	r4,r4,r2
   49374:	00800044 	movi	r2,1
   49378:	1104983a 	sll	r2,r2,r4
   4937c:	f800283a 	ret
   49380:	00800044 	movi	r2,1
   49384:	f800283a 	ret
   49388:	01400234 	movhi	r5,8
   4938c:	28c7d83a 	sra	r3,r5,r3
   49390:	0005883a 	mov	r2,zero
   49394:	f800283a 	ret

00049398 <__b2d>:
   49398:	defffa04 	addi	sp,sp,-24
   4939c:	dc000015 	stw	r16,0(sp)
   493a0:	24000417 	ldw	r16,16(r4)
   493a4:	dc400115 	stw	r17,4(sp)
   493a8:	24400504 	addi	r17,r4,20
   493ac:	8421883a 	add	r16,r16,r16
   493b0:	8421883a 	add	r16,r16,r16
   493b4:	8c21883a 	add	r16,r17,r16
   493b8:	dc800215 	stw	r18,8(sp)
   493bc:	84bfff17 	ldw	r18,-4(r16)
   493c0:	dd000415 	stw	r20,16(sp)
   493c4:	dcc00315 	stw	r19,12(sp)
   493c8:	9009883a 	mov	r4,r18
   493cc:	2829883a 	mov	r20,r5
   493d0:	dfc00515 	stw	ra,20(sp)
   493d4:	0048b040 	call	48b04 <__hi0bits>
   493d8:	00c00804 	movi	r3,32
   493dc:	1889c83a 	sub	r4,r3,r2
   493e0:	a1000015 	stw	r4,0(r20)
   493e4:	01000284 	movi	r4,10
   493e8:	84ffff04 	addi	r19,r16,-4
   493ec:	20801216 	blt	r4,r2,49438 <__b2d+0xa0>
   493f0:	018002c4 	movi	r6,11
   493f4:	308dc83a 	sub	r6,r6,r2
   493f8:	9186d83a 	srl	r3,r18,r6
   493fc:	18cffc34 	orhi	r3,r3,16368
   49400:	8cc0212e 	bgeu	r17,r19,49488 <__b2d+0xf0>
   49404:	813ffe17 	ldw	r4,-8(r16)
   49408:	218cd83a 	srl	r6,r4,r6
   4940c:	10800544 	addi	r2,r2,21
   49410:	9084983a 	sll	r2,r18,r2
   49414:	1184b03a 	or	r2,r2,r6
   49418:	dfc00517 	ldw	ra,20(sp)
   4941c:	dd000417 	ldw	r20,16(sp)
   49420:	dcc00317 	ldw	r19,12(sp)
   49424:	dc800217 	ldw	r18,8(sp)
   49428:	dc400117 	ldw	r17,4(sp)
   4942c:	dc000017 	ldw	r16,0(sp)
   49430:	dec00604 	addi	sp,sp,24
   49434:	f800283a 	ret
   49438:	8cc00f2e 	bgeu	r17,r19,49478 <__b2d+0xe0>
   4943c:	117ffd44 	addi	r5,r2,-11
   49440:	80bffe17 	ldw	r2,-8(r16)
   49444:	28000e26 	beq	r5,zero,49480 <__b2d+0xe8>
   49448:	1949c83a 	sub	r4,r3,r5
   4944c:	9164983a 	sll	r18,r18,r5
   49450:	1106d83a 	srl	r3,r2,r4
   49454:	81bffe04 	addi	r6,r16,-8
   49458:	948ffc34 	orhi	r18,r18,16368
   4945c:	90c6b03a 	or	r3,r18,r3
   49460:	89800e2e 	bgeu	r17,r6,4949c <__b2d+0x104>
   49464:	81bffd17 	ldw	r6,-12(r16)
   49468:	1144983a 	sll	r2,r2,r5
   4946c:	310ad83a 	srl	r5,r6,r4
   49470:	2884b03a 	or	r2,r5,r2
   49474:	003fe806 	br	49418 <__alt_data_end+0xfffc9418>
   49478:	10bffd44 	addi	r2,r2,-11
   4947c:	1000041e 	bne	r2,zero,49490 <__b2d+0xf8>
   49480:	90cffc34 	orhi	r3,r18,16368
   49484:	003fe406 	br	49418 <__alt_data_end+0xfffc9418>
   49488:	000d883a 	mov	r6,zero
   4948c:	003fdf06 	br	4940c <__alt_data_end+0xfffc940c>
   49490:	90a4983a 	sll	r18,r18,r2
   49494:	0005883a 	mov	r2,zero
   49498:	003ff906 	br	49480 <__alt_data_end+0xfffc9480>
   4949c:	1144983a 	sll	r2,r2,r5
   494a0:	003fdd06 	br	49418 <__alt_data_end+0xfffc9418>

000494a4 <__d2b>:
   494a4:	defff804 	addi	sp,sp,-32
   494a8:	dc000215 	stw	r16,8(sp)
   494ac:	3021883a 	mov	r16,r6
   494b0:	dc400315 	stw	r17,12(sp)
   494b4:	8022907a 	slli	r17,r16,1
   494b8:	dd000615 	stw	r20,24(sp)
   494bc:	2829883a 	mov	r20,r5
   494c0:	01400044 	movi	r5,1
   494c4:	dcc00515 	stw	r19,20(sp)
   494c8:	dc800415 	stw	r18,16(sp)
   494cc:	dfc00715 	stw	ra,28(sp)
   494d0:	3825883a 	mov	r18,r7
   494d4:	8822d57a 	srli	r17,r17,21
   494d8:	00488100 	call	48810 <_Balloc>
   494dc:	1027883a 	mov	r19,r2
   494e0:	00800434 	movhi	r2,16
   494e4:	10bfffc4 	addi	r2,r2,-1
   494e8:	808c703a 	and	r6,r16,r2
   494ec:	88000126 	beq	r17,zero,494f4 <__d2b+0x50>
   494f0:	31800434 	orhi	r6,r6,16
   494f4:	d9800015 	stw	r6,0(sp)
   494f8:	a0002426 	beq	r20,zero,4958c <__d2b+0xe8>
   494fc:	d9000104 	addi	r4,sp,4
   49500:	dd000115 	stw	r20,4(sp)
   49504:	0048b6c0 	call	48b6c <__lo0bits>
   49508:	d8c00017 	ldw	r3,0(sp)
   4950c:	10002f1e 	bne	r2,zero,495cc <__d2b+0x128>
   49510:	d9000117 	ldw	r4,4(sp)
   49514:	99000515 	stw	r4,20(r19)
   49518:	1821003a 	cmpeq	r16,r3,zero
   4951c:	01000084 	movi	r4,2
   49520:	2421c83a 	sub	r16,r4,r16
   49524:	98c00615 	stw	r3,24(r19)
   49528:	9c000415 	stw	r16,16(r19)
   4952c:	88001f1e 	bne	r17,zero,495ac <__d2b+0x108>
   49530:	10bef384 	addi	r2,r2,-1074
   49534:	90800015 	stw	r2,0(r18)
   49538:	00900034 	movhi	r2,16384
   4953c:	10bfffc4 	addi	r2,r2,-1
   49540:	8085883a 	add	r2,r16,r2
   49544:	1085883a 	add	r2,r2,r2
   49548:	1085883a 	add	r2,r2,r2
   4954c:	9885883a 	add	r2,r19,r2
   49550:	11000517 	ldw	r4,20(r2)
   49554:	8020917a 	slli	r16,r16,5
   49558:	0048b040 	call	48b04 <__hi0bits>
   4955c:	d8c00817 	ldw	r3,32(sp)
   49560:	8085c83a 	sub	r2,r16,r2
   49564:	18800015 	stw	r2,0(r3)
   49568:	9805883a 	mov	r2,r19
   4956c:	dfc00717 	ldw	ra,28(sp)
   49570:	dd000617 	ldw	r20,24(sp)
   49574:	dcc00517 	ldw	r19,20(sp)
   49578:	dc800417 	ldw	r18,16(sp)
   4957c:	dc400317 	ldw	r17,12(sp)
   49580:	dc000217 	ldw	r16,8(sp)
   49584:	dec00804 	addi	sp,sp,32
   49588:	f800283a 	ret
   4958c:	d809883a 	mov	r4,sp
   49590:	0048b6c0 	call	48b6c <__lo0bits>
   49594:	d8c00017 	ldw	r3,0(sp)
   49598:	04000044 	movi	r16,1
   4959c:	9c000415 	stw	r16,16(r19)
   495a0:	98c00515 	stw	r3,20(r19)
   495a4:	10800804 	addi	r2,r2,32
   495a8:	883fe126 	beq	r17,zero,49530 <__alt_data_end+0xfffc9530>
   495ac:	00c00d44 	movi	r3,53
   495b0:	8c7ef344 	addi	r17,r17,-1075
   495b4:	88a3883a 	add	r17,r17,r2
   495b8:	1885c83a 	sub	r2,r3,r2
   495bc:	d8c00817 	ldw	r3,32(sp)
   495c0:	94400015 	stw	r17,0(r18)
   495c4:	18800015 	stw	r2,0(r3)
   495c8:	003fe706 	br	49568 <__alt_data_end+0xfffc9568>
   495cc:	01000804 	movi	r4,32
   495d0:	2089c83a 	sub	r4,r4,r2
   495d4:	1908983a 	sll	r4,r3,r4
   495d8:	d9400117 	ldw	r5,4(sp)
   495dc:	1886d83a 	srl	r3,r3,r2
   495e0:	2148b03a 	or	r4,r4,r5
   495e4:	99000515 	stw	r4,20(r19)
   495e8:	d8c00015 	stw	r3,0(sp)
   495ec:	003fca06 	br	49518 <__alt_data_end+0xfffc9518>

000495f0 <__ratio>:
   495f0:	defff904 	addi	sp,sp,-28
   495f4:	dc400315 	stw	r17,12(sp)
   495f8:	2823883a 	mov	r17,r5
   495fc:	d9400104 	addi	r5,sp,4
   49600:	dfc00615 	stw	ra,24(sp)
   49604:	dcc00515 	stw	r19,20(sp)
   49608:	dc800415 	stw	r18,16(sp)
   4960c:	2027883a 	mov	r19,r4
   49610:	dc000215 	stw	r16,8(sp)
   49614:	00493980 	call	49398 <__b2d>
   49618:	d80b883a 	mov	r5,sp
   4961c:	8809883a 	mov	r4,r17
   49620:	1025883a 	mov	r18,r2
   49624:	1821883a 	mov	r16,r3
   49628:	00493980 	call	49398 <__b2d>
   4962c:	8a000417 	ldw	r8,16(r17)
   49630:	99000417 	ldw	r4,16(r19)
   49634:	d9400117 	ldw	r5,4(sp)
   49638:	2209c83a 	sub	r4,r4,r8
   4963c:	2010917a 	slli	r8,r4,5
   49640:	d9000017 	ldw	r4,0(sp)
   49644:	2909c83a 	sub	r4,r5,r4
   49648:	4109883a 	add	r4,r8,r4
   4964c:	01000e0e 	bge	zero,r4,49688 <__ratio+0x98>
   49650:	2008953a 	slli	r4,r4,20
   49654:	2421883a 	add	r16,r4,r16
   49658:	100d883a 	mov	r6,r2
   4965c:	180f883a 	mov	r7,r3
   49660:	9009883a 	mov	r4,r18
   49664:	800b883a 	mov	r5,r16
   49668:	004d12c0 	call	4d12c <__divdf3>
   4966c:	dfc00617 	ldw	ra,24(sp)
   49670:	dcc00517 	ldw	r19,20(sp)
   49674:	dc800417 	ldw	r18,16(sp)
   49678:	dc400317 	ldw	r17,12(sp)
   4967c:	dc000217 	ldw	r16,8(sp)
   49680:	dec00704 	addi	sp,sp,28
   49684:	f800283a 	ret
   49688:	2008953a 	slli	r4,r4,20
   4968c:	1907c83a 	sub	r3,r3,r4
   49690:	003ff106 	br	49658 <__alt_data_end+0xfffc9658>

00049694 <_mprec_log10>:
   49694:	defffe04 	addi	sp,sp,-8
   49698:	dc000015 	stw	r16,0(sp)
   4969c:	dfc00115 	stw	ra,4(sp)
   496a0:	008005c4 	movi	r2,23
   496a4:	2021883a 	mov	r16,r4
   496a8:	11000d0e 	bge	r2,r4,496e0 <_mprec_log10+0x4c>
   496ac:	0005883a 	mov	r2,zero
   496b0:	00cffc34 	movhi	r3,16368
   496b4:	843fffc4 	addi	r16,r16,-1
   496b8:	000d883a 	mov	r6,zero
   496bc:	01d00934 	movhi	r7,16420
   496c0:	1009883a 	mov	r4,r2
   496c4:	180b883a 	mov	r5,r3
   496c8:	00426c80 	call	426c8 <__muldf3>
   496cc:	803ff91e 	bne	r16,zero,496b4 <__alt_data_end+0xfffc96b4>
   496d0:	dfc00117 	ldw	ra,4(sp)
   496d4:	dc000017 	ldw	r16,0(sp)
   496d8:	dec00204 	addi	sp,sp,8
   496dc:	f800283a 	ret
   496e0:	202090fa 	slli	r16,r4,3
   496e4:	00800174 	movhi	r2,5
   496e8:	10847304 	addi	r2,r2,4556
   496ec:	1421883a 	add	r16,r2,r16
   496f0:	80800017 	ldw	r2,0(r16)
   496f4:	80c00117 	ldw	r3,4(r16)
   496f8:	dfc00117 	ldw	ra,4(sp)
   496fc:	dc000017 	ldw	r16,0(sp)
   49700:	dec00204 	addi	sp,sp,8
   49704:	f800283a 	ret

00049708 <__copybits>:
   49708:	297fffc4 	addi	r5,r5,-1
   4970c:	280fd17a 	srai	r7,r5,5
   49710:	30c00417 	ldw	r3,16(r6)
   49714:	30800504 	addi	r2,r6,20
   49718:	39c00044 	addi	r7,r7,1
   4971c:	18c7883a 	add	r3,r3,r3
   49720:	39cf883a 	add	r7,r7,r7
   49724:	18c7883a 	add	r3,r3,r3
   49728:	39cf883a 	add	r7,r7,r7
   4972c:	10c7883a 	add	r3,r2,r3
   49730:	21cf883a 	add	r7,r4,r7
   49734:	10c00d2e 	bgeu	r2,r3,4976c <__copybits+0x64>
   49738:	200b883a 	mov	r5,r4
   4973c:	12000017 	ldw	r8,0(r2)
   49740:	29400104 	addi	r5,r5,4
   49744:	10800104 	addi	r2,r2,4
   49748:	2a3fff15 	stw	r8,-4(r5)
   4974c:	10fffb36 	bltu	r2,r3,4973c <__alt_data_end+0xfffc973c>
   49750:	1985c83a 	sub	r2,r3,r6
   49754:	10bffac4 	addi	r2,r2,-21
   49758:	1004d0ba 	srli	r2,r2,2
   4975c:	10800044 	addi	r2,r2,1
   49760:	1085883a 	add	r2,r2,r2
   49764:	1085883a 	add	r2,r2,r2
   49768:	2089883a 	add	r4,r4,r2
   4976c:	21c0032e 	bgeu	r4,r7,4977c <__copybits+0x74>
   49770:	20000015 	stw	zero,0(r4)
   49774:	21000104 	addi	r4,r4,4
   49778:	21fffd36 	bltu	r4,r7,49770 <__alt_data_end+0xfffc9770>
   4977c:	f800283a 	ret

00049780 <__any_on>:
   49780:	20c00417 	ldw	r3,16(r4)
   49784:	2805d17a 	srai	r2,r5,5
   49788:	21000504 	addi	r4,r4,20
   4978c:	18800d0e 	bge	r3,r2,497c4 <__any_on+0x44>
   49790:	18c7883a 	add	r3,r3,r3
   49794:	18c7883a 	add	r3,r3,r3
   49798:	20c7883a 	add	r3,r4,r3
   4979c:	20c0192e 	bgeu	r4,r3,49804 <__any_on+0x84>
   497a0:	18bfff17 	ldw	r2,-4(r3)
   497a4:	18ffff04 	addi	r3,r3,-4
   497a8:	1000041e 	bne	r2,zero,497bc <__any_on+0x3c>
   497ac:	20c0142e 	bgeu	r4,r3,49800 <__any_on+0x80>
   497b0:	18ffff04 	addi	r3,r3,-4
   497b4:	19400017 	ldw	r5,0(r3)
   497b8:	283ffc26 	beq	r5,zero,497ac <__alt_data_end+0xfffc97ac>
   497bc:	00800044 	movi	r2,1
   497c0:	f800283a 	ret
   497c4:	10c00a0e 	bge	r2,r3,497f0 <__any_on+0x70>
   497c8:	1085883a 	add	r2,r2,r2
   497cc:	1085883a 	add	r2,r2,r2
   497d0:	294007cc 	andi	r5,r5,31
   497d4:	2087883a 	add	r3,r4,r2
   497d8:	283ff026 	beq	r5,zero,4979c <__alt_data_end+0xfffc979c>
   497dc:	19800017 	ldw	r6,0(r3)
   497e0:	3144d83a 	srl	r2,r6,r5
   497e4:	114a983a 	sll	r5,r2,r5
   497e8:	317ff41e 	bne	r6,r5,497bc <__alt_data_end+0xfffc97bc>
   497ec:	003feb06 	br	4979c <__alt_data_end+0xfffc979c>
   497f0:	1085883a 	add	r2,r2,r2
   497f4:	1085883a 	add	r2,r2,r2
   497f8:	2087883a 	add	r3,r4,r2
   497fc:	003fe706 	br	4979c <__alt_data_end+0xfffc979c>
   49800:	f800283a 	ret
   49804:	0005883a 	mov	r2,zero
   49808:	f800283a 	ret

0004980c <__fpclassifyd>:
   4980c:	00a00034 	movhi	r2,32768
   49810:	10bfffc4 	addi	r2,r2,-1
   49814:	2884703a 	and	r2,r5,r2
   49818:	10000726 	beq	r2,zero,49838 <__fpclassifyd+0x2c>
   4981c:	00fffc34 	movhi	r3,65520
   49820:	019ff834 	movhi	r6,32736
   49824:	28c7883a 	add	r3,r5,r3
   49828:	31bfffc4 	addi	r6,r6,-1
   4982c:	30c00536 	bltu	r6,r3,49844 <__fpclassifyd+0x38>
   49830:	00800104 	movi	r2,4
   49834:	f800283a 	ret
   49838:	2000021e 	bne	r4,zero,49844 <__fpclassifyd+0x38>
   4983c:	00800084 	movi	r2,2
   49840:	f800283a 	ret
   49844:	00dffc34 	movhi	r3,32752
   49848:	019ff834 	movhi	r6,32736
   4984c:	28cb883a 	add	r5,r5,r3
   49850:	31bfffc4 	addi	r6,r6,-1
   49854:	317ff62e 	bgeu	r6,r5,49830 <__alt_data_end+0xfffc9830>
   49858:	01400434 	movhi	r5,16
   4985c:	297fffc4 	addi	r5,r5,-1
   49860:	28800236 	bltu	r5,r2,4986c <__fpclassifyd+0x60>
   49864:	008000c4 	movi	r2,3
   49868:	f800283a 	ret
   4986c:	10c00226 	beq	r2,r3,49878 <__fpclassifyd+0x6c>
   49870:	0005883a 	mov	r2,zero
   49874:	f800283a 	ret
   49878:	2005003a 	cmpeq	r2,r4,zero
   4987c:	f800283a 	ret

00049880 <_sbrk_r>:
   49880:	defffd04 	addi	sp,sp,-12
   49884:	dc000015 	stw	r16,0(sp)
   49888:	04000174 	movhi	r16,5
   4988c:	dc400115 	stw	r17,4(sp)
   49890:	84128a04 	addi	r16,r16,18984
   49894:	2023883a 	mov	r17,r4
   49898:	2809883a 	mov	r4,r5
   4989c:	dfc00215 	stw	ra,8(sp)
   498a0:	80000015 	stw	zero,0(r16)
   498a4:	004eecc0 	call	4eecc <sbrk>
   498a8:	00ffffc4 	movi	r3,-1
   498ac:	10c00526 	beq	r2,r3,498c4 <_sbrk_r+0x44>
   498b0:	dfc00217 	ldw	ra,8(sp)
   498b4:	dc400117 	ldw	r17,4(sp)
   498b8:	dc000017 	ldw	r16,0(sp)
   498bc:	dec00304 	addi	sp,sp,12
   498c0:	f800283a 	ret
   498c4:	80c00017 	ldw	r3,0(r16)
   498c8:	183ff926 	beq	r3,zero,498b0 <__alt_data_end+0xfffc98b0>
   498cc:	88c00015 	stw	r3,0(r17)
   498d0:	003ff706 	br	498b0 <__alt_data_end+0xfffc98b0>

000498d4 <__sread>:
   498d4:	defffe04 	addi	sp,sp,-8
   498d8:	dc000015 	stw	r16,0(sp)
   498dc:	2821883a 	mov	r16,r5
   498e0:	2940038f 	ldh	r5,14(r5)
   498e4:	dfc00115 	stw	ra,4(sp)
   498e8:	004bd780 	call	4bd78 <_read_r>
   498ec:	10000716 	blt	r2,zero,4990c <__sread+0x38>
   498f0:	80c01417 	ldw	r3,80(r16)
   498f4:	1887883a 	add	r3,r3,r2
   498f8:	80c01415 	stw	r3,80(r16)
   498fc:	dfc00117 	ldw	ra,4(sp)
   49900:	dc000017 	ldw	r16,0(sp)
   49904:	dec00204 	addi	sp,sp,8
   49908:	f800283a 	ret
   4990c:	80c0030b 	ldhu	r3,12(r16)
   49910:	18fbffcc 	andi	r3,r3,61439
   49914:	80c0030d 	sth	r3,12(r16)
   49918:	dfc00117 	ldw	ra,4(sp)
   4991c:	dc000017 	ldw	r16,0(sp)
   49920:	dec00204 	addi	sp,sp,8
   49924:	f800283a 	ret

00049928 <__seofread>:
   49928:	0005883a 	mov	r2,zero
   4992c:	f800283a 	ret

00049930 <__swrite>:
   49930:	2880030b 	ldhu	r2,12(r5)
   49934:	defffb04 	addi	sp,sp,-20
   49938:	dcc00315 	stw	r19,12(sp)
   4993c:	dc800215 	stw	r18,8(sp)
   49940:	dc400115 	stw	r17,4(sp)
   49944:	dc000015 	stw	r16,0(sp)
   49948:	dfc00415 	stw	ra,16(sp)
   4994c:	10c0400c 	andi	r3,r2,256
   49950:	2821883a 	mov	r16,r5
   49954:	2023883a 	mov	r17,r4
   49958:	3025883a 	mov	r18,r6
   4995c:	3827883a 	mov	r19,r7
   49960:	18000526 	beq	r3,zero,49978 <__swrite+0x48>
   49964:	2940038f 	ldh	r5,14(r5)
   49968:	01c00084 	movi	r7,2
   4996c:	000d883a 	mov	r6,zero
   49970:	004bbbc0 	call	4bbbc <_lseek_r>
   49974:	8080030b 	ldhu	r2,12(r16)
   49978:	8140038f 	ldh	r5,14(r16)
   4997c:	10bbffcc 	andi	r2,r2,61439
   49980:	980f883a 	mov	r7,r19
   49984:	900d883a 	mov	r6,r18
   49988:	8809883a 	mov	r4,r17
   4998c:	8080030d 	sth	r2,12(r16)
   49990:	dfc00417 	ldw	ra,16(sp)
   49994:	dcc00317 	ldw	r19,12(sp)
   49998:	dc800217 	ldw	r18,8(sp)
   4999c:	dc400117 	ldw	r17,4(sp)
   499a0:	dc000017 	ldw	r16,0(sp)
   499a4:	dec00504 	addi	sp,sp,20
   499a8:	004b1cc1 	jmpi	4b1cc <_write_r>

000499ac <__sseek>:
   499ac:	defffe04 	addi	sp,sp,-8
   499b0:	dc000015 	stw	r16,0(sp)
   499b4:	2821883a 	mov	r16,r5
   499b8:	2940038f 	ldh	r5,14(r5)
   499bc:	dfc00115 	stw	ra,4(sp)
   499c0:	004bbbc0 	call	4bbbc <_lseek_r>
   499c4:	00ffffc4 	movi	r3,-1
   499c8:	10c00826 	beq	r2,r3,499ec <__sseek+0x40>
   499cc:	80c0030b 	ldhu	r3,12(r16)
   499d0:	80801415 	stw	r2,80(r16)
   499d4:	18c40014 	ori	r3,r3,4096
   499d8:	80c0030d 	sth	r3,12(r16)
   499dc:	dfc00117 	ldw	ra,4(sp)
   499e0:	dc000017 	ldw	r16,0(sp)
   499e4:	dec00204 	addi	sp,sp,8
   499e8:	f800283a 	ret
   499ec:	80c0030b 	ldhu	r3,12(r16)
   499f0:	18fbffcc 	andi	r3,r3,61439
   499f4:	80c0030d 	sth	r3,12(r16)
   499f8:	dfc00117 	ldw	ra,4(sp)
   499fc:	dc000017 	ldw	r16,0(sp)
   49a00:	dec00204 	addi	sp,sp,8
   49a04:	f800283a 	ret

00049a08 <__sclose>:
   49a08:	2940038f 	ldh	r5,14(r5)
   49a0c:	004b22c1 	jmpi	4b22c <_close_r>

00049a10 <strcmp>:
   49a10:	2144b03a 	or	r2,r4,r5
   49a14:	108000cc 	andi	r2,r2,3
   49a18:	1000171e 	bne	r2,zero,49a78 <strcmp+0x68>
   49a1c:	20800017 	ldw	r2,0(r4)
   49a20:	28c00017 	ldw	r3,0(r5)
   49a24:	10c0141e 	bne	r2,r3,49a78 <strcmp+0x68>
   49a28:	027fbff4 	movhi	r9,65279
   49a2c:	4a7fbfc4 	addi	r9,r9,-257
   49a30:	0086303a 	nor	r3,zero,r2
   49a34:	02202074 	movhi	r8,32897
   49a38:	1245883a 	add	r2,r2,r9
   49a3c:	42202004 	addi	r8,r8,-32640
   49a40:	10c4703a 	and	r2,r2,r3
   49a44:	1204703a 	and	r2,r2,r8
   49a48:	10000226 	beq	r2,zero,49a54 <strcmp+0x44>
   49a4c:	00002306 	br	49adc <strcmp+0xcc>
   49a50:	1000221e 	bne	r2,zero,49adc <strcmp+0xcc>
   49a54:	21000104 	addi	r4,r4,4
   49a58:	20c00017 	ldw	r3,0(r4)
   49a5c:	29400104 	addi	r5,r5,4
   49a60:	29800017 	ldw	r6,0(r5)
   49a64:	1a4f883a 	add	r7,r3,r9
   49a68:	00c4303a 	nor	r2,zero,r3
   49a6c:	3884703a 	and	r2,r7,r2
   49a70:	1204703a 	and	r2,r2,r8
   49a74:	19bff626 	beq	r3,r6,49a50 <__alt_data_end+0xfffc9a50>
   49a78:	20800003 	ldbu	r2,0(r4)
   49a7c:	10c03fcc 	andi	r3,r2,255
   49a80:	18c0201c 	xori	r3,r3,128
   49a84:	18ffe004 	addi	r3,r3,-128
   49a88:	18000c26 	beq	r3,zero,49abc <strcmp+0xac>
   49a8c:	29800007 	ldb	r6,0(r5)
   49a90:	19800326 	beq	r3,r6,49aa0 <strcmp+0x90>
   49a94:	00001306 	br	49ae4 <strcmp+0xd4>
   49a98:	29800007 	ldb	r6,0(r5)
   49a9c:	11800b1e 	bne	r2,r6,49acc <strcmp+0xbc>
   49aa0:	21000044 	addi	r4,r4,1
   49aa4:	20c00003 	ldbu	r3,0(r4)
   49aa8:	29400044 	addi	r5,r5,1
   49aac:	18803fcc 	andi	r2,r3,255
   49ab0:	1080201c 	xori	r2,r2,128
   49ab4:	10bfe004 	addi	r2,r2,-128
   49ab8:	103ff71e 	bne	r2,zero,49a98 <__alt_data_end+0xfffc9a98>
   49abc:	0007883a 	mov	r3,zero
   49ac0:	28800003 	ldbu	r2,0(r5)
   49ac4:	1885c83a 	sub	r2,r3,r2
   49ac8:	f800283a 	ret
   49acc:	28800003 	ldbu	r2,0(r5)
   49ad0:	18c03fcc 	andi	r3,r3,255
   49ad4:	1885c83a 	sub	r2,r3,r2
   49ad8:	f800283a 	ret
   49adc:	0005883a 	mov	r2,zero
   49ae0:	f800283a 	ret
   49ae4:	10c03fcc 	andi	r3,r2,255
   49ae8:	003ff506 	br	49ac0 <__alt_data_end+0xfffc9ac0>

00049aec <strlen>:
   49aec:	208000cc 	andi	r2,r4,3
   49af0:	10002026 	beq	r2,zero,49b74 <strlen+0x88>
   49af4:	20800007 	ldb	r2,0(r4)
   49af8:	10002026 	beq	r2,zero,49b7c <strlen+0x90>
   49afc:	2005883a 	mov	r2,r4
   49b00:	00000206 	br	49b0c <strlen+0x20>
   49b04:	10c00007 	ldb	r3,0(r2)
   49b08:	18001826 	beq	r3,zero,49b6c <strlen+0x80>
   49b0c:	10800044 	addi	r2,r2,1
   49b10:	10c000cc 	andi	r3,r2,3
   49b14:	183ffb1e 	bne	r3,zero,49b04 <__alt_data_end+0xfffc9b04>
   49b18:	10c00017 	ldw	r3,0(r2)
   49b1c:	01ffbff4 	movhi	r7,65279
   49b20:	39ffbfc4 	addi	r7,r7,-257
   49b24:	00ca303a 	nor	r5,zero,r3
   49b28:	01a02074 	movhi	r6,32897
   49b2c:	19c7883a 	add	r3,r3,r7
   49b30:	31a02004 	addi	r6,r6,-32640
   49b34:	1946703a 	and	r3,r3,r5
   49b38:	1986703a 	and	r3,r3,r6
   49b3c:	1800091e 	bne	r3,zero,49b64 <strlen+0x78>
   49b40:	10800104 	addi	r2,r2,4
   49b44:	10c00017 	ldw	r3,0(r2)
   49b48:	19cb883a 	add	r5,r3,r7
   49b4c:	00c6303a 	nor	r3,zero,r3
   49b50:	28c6703a 	and	r3,r5,r3
   49b54:	1986703a 	and	r3,r3,r6
   49b58:	183ff926 	beq	r3,zero,49b40 <__alt_data_end+0xfffc9b40>
   49b5c:	00000106 	br	49b64 <strlen+0x78>
   49b60:	10800044 	addi	r2,r2,1
   49b64:	10c00007 	ldb	r3,0(r2)
   49b68:	183ffd1e 	bne	r3,zero,49b60 <__alt_data_end+0xfffc9b60>
   49b6c:	1105c83a 	sub	r2,r2,r4
   49b70:	f800283a 	ret
   49b74:	2005883a 	mov	r2,r4
   49b78:	003fe706 	br	49b18 <__alt_data_end+0xfffc9b18>
   49b7c:	0005883a 	mov	r2,zero
   49b80:	f800283a 	ret

00049b84 <__sprint_r.part.0>:
   49b84:	28801917 	ldw	r2,100(r5)
   49b88:	defff604 	addi	sp,sp,-40
   49b8c:	dd400515 	stw	r21,20(sp)
   49b90:	dfc00915 	stw	ra,36(sp)
   49b94:	df000815 	stw	fp,32(sp)
   49b98:	ddc00715 	stw	r23,28(sp)
   49b9c:	dd800615 	stw	r22,24(sp)
   49ba0:	dd000415 	stw	r20,16(sp)
   49ba4:	dcc00315 	stw	r19,12(sp)
   49ba8:	dc800215 	stw	r18,8(sp)
   49bac:	dc400115 	stw	r17,4(sp)
   49bb0:	dc000015 	stw	r16,0(sp)
   49bb4:	1088000c 	andi	r2,r2,8192
   49bb8:	302b883a 	mov	r21,r6
   49bbc:	10002e26 	beq	r2,zero,49c78 <__sprint_r.part.0+0xf4>
   49bc0:	30800217 	ldw	r2,8(r6)
   49bc4:	35800017 	ldw	r22,0(r6)
   49bc8:	10002926 	beq	r2,zero,49c70 <__sprint_r.part.0+0xec>
   49bcc:	2827883a 	mov	r19,r5
   49bd0:	2029883a 	mov	r20,r4
   49bd4:	b5c00104 	addi	r23,r22,4
   49bd8:	04bfffc4 	movi	r18,-1
   49bdc:	bc400017 	ldw	r17,0(r23)
   49be0:	b4000017 	ldw	r16,0(r22)
   49be4:	0039883a 	mov	fp,zero
   49be8:	8822d0ba 	srli	r17,r17,2
   49bec:	8800031e 	bne	r17,zero,49bfc <__sprint_r.part.0+0x78>
   49bf0:	00001806 	br	49c54 <__sprint_r.part.0+0xd0>
   49bf4:	84000104 	addi	r16,r16,4
   49bf8:	8f001526 	beq	r17,fp,49c50 <__sprint_r.part.0+0xcc>
   49bfc:	81400017 	ldw	r5,0(r16)
   49c00:	980d883a 	mov	r6,r19
   49c04:	a009883a 	mov	r4,r20
   49c08:	004b5ac0 	call	4b5ac <_fputwc_r>
   49c0c:	e7000044 	addi	fp,fp,1
   49c10:	14bff81e 	bne	r2,r18,49bf4 <__alt_data_end+0xfffc9bf4>
   49c14:	9005883a 	mov	r2,r18
   49c18:	a8000215 	stw	zero,8(r21)
   49c1c:	a8000115 	stw	zero,4(r21)
   49c20:	dfc00917 	ldw	ra,36(sp)
   49c24:	df000817 	ldw	fp,32(sp)
   49c28:	ddc00717 	ldw	r23,28(sp)
   49c2c:	dd800617 	ldw	r22,24(sp)
   49c30:	dd400517 	ldw	r21,20(sp)
   49c34:	dd000417 	ldw	r20,16(sp)
   49c38:	dcc00317 	ldw	r19,12(sp)
   49c3c:	dc800217 	ldw	r18,8(sp)
   49c40:	dc400117 	ldw	r17,4(sp)
   49c44:	dc000017 	ldw	r16,0(sp)
   49c48:	dec00a04 	addi	sp,sp,40
   49c4c:	f800283a 	ret
   49c50:	a8800217 	ldw	r2,8(r21)
   49c54:	8c63883a 	add	r17,r17,r17
   49c58:	8c63883a 	add	r17,r17,r17
   49c5c:	1445c83a 	sub	r2,r2,r17
   49c60:	a8800215 	stw	r2,8(r21)
   49c64:	b5800204 	addi	r22,r22,8
   49c68:	bdc00204 	addi	r23,r23,8
   49c6c:	103fdb1e 	bne	r2,zero,49bdc <__alt_data_end+0xfffc9bdc>
   49c70:	0005883a 	mov	r2,zero
   49c74:	003fe806 	br	49c18 <__alt_data_end+0xfffc9c18>
   49c78:	004b6ac0 	call	4b6ac <__sfvwrite_r>
   49c7c:	003fe606 	br	49c18 <__alt_data_end+0xfffc9c18>

00049c80 <__sprint_r>:
   49c80:	30c00217 	ldw	r3,8(r6)
   49c84:	18000126 	beq	r3,zero,49c8c <__sprint_r+0xc>
   49c88:	0049b841 	jmpi	49b84 <__sprint_r.part.0>
   49c8c:	30000115 	stw	zero,4(r6)
   49c90:	0005883a 	mov	r2,zero
   49c94:	f800283a 	ret

00049c98 <___vfiprintf_internal_r>:
   49c98:	deffc904 	addi	sp,sp,-220
   49c9c:	df003515 	stw	fp,212(sp)
   49ca0:	dd003115 	stw	r20,196(sp)
   49ca4:	dfc03615 	stw	ra,216(sp)
   49ca8:	ddc03415 	stw	r23,208(sp)
   49cac:	dd803315 	stw	r22,204(sp)
   49cb0:	dd403215 	stw	r21,200(sp)
   49cb4:	dcc03015 	stw	r19,192(sp)
   49cb8:	dc802f15 	stw	r18,188(sp)
   49cbc:	dc402e15 	stw	r17,184(sp)
   49cc0:	dc002d15 	stw	r16,180(sp)
   49cc4:	d9002015 	stw	r4,128(sp)
   49cc8:	d9c02215 	stw	r7,136(sp)
   49ccc:	2829883a 	mov	r20,r5
   49cd0:	3039883a 	mov	fp,r6
   49cd4:	20000226 	beq	r4,zero,49ce0 <___vfiprintf_internal_r+0x48>
   49cd8:	20800e17 	ldw	r2,56(r4)
   49cdc:	1000cf26 	beq	r2,zero,4a01c <___vfiprintf_internal_r+0x384>
   49ce0:	a080030b 	ldhu	r2,12(r20)
   49ce4:	10c8000c 	andi	r3,r2,8192
   49ce8:	1800061e 	bne	r3,zero,49d04 <___vfiprintf_internal_r+0x6c>
   49cec:	a1001917 	ldw	r4,100(r20)
   49cf0:	00f7ffc4 	movi	r3,-8193
   49cf4:	10880014 	ori	r2,r2,8192
   49cf8:	20c6703a 	and	r3,r4,r3
   49cfc:	a080030d 	sth	r2,12(r20)
   49d00:	a0c01915 	stw	r3,100(r20)
   49d04:	10c0020c 	andi	r3,r2,8
   49d08:	1800a926 	beq	r3,zero,49fb0 <___vfiprintf_internal_r+0x318>
   49d0c:	a0c00417 	ldw	r3,16(r20)
   49d10:	1800a726 	beq	r3,zero,49fb0 <___vfiprintf_internal_r+0x318>
   49d14:	1080068c 	andi	r2,r2,26
   49d18:	00c00284 	movi	r3,10
   49d1c:	10c0ac26 	beq	r2,r3,49fd0 <___vfiprintf_internal_r+0x338>
   49d20:	da801a04 	addi	r10,sp,104
   49d24:	da801e15 	stw	r10,120(sp)
   49d28:	d8801e17 	ldw	r2,120(sp)
   49d2c:	da8019c4 	addi	r10,sp,103
   49d30:	05800174 	movhi	r22,5
   49d34:	05c00174 	movhi	r23,5
   49d38:	da801f15 	stw	r10,124(sp)
   49d3c:	1295c83a 	sub	r10,r2,r10
   49d40:	b584a904 	addi	r22,r22,4772
   49d44:	bdc4a504 	addi	r23,r23,4756
   49d48:	dec01a15 	stw	sp,104(sp)
   49d4c:	d8001c15 	stw	zero,112(sp)
   49d50:	d8001b15 	stw	zero,108(sp)
   49d54:	d8002615 	stw	zero,152(sp)
   49d58:	d8002315 	stw	zero,140(sp)
   49d5c:	da802715 	stw	r10,156(sp)
   49d60:	d811883a 	mov	r8,sp
   49d64:	dd002115 	stw	r20,132(sp)
   49d68:	e021883a 	mov	r16,fp
   49d6c:	80800007 	ldb	r2,0(r16)
   49d70:	1003ea26 	beq	r2,zero,4ad1c <___vfiprintf_internal_r+0x1084>
   49d74:	00c00944 	movi	r3,37
   49d78:	8025883a 	mov	r18,r16
   49d7c:	10c0021e 	bne	r2,r3,49d88 <___vfiprintf_internal_r+0xf0>
   49d80:	00001606 	br	49ddc <___vfiprintf_internal_r+0x144>
   49d84:	10c00326 	beq	r2,r3,49d94 <___vfiprintf_internal_r+0xfc>
   49d88:	94800044 	addi	r18,r18,1
   49d8c:	90800007 	ldb	r2,0(r18)
   49d90:	103ffc1e 	bne	r2,zero,49d84 <__alt_data_end+0xfffc9d84>
   49d94:	9423c83a 	sub	r17,r18,r16
   49d98:	88001026 	beq	r17,zero,49ddc <___vfiprintf_internal_r+0x144>
   49d9c:	d8c01c17 	ldw	r3,112(sp)
   49da0:	d8801b17 	ldw	r2,108(sp)
   49da4:	44000015 	stw	r16,0(r8)
   49da8:	88c7883a 	add	r3,r17,r3
   49dac:	10800044 	addi	r2,r2,1
   49db0:	44400115 	stw	r17,4(r8)
   49db4:	d8c01c15 	stw	r3,112(sp)
   49db8:	d8801b15 	stw	r2,108(sp)
   49dbc:	010001c4 	movi	r4,7
   49dc0:	2080760e 	bge	r4,r2,49f9c <___vfiprintf_internal_r+0x304>
   49dc4:	1803821e 	bne	r3,zero,4abd0 <___vfiprintf_internal_r+0xf38>
   49dc8:	da802317 	ldw	r10,140(sp)
   49dcc:	d8001b15 	stw	zero,108(sp)
   49dd0:	d811883a 	mov	r8,sp
   49dd4:	5455883a 	add	r10,r10,r17
   49dd8:	da802315 	stw	r10,140(sp)
   49ddc:	90800007 	ldb	r2,0(r18)
   49de0:	10044626 	beq	r2,zero,4aefc <___vfiprintf_internal_r+0x1264>
   49de4:	90c00047 	ldb	r3,1(r18)
   49de8:	94000044 	addi	r16,r18,1
   49dec:	d8001d85 	stb	zero,118(sp)
   49df0:	0009883a 	mov	r4,zero
   49df4:	000f883a 	mov	r7,zero
   49df8:	027fffc4 	movi	r9,-1
   49dfc:	0023883a 	mov	r17,zero
   49e00:	0029883a 	mov	r20,zero
   49e04:	01401604 	movi	r5,88
   49e08:	01800244 	movi	r6,9
   49e0c:	03400a84 	movi	r13,42
   49e10:	03001b04 	movi	r12,108
   49e14:	84000044 	addi	r16,r16,1
   49e18:	18bff804 	addi	r2,r3,-32
   49e1c:	28827336 	bltu	r5,r2,4a7ec <___vfiprintf_internal_r+0xb54>
   49e20:	100490ba 	slli	r2,r2,2
   49e24:	02800174 	movhi	r10,5
   49e28:	52a78e04 	addi	r10,r10,-25032
   49e2c:	1285883a 	add	r2,r2,r10
   49e30:	10800017 	ldw	r2,0(r2)
   49e34:	1000683a 	jmp	r2
   49e38:	0004a520 	cmpeqi	zero,zero,4756
   49e3c:	0004a7ec 	andhi	zero,zero,4767
   49e40:	0004a7ec 	andhi	zero,zero,4767
   49e44:	0004a540 	call	4a54 <__alt_mem_onchip_memory2_0-0x3b5ac>
   49e48:	0004a7ec 	andhi	zero,zero,4767
   49e4c:	0004a7ec 	andhi	zero,zero,4767
   49e50:	0004a7ec 	andhi	zero,zero,4767
   49e54:	0004a7ec 	andhi	zero,zero,4767
   49e58:	0004a7ec 	andhi	zero,zero,4767
   49e5c:	0004a7ec 	andhi	zero,zero,4767
   49e60:	0004a728 	cmpgeui	zero,zero,4764
   49e64:	0004a744 	movi	zero,4765
   49e68:	0004a7ec 	andhi	zero,zero,4767
   49e6c:	0004a02c 	andhi	zero,zero,4736
   49e70:	0004a754 	movui	zero,4765
   49e74:	0004a7ec 	andhi	zero,zero,4767
   49e78:	0004a54c 	andi	zero,zero,4757
   49e7c:	0004a558 	cmpnei	zero,zero,4757
   49e80:	0004a558 	cmpnei	zero,zero,4757
   49e84:	0004a558 	cmpnei	zero,zero,4757
   49e88:	0004a558 	cmpnei	zero,zero,4757
   49e8c:	0004a558 	cmpnei	zero,zero,4757
   49e90:	0004a558 	cmpnei	zero,zero,4757
   49e94:	0004a558 	cmpnei	zero,zero,4757
   49e98:	0004a558 	cmpnei	zero,zero,4757
   49e9c:	0004a558 	cmpnei	zero,zero,4757
   49ea0:	0004a7ec 	andhi	zero,zero,4767
   49ea4:	0004a7ec 	andhi	zero,zero,4767
   49ea8:	0004a7ec 	andhi	zero,zero,4767
   49eac:	0004a7ec 	andhi	zero,zero,4767
   49eb0:	0004a7ec 	andhi	zero,zero,4767
   49eb4:	0004a7ec 	andhi	zero,zero,4767
   49eb8:	0004a7ec 	andhi	zero,zero,4767
   49ebc:	0004a7ec 	andhi	zero,zero,4767
   49ec0:	0004a7ec 	andhi	zero,zero,4767
   49ec4:	0004a7ec 	andhi	zero,zero,4767
   49ec8:	0004a584 	movi	zero,4758
   49ecc:	0004a7ec 	andhi	zero,zero,4767
   49ed0:	0004a7ec 	andhi	zero,zero,4767
   49ed4:	0004a7ec 	andhi	zero,zero,4767
   49ed8:	0004a7ec 	andhi	zero,zero,4767
   49edc:	0004a7ec 	andhi	zero,zero,4767
   49ee0:	0004a7ec 	andhi	zero,zero,4767
   49ee4:	0004a7ec 	andhi	zero,zero,4767
   49ee8:	0004a7ec 	andhi	zero,zero,4767
   49eec:	0004a7ec 	andhi	zero,zero,4767
   49ef0:	0004a7ec 	andhi	zero,zero,4767
   49ef4:	0004a5bc 	xorhi	zero,zero,4758
   49ef8:	0004a7ec 	andhi	zero,zero,4767
   49efc:	0004a7ec 	andhi	zero,zero,4767
   49f00:	0004a7ec 	andhi	zero,zero,4767
   49f04:	0004a7ec 	andhi	zero,zero,4767
   49f08:	0004a7ec 	andhi	zero,zero,4767
   49f0c:	0004a614 	movui	zero,4760
   49f10:	0004a7ec 	andhi	zero,zero,4767
   49f14:	0004a7ec 	andhi	zero,zero,4767
   49f18:	0004a684 	movi	zero,4762
   49f1c:	0004a7ec 	andhi	zero,zero,4767
   49f20:	0004a7ec 	andhi	zero,zero,4767
   49f24:	0004a7ec 	andhi	zero,zero,4767
   49f28:	0004a7ec 	andhi	zero,zero,4767
   49f2c:	0004a7ec 	andhi	zero,zero,4767
   49f30:	0004a7ec 	andhi	zero,zero,4767
   49f34:	0004a7ec 	andhi	zero,zero,4767
   49f38:	0004a7ec 	andhi	zero,zero,4767
   49f3c:	0004a7ec 	andhi	zero,zero,4767
   49f40:	0004a7ec 	andhi	zero,zero,4767
   49f44:	0004a430 	cmpltui	zero,zero,4752
   49f48:	0004a45c 	xori	zero,zero,4753
   49f4c:	0004a7ec 	andhi	zero,zero,4767
   49f50:	0004a7ec 	andhi	zero,zero,4767
   49f54:	0004a7ec 	andhi	zero,zero,4767
   49f58:	0004a794 	movui	zero,4766
   49f5c:	0004a45c 	xori	zero,zero,4753
   49f60:	0004a7ec 	andhi	zero,zero,4767
   49f64:	0004a7ec 	andhi	zero,zero,4767
   49f68:	0004a2f0 	cmpltui	zero,zero,4747
   49f6c:	0004a7ec 	andhi	zero,zero,4767
   49f70:	0004a300 	call	4a30 <__alt_mem_onchip_memory2_0-0x3b5d0>
   49f74:	0004a33c 	xorhi	zero,zero,4748
   49f78:	0004a038 	rdprs	zero,zero,4736
   49f7c:	0004a2e4 	muli	zero,zero,4747
   49f80:	0004a7ec 	andhi	zero,zero,4767
   49f84:	0004a6c0 	call	4a6c <__alt_mem_onchip_memory2_0-0x3b594>
   49f88:	0004a7ec 	andhi	zero,zero,4767
   49f8c:	0004a718 	cmpnei	zero,zero,4764
   49f90:	0004a7ec 	andhi	zero,zero,4767
   49f94:	0004a7ec 	andhi	zero,zero,4767
   49f98:	0004a3dc 	xori	zero,zero,4751
   49f9c:	42000204 	addi	r8,r8,8
   49fa0:	da802317 	ldw	r10,140(sp)
   49fa4:	5455883a 	add	r10,r10,r17
   49fa8:	da802315 	stw	r10,140(sp)
   49fac:	003f8b06 	br	49ddc <__alt_data_end+0xfffc9ddc>
   49fb0:	d9002017 	ldw	r4,128(sp)
   49fb4:	a00b883a 	mov	r5,r20
   49fb8:	00454380 	call	45438 <__swsetup_r>
   49fbc:	1003b11e 	bne	r2,zero,4ae84 <___vfiprintf_internal_r+0x11ec>
   49fc0:	a080030b 	ldhu	r2,12(r20)
   49fc4:	00c00284 	movi	r3,10
   49fc8:	1080068c 	andi	r2,r2,26
   49fcc:	10ff541e 	bne	r2,r3,49d20 <__alt_data_end+0xfffc9d20>
   49fd0:	a080038f 	ldh	r2,14(r20)
   49fd4:	103f5216 	blt	r2,zero,49d20 <__alt_data_end+0xfffc9d20>
   49fd8:	d9c02217 	ldw	r7,136(sp)
   49fdc:	d9002017 	ldw	r4,128(sp)
   49fe0:	e00d883a 	mov	r6,fp
   49fe4:	a00b883a 	mov	r5,r20
   49fe8:	004b1100 	call	4b110 <__sbprintf>
   49fec:	dfc03617 	ldw	ra,216(sp)
   49ff0:	df003517 	ldw	fp,212(sp)
   49ff4:	ddc03417 	ldw	r23,208(sp)
   49ff8:	dd803317 	ldw	r22,204(sp)
   49ffc:	dd403217 	ldw	r21,200(sp)
   4a000:	dd003117 	ldw	r20,196(sp)
   4a004:	dcc03017 	ldw	r19,192(sp)
   4a008:	dc802f17 	ldw	r18,188(sp)
   4a00c:	dc402e17 	ldw	r17,184(sp)
   4a010:	dc002d17 	ldw	r16,180(sp)
   4a014:	dec03704 	addi	sp,sp,220
   4a018:	f800283a 	ret
   4a01c:	004740c0 	call	4740c <__sinit>
   4a020:	003f2f06 	br	49ce0 <__alt_data_end+0xfffc9ce0>
   4a024:	0463c83a 	sub	r17,zero,r17
   4a028:	d8802215 	stw	r2,136(sp)
   4a02c:	a5000114 	ori	r20,r20,4
   4a030:	80c00007 	ldb	r3,0(r16)
   4a034:	003f7706 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a038:	00800c04 	movi	r2,48
   4a03c:	da802217 	ldw	r10,136(sp)
   4a040:	d8801d05 	stb	r2,116(sp)
   4a044:	00801e04 	movi	r2,120
   4a048:	d8801d45 	stb	r2,117(sp)
   4a04c:	d8001d85 	stb	zero,118(sp)
   4a050:	50c00104 	addi	r3,r10,4
   4a054:	54800017 	ldw	r18,0(r10)
   4a058:	0027883a 	mov	r19,zero
   4a05c:	a0800094 	ori	r2,r20,2
   4a060:	48030b16 	blt	r9,zero,4ac90 <___vfiprintf_internal_r+0xff8>
   4a064:	00bfdfc4 	movi	r2,-129
   4a068:	a096703a 	and	r11,r20,r2
   4a06c:	d8c02215 	stw	r3,136(sp)
   4a070:	5d000094 	ori	r20,r11,2
   4a074:	90032b1e 	bne	r18,zero,4ad24 <___vfiprintf_internal_r+0x108c>
   4a078:	00800174 	movhi	r2,5
   4a07c:	10844404 	addi	r2,r2,4368
   4a080:	d8802615 	stw	r2,152(sp)
   4a084:	0039883a 	mov	fp,zero
   4a088:	48017b1e 	bne	r9,zero,4a678 <___vfiprintf_internal_r+0x9e0>
   4a08c:	0013883a 	mov	r9,zero
   4a090:	0027883a 	mov	r19,zero
   4a094:	dd401a04 	addi	r21,sp,104
   4a098:	4825883a 	mov	r18,r9
   4a09c:	4cc0010e 	bge	r9,r19,4a0a4 <___vfiprintf_internal_r+0x40c>
   4a0a0:	9825883a 	mov	r18,r19
   4a0a4:	e7003fcc 	andi	fp,fp,255
   4a0a8:	e700201c 	xori	fp,fp,128
   4a0ac:	e73fe004 	addi	fp,fp,-128
   4a0b0:	e0000126 	beq	fp,zero,4a0b8 <___vfiprintf_internal_r+0x420>
   4a0b4:	94800044 	addi	r18,r18,1
   4a0b8:	a380008c 	andi	r14,r20,2
   4a0bc:	70000126 	beq	r14,zero,4a0c4 <___vfiprintf_internal_r+0x42c>
   4a0c0:	94800084 	addi	r18,r18,2
   4a0c4:	a700210c 	andi	fp,r20,132
   4a0c8:	e001df1e 	bne	fp,zero,4a848 <___vfiprintf_internal_r+0xbb0>
   4a0cc:	8c87c83a 	sub	r3,r17,r18
   4a0d0:	00c1dd0e 	bge	zero,r3,4a848 <___vfiprintf_internal_r+0xbb0>
   4a0d4:	01c00404 	movi	r7,16
   4a0d8:	d8801c17 	ldw	r2,112(sp)
   4a0dc:	38c3ad0e 	bge	r7,r3,4af94 <___vfiprintf_internal_r+0x12fc>
   4a0e0:	02800174 	movhi	r10,5
   4a0e4:	5284a904 	addi	r10,r10,4772
   4a0e8:	dc002915 	stw	r16,164(sp)
   4a0ec:	d9801b17 	ldw	r6,108(sp)
   4a0f0:	da802415 	stw	r10,144(sp)
   4a0f4:	03c001c4 	movi	r15,7
   4a0f8:	da402515 	stw	r9,148(sp)
   4a0fc:	db802815 	stw	r14,160(sp)
   4a100:	1821883a 	mov	r16,r3
   4a104:	00000506 	br	4a11c <___vfiprintf_internal_r+0x484>
   4a108:	31400084 	addi	r5,r6,2
   4a10c:	42000204 	addi	r8,r8,8
   4a110:	200d883a 	mov	r6,r4
   4a114:	843ffc04 	addi	r16,r16,-16
   4a118:	3c000d0e 	bge	r7,r16,4a150 <___vfiprintf_internal_r+0x4b8>
   4a11c:	10800404 	addi	r2,r2,16
   4a120:	31000044 	addi	r4,r6,1
   4a124:	45800015 	stw	r22,0(r8)
   4a128:	41c00115 	stw	r7,4(r8)
   4a12c:	d8801c15 	stw	r2,112(sp)
   4a130:	d9001b15 	stw	r4,108(sp)
   4a134:	793ff40e 	bge	r15,r4,4a108 <__alt_data_end+0xfffca108>
   4a138:	1001b51e 	bne	r2,zero,4a810 <___vfiprintf_internal_r+0xb78>
   4a13c:	843ffc04 	addi	r16,r16,-16
   4a140:	000d883a 	mov	r6,zero
   4a144:	01400044 	movi	r5,1
   4a148:	d811883a 	mov	r8,sp
   4a14c:	3c3ff316 	blt	r7,r16,4a11c <__alt_data_end+0xfffca11c>
   4a150:	8007883a 	mov	r3,r16
   4a154:	da402517 	ldw	r9,148(sp)
   4a158:	db802817 	ldw	r14,160(sp)
   4a15c:	dc002917 	ldw	r16,164(sp)
   4a160:	da802417 	ldw	r10,144(sp)
   4a164:	1885883a 	add	r2,r3,r2
   4a168:	40c00115 	stw	r3,4(r8)
   4a16c:	42800015 	stw	r10,0(r8)
   4a170:	d8801c15 	stw	r2,112(sp)
   4a174:	d9401b15 	stw	r5,108(sp)
   4a178:	00c001c4 	movi	r3,7
   4a17c:	19426016 	blt	r3,r5,4ab00 <___vfiprintf_internal_r+0xe68>
   4a180:	d8c01d87 	ldb	r3,118(sp)
   4a184:	42000204 	addi	r8,r8,8
   4a188:	29000044 	addi	r4,r5,1
   4a18c:	1801b31e 	bne	r3,zero,4a85c <___vfiprintf_internal_r+0xbc4>
   4a190:	7001c026 	beq	r14,zero,4a894 <___vfiprintf_internal_r+0xbfc>
   4a194:	d8c01d04 	addi	r3,sp,116
   4a198:	10800084 	addi	r2,r2,2
   4a19c:	40c00015 	stw	r3,0(r8)
   4a1a0:	00c00084 	movi	r3,2
   4a1a4:	40c00115 	stw	r3,4(r8)
   4a1a8:	d8801c15 	stw	r2,112(sp)
   4a1ac:	d9001b15 	stw	r4,108(sp)
   4a1b0:	00c001c4 	movi	r3,7
   4a1b4:	1902650e 	bge	r3,r4,4ab4c <___vfiprintf_internal_r+0xeb4>
   4a1b8:	10029a1e 	bne	r2,zero,4ac24 <___vfiprintf_internal_r+0xf8c>
   4a1bc:	00c02004 	movi	r3,128
   4a1c0:	01000044 	movi	r4,1
   4a1c4:	000b883a 	mov	r5,zero
   4a1c8:	d811883a 	mov	r8,sp
   4a1cc:	e0c1b31e 	bne	fp,r3,4a89c <___vfiprintf_internal_r+0xc04>
   4a1d0:	8cb9c83a 	sub	fp,r17,r18
   4a1d4:	0701b10e 	bge	zero,fp,4a89c <___vfiprintf_internal_r+0xc04>
   4a1d8:	01c00404 	movi	r7,16
   4a1dc:	3f03890e 	bge	r7,fp,4b004 <___vfiprintf_internal_r+0x136c>
   4a1e0:	00c00174 	movhi	r3,5
   4a1e4:	18c4a504 	addi	r3,r3,4756
   4a1e8:	d8c02415 	stw	r3,144(sp)
   4a1ec:	8007883a 	mov	r3,r16
   4a1f0:	034001c4 	movi	r13,7
   4a1f4:	e021883a 	mov	r16,fp
   4a1f8:	da402515 	stw	r9,148(sp)
   4a1fc:	1839883a 	mov	fp,r3
   4a200:	00000506 	br	4a218 <___vfiprintf_internal_r+0x580>
   4a204:	29800084 	addi	r6,r5,2
   4a208:	42000204 	addi	r8,r8,8
   4a20c:	180b883a 	mov	r5,r3
   4a210:	843ffc04 	addi	r16,r16,-16
   4a214:	3c000d0e 	bge	r7,r16,4a24c <___vfiprintf_internal_r+0x5b4>
   4a218:	10800404 	addi	r2,r2,16
   4a21c:	28c00044 	addi	r3,r5,1
   4a220:	45c00015 	stw	r23,0(r8)
   4a224:	41c00115 	stw	r7,4(r8)
   4a228:	d8801c15 	stw	r2,112(sp)
   4a22c:	d8c01b15 	stw	r3,108(sp)
   4a230:	68fff40e 	bge	r13,r3,4a204 <__alt_data_end+0xfffca204>
   4a234:	1002241e 	bne	r2,zero,4aac8 <___vfiprintf_internal_r+0xe30>
   4a238:	843ffc04 	addi	r16,r16,-16
   4a23c:	01800044 	movi	r6,1
   4a240:	000b883a 	mov	r5,zero
   4a244:	d811883a 	mov	r8,sp
   4a248:	3c3ff316 	blt	r7,r16,4a218 <__alt_data_end+0xfffca218>
   4a24c:	da402517 	ldw	r9,148(sp)
   4a250:	e007883a 	mov	r3,fp
   4a254:	8039883a 	mov	fp,r16
   4a258:	1821883a 	mov	r16,r3
   4a25c:	d8c02417 	ldw	r3,144(sp)
   4a260:	1705883a 	add	r2,r2,fp
   4a264:	47000115 	stw	fp,4(r8)
   4a268:	40c00015 	stw	r3,0(r8)
   4a26c:	d8801c15 	stw	r2,112(sp)
   4a270:	d9801b15 	stw	r6,108(sp)
   4a274:	00c001c4 	movi	r3,7
   4a278:	19827616 	blt	r3,r6,4ac54 <___vfiprintf_internal_r+0xfbc>
   4a27c:	4cf9c83a 	sub	fp,r9,r19
   4a280:	42000204 	addi	r8,r8,8
   4a284:	31000044 	addi	r4,r6,1
   4a288:	300b883a 	mov	r5,r6
   4a28c:	07018516 	blt	zero,fp,4a8a4 <___vfiprintf_internal_r+0xc0c>
   4a290:	9885883a 	add	r2,r19,r2
   4a294:	45400015 	stw	r21,0(r8)
   4a298:	44c00115 	stw	r19,4(r8)
   4a29c:	d8801c15 	stw	r2,112(sp)
   4a2a0:	d9001b15 	stw	r4,108(sp)
   4a2a4:	00c001c4 	movi	r3,7
   4a2a8:	1901dd0e 	bge	r3,r4,4aa20 <___vfiprintf_internal_r+0xd88>
   4a2ac:	1002401e 	bne	r2,zero,4abb0 <___vfiprintf_internal_r+0xf18>
   4a2b0:	d8001b15 	stw	zero,108(sp)
   4a2b4:	a2c0010c 	andi	r11,r20,4
   4a2b8:	58000226 	beq	r11,zero,4a2c4 <___vfiprintf_internal_r+0x62c>
   4a2bc:	8ca7c83a 	sub	r19,r17,r18
   4a2c0:	04c2f216 	blt	zero,r19,4ae8c <___vfiprintf_internal_r+0x11f4>
   4a2c4:	8c80010e 	bge	r17,r18,4a2cc <___vfiprintf_internal_r+0x634>
   4a2c8:	9023883a 	mov	r17,r18
   4a2cc:	da802317 	ldw	r10,140(sp)
   4a2d0:	5455883a 	add	r10,r10,r17
   4a2d4:	da802315 	stw	r10,140(sp)
   4a2d8:	d8001b15 	stw	zero,108(sp)
   4a2dc:	d811883a 	mov	r8,sp
   4a2e0:	003ea206 	br	49d6c <__alt_data_end+0xfffc9d6c>
   4a2e4:	a5000814 	ori	r20,r20,32
   4a2e8:	80c00007 	ldb	r3,0(r16)
   4a2ec:	003ec906 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a2f0:	80c00007 	ldb	r3,0(r16)
   4a2f4:	1b030926 	beq	r3,r12,4af1c <___vfiprintf_internal_r+0x1284>
   4a2f8:	a5000414 	ori	r20,r20,16
   4a2fc:	003ec506 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a300:	21003fcc 	andi	r4,r4,255
   4a304:	20035e1e 	bne	r4,zero,4b080 <___vfiprintf_internal_r+0x13e8>
   4a308:	a080080c 	andi	r2,r20,32
   4a30c:	1002a526 	beq	r2,zero,4ada4 <___vfiprintf_internal_r+0x110c>
   4a310:	da802217 	ldw	r10,136(sp)
   4a314:	50800017 	ldw	r2,0(r10)
   4a318:	da802317 	ldw	r10,140(sp)
   4a31c:	5007d7fa 	srai	r3,r10,31
   4a320:	da802217 	ldw	r10,136(sp)
   4a324:	10c00115 	stw	r3,4(r2)
   4a328:	52800104 	addi	r10,r10,4
   4a32c:	da802215 	stw	r10,136(sp)
   4a330:	da802317 	ldw	r10,140(sp)
   4a334:	12800015 	stw	r10,0(r2)
   4a338:	003e8c06 	br	49d6c <__alt_data_end+0xfffc9d6c>
   4a33c:	21003fcc 	andi	r4,r4,255
   4a340:	2003511e 	bne	r4,zero,4b088 <___vfiprintf_internal_r+0x13f0>
   4a344:	a080080c 	andi	r2,r20,32
   4a348:	1000a126 	beq	r2,zero,4a5d0 <___vfiprintf_internal_r+0x938>
   4a34c:	da802217 	ldw	r10,136(sp)
   4a350:	d8001d85 	stb	zero,118(sp)
   4a354:	50800204 	addi	r2,r10,8
   4a358:	54800017 	ldw	r18,0(r10)
   4a35c:	54c00117 	ldw	r19,4(r10)
   4a360:	4802b416 	blt	r9,zero,4ae34 <___vfiprintf_internal_r+0x119c>
   4a364:	013fdfc4 	movi	r4,-129
   4a368:	94c6b03a 	or	r3,r18,r19
   4a36c:	d8802215 	stw	r2,136(sp)
   4a370:	a128703a 	and	r20,r20,r4
   4a374:	1800a226 	beq	r3,zero,4a600 <___vfiprintf_internal_r+0x968>
   4a378:	0039883a 	mov	fp,zero
   4a37c:	dd401a04 	addi	r21,sp,104
   4a380:	9006d0fa 	srli	r3,r18,3
   4a384:	9808977a 	slli	r4,r19,29
   4a388:	9826d0fa 	srli	r19,r19,3
   4a38c:	948001cc 	andi	r18,r18,7
   4a390:	90800c04 	addi	r2,r18,48
   4a394:	ad7fffc4 	addi	r21,r21,-1
   4a398:	20e4b03a 	or	r18,r4,r3
   4a39c:	a8800005 	stb	r2,0(r21)
   4a3a0:	94c6b03a 	or	r3,r18,r19
   4a3a4:	183ff61e 	bne	r3,zero,4a380 <__alt_data_end+0xfffca380>
   4a3a8:	a0c0004c 	andi	r3,r20,1
   4a3ac:	18005926 	beq	r3,zero,4a514 <___vfiprintf_internal_r+0x87c>
   4a3b0:	10803fcc 	andi	r2,r2,255
   4a3b4:	1080201c 	xori	r2,r2,128
   4a3b8:	10bfe004 	addi	r2,r2,-128
   4a3bc:	00c00c04 	movi	r3,48
   4a3c0:	10c05426 	beq	r2,r3,4a514 <___vfiprintf_internal_r+0x87c>
   4a3c4:	da801e17 	ldw	r10,120(sp)
   4a3c8:	a8bfffc4 	addi	r2,r21,-1
   4a3cc:	a8ffffc5 	stb	r3,-1(r21)
   4a3d0:	50a7c83a 	sub	r19,r10,r2
   4a3d4:	102b883a 	mov	r21,r2
   4a3d8:	003f2f06 	br	4a098 <__alt_data_end+0xfffca098>
   4a3dc:	21003fcc 	andi	r4,r4,255
   4a3e0:	2003421e 	bne	r4,zero,4b0ec <___vfiprintf_internal_r+0x1454>
   4a3e4:	00800174 	movhi	r2,5
   4a3e8:	10844404 	addi	r2,r2,4368
   4a3ec:	d8802615 	stw	r2,152(sp)
   4a3f0:	a080080c 	andi	r2,r20,32
   4a3f4:	1000aa26 	beq	r2,zero,4a6a0 <___vfiprintf_internal_r+0xa08>
   4a3f8:	da802217 	ldw	r10,136(sp)
   4a3fc:	54800017 	ldw	r18,0(r10)
   4a400:	54c00117 	ldw	r19,4(r10)
   4a404:	52800204 	addi	r10,r10,8
   4a408:	da802215 	stw	r10,136(sp)
   4a40c:	a080004c 	andi	r2,r20,1
   4a410:	1001d226 	beq	r2,zero,4ab5c <___vfiprintf_internal_r+0xec4>
   4a414:	94c4b03a 	or	r2,r18,r19
   4a418:	1002351e 	bne	r2,zero,4acf0 <___vfiprintf_internal_r+0x1058>
   4a41c:	d8001d85 	stb	zero,118(sp)
   4a420:	48022216 	blt	r9,zero,4acac <___vfiprintf_internal_r+0x1014>
   4a424:	00bfdfc4 	movi	r2,-129
   4a428:	a0a8703a 	and	r20,r20,r2
   4a42c:	003f1506 	br	4a084 <__alt_data_end+0xfffca084>
   4a430:	da802217 	ldw	r10,136(sp)
   4a434:	04800044 	movi	r18,1
   4a438:	d8001d85 	stb	zero,118(sp)
   4a43c:	50800017 	ldw	r2,0(r10)
   4a440:	52800104 	addi	r10,r10,4
   4a444:	da802215 	stw	r10,136(sp)
   4a448:	d8801005 	stb	r2,64(sp)
   4a44c:	9027883a 	mov	r19,r18
   4a450:	dd401004 	addi	r21,sp,64
   4a454:	0013883a 	mov	r9,zero
   4a458:	003f1706 	br	4a0b8 <__alt_data_end+0xfffca0b8>
   4a45c:	21003fcc 	andi	r4,r4,255
   4a460:	2003201e 	bne	r4,zero,4b0e4 <___vfiprintf_internal_r+0x144c>
   4a464:	a080080c 	andi	r2,r20,32
   4a468:	10004b26 	beq	r2,zero,4a598 <___vfiprintf_internal_r+0x900>
   4a46c:	da802217 	ldw	r10,136(sp)
   4a470:	50800117 	ldw	r2,4(r10)
   4a474:	54800017 	ldw	r18,0(r10)
   4a478:	52800204 	addi	r10,r10,8
   4a47c:	da802215 	stw	r10,136(sp)
   4a480:	1027883a 	mov	r19,r2
   4a484:	10022c16 	blt	r2,zero,4ad38 <___vfiprintf_internal_r+0x10a0>
   4a488:	df001d83 	ldbu	fp,118(sp)
   4a48c:	48007216 	blt	r9,zero,4a658 <___vfiprintf_internal_r+0x9c0>
   4a490:	00ffdfc4 	movi	r3,-129
   4a494:	94c4b03a 	or	r2,r18,r19
   4a498:	a0e8703a 	and	r20,r20,r3
   4a49c:	1000cc26 	beq	r2,zero,4a7d0 <___vfiprintf_internal_r+0xb38>
   4a4a0:	98021026 	beq	r19,zero,4ace4 <___vfiprintf_internal_r+0x104c>
   4a4a4:	dc402415 	stw	r17,144(sp)
   4a4a8:	dc002515 	stw	r16,148(sp)
   4a4ac:	9823883a 	mov	r17,r19
   4a4b0:	9021883a 	mov	r16,r18
   4a4b4:	dd401a04 	addi	r21,sp,104
   4a4b8:	4825883a 	mov	r18,r9
   4a4bc:	4027883a 	mov	r19,r8
   4a4c0:	8009883a 	mov	r4,r16
   4a4c4:	880b883a 	mov	r5,r17
   4a4c8:	01800284 	movi	r6,10
   4a4cc:	000f883a 	mov	r7,zero
   4a4d0:	004cbf40 	call	4cbf4 <__umoddi3>
   4a4d4:	10800c04 	addi	r2,r2,48
   4a4d8:	ad7fffc4 	addi	r21,r21,-1
   4a4dc:	8009883a 	mov	r4,r16
   4a4e0:	880b883a 	mov	r5,r17
   4a4e4:	a8800005 	stb	r2,0(r21)
   4a4e8:	01800284 	movi	r6,10
   4a4ec:	000f883a 	mov	r7,zero
   4a4f0:	004c67c0 	call	4c67c <__udivdi3>
   4a4f4:	1021883a 	mov	r16,r2
   4a4f8:	10c4b03a 	or	r2,r2,r3
   4a4fc:	1823883a 	mov	r17,r3
   4a500:	103fef1e 	bne	r2,zero,4a4c0 <__alt_data_end+0xfffca4c0>
   4a504:	dc402417 	ldw	r17,144(sp)
   4a508:	dc002517 	ldw	r16,148(sp)
   4a50c:	9013883a 	mov	r9,r18
   4a510:	9811883a 	mov	r8,r19
   4a514:	da801e17 	ldw	r10,120(sp)
   4a518:	5567c83a 	sub	r19,r10,r21
   4a51c:	003ede06 	br	4a098 <__alt_data_end+0xfffca098>
   4a520:	38803fcc 	andi	r2,r7,255
   4a524:	1080201c 	xori	r2,r2,128
   4a528:	10bfe004 	addi	r2,r2,-128
   4a52c:	1002371e 	bne	r2,zero,4ae0c <___vfiprintf_internal_r+0x1174>
   4a530:	01000044 	movi	r4,1
   4a534:	01c00804 	movi	r7,32
   4a538:	80c00007 	ldb	r3,0(r16)
   4a53c:	003e3506 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a540:	a5000054 	ori	r20,r20,1
   4a544:	80c00007 	ldb	r3,0(r16)
   4a548:	003e3206 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a54c:	a5002014 	ori	r20,r20,128
   4a550:	80c00007 	ldb	r3,0(r16)
   4a554:	003e2f06 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a558:	8015883a 	mov	r10,r16
   4a55c:	0023883a 	mov	r17,zero
   4a560:	18bff404 	addi	r2,r3,-48
   4a564:	50c00007 	ldb	r3,0(r10)
   4a568:	8c4002a4 	muli	r17,r17,10
   4a56c:	84000044 	addi	r16,r16,1
   4a570:	8015883a 	mov	r10,r16
   4a574:	1463883a 	add	r17,r2,r17
   4a578:	18bff404 	addi	r2,r3,-48
   4a57c:	30bff92e 	bgeu	r6,r2,4a564 <__alt_data_end+0xfffca564>
   4a580:	003e2506 	br	49e18 <__alt_data_end+0xfffc9e18>
   4a584:	21003fcc 	andi	r4,r4,255
   4a588:	2002d41e 	bne	r4,zero,4b0dc <___vfiprintf_internal_r+0x1444>
   4a58c:	a5000414 	ori	r20,r20,16
   4a590:	a080080c 	andi	r2,r20,32
   4a594:	103fb51e 	bne	r2,zero,4a46c <__alt_data_end+0xfffca46c>
   4a598:	a080040c 	andi	r2,r20,16
   4a59c:	1001f826 	beq	r2,zero,4ad80 <___vfiprintf_internal_r+0x10e8>
   4a5a0:	da802217 	ldw	r10,136(sp)
   4a5a4:	54800017 	ldw	r18,0(r10)
   4a5a8:	52800104 	addi	r10,r10,4
   4a5ac:	da802215 	stw	r10,136(sp)
   4a5b0:	9027d7fa 	srai	r19,r18,31
   4a5b4:	9805883a 	mov	r2,r19
   4a5b8:	003fb206 	br	4a484 <__alt_data_end+0xfffca484>
   4a5bc:	21003fcc 	andi	r4,r4,255
   4a5c0:	2002c41e 	bne	r4,zero,4b0d4 <___vfiprintf_internal_r+0x143c>
   4a5c4:	a5000414 	ori	r20,r20,16
   4a5c8:	a080080c 	andi	r2,r20,32
   4a5cc:	103f5f1e 	bne	r2,zero,4a34c <__alt_data_end+0xfffca34c>
   4a5d0:	a080040c 	andi	r2,r20,16
   4a5d4:	10020f26 	beq	r2,zero,4ae14 <___vfiprintf_internal_r+0x117c>
   4a5d8:	da802217 	ldw	r10,136(sp)
   4a5dc:	d8001d85 	stb	zero,118(sp)
   4a5e0:	0027883a 	mov	r19,zero
   4a5e4:	50800104 	addi	r2,r10,4
   4a5e8:	54800017 	ldw	r18,0(r10)
   4a5ec:	48021116 	blt	r9,zero,4ae34 <___vfiprintf_internal_r+0x119c>
   4a5f0:	00ffdfc4 	movi	r3,-129
   4a5f4:	d8802215 	stw	r2,136(sp)
   4a5f8:	a0e8703a 	and	r20,r20,r3
   4a5fc:	903f5e1e 	bne	r18,zero,4a378 <__alt_data_end+0xfffca378>
   4a600:	0039883a 	mov	fp,zero
   4a604:	4802a626 	beq	r9,zero,4b0a0 <___vfiprintf_internal_r+0x1408>
   4a608:	0025883a 	mov	r18,zero
   4a60c:	0027883a 	mov	r19,zero
   4a610:	003f5a06 	br	4a37c <__alt_data_end+0xfffca37c>
   4a614:	21003fcc 	andi	r4,r4,255
   4a618:	20029f1e 	bne	r4,zero,4b098 <___vfiprintf_internal_r+0x1400>
   4a61c:	a5000414 	ori	r20,r20,16
   4a620:	a080080c 	andi	r2,r20,32
   4a624:	10005e1e 	bne	r2,zero,4a7a0 <___vfiprintf_internal_r+0xb08>
   4a628:	a080040c 	andi	r2,r20,16
   4a62c:	1001a21e 	bne	r2,zero,4acb8 <___vfiprintf_internal_r+0x1020>
   4a630:	a080100c 	andi	r2,r20,64
   4a634:	d8001d85 	stb	zero,118(sp)
   4a638:	da802217 	ldw	r10,136(sp)
   4a63c:	1002231e 	bne	r2,zero,4aecc <___vfiprintf_internal_r+0x1234>
   4a640:	50800104 	addi	r2,r10,4
   4a644:	54800017 	ldw	r18,0(r10)
   4a648:	0027883a 	mov	r19,zero
   4a64c:	4801a00e 	bge	r9,zero,4acd0 <___vfiprintf_internal_r+0x1038>
   4a650:	d8802215 	stw	r2,136(sp)
   4a654:	0039883a 	mov	fp,zero
   4a658:	94c4b03a 	or	r2,r18,r19
   4a65c:	103f901e 	bne	r2,zero,4a4a0 <__alt_data_end+0xfffca4a0>
   4a660:	00800044 	movi	r2,1
   4a664:	10803fcc 	andi	r2,r2,255
   4a668:	00c00044 	movi	r3,1
   4a66c:	10c05926 	beq	r2,r3,4a7d4 <___vfiprintf_internal_r+0xb3c>
   4a670:	00c00084 	movi	r3,2
   4a674:	10ffe41e 	bne	r2,r3,4a608 <__alt_data_end+0xfffca608>
   4a678:	0025883a 	mov	r18,zero
   4a67c:	0027883a 	mov	r19,zero
   4a680:	00013d06 	br	4ab78 <___vfiprintf_internal_r+0xee0>
   4a684:	21003fcc 	andi	r4,r4,255
   4a688:	2002811e 	bne	r4,zero,4b090 <___vfiprintf_internal_r+0x13f8>
   4a68c:	00800174 	movhi	r2,5
   4a690:	10843f04 	addi	r2,r2,4348
   4a694:	d8802615 	stw	r2,152(sp)
   4a698:	a080080c 	andi	r2,r20,32
   4a69c:	103f561e 	bne	r2,zero,4a3f8 <__alt_data_end+0xfffca3f8>
   4a6a0:	a080040c 	andi	r2,r20,16
   4a6a4:	1001d126 	beq	r2,zero,4adec <___vfiprintf_internal_r+0x1154>
   4a6a8:	da802217 	ldw	r10,136(sp)
   4a6ac:	0027883a 	mov	r19,zero
   4a6b0:	54800017 	ldw	r18,0(r10)
   4a6b4:	52800104 	addi	r10,r10,4
   4a6b8:	da802215 	stw	r10,136(sp)
   4a6bc:	003f5306 	br	4a40c <__alt_data_end+0xfffca40c>
   4a6c0:	da802217 	ldw	r10,136(sp)
   4a6c4:	d8001d85 	stb	zero,118(sp)
   4a6c8:	55400017 	ldw	r21,0(r10)
   4a6cc:	50c00104 	addi	r3,r10,4
   4a6d0:	a8024226 	beq	r21,zero,4afdc <___vfiprintf_internal_r+0x1344>
   4a6d4:	48021816 	blt	r9,zero,4af38 <___vfiprintf_internal_r+0x12a0>
   4a6d8:	480d883a 	mov	r6,r9
   4a6dc:	000b883a 	mov	r5,zero
   4a6e0:	a809883a 	mov	r4,r21
   4a6e4:	d8c02a15 	stw	r3,168(sp)
   4a6e8:	da002b15 	stw	r8,172(sp)
   4a6ec:	da402c15 	stw	r9,176(sp)
   4a6f0:	00484bc0 	call	484bc <memchr>
   4a6f4:	d8c02a17 	ldw	r3,168(sp)
   4a6f8:	da002b17 	ldw	r8,172(sp)
   4a6fc:	da402c17 	ldw	r9,176(sp)
   4a700:	10024826 	beq	r2,zero,4b024 <___vfiprintf_internal_r+0x138c>
   4a704:	1567c83a 	sub	r19,r2,r21
   4a708:	df001d83 	ldbu	fp,118(sp)
   4a70c:	d8c02215 	stw	r3,136(sp)
   4a710:	0013883a 	mov	r9,zero
   4a714:	003e6006 	br	4a098 <__alt_data_end+0xfffca098>
   4a718:	21003fcc 	andi	r4,r4,255
   4a71c:	203fc026 	beq	r4,zero,4a620 <__alt_data_end+0xfffca620>
   4a720:	d9c01d85 	stb	r7,118(sp)
   4a724:	003fbe06 	br	4a620 <__alt_data_end+0xfffca620>
   4a728:	da802217 	ldw	r10,136(sp)
   4a72c:	54400017 	ldw	r17,0(r10)
   4a730:	50800104 	addi	r2,r10,4
   4a734:	883e3b16 	blt	r17,zero,4a024 <__alt_data_end+0xfffca024>
   4a738:	d8802215 	stw	r2,136(sp)
   4a73c:	80c00007 	ldb	r3,0(r16)
   4a740:	003db406 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a744:	01000044 	movi	r4,1
   4a748:	01c00ac4 	movi	r7,43
   4a74c:	80c00007 	ldb	r3,0(r16)
   4a750:	003db006 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a754:	80c00007 	ldb	r3,0(r16)
   4a758:	82800044 	addi	r10,r16,1
   4a75c:	1b423c26 	beq	r3,r13,4b050 <___vfiprintf_internal_r+0x13b8>
   4a760:	18bff404 	addi	r2,r3,-48
   4a764:	0013883a 	mov	r9,zero
   4a768:	30822b36 	bltu	r6,r2,4b018 <___vfiprintf_internal_r+0x1380>
   4a76c:	50c00007 	ldb	r3,0(r10)
   4a770:	4a4002a4 	muli	r9,r9,10
   4a774:	54000044 	addi	r16,r10,1
   4a778:	8015883a 	mov	r10,r16
   4a77c:	4893883a 	add	r9,r9,r2
   4a780:	18bff404 	addi	r2,r3,-48
   4a784:	30bff92e 	bgeu	r6,r2,4a76c <__alt_data_end+0xfffca76c>
   4a788:	483da30e 	bge	r9,zero,49e18 <__alt_data_end+0xfffc9e18>
   4a78c:	027fffc4 	movi	r9,-1
   4a790:	003da106 	br	49e18 <__alt_data_end+0xfffc9e18>
   4a794:	a5001014 	ori	r20,r20,64
   4a798:	80c00007 	ldb	r3,0(r16)
   4a79c:	003d9d06 	br	49e14 <__alt_data_end+0xfffc9e14>
   4a7a0:	da802217 	ldw	r10,136(sp)
   4a7a4:	d8001d85 	stb	zero,118(sp)
   4a7a8:	50c00204 	addi	r3,r10,8
   4a7ac:	54800017 	ldw	r18,0(r10)
   4a7b0:	54c00117 	ldw	r19,4(r10)
   4a7b4:	4801ca16 	blt	r9,zero,4aee0 <___vfiprintf_internal_r+0x1248>
   4a7b8:	013fdfc4 	movi	r4,-129
   4a7bc:	94c4b03a 	or	r2,r18,r19
   4a7c0:	d8c02215 	stw	r3,136(sp)
   4a7c4:	a128703a 	and	r20,r20,r4
   4a7c8:	0039883a 	mov	fp,zero
   4a7cc:	103f341e 	bne	r2,zero,4a4a0 <__alt_data_end+0xfffca4a0>
   4a7d0:	483e2e26 	beq	r9,zero,4a08c <__alt_data_end+0xfffca08c>
   4a7d4:	0025883a 	mov	r18,zero
   4a7d8:	94800c04 	addi	r18,r18,48
   4a7dc:	dc8019c5 	stb	r18,103(sp)
   4a7e0:	dcc02717 	ldw	r19,156(sp)
   4a7e4:	dd4019c4 	addi	r21,sp,103
   4a7e8:	003e2b06 	br	4a098 <__alt_data_end+0xfffca098>
   4a7ec:	21003fcc 	andi	r4,r4,255
   4a7f0:	2002361e 	bne	r4,zero,4b0cc <___vfiprintf_internal_r+0x1434>
   4a7f4:	1801c126 	beq	r3,zero,4aefc <___vfiprintf_internal_r+0x1264>
   4a7f8:	04800044 	movi	r18,1
   4a7fc:	d8c01005 	stb	r3,64(sp)
   4a800:	d8001d85 	stb	zero,118(sp)
   4a804:	9027883a 	mov	r19,r18
   4a808:	dd401004 	addi	r21,sp,64
   4a80c:	003f1106 	br	4a454 <__alt_data_end+0xfffca454>
   4a810:	d9402117 	ldw	r5,132(sp)
   4a814:	d9002017 	ldw	r4,128(sp)
   4a818:	d9801a04 	addi	r6,sp,104
   4a81c:	d9c02b15 	stw	r7,172(sp)
   4a820:	dbc02a15 	stw	r15,168(sp)
   4a824:	0049b840 	call	49b84 <__sprint_r.part.0>
   4a828:	d9c02b17 	ldw	r7,172(sp)
   4a82c:	dbc02a17 	ldw	r15,168(sp)
   4a830:	10006d1e 	bne	r2,zero,4a9e8 <___vfiprintf_internal_r+0xd50>
   4a834:	d9801b17 	ldw	r6,108(sp)
   4a838:	d8801c17 	ldw	r2,112(sp)
   4a83c:	d811883a 	mov	r8,sp
   4a840:	31400044 	addi	r5,r6,1
   4a844:	003e3306 	br	4a114 <__alt_data_end+0xfffca114>
   4a848:	d9401b17 	ldw	r5,108(sp)
   4a84c:	d8801c17 	ldw	r2,112(sp)
   4a850:	29000044 	addi	r4,r5,1
   4a854:	d8c01d87 	ldb	r3,118(sp)
   4a858:	183e4d26 	beq	r3,zero,4a190 <__alt_data_end+0xfffca190>
   4a85c:	00c00044 	movi	r3,1
   4a860:	d9401d84 	addi	r5,sp,118
   4a864:	10c5883a 	add	r2,r2,r3
   4a868:	41400015 	stw	r5,0(r8)
   4a86c:	40c00115 	stw	r3,4(r8)
   4a870:	d8801c15 	stw	r2,112(sp)
   4a874:	d9001b15 	stw	r4,108(sp)
   4a878:	014001c4 	movi	r5,7
   4a87c:	2900a90e 	bge	r5,r4,4ab24 <___vfiprintf_internal_r+0xe8c>
   4a880:	1000da1e 	bne	r2,zero,4abec <___vfiprintf_internal_r+0xf54>
   4a884:	7000ab1e 	bne	r14,zero,4ab34 <___vfiprintf_internal_r+0xe9c>
   4a888:	000b883a 	mov	r5,zero
   4a88c:	1809883a 	mov	r4,r3
   4a890:	d811883a 	mov	r8,sp
   4a894:	00c02004 	movi	r3,128
   4a898:	e0fe4d26 	beq	fp,r3,4a1d0 <__alt_data_end+0xfffca1d0>
   4a89c:	4cf9c83a 	sub	fp,r9,r19
   4a8a0:	073e7b0e 	bge	zero,fp,4a290 <__alt_data_end+0xfffca290>
   4a8a4:	01c00404 	movi	r7,16
   4a8a8:	3f01900e 	bge	r7,fp,4aeec <___vfiprintf_internal_r+0x1254>
   4a8ac:	00c00174 	movhi	r3,5
   4a8b0:	18c4a504 	addi	r3,r3,4756
   4a8b4:	d8c02415 	stw	r3,144(sp)
   4a8b8:	034001c4 	movi	r13,7
   4a8bc:	00000506 	br	4a8d4 <___vfiprintf_internal_r+0xc3c>
   4a8c0:	29000084 	addi	r4,r5,2
   4a8c4:	42000204 	addi	r8,r8,8
   4a8c8:	180b883a 	mov	r5,r3
   4a8cc:	e73ffc04 	addi	fp,fp,-16
   4a8d0:	3f000d0e 	bge	r7,fp,4a908 <___vfiprintf_internal_r+0xc70>
   4a8d4:	10800404 	addi	r2,r2,16
   4a8d8:	28c00044 	addi	r3,r5,1
   4a8dc:	45c00015 	stw	r23,0(r8)
   4a8e0:	41c00115 	stw	r7,4(r8)
   4a8e4:	d8801c15 	stw	r2,112(sp)
   4a8e8:	d8c01b15 	stw	r3,108(sp)
   4a8ec:	68fff40e 	bge	r13,r3,4a8c0 <__alt_data_end+0xfffca8c0>
   4a8f0:	1000101e 	bne	r2,zero,4a934 <___vfiprintf_internal_r+0xc9c>
   4a8f4:	e73ffc04 	addi	fp,fp,-16
   4a8f8:	01000044 	movi	r4,1
   4a8fc:	000b883a 	mov	r5,zero
   4a900:	d811883a 	mov	r8,sp
   4a904:	3f3ff316 	blt	r7,fp,4a8d4 <__alt_data_end+0xfffca8d4>
   4a908:	da802417 	ldw	r10,144(sp)
   4a90c:	1705883a 	add	r2,r2,fp
   4a910:	47000115 	stw	fp,4(r8)
   4a914:	42800015 	stw	r10,0(r8)
   4a918:	d8801c15 	stw	r2,112(sp)
   4a91c:	d9001b15 	stw	r4,108(sp)
   4a920:	00c001c4 	movi	r3,7
   4a924:	19003616 	blt	r3,r4,4aa00 <___vfiprintf_internal_r+0xd68>
   4a928:	42000204 	addi	r8,r8,8
   4a92c:	21000044 	addi	r4,r4,1
   4a930:	003e5706 	br	4a290 <__alt_data_end+0xfffca290>
   4a934:	d9402117 	ldw	r5,132(sp)
   4a938:	d9002017 	ldw	r4,128(sp)
   4a93c:	d9801a04 	addi	r6,sp,104
   4a940:	d9c02b15 	stw	r7,172(sp)
   4a944:	db402a15 	stw	r13,168(sp)
   4a948:	0049b840 	call	49b84 <__sprint_r.part.0>
   4a94c:	d9c02b17 	ldw	r7,172(sp)
   4a950:	db402a17 	ldw	r13,168(sp)
   4a954:	1000241e 	bne	r2,zero,4a9e8 <___vfiprintf_internal_r+0xd50>
   4a958:	d9401b17 	ldw	r5,108(sp)
   4a95c:	d8801c17 	ldw	r2,112(sp)
   4a960:	d811883a 	mov	r8,sp
   4a964:	29000044 	addi	r4,r5,1
   4a968:	003fd806 	br	4a8cc <__alt_data_end+0xfffca8cc>
   4a96c:	d9401b17 	ldw	r5,108(sp)
   4a970:	00c00174 	movhi	r3,5
   4a974:	18c4a904 	addi	r3,r3,4772
   4a978:	d8c02415 	stw	r3,144(sp)
   4a97c:	29400044 	addi	r5,r5,1
   4a980:	d8c02417 	ldw	r3,144(sp)
   4a984:	14c5883a 	add	r2,r2,r19
   4a988:	44c00115 	stw	r19,4(r8)
   4a98c:	40c00015 	stw	r3,0(r8)
   4a990:	d8801c15 	stw	r2,112(sp)
   4a994:	d9401b15 	stw	r5,108(sp)
   4a998:	00c001c4 	movi	r3,7
   4a99c:	1940070e 	bge	r3,r5,4a9bc <___vfiprintf_internal_r+0xd24>
   4a9a0:	103e4826 	beq	r2,zero,4a2c4 <__alt_data_end+0xfffca2c4>
   4a9a4:	d9402117 	ldw	r5,132(sp)
   4a9a8:	d9002017 	ldw	r4,128(sp)
   4a9ac:	d9801a04 	addi	r6,sp,104
   4a9b0:	0049b840 	call	49b84 <__sprint_r.part.0>
   4a9b4:	10000c1e 	bne	r2,zero,4a9e8 <___vfiprintf_internal_r+0xd50>
   4a9b8:	d8801c17 	ldw	r2,112(sp)
   4a9bc:	8c80010e 	bge	r17,r18,4a9c4 <___vfiprintf_internal_r+0xd2c>
   4a9c0:	9023883a 	mov	r17,r18
   4a9c4:	da802317 	ldw	r10,140(sp)
   4a9c8:	5455883a 	add	r10,r10,r17
   4a9cc:	da802315 	stw	r10,140(sp)
   4a9d0:	103e4126 	beq	r2,zero,4a2d8 <__alt_data_end+0xfffca2d8>
   4a9d4:	d9402117 	ldw	r5,132(sp)
   4a9d8:	d9002017 	ldw	r4,128(sp)
   4a9dc:	d9801a04 	addi	r6,sp,104
   4a9e0:	0049b840 	call	49b84 <__sprint_r.part.0>
   4a9e4:	103e3c26 	beq	r2,zero,4a2d8 <__alt_data_end+0xfffca2d8>
   4a9e8:	dd002117 	ldw	r20,132(sp)
   4a9ec:	a080030b 	ldhu	r2,12(r20)
   4a9f0:	1080100c 	andi	r2,r2,64
   4a9f4:	1001231e 	bne	r2,zero,4ae84 <___vfiprintf_internal_r+0x11ec>
   4a9f8:	d8802317 	ldw	r2,140(sp)
   4a9fc:	003d7b06 	br	49fec <__alt_data_end+0xfffc9fec>
   4aa00:	1000991e 	bne	r2,zero,4ac68 <___vfiprintf_internal_r+0xfd0>
   4aa04:	00c00044 	movi	r3,1
   4aa08:	9805883a 	mov	r2,r19
   4aa0c:	dd400015 	stw	r21,0(sp)
   4aa10:	dcc00115 	stw	r19,4(sp)
   4aa14:	dcc01c15 	stw	r19,112(sp)
   4aa18:	d8c01b15 	stw	r3,108(sp)
   4aa1c:	d811883a 	mov	r8,sp
   4aa20:	42000204 	addi	r8,r8,8
   4aa24:	a2c0010c 	andi	r11,r20,4
   4aa28:	583fe426 	beq	r11,zero,4a9bc <__alt_data_end+0xfffca9bc>
   4aa2c:	8ca7c83a 	sub	r19,r17,r18
   4aa30:	04ffe20e 	bge	zero,r19,4a9bc <__alt_data_end+0xfffca9bc>
   4aa34:	01c00404 	movi	r7,16
   4aa38:	3cffcc0e 	bge	r7,r19,4a96c <__alt_data_end+0xfffca96c>
   4aa3c:	02800174 	movhi	r10,5
   4aa40:	5284a904 	addi	r10,r10,4772
   4aa44:	d9001b17 	ldw	r4,108(sp)
   4aa48:	da802415 	stw	r10,144(sp)
   4aa4c:	382b883a 	mov	r21,r7
   4aa50:	050001c4 	movi	r20,7
   4aa54:	df002017 	ldw	fp,128(sp)
   4aa58:	00000506 	br	4aa70 <___vfiprintf_internal_r+0xdd8>
   4aa5c:	21400084 	addi	r5,r4,2
   4aa60:	42000204 	addi	r8,r8,8
   4aa64:	1809883a 	mov	r4,r3
   4aa68:	9cfffc04 	addi	r19,r19,-16
   4aa6c:	acffc40e 	bge	r21,r19,4a980 <__alt_data_end+0xfffca980>
   4aa70:	10800404 	addi	r2,r2,16
   4aa74:	20c00044 	addi	r3,r4,1
   4aa78:	45800015 	stw	r22,0(r8)
   4aa7c:	45400115 	stw	r21,4(r8)
   4aa80:	d8801c15 	stw	r2,112(sp)
   4aa84:	d8c01b15 	stw	r3,108(sp)
   4aa88:	a0fff40e 	bge	r20,r3,4aa5c <__alt_data_end+0xfffcaa5c>
   4aa8c:	1000041e 	bne	r2,zero,4aaa0 <___vfiprintf_internal_r+0xe08>
   4aa90:	01400044 	movi	r5,1
   4aa94:	0009883a 	mov	r4,zero
   4aa98:	d811883a 	mov	r8,sp
   4aa9c:	003ff206 	br	4aa68 <__alt_data_end+0xfffcaa68>
   4aaa0:	d9402117 	ldw	r5,132(sp)
   4aaa4:	d9801a04 	addi	r6,sp,104
   4aaa8:	e009883a 	mov	r4,fp
   4aaac:	0049b840 	call	49b84 <__sprint_r.part.0>
   4aab0:	103fcd1e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4aab4:	d9001b17 	ldw	r4,108(sp)
   4aab8:	d8801c17 	ldw	r2,112(sp)
   4aabc:	d811883a 	mov	r8,sp
   4aac0:	21400044 	addi	r5,r4,1
   4aac4:	003fe806 	br	4aa68 <__alt_data_end+0xfffcaa68>
   4aac8:	d9402117 	ldw	r5,132(sp)
   4aacc:	d9002017 	ldw	r4,128(sp)
   4aad0:	d9801a04 	addi	r6,sp,104
   4aad4:	d9c02b15 	stw	r7,172(sp)
   4aad8:	db402a15 	stw	r13,168(sp)
   4aadc:	0049b840 	call	49b84 <__sprint_r.part.0>
   4aae0:	d9c02b17 	ldw	r7,172(sp)
   4aae4:	db402a17 	ldw	r13,168(sp)
   4aae8:	103fbf1e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4aaec:	d9401b17 	ldw	r5,108(sp)
   4aaf0:	d8801c17 	ldw	r2,112(sp)
   4aaf4:	d811883a 	mov	r8,sp
   4aaf8:	29800044 	addi	r6,r5,1
   4aafc:	003dc406 	br	4a210 <__alt_data_end+0xfffca210>
   4ab00:	1000d21e 	bne	r2,zero,4ae4c <___vfiprintf_internal_r+0x11b4>
   4ab04:	d8c01d87 	ldb	r3,118(sp)
   4ab08:	18009526 	beq	r3,zero,4ad60 <___vfiprintf_internal_r+0x10c8>
   4ab0c:	00800044 	movi	r2,1
   4ab10:	d8c01d84 	addi	r3,sp,118
   4ab14:	1009883a 	mov	r4,r2
   4ab18:	d8c00015 	stw	r3,0(sp)
   4ab1c:	d8800115 	stw	r2,4(sp)
   4ab20:	d811883a 	mov	r8,sp
   4ab24:	200b883a 	mov	r5,r4
   4ab28:	42000204 	addi	r8,r8,8
   4ab2c:	21000044 	addi	r4,r4,1
   4ab30:	003d9706 	br	4a190 <__alt_data_end+0xfffca190>
   4ab34:	d9001d04 	addi	r4,sp,116
   4ab38:	00800084 	movi	r2,2
   4ab3c:	d9000015 	stw	r4,0(sp)
   4ab40:	d8800115 	stw	r2,4(sp)
   4ab44:	1809883a 	mov	r4,r3
   4ab48:	d811883a 	mov	r8,sp
   4ab4c:	200b883a 	mov	r5,r4
   4ab50:	42000204 	addi	r8,r8,8
   4ab54:	21000044 	addi	r4,r4,1
   4ab58:	003f4e06 	br	4a894 <__alt_data_end+0xfffca894>
   4ab5c:	d8001d85 	stb	zero,118(sp)
   4ab60:	48005016 	blt	r9,zero,4aca4 <___vfiprintf_internal_r+0x100c>
   4ab64:	00ffdfc4 	movi	r3,-129
   4ab68:	94c4b03a 	or	r2,r18,r19
   4ab6c:	a0e8703a 	and	r20,r20,r3
   4ab70:	103d4426 	beq	r2,zero,4a084 <__alt_data_end+0xfffca084>
   4ab74:	0039883a 	mov	fp,zero
   4ab78:	d9002617 	ldw	r4,152(sp)
   4ab7c:	dd401a04 	addi	r21,sp,104
   4ab80:	908003cc 	andi	r2,r18,15
   4ab84:	9806973a 	slli	r3,r19,28
   4ab88:	2085883a 	add	r2,r4,r2
   4ab8c:	9024d13a 	srli	r18,r18,4
   4ab90:	10800003 	ldbu	r2,0(r2)
   4ab94:	9826d13a 	srli	r19,r19,4
   4ab98:	ad7fffc4 	addi	r21,r21,-1
   4ab9c:	1ca4b03a 	or	r18,r3,r18
   4aba0:	a8800005 	stb	r2,0(r21)
   4aba4:	94c4b03a 	or	r2,r18,r19
   4aba8:	103ff51e 	bne	r2,zero,4ab80 <__alt_data_end+0xfffcab80>
   4abac:	003e5906 	br	4a514 <__alt_data_end+0xfffca514>
   4abb0:	d9402117 	ldw	r5,132(sp)
   4abb4:	d9002017 	ldw	r4,128(sp)
   4abb8:	d9801a04 	addi	r6,sp,104
   4abbc:	0049b840 	call	49b84 <__sprint_r.part.0>
   4abc0:	103f891e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4abc4:	d8801c17 	ldw	r2,112(sp)
   4abc8:	d811883a 	mov	r8,sp
   4abcc:	003f9506 	br	4aa24 <__alt_data_end+0xfffcaa24>
   4abd0:	d9402117 	ldw	r5,132(sp)
   4abd4:	d9002017 	ldw	r4,128(sp)
   4abd8:	d9801a04 	addi	r6,sp,104
   4abdc:	0049b840 	call	49b84 <__sprint_r.part.0>
   4abe0:	103f811e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4abe4:	d811883a 	mov	r8,sp
   4abe8:	003ced06 	br	49fa0 <__alt_data_end+0xfffc9fa0>
   4abec:	d9402117 	ldw	r5,132(sp)
   4abf0:	d9002017 	ldw	r4,128(sp)
   4abf4:	d9801a04 	addi	r6,sp,104
   4abf8:	da402c15 	stw	r9,176(sp)
   4abfc:	db802a15 	stw	r14,168(sp)
   4ac00:	0049b840 	call	49b84 <__sprint_r.part.0>
   4ac04:	da402c17 	ldw	r9,176(sp)
   4ac08:	db802a17 	ldw	r14,168(sp)
   4ac0c:	103f761e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4ac10:	d9401b17 	ldw	r5,108(sp)
   4ac14:	d8801c17 	ldw	r2,112(sp)
   4ac18:	d811883a 	mov	r8,sp
   4ac1c:	29000044 	addi	r4,r5,1
   4ac20:	003d5b06 	br	4a190 <__alt_data_end+0xfffca190>
   4ac24:	d9402117 	ldw	r5,132(sp)
   4ac28:	d9002017 	ldw	r4,128(sp)
   4ac2c:	d9801a04 	addi	r6,sp,104
   4ac30:	da402c15 	stw	r9,176(sp)
   4ac34:	0049b840 	call	49b84 <__sprint_r.part.0>
   4ac38:	da402c17 	ldw	r9,176(sp)
   4ac3c:	103f6a1e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4ac40:	d9401b17 	ldw	r5,108(sp)
   4ac44:	d8801c17 	ldw	r2,112(sp)
   4ac48:	d811883a 	mov	r8,sp
   4ac4c:	29000044 	addi	r4,r5,1
   4ac50:	003f1006 	br	4a894 <__alt_data_end+0xfffca894>
   4ac54:	1000c31e 	bne	r2,zero,4af64 <___vfiprintf_internal_r+0x12cc>
   4ac58:	01000044 	movi	r4,1
   4ac5c:	000b883a 	mov	r5,zero
   4ac60:	d811883a 	mov	r8,sp
   4ac64:	003f0d06 	br	4a89c <__alt_data_end+0xfffca89c>
   4ac68:	d9402117 	ldw	r5,132(sp)
   4ac6c:	d9002017 	ldw	r4,128(sp)
   4ac70:	d9801a04 	addi	r6,sp,104
   4ac74:	0049b840 	call	49b84 <__sprint_r.part.0>
   4ac78:	103f5b1e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4ac7c:	d9001b17 	ldw	r4,108(sp)
   4ac80:	d8801c17 	ldw	r2,112(sp)
   4ac84:	d811883a 	mov	r8,sp
   4ac88:	21000044 	addi	r4,r4,1
   4ac8c:	003d8006 	br	4a290 <__alt_data_end+0xfffca290>
   4ac90:	01000174 	movhi	r4,5
   4ac94:	21044404 	addi	r4,r4,4368
   4ac98:	d9002615 	stw	r4,152(sp)
   4ac9c:	d8c02215 	stw	r3,136(sp)
   4aca0:	1029883a 	mov	r20,r2
   4aca4:	94c4b03a 	or	r2,r18,r19
   4aca8:	103fb21e 	bne	r2,zero,4ab74 <__alt_data_end+0xfffcab74>
   4acac:	0039883a 	mov	fp,zero
   4acb0:	00800084 	movi	r2,2
   4acb4:	003e6b06 	br	4a664 <__alt_data_end+0xfffca664>
   4acb8:	da802217 	ldw	r10,136(sp)
   4acbc:	d8001d85 	stb	zero,118(sp)
   4acc0:	0027883a 	mov	r19,zero
   4acc4:	50800104 	addi	r2,r10,4
   4acc8:	54800017 	ldw	r18,0(r10)
   4accc:	483e6016 	blt	r9,zero,4a650 <__alt_data_end+0xfffca650>
   4acd0:	00ffdfc4 	movi	r3,-129
   4acd4:	d8802215 	stw	r2,136(sp)
   4acd8:	a0e8703a 	and	r20,r20,r3
   4acdc:	0039883a 	mov	fp,zero
   4ace0:	903ebb26 	beq	r18,zero,4a7d0 <__alt_data_end+0xfffca7d0>
   4ace4:	00800244 	movi	r2,9
   4ace8:	14bdee36 	bltu	r2,r18,4a4a4 <__alt_data_end+0xfffca4a4>
   4acec:	003eba06 	br	4a7d8 <__alt_data_end+0xfffca7d8>
   4acf0:	00800c04 	movi	r2,48
   4acf4:	d8c01d45 	stb	r3,117(sp)
   4acf8:	d8801d05 	stb	r2,116(sp)
   4acfc:	d8001d85 	stb	zero,118(sp)
   4ad00:	a0c00094 	ori	r3,r20,2
   4ad04:	4800a916 	blt	r9,zero,4afac <___vfiprintf_internal_r+0x1314>
   4ad08:	00bfdfc4 	movi	r2,-129
   4ad0c:	a096703a 	and	r11,r20,r2
   4ad10:	5d000094 	ori	r20,r11,2
   4ad14:	0039883a 	mov	fp,zero
   4ad18:	003f9706 	br	4ab78 <__alt_data_end+0xfffcab78>
   4ad1c:	8025883a 	mov	r18,r16
   4ad20:	003c2e06 	br	49ddc <__alt_data_end+0xfffc9ddc>
   4ad24:	00800174 	movhi	r2,5
   4ad28:	10844404 	addi	r2,r2,4368
   4ad2c:	0039883a 	mov	fp,zero
   4ad30:	d8802615 	stw	r2,152(sp)
   4ad34:	003f9006 	br	4ab78 <__alt_data_end+0xfffcab78>
   4ad38:	04a5c83a 	sub	r18,zero,r18
   4ad3c:	07000b44 	movi	fp,45
   4ad40:	9004c03a 	cmpne	r2,r18,zero
   4ad44:	04e7c83a 	sub	r19,zero,r19
   4ad48:	df001d85 	stb	fp,118(sp)
   4ad4c:	98a7c83a 	sub	r19,r19,r2
   4ad50:	48009f16 	blt	r9,zero,4afd0 <___vfiprintf_internal_r+0x1338>
   4ad54:	00bfdfc4 	movi	r2,-129
   4ad58:	a0a8703a 	and	r20,r20,r2
   4ad5c:	003dd006 	br	4a4a0 <__alt_data_end+0xfffca4a0>
   4ad60:	70004c26 	beq	r14,zero,4ae94 <___vfiprintf_internal_r+0x11fc>
   4ad64:	00800084 	movi	r2,2
   4ad68:	d8c01d04 	addi	r3,sp,116
   4ad6c:	d8c00015 	stw	r3,0(sp)
   4ad70:	d8800115 	stw	r2,4(sp)
   4ad74:	01000044 	movi	r4,1
   4ad78:	d811883a 	mov	r8,sp
   4ad7c:	003f7306 	br	4ab4c <__alt_data_end+0xfffcab4c>
   4ad80:	a080100c 	andi	r2,r20,64
   4ad84:	da802217 	ldw	r10,136(sp)
   4ad88:	103e0626 	beq	r2,zero,4a5a4 <__alt_data_end+0xfffca5a4>
   4ad8c:	5480000f 	ldh	r18,0(r10)
   4ad90:	52800104 	addi	r10,r10,4
   4ad94:	da802215 	stw	r10,136(sp)
   4ad98:	9027d7fa 	srai	r19,r18,31
   4ad9c:	9805883a 	mov	r2,r19
   4ada0:	003db806 	br	4a484 <__alt_data_end+0xfffca484>
   4ada4:	a080040c 	andi	r2,r20,16
   4ada8:	1000091e 	bne	r2,zero,4add0 <___vfiprintf_internal_r+0x1138>
   4adac:	a2c0100c 	andi	r11,r20,64
   4adb0:	58000726 	beq	r11,zero,4add0 <___vfiprintf_internal_r+0x1138>
   4adb4:	da802217 	ldw	r10,136(sp)
   4adb8:	50800017 	ldw	r2,0(r10)
   4adbc:	52800104 	addi	r10,r10,4
   4adc0:	da802215 	stw	r10,136(sp)
   4adc4:	da802317 	ldw	r10,140(sp)
   4adc8:	1280000d 	sth	r10,0(r2)
   4adcc:	003be706 	br	49d6c <__alt_data_end+0xfffc9d6c>
   4add0:	da802217 	ldw	r10,136(sp)
   4add4:	50800017 	ldw	r2,0(r10)
   4add8:	52800104 	addi	r10,r10,4
   4addc:	da802215 	stw	r10,136(sp)
   4ade0:	da802317 	ldw	r10,140(sp)
   4ade4:	12800015 	stw	r10,0(r2)
   4ade8:	003be006 	br	49d6c <__alt_data_end+0xfffc9d6c>
   4adec:	a080100c 	andi	r2,r20,64
   4adf0:	da802217 	ldw	r10,136(sp)
   4adf4:	10003026 	beq	r2,zero,4aeb8 <___vfiprintf_internal_r+0x1220>
   4adf8:	5480000b 	ldhu	r18,0(r10)
   4adfc:	52800104 	addi	r10,r10,4
   4ae00:	0027883a 	mov	r19,zero
   4ae04:	da802215 	stw	r10,136(sp)
   4ae08:	003d8006 	br	4a40c <__alt_data_end+0xfffca40c>
   4ae0c:	80c00007 	ldb	r3,0(r16)
   4ae10:	003c0006 	br	49e14 <__alt_data_end+0xfffc9e14>
   4ae14:	a080100c 	andi	r2,r20,64
   4ae18:	d8001d85 	stb	zero,118(sp)
   4ae1c:	da802217 	ldw	r10,136(sp)
   4ae20:	1000201e 	bne	r2,zero,4aea4 <___vfiprintf_internal_r+0x120c>
   4ae24:	50800104 	addi	r2,r10,4
   4ae28:	54800017 	ldw	r18,0(r10)
   4ae2c:	0027883a 	mov	r19,zero
   4ae30:	483def0e 	bge	r9,zero,4a5f0 <__alt_data_end+0xfffca5f0>
   4ae34:	94c6b03a 	or	r3,r18,r19
   4ae38:	d8802215 	stw	r2,136(sp)
   4ae3c:	183d4e1e 	bne	r3,zero,4a378 <__alt_data_end+0xfffca378>
   4ae40:	0039883a 	mov	fp,zero
   4ae44:	0005883a 	mov	r2,zero
   4ae48:	003e0606 	br	4a664 <__alt_data_end+0xfffca664>
   4ae4c:	d9402117 	ldw	r5,132(sp)
   4ae50:	d9002017 	ldw	r4,128(sp)
   4ae54:	d9801a04 	addi	r6,sp,104
   4ae58:	da402c15 	stw	r9,176(sp)
   4ae5c:	db802a15 	stw	r14,168(sp)
   4ae60:	0049b840 	call	49b84 <__sprint_r.part.0>
   4ae64:	da402c17 	ldw	r9,176(sp)
   4ae68:	db802a17 	ldw	r14,168(sp)
   4ae6c:	103ede1e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4ae70:	d9401b17 	ldw	r5,108(sp)
   4ae74:	d8801c17 	ldw	r2,112(sp)
   4ae78:	d811883a 	mov	r8,sp
   4ae7c:	29000044 	addi	r4,r5,1
   4ae80:	003e7406 	br	4a854 <__alt_data_end+0xfffca854>
   4ae84:	00bfffc4 	movi	r2,-1
   4ae88:	003c5806 	br	49fec <__alt_data_end+0xfffc9fec>
   4ae8c:	d811883a 	mov	r8,sp
   4ae90:	003ee806 	br	4aa34 <__alt_data_end+0xfffcaa34>
   4ae94:	000b883a 	mov	r5,zero
   4ae98:	01000044 	movi	r4,1
   4ae9c:	d811883a 	mov	r8,sp
   4aea0:	003e7c06 	br	4a894 <__alt_data_end+0xfffca894>
   4aea4:	50800104 	addi	r2,r10,4
   4aea8:	5480000b 	ldhu	r18,0(r10)
   4aeac:	0027883a 	mov	r19,zero
   4aeb0:	483dcf0e 	bge	r9,zero,4a5f0 <__alt_data_end+0xfffca5f0>
   4aeb4:	003fdf06 	br	4ae34 <__alt_data_end+0xfffcae34>
   4aeb8:	54800017 	ldw	r18,0(r10)
   4aebc:	52800104 	addi	r10,r10,4
   4aec0:	0027883a 	mov	r19,zero
   4aec4:	da802215 	stw	r10,136(sp)
   4aec8:	003d5006 	br	4a40c <__alt_data_end+0xfffca40c>
   4aecc:	50800104 	addi	r2,r10,4
   4aed0:	5480000b 	ldhu	r18,0(r10)
   4aed4:	0027883a 	mov	r19,zero
   4aed8:	483f7d0e 	bge	r9,zero,4acd0 <__alt_data_end+0xfffcacd0>
   4aedc:	003ddc06 	br	4a650 <__alt_data_end+0xfffca650>
   4aee0:	d8c02215 	stw	r3,136(sp)
   4aee4:	0039883a 	mov	fp,zero
   4aee8:	003ddb06 	br	4a658 <__alt_data_end+0xfffca658>
   4aeec:	02800174 	movhi	r10,5
   4aef0:	5284a504 	addi	r10,r10,4756
   4aef4:	da802415 	stw	r10,144(sp)
   4aef8:	003e8306 	br	4a908 <__alt_data_end+0xfffca908>
   4aefc:	d8801c17 	ldw	r2,112(sp)
   4af00:	dd002117 	ldw	r20,132(sp)
   4af04:	103eb926 	beq	r2,zero,4a9ec <__alt_data_end+0xfffca9ec>
   4af08:	d9002017 	ldw	r4,128(sp)
   4af0c:	d9801a04 	addi	r6,sp,104
   4af10:	a00b883a 	mov	r5,r20
   4af14:	0049b840 	call	49b84 <__sprint_r.part.0>
   4af18:	003eb406 	br	4a9ec <__alt_data_end+0xfffca9ec>
   4af1c:	80c00043 	ldbu	r3,1(r16)
   4af20:	a5000814 	ori	r20,r20,32
   4af24:	84000044 	addi	r16,r16,1
   4af28:	18c03fcc 	andi	r3,r3,255
   4af2c:	18c0201c 	xori	r3,r3,128
   4af30:	18ffe004 	addi	r3,r3,-128
   4af34:	003bb706 	br	49e14 <__alt_data_end+0xfffc9e14>
   4af38:	a809883a 	mov	r4,r21
   4af3c:	d8c02a15 	stw	r3,168(sp)
   4af40:	da002b15 	stw	r8,172(sp)
   4af44:	0049aec0 	call	49aec <strlen>
   4af48:	d8c02a17 	ldw	r3,168(sp)
   4af4c:	1027883a 	mov	r19,r2
   4af50:	df001d83 	ldbu	fp,118(sp)
   4af54:	d8c02215 	stw	r3,136(sp)
   4af58:	0013883a 	mov	r9,zero
   4af5c:	da002b17 	ldw	r8,172(sp)
   4af60:	003c4d06 	br	4a098 <__alt_data_end+0xfffca098>
   4af64:	d9402117 	ldw	r5,132(sp)
   4af68:	d9002017 	ldw	r4,128(sp)
   4af6c:	d9801a04 	addi	r6,sp,104
   4af70:	da402c15 	stw	r9,176(sp)
   4af74:	0049b840 	call	49b84 <__sprint_r.part.0>
   4af78:	da402c17 	ldw	r9,176(sp)
   4af7c:	103e9a1e 	bne	r2,zero,4a9e8 <__alt_data_end+0xfffca9e8>
   4af80:	d9401b17 	ldw	r5,108(sp)
   4af84:	d8801c17 	ldw	r2,112(sp)
   4af88:	d811883a 	mov	r8,sp
   4af8c:	29000044 	addi	r4,r5,1
   4af90:	003e4206 	br	4a89c <__alt_data_end+0xfffca89c>
   4af94:	d9401b17 	ldw	r5,108(sp)
   4af98:	01000174 	movhi	r4,5
   4af9c:	2104a904 	addi	r4,r4,4772
   4afa0:	d9002415 	stw	r4,144(sp)
   4afa4:	29400044 	addi	r5,r5,1
   4afa8:	003c6d06 	br	4a160 <__alt_data_end+0xfffca160>
   4afac:	0039883a 	mov	fp,zero
   4afb0:	00800084 	movi	r2,2
   4afb4:	10803fcc 	andi	r2,r2,255
   4afb8:	01000044 	movi	r4,1
   4afbc:	11001e26 	beq	r2,r4,4b038 <___vfiprintf_internal_r+0x13a0>
   4afc0:	01000084 	movi	r4,2
   4afc4:	11001e1e 	bne	r2,r4,4b040 <___vfiprintf_internal_r+0x13a8>
   4afc8:	1829883a 	mov	r20,r3
   4afcc:	003eea06 	br	4ab78 <__alt_data_end+0xfffcab78>
   4afd0:	a007883a 	mov	r3,r20
   4afd4:	00800044 	movi	r2,1
   4afd8:	003ff606 	br	4afb4 <__alt_data_end+0xfffcafb4>
   4afdc:	00800184 	movi	r2,6
   4afe0:	1240012e 	bgeu	r2,r9,4afe8 <___vfiprintf_internal_r+0x1350>
   4afe4:	1013883a 	mov	r9,r2
   4afe8:	4827883a 	mov	r19,r9
   4afec:	4825883a 	mov	r18,r9
   4aff0:	48001516 	blt	r9,zero,4b048 <___vfiprintf_internal_r+0x13b0>
   4aff4:	05400174 	movhi	r21,5
   4aff8:	d8c02215 	stw	r3,136(sp)
   4affc:	ad444904 	addi	r21,r21,4388
   4b000:	003d1406 	br	4a454 <__alt_data_end+0xfffca454>
   4b004:	02800174 	movhi	r10,5
   4b008:	5284a504 	addi	r10,r10,4756
   4b00c:	da802415 	stw	r10,144(sp)
   4b010:	200d883a 	mov	r6,r4
   4b014:	003c9106 	br	4a25c <__alt_data_end+0xfffca25c>
   4b018:	5021883a 	mov	r16,r10
   4b01c:	0013883a 	mov	r9,zero
   4b020:	003b7d06 	br	49e18 <__alt_data_end+0xfffc9e18>
   4b024:	4827883a 	mov	r19,r9
   4b028:	df001d83 	ldbu	fp,118(sp)
   4b02c:	d8c02215 	stw	r3,136(sp)
   4b030:	0013883a 	mov	r9,zero
   4b034:	003c1806 	br	4a098 <__alt_data_end+0xfffca098>
   4b038:	1829883a 	mov	r20,r3
   4b03c:	003d1806 	br	4a4a0 <__alt_data_end+0xfffca4a0>
   4b040:	1829883a 	mov	r20,r3
   4b044:	003ccd06 	br	4a37c <__alt_data_end+0xfffca37c>
   4b048:	0025883a 	mov	r18,zero
   4b04c:	003fe906 	br	4aff4 <__alt_data_end+0xfffcaff4>
   4b050:	d8802217 	ldw	r2,136(sp)
   4b054:	80c00043 	ldbu	r3,1(r16)
   4b058:	5021883a 	mov	r16,r10
   4b05c:	12400017 	ldw	r9,0(r2)
   4b060:	10800104 	addi	r2,r2,4
   4b064:	d8802215 	stw	r2,136(sp)
   4b068:	483faf0e 	bge	r9,zero,4af28 <__alt_data_end+0xfffcaf28>
   4b06c:	18c03fcc 	andi	r3,r3,255
   4b070:	18c0201c 	xori	r3,r3,128
   4b074:	027fffc4 	movi	r9,-1
   4b078:	18ffe004 	addi	r3,r3,-128
   4b07c:	003b6506 	br	49e14 <__alt_data_end+0xfffc9e14>
   4b080:	d9c01d85 	stb	r7,118(sp)
   4b084:	003ca006 	br	4a308 <__alt_data_end+0xfffca308>
   4b088:	d9c01d85 	stb	r7,118(sp)
   4b08c:	003cad06 	br	4a344 <__alt_data_end+0xfffca344>
   4b090:	d9c01d85 	stb	r7,118(sp)
   4b094:	003d7d06 	br	4a68c <__alt_data_end+0xfffca68c>
   4b098:	d9c01d85 	stb	r7,118(sp)
   4b09c:	003d5f06 	br	4a61c <__alt_data_end+0xfffca61c>
   4b0a0:	a080004c 	andi	r2,r20,1
   4b0a4:	0039883a 	mov	fp,zero
   4b0a8:	10000526 	beq	r2,zero,4b0c0 <___vfiprintf_internal_r+0x1428>
   4b0ac:	00800c04 	movi	r2,48
   4b0b0:	d88019c5 	stb	r2,103(sp)
   4b0b4:	dcc02717 	ldw	r19,156(sp)
   4b0b8:	dd4019c4 	addi	r21,sp,103
   4b0bc:	003bf606 	br	4a098 <__alt_data_end+0xfffca098>
   4b0c0:	0027883a 	mov	r19,zero
   4b0c4:	dd401a04 	addi	r21,sp,104
   4b0c8:	003bf306 	br	4a098 <__alt_data_end+0xfffca098>
   4b0cc:	d9c01d85 	stb	r7,118(sp)
   4b0d0:	003dc806 	br	4a7f4 <__alt_data_end+0xfffca7f4>
   4b0d4:	d9c01d85 	stb	r7,118(sp)
   4b0d8:	003d3a06 	br	4a5c4 <__alt_data_end+0xfffca5c4>
   4b0dc:	d9c01d85 	stb	r7,118(sp)
   4b0e0:	003d2a06 	br	4a58c <__alt_data_end+0xfffca58c>
   4b0e4:	d9c01d85 	stb	r7,118(sp)
   4b0e8:	003cde06 	br	4a464 <__alt_data_end+0xfffca464>
   4b0ec:	d9c01d85 	stb	r7,118(sp)
   4b0f0:	003cbc06 	br	4a3e4 <__alt_data_end+0xfffca3e4>

0004b0f4 <__vfiprintf_internal>:
   4b0f4:	00800174 	movhi	r2,5
   4b0f8:	108b8e04 	addi	r2,r2,11832
   4b0fc:	300f883a 	mov	r7,r6
   4b100:	280d883a 	mov	r6,r5
   4b104:	200b883a 	mov	r5,r4
   4b108:	11000017 	ldw	r4,0(r2)
   4b10c:	0049c981 	jmpi	49c98 <___vfiprintf_internal_r>

0004b110 <__sbprintf>:
   4b110:	2880030b 	ldhu	r2,12(r5)
   4b114:	2ac01917 	ldw	r11,100(r5)
   4b118:	2a80038b 	ldhu	r10,14(r5)
   4b11c:	2a400717 	ldw	r9,28(r5)
   4b120:	2a000917 	ldw	r8,36(r5)
   4b124:	defee204 	addi	sp,sp,-1144
   4b128:	00c10004 	movi	r3,1024
   4b12c:	dc011a15 	stw	r16,1128(sp)
   4b130:	10bfff4c 	andi	r2,r2,65533
   4b134:	2821883a 	mov	r16,r5
   4b138:	d8cb883a 	add	r5,sp,r3
   4b13c:	dc811c15 	stw	r18,1136(sp)
   4b140:	dc411b15 	stw	r17,1132(sp)
   4b144:	dfc11d15 	stw	ra,1140(sp)
   4b148:	2025883a 	mov	r18,r4
   4b14c:	d881030d 	sth	r2,1036(sp)
   4b150:	dac11915 	stw	r11,1124(sp)
   4b154:	da81038d 	sth	r10,1038(sp)
   4b158:	da410715 	stw	r9,1052(sp)
   4b15c:	da010915 	stw	r8,1060(sp)
   4b160:	dec10015 	stw	sp,1024(sp)
   4b164:	dec10415 	stw	sp,1040(sp)
   4b168:	d8c10215 	stw	r3,1032(sp)
   4b16c:	d8c10515 	stw	r3,1044(sp)
   4b170:	d8010615 	stw	zero,1048(sp)
   4b174:	0049c980 	call	49c98 <___vfiprintf_internal_r>
   4b178:	1023883a 	mov	r17,r2
   4b17c:	10000416 	blt	r2,zero,4b190 <__sbprintf+0x80>
   4b180:	d9410004 	addi	r5,sp,1024
   4b184:	9009883a 	mov	r4,r18
   4b188:	00470300 	call	47030 <_fflush_r>
   4b18c:	10000d1e 	bne	r2,zero,4b1c4 <__sbprintf+0xb4>
   4b190:	d881030b 	ldhu	r2,1036(sp)
   4b194:	1080100c 	andi	r2,r2,64
   4b198:	10000326 	beq	r2,zero,4b1a8 <__sbprintf+0x98>
   4b19c:	8080030b 	ldhu	r2,12(r16)
   4b1a0:	10801014 	ori	r2,r2,64
   4b1a4:	8080030d 	sth	r2,12(r16)
   4b1a8:	8805883a 	mov	r2,r17
   4b1ac:	dfc11d17 	ldw	ra,1140(sp)
   4b1b0:	dc811c17 	ldw	r18,1136(sp)
   4b1b4:	dc411b17 	ldw	r17,1132(sp)
   4b1b8:	dc011a17 	ldw	r16,1128(sp)
   4b1bc:	dec11e04 	addi	sp,sp,1144
   4b1c0:	f800283a 	ret
   4b1c4:	047fffc4 	movi	r17,-1
   4b1c8:	003ff106 	br	4b190 <__alt_data_end+0xfffcb190>

0004b1cc <_write_r>:
   4b1cc:	defffd04 	addi	sp,sp,-12
   4b1d0:	2805883a 	mov	r2,r5
   4b1d4:	dc000015 	stw	r16,0(sp)
   4b1d8:	04000174 	movhi	r16,5
   4b1dc:	dc400115 	stw	r17,4(sp)
   4b1e0:	300b883a 	mov	r5,r6
   4b1e4:	84128a04 	addi	r16,r16,18984
   4b1e8:	2023883a 	mov	r17,r4
   4b1ec:	380d883a 	mov	r6,r7
   4b1f0:	1009883a 	mov	r4,r2
   4b1f4:	dfc00215 	stw	ra,8(sp)
   4b1f8:	80000015 	stw	zero,0(r16)
   4b1fc:	004efb80 	call	4efb8 <write>
   4b200:	00ffffc4 	movi	r3,-1
   4b204:	10c00526 	beq	r2,r3,4b21c <_write_r+0x50>
   4b208:	dfc00217 	ldw	ra,8(sp)
   4b20c:	dc400117 	ldw	r17,4(sp)
   4b210:	dc000017 	ldw	r16,0(sp)
   4b214:	dec00304 	addi	sp,sp,12
   4b218:	f800283a 	ret
   4b21c:	80c00017 	ldw	r3,0(r16)
   4b220:	183ff926 	beq	r3,zero,4b208 <__alt_data_end+0xfffcb208>
   4b224:	88c00015 	stw	r3,0(r17)
   4b228:	003ff706 	br	4b208 <__alt_data_end+0xfffcb208>

0004b22c <_close_r>:
   4b22c:	defffd04 	addi	sp,sp,-12
   4b230:	dc000015 	stw	r16,0(sp)
   4b234:	04000174 	movhi	r16,5
   4b238:	dc400115 	stw	r17,4(sp)
   4b23c:	84128a04 	addi	r16,r16,18984
   4b240:	2023883a 	mov	r17,r4
   4b244:	2809883a 	mov	r4,r5
   4b248:	dfc00215 	stw	ra,8(sp)
   4b24c:	80000015 	stw	zero,0(r16)
   4b250:	004e7a80 	call	4e7a8 <close>
   4b254:	00ffffc4 	movi	r3,-1
   4b258:	10c00526 	beq	r2,r3,4b270 <_close_r+0x44>
   4b25c:	dfc00217 	ldw	ra,8(sp)
   4b260:	dc400117 	ldw	r17,4(sp)
   4b264:	dc000017 	ldw	r16,0(sp)
   4b268:	dec00304 	addi	sp,sp,12
   4b26c:	f800283a 	ret
   4b270:	80c00017 	ldw	r3,0(r16)
   4b274:	183ff926 	beq	r3,zero,4b25c <__alt_data_end+0xfffcb25c>
   4b278:	88c00015 	stw	r3,0(r17)
   4b27c:	003ff706 	br	4b25c <__alt_data_end+0xfffcb25c>

0004b280 <_calloc_r>:
   4b280:	298b383a 	mul	r5,r5,r6
   4b284:	defffe04 	addi	sp,sp,-8
   4b288:	dfc00115 	stw	ra,4(sp)
   4b28c:	dc000015 	stw	r16,0(sp)
   4b290:	0047cb00 	call	47cb0 <_malloc_r>
   4b294:	10002926 	beq	r2,zero,4b33c <_calloc_r+0xbc>
   4b298:	11bfff17 	ldw	r6,-4(r2)
   4b29c:	1021883a 	mov	r16,r2
   4b2a0:	00bfff04 	movi	r2,-4
   4b2a4:	308c703a 	and	r6,r6,r2
   4b2a8:	00c00904 	movi	r3,36
   4b2ac:	308d883a 	add	r6,r6,r2
   4b2b0:	19801636 	bltu	r3,r6,4b30c <_calloc_r+0x8c>
   4b2b4:	008004c4 	movi	r2,19
   4b2b8:	11800b2e 	bgeu	r2,r6,4b2e8 <_calloc_r+0x68>
   4b2bc:	80000015 	stw	zero,0(r16)
   4b2c0:	80000115 	stw	zero,4(r16)
   4b2c4:	008006c4 	movi	r2,27
   4b2c8:	11801a2e 	bgeu	r2,r6,4b334 <_calloc_r+0xb4>
   4b2cc:	80000215 	stw	zero,8(r16)
   4b2d0:	80000315 	stw	zero,12(r16)
   4b2d4:	30c0151e 	bne	r6,r3,4b32c <_calloc_r+0xac>
   4b2d8:	80000415 	stw	zero,16(r16)
   4b2dc:	80800604 	addi	r2,r16,24
   4b2e0:	80000515 	stw	zero,20(r16)
   4b2e4:	00000106 	br	4b2ec <_calloc_r+0x6c>
   4b2e8:	8005883a 	mov	r2,r16
   4b2ec:	10000015 	stw	zero,0(r2)
   4b2f0:	10000115 	stw	zero,4(r2)
   4b2f4:	10000215 	stw	zero,8(r2)
   4b2f8:	8005883a 	mov	r2,r16
   4b2fc:	dfc00117 	ldw	ra,4(sp)
   4b300:	dc000017 	ldw	r16,0(sp)
   4b304:	dec00204 	addi	sp,sp,8
   4b308:	f800283a 	ret
   4b30c:	000b883a 	mov	r5,zero
   4b310:	8009883a 	mov	r4,r16
   4b314:	00486e80 	call	486e8 <memset>
   4b318:	8005883a 	mov	r2,r16
   4b31c:	dfc00117 	ldw	ra,4(sp)
   4b320:	dc000017 	ldw	r16,0(sp)
   4b324:	dec00204 	addi	sp,sp,8
   4b328:	f800283a 	ret
   4b32c:	80800404 	addi	r2,r16,16
   4b330:	003fee06 	br	4b2ec <__alt_data_end+0xfffcb2ec>
   4b334:	80800204 	addi	r2,r16,8
   4b338:	003fec06 	br	4b2ec <__alt_data_end+0xfffcb2ec>
   4b33c:	0005883a 	mov	r2,zero
   4b340:	003fee06 	br	4b2fc <__alt_data_end+0xfffcb2fc>

0004b344 <_fclose_r>:
   4b344:	28003926 	beq	r5,zero,4b42c <_fclose_r+0xe8>
   4b348:	defffc04 	addi	sp,sp,-16
   4b34c:	dc400115 	stw	r17,4(sp)
   4b350:	dc000015 	stw	r16,0(sp)
   4b354:	dfc00315 	stw	ra,12(sp)
   4b358:	dc800215 	stw	r18,8(sp)
   4b35c:	2023883a 	mov	r17,r4
   4b360:	2821883a 	mov	r16,r5
   4b364:	20000226 	beq	r4,zero,4b370 <_fclose_r+0x2c>
   4b368:	20800e17 	ldw	r2,56(r4)
   4b36c:	10002726 	beq	r2,zero,4b40c <_fclose_r+0xc8>
   4b370:	8080030f 	ldh	r2,12(r16)
   4b374:	1000071e 	bne	r2,zero,4b394 <_fclose_r+0x50>
   4b378:	0005883a 	mov	r2,zero
   4b37c:	dfc00317 	ldw	ra,12(sp)
   4b380:	dc800217 	ldw	r18,8(sp)
   4b384:	dc400117 	ldw	r17,4(sp)
   4b388:	dc000017 	ldw	r16,0(sp)
   4b38c:	dec00404 	addi	sp,sp,16
   4b390:	f800283a 	ret
   4b394:	800b883a 	mov	r5,r16
   4b398:	8809883a 	mov	r4,r17
   4b39c:	0046e140 	call	46e14 <__sflush_r>
   4b3a0:	1025883a 	mov	r18,r2
   4b3a4:	80800b17 	ldw	r2,44(r16)
   4b3a8:	10000426 	beq	r2,zero,4b3bc <_fclose_r+0x78>
   4b3ac:	81400717 	ldw	r5,28(r16)
   4b3b0:	8809883a 	mov	r4,r17
   4b3b4:	103ee83a 	callr	r2
   4b3b8:	10001616 	blt	r2,zero,4b414 <_fclose_r+0xd0>
   4b3bc:	8080030b 	ldhu	r2,12(r16)
   4b3c0:	1080200c 	andi	r2,r2,128
   4b3c4:	1000151e 	bne	r2,zero,4b41c <_fclose_r+0xd8>
   4b3c8:	81400c17 	ldw	r5,48(r16)
   4b3cc:	28000526 	beq	r5,zero,4b3e4 <_fclose_r+0xa0>
   4b3d0:	80801004 	addi	r2,r16,64
   4b3d4:	28800226 	beq	r5,r2,4b3e0 <_fclose_r+0x9c>
   4b3d8:	8809883a 	mov	r4,r17
   4b3dc:	00475800 	call	47580 <_free_r>
   4b3e0:	80000c15 	stw	zero,48(r16)
   4b3e4:	81401117 	ldw	r5,68(r16)
   4b3e8:	28000326 	beq	r5,zero,4b3f8 <_fclose_r+0xb4>
   4b3ec:	8809883a 	mov	r4,r17
   4b3f0:	00475800 	call	47580 <_free_r>
   4b3f4:	80001115 	stw	zero,68(r16)
   4b3f8:	004741c0 	call	4741c <__sfp_lock_acquire>
   4b3fc:	8000030d 	sth	zero,12(r16)
   4b400:	00474200 	call	47420 <__sfp_lock_release>
   4b404:	9005883a 	mov	r2,r18
   4b408:	003fdc06 	br	4b37c <__alt_data_end+0xfffcb37c>
   4b40c:	004740c0 	call	4740c <__sinit>
   4b410:	003fd706 	br	4b370 <__alt_data_end+0xfffcb370>
   4b414:	04bfffc4 	movi	r18,-1
   4b418:	003fe806 	br	4b3bc <__alt_data_end+0xfffcb3bc>
   4b41c:	81400417 	ldw	r5,16(r16)
   4b420:	8809883a 	mov	r4,r17
   4b424:	00475800 	call	47580 <_free_r>
   4b428:	003fe706 	br	4b3c8 <__alt_data_end+0xfffcb3c8>
   4b42c:	0005883a 	mov	r2,zero
   4b430:	f800283a 	ret

0004b434 <fclose>:
   4b434:	00800174 	movhi	r2,5
   4b438:	108b8e04 	addi	r2,r2,11832
   4b43c:	200b883a 	mov	r5,r4
   4b440:	11000017 	ldw	r4,0(r2)
   4b444:	004b3441 	jmpi	4b344 <_fclose_r>

0004b448 <__fputwc>:
   4b448:	defff804 	addi	sp,sp,-32
   4b44c:	dcc00415 	stw	r19,16(sp)
   4b450:	dc800315 	stw	r18,12(sp)
   4b454:	dc000115 	stw	r16,4(sp)
   4b458:	dfc00715 	stw	ra,28(sp)
   4b45c:	dd400615 	stw	r21,24(sp)
   4b460:	dd000515 	stw	r20,20(sp)
   4b464:	dc400215 	stw	r17,8(sp)
   4b468:	2027883a 	mov	r19,r4
   4b46c:	2825883a 	mov	r18,r5
   4b470:	3021883a 	mov	r16,r6
   4b474:	0047aa00 	call	47aa0 <__locale_mb_cur_max>
   4b478:	00c00044 	movi	r3,1
   4b47c:	10c03e26 	beq	r2,r3,4b578 <__fputwc+0x130>
   4b480:	81c01704 	addi	r7,r16,92
   4b484:	900d883a 	mov	r6,r18
   4b488:	d80b883a 	mov	r5,sp
   4b48c:	9809883a 	mov	r4,r19
   4b490:	004c4940 	call	4c494 <_wcrtomb_r>
   4b494:	1029883a 	mov	r20,r2
   4b498:	00bfffc4 	movi	r2,-1
   4b49c:	a0802026 	beq	r20,r2,4b520 <__fputwc+0xd8>
   4b4a0:	d9400003 	ldbu	r5,0(sp)
   4b4a4:	a0001c26 	beq	r20,zero,4b518 <__fputwc+0xd0>
   4b4a8:	0023883a 	mov	r17,zero
   4b4ac:	05400284 	movi	r21,10
   4b4b0:	00000906 	br	4b4d8 <__fputwc+0x90>
   4b4b4:	80800017 	ldw	r2,0(r16)
   4b4b8:	11400005 	stb	r5,0(r2)
   4b4bc:	80c00017 	ldw	r3,0(r16)
   4b4c0:	18c00044 	addi	r3,r3,1
   4b4c4:	80c00015 	stw	r3,0(r16)
   4b4c8:	8c400044 	addi	r17,r17,1
   4b4cc:	dc45883a 	add	r2,sp,r17
   4b4d0:	8d00112e 	bgeu	r17,r20,4b518 <__fputwc+0xd0>
   4b4d4:	11400003 	ldbu	r5,0(r2)
   4b4d8:	80c00217 	ldw	r3,8(r16)
   4b4dc:	18ffffc4 	addi	r3,r3,-1
   4b4e0:	80c00215 	stw	r3,8(r16)
   4b4e4:	183ff30e 	bge	r3,zero,4b4b4 <__alt_data_end+0xfffcb4b4>
   4b4e8:	80800617 	ldw	r2,24(r16)
   4b4ec:	18801916 	blt	r3,r2,4b554 <__fputwc+0x10c>
   4b4f0:	80800017 	ldw	r2,0(r16)
   4b4f4:	11400005 	stb	r5,0(r2)
   4b4f8:	80800017 	ldw	r2,0(r16)
   4b4fc:	10c00003 	ldbu	r3,0(r2)
   4b500:	10800044 	addi	r2,r2,1
   4b504:	1d402326 	beq	r3,r21,4b594 <__fputwc+0x14c>
   4b508:	80800015 	stw	r2,0(r16)
   4b50c:	8c400044 	addi	r17,r17,1
   4b510:	dc45883a 	add	r2,sp,r17
   4b514:	8d3fef36 	bltu	r17,r20,4b4d4 <__alt_data_end+0xfffcb4d4>
   4b518:	9005883a 	mov	r2,r18
   4b51c:	00000406 	br	4b530 <__fputwc+0xe8>
   4b520:	80c0030b 	ldhu	r3,12(r16)
   4b524:	a005883a 	mov	r2,r20
   4b528:	18c01014 	ori	r3,r3,64
   4b52c:	80c0030d 	sth	r3,12(r16)
   4b530:	dfc00717 	ldw	ra,28(sp)
   4b534:	dd400617 	ldw	r21,24(sp)
   4b538:	dd000517 	ldw	r20,20(sp)
   4b53c:	dcc00417 	ldw	r19,16(sp)
   4b540:	dc800317 	ldw	r18,12(sp)
   4b544:	dc400217 	ldw	r17,8(sp)
   4b548:	dc000117 	ldw	r16,4(sp)
   4b54c:	dec00804 	addi	sp,sp,32
   4b550:	f800283a 	ret
   4b554:	800d883a 	mov	r6,r16
   4b558:	29403fcc 	andi	r5,r5,255
   4b55c:	9809883a 	mov	r4,r19
   4b560:	004c33c0 	call	4c33c <__swbuf_r>
   4b564:	10bfffe0 	cmpeqi	r2,r2,-1
   4b568:	10803fcc 	andi	r2,r2,255
   4b56c:	103fd626 	beq	r2,zero,4b4c8 <__alt_data_end+0xfffcb4c8>
   4b570:	00bfffc4 	movi	r2,-1
   4b574:	003fee06 	br	4b530 <__alt_data_end+0xfffcb530>
   4b578:	90ffffc4 	addi	r3,r18,-1
   4b57c:	01003f84 	movi	r4,254
   4b580:	20ffbf36 	bltu	r4,r3,4b480 <__alt_data_end+0xfffcb480>
   4b584:	900b883a 	mov	r5,r18
   4b588:	dc800005 	stb	r18,0(sp)
   4b58c:	1029883a 	mov	r20,r2
   4b590:	003fc506 	br	4b4a8 <__alt_data_end+0xfffcb4a8>
   4b594:	800d883a 	mov	r6,r16
   4b598:	a80b883a 	mov	r5,r21
   4b59c:	9809883a 	mov	r4,r19
   4b5a0:	004c33c0 	call	4c33c <__swbuf_r>
   4b5a4:	10bfffe0 	cmpeqi	r2,r2,-1
   4b5a8:	003fef06 	br	4b568 <__alt_data_end+0xfffcb568>

0004b5ac <_fputwc_r>:
   4b5ac:	3080030b 	ldhu	r2,12(r6)
   4b5b0:	10c8000c 	andi	r3,r2,8192
   4b5b4:	1800051e 	bne	r3,zero,4b5cc <_fputwc_r+0x20>
   4b5b8:	30c01917 	ldw	r3,100(r6)
   4b5bc:	10880014 	ori	r2,r2,8192
   4b5c0:	3080030d 	sth	r2,12(r6)
   4b5c4:	18880014 	ori	r2,r3,8192
   4b5c8:	30801915 	stw	r2,100(r6)
   4b5cc:	004b4481 	jmpi	4b448 <__fputwc>

0004b5d0 <fputwc>:
   4b5d0:	00800174 	movhi	r2,5
   4b5d4:	defffc04 	addi	sp,sp,-16
   4b5d8:	108b8e04 	addi	r2,r2,11832
   4b5dc:	dc000115 	stw	r16,4(sp)
   4b5e0:	14000017 	ldw	r16,0(r2)
   4b5e4:	dc400215 	stw	r17,8(sp)
   4b5e8:	dfc00315 	stw	ra,12(sp)
   4b5ec:	2023883a 	mov	r17,r4
   4b5f0:	80000226 	beq	r16,zero,4b5fc <fputwc+0x2c>
   4b5f4:	80800e17 	ldw	r2,56(r16)
   4b5f8:	10001026 	beq	r2,zero,4b63c <fputwc+0x6c>
   4b5fc:	2880030b 	ldhu	r2,12(r5)
   4b600:	10c8000c 	andi	r3,r2,8192
   4b604:	1800051e 	bne	r3,zero,4b61c <fputwc+0x4c>
   4b608:	28c01917 	ldw	r3,100(r5)
   4b60c:	10880014 	ori	r2,r2,8192
   4b610:	2880030d 	sth	r2,12(r5)
   4b614:	18880014 	ori	r2,r3,8192
   4b618:	28801915 	stw	r2,100(r5)
   4b61c:	280d883a 	mov	r6,r5
   4b620:	8009883a 	mov	r4,r16
   4b624:	880b883a 	mov	r5,r17
   4b628:	dfc00317 	ldw	ra,12(sp)
   4b62c:	dc400217 	ldw	r17,8(sp)
   4b630:	dc000117 	ldw	r16,4(sp)
   4b634:	dec00404 	addi	sp,sp,16
   4b638:	004b4481 	jmpi	4b448 <__fputwc>
   4b63c:	8009883a 	mov	r4,r16
   4b640:	d9400015 	stw	r5,0(sp)
   4b644:	004740c0 	call	4740c <__sinit>
   4b648:	d9400017 	ldw	r5,0(sp)
   4b64c:	003feb06 	br	4b5fc <__alt_data_end+0xfffcb5fc>

0004b650 <_fstat_r>:
   4b650:	defffd04 	addi	sp,sp,-12
   4b654:	2805883a 	mov	r2,r5
   4b658:	dc000015 	stw	r16,0(sp)
   4b65c:	04000174 	movhi	r16,5
   4b660:	dc400115 	stw	r17,4(sp)
   4b664:	84128a04 	addi	r16,r16,18984
   4b668:	2023883a 	mov	r17,r4
   4b66c:	300b883a 	mov	r5,r6
   4b670:	1009883a 	mov	r4,r2
   4b674:	dfc00215 	stw	ra,8(sp)
   4b678:	80000015 	stw	zero,0(r16)
   4b67c:	004e8e00 	call	4e8e0 <fstat>
   4b680:	00ffffc4 	movi	r3,-1
   4b684:	10c00526 	beq	r2,r3,4b69c <_fstat_r+0x4c>
   4b688:	dfc00217 	ldw	ra,8(sp)
   4b68c:	dc400117 	ldw	r17,4(sp)
   4b690:	dc000017 	ldw	r16,0(sp)
   4b694:	dec00304 	addi	sp,sp,12
   4b698:	f800283a 	ret
   4b69c:	80c00017 	ldw	r3,0(r16)
   4b6a0:	183ff926 	beq	r3,zero,4b688 <__alt_data_end+0xfffcb688>
   4b6a4:	88c00015 	stw	r3,0(r17)
   4b6a8:	003ff706 	br	4b688 <__alt_data_end+0xfffcb688>

0004b6ac <__sfvwrite_r>:
   4b6ac:	30800217 	ldw	r2,8(r6)
   4b6b0:	10006726 	beq	r2,zero,4b850 <__sfvwrite_r+0x1a4>
   4b6b4:	28c0030b 	ldhu	r3,12(r5)
   4b6b8:	defff404 	addi	sp,sp,-48
   4b6bc:	dd400715 	stw	r21,28(sp)
   4b6c0:	dd000615 	stw	r20,24(sp)
   4b6c4:	dc000215 	stw	r16,8(sp)
   4b6c8:	dfc00b15 	stw	ra,44(sp)
   4b6cc:	df000a15 	stw	fp,40(sp)
   4b6d0:	ddc00915 	stw	r23,36(sp)
   4b6d4:	dd800815 	stw	r22,32(sp)
   4b6d8:	dcc00515 	stw	r19,20(sp)
   4b6dc:	dc800415 	stw	r18,16(sp)
   4b6e0:	dc400315 	stw	r17,12(sp)
   4b6e4:	1880020c 	andi	r2,r3,8
   4b6e8:	2821883a 	mov	r16,r5
   4b6ec:	202b883a 	mov	r21,r4
   4b6f0:	3029883a 	mov	r20,r6
   4b6f4:	10002726 	beq	r2,zero,4b794 <__sfvwrite_r+0xe8>
   4b6f8:	28800417 	ldw	r2,16(r5)
   4b6fc:	10002526 	beq	r2,zero,4b794 <__sfvwrite_r+0xe8>
   4b700:	1880008c 	andi	r2,r3,2
   4b704:	a4400017 	ldw	r17,0(r20)
   4b708:	10002a26 	beq	r2,zero,4b7b4 <__sfvwrite_r+0x108>
   4b70c:	05a00034 	movhi	r22,32768
   4b710:	0027883a 	mov	r19,zero
   4b714:	0025883a 	mov	r18,zero
   4b718:	b5bf0004 	addi	r22,r22,-1024
   4b71c:	980d883a 	mov	r6,r19
   4b720:	a809883a 	mov	r4,r21
   4b724:	90004626 	beq	r18,zero,4b840 <__sfvwrite_r+0x194>
   4b728:	900f883a 	mov	r7,r18
   4b72c:	b480022e 	bgeu	r22,r18,4b738 <__sfvwrite_r+0x8c>
   4b730:	01e00034 	movhi	r7,32768
   4b734:	39ff0004 	addi	r7,r7,-1024
   4b738:	80800917 	ldw	r2,36(r16)
   4b73c:	81400717 	ldw	r5,28(r16)
   4b740:	103ee83a 	callr	r2
   4b744:	0080570e 	bge	zero,r2,4b8a4 <__sfvwrite_r+0x1f8>
   4b748:	a0c00217 	ldw	r3,8(r20)
   4b74c:	98a7883a 	add	r19,r19,r2
   4b750:	90a5c83a 	sub	r18,r18,r2
   4b754:	1885c83a 	sub	r2,r3,r2
   4b758:	a0800215 	stw	r2,8(r20)
   4b75c:	103fef1e 	bne	r2,zero,4b71c <__alt_data_end+0xfffcb71c>
   4b760:	0005883a 	mov	r2,zero
   4b764:	dfc00b17 	ldw	ra,44(sp)
   4b768:	df000a17 	ldw	fp,40(sp)
   4b76c:	ddc00917 	ldw	r23,36(sp)
   4b770:	dd800817 	ldw	r22,32(sp)
   4b774:	dd400717 	ldw	r21,28(sp)
   4b778:	dd000617 	ldw	r20,24(sp)
   4b77c:	dcc00517 	ldw	r19,20(sp)
   4b780:	dc800417 	ldw	r18,16(sp)
   4b784:	dc400317 	ldw	r17,12(sp)
   4b788:	dc000217 	ldw	r16,8(sp)
   4b78c:	dec00c04 	addi	sp,sp,48
   4b790:	f800283a 	ret
   4b794:	800b883a 	mov	r5,r16
   4b798:	a809883a 	mov	r4,r21
   4b79c:	00454380 	call	45438 <__swsetup_r>
   4b7a0:	1000eb1e 	bne	r2,zero,4bb50 <__sfvwrite_r+0x4a4>
   4b7a4:	80c0030b 	ldhu	r3,12(r16)
   4b7a8:	a4400017 	ldw	r17,0(r20)
   4b7ac:	1880008c 	andi	r2,r3,2
   4b7b0:	103fd61e 	bne	r2,zero,4b70c <__alt_data_end+0xfffcb70c>
   4b7b4:	1880004c 	andi	r2,r3,1
   4b7b8:	10003f1e 	bne	r2,zero,4b8b8 <__sfvwrite_r+0x20c>
   4b7bc:	0039883a 	mov	fp,zero
   4b7c0:	0025883a 	mov	r18,zero
   4b7c4:	90001a26 	beq	r18,zero,4b830 <__sfvwrite_r+0x184>
   4b7c8:	1880800c 	andi	r2,r3,512
   4b7cc:	84c00217 	ldw	r19,8(r16)
   4b7d0:	10002126 	beq	r2,zero,4b858 <__sfvwrite_r+0x1ac>
   4b7d4:	982f883a 	mov	r23,r19
   4b7d8:	94c09336 	bltu	r18,r19,4ba28 <__sfvwrite_r+0x37c>
   4b7dc:	1881200c 	andi	r2,r3,1152
   4b7e0:	10009e1e 	bne	r2,zero,4ba5c <__sfvwrite_r+0x3b0>
   4b7e4:	81000017 	ldw	r4,0(r16)
   4b7e8:	b80d883a 	mov	r6,r23
   4b7ec:	e00b883a 	mov	r5,fp
   4b7f0:	004bc1c0 	call	4bc1c <memmove>
   4b7f4:	80c00217 	ldw	r3,8(r16)
   4b7f8:	81000017 	ldw	r4,0(r16)
   4b7fc:	9005883a 	mov	r2,r18
   4b800:	1ce7c83a 	sub	r19,r3,r19
   4b804:	25cf883a 	add	r7,r4,r23
   4b808:	84c00215 	stw	r19,8(r16)
   4b80c:	81c00015 	stw	r7,0(r16)
   4b810:	a0c00217 	ldw	r3,8(r20)
   4b814:	e0b9883a 	add	fp,fp,r2
   4b818:	90a5c83a 	sub	r18,r18,r2
   4b81c:	18a7c83a 	sub	r19,r3,r2
   4b820:	a4c00215 	stw	r19,8(r20)
   4b824:	983fce26 	beq	r19,zero,4b760 <__alt_data_end+0xfffcb760>
   4b828:	80c0030b 	ldhu	r3,12(r16)
   4b82c:	903fe61e 	bne	r18,zero,4b7c8 <__alt_data_end+0xfffcb7c8>
   4b830:	8f000017 	ldw	fp,0(r17)
   4b834:	8c800117 	ldw	r18,4(r17)
   4b838:	8c400204 	addi	r17,r17,8
   4b83c:	003fe106 	br	4b7c4 <__alt_data_end+0xfffcb7c4>
   4b840:	8cc00017 	ldw	r19,0(r17)
   4b844:	8c800117 	ldw	r18,4(r17)
   4b848:	8c400204 	addi	r17,r17,8
   4b84c:	003fb306 	br	4b71c <__alt_data_end+0xfffcb71c>
   4b850:	0005883a 	mov	r2,zero
   4b854:	f800283a 	ret
   4b858:	81000017 	ldw	r4,0(r16)
   4b85c:	80800417 	ldw	r2,16(r16)
   4b860:	11005736 	bltu	r2,r4,4b9c0 <__sfvwrite_r+0x314>
   4b864:	85c00517 	ldw	r23,20(r16)
   4b868:	95c05536 	bltu	r18,r23,4b9c0 <__sfvwrite_r+0x314>
   4b86c:	00a00034 	movhi	r2,32768
   4b870:	10bfffc4 	addi	r2,r2,-1
   4b874:	9009883a 	mov	r4,r18
   4b878:	1480012e 	bgeu	r2,r18,4b880 <__sfvwrite_r+0x1d4>
   4b87c:	1009883a 	mov	r4,r2
   4b880:	b80b883a 	mov	r5,r23
   4b884:	0040a800 	call	40a80 <__divsi3>
   4b888:	15cf383a 	mul	r7,r2,r23
   4b88c:	81400717 	ldw	r5,28(r16)
   4b890:	80800917 	ldw	r2,36(r16)
   4b894:	e00d883a 	mov	r6,fp
   4b898:	a809883a 	mov	r4,r21
   4b89c:	103ee83a 	callr	r2
   4b8a0:	00bfdb16 	blt	zero,r2,4b810 <__alt_data_end+0xfffcb810>
   4b8a4:	8080030b 	ldhu	r2,12(r16)
   4b8a8:	10801014 	ori	r2,r2,64
   4b8ac:	8080030d 	sth	r2,12(r16)
   4b8b0:	00bfffc4 	movi	r2,-1
   4b8b4:	003fab06 	br	4b764 <__alt_data_end+0xfffcb764>
   4b8b8:	0027883a 	mov	r19,zero
   4b8bc:	0011883a 	mov	r8,zero
   4b8c0:	0039883a 	mov	fp,zero
   4b8c4:	0025883a 	mov	r18,zero
   4b8c8:	90001f26 	beq	r18,zero,4b948 <__sfvwrite_r+0x29c>
   4b8cc:	40005a26 	beq	r8,zero,4ba38 <__sfvwrite_r+0x38c>
   4b8d0:	982d883a 	mov	r22,r19
   4b8d4:	94c0012e 	bgeu	r18,r19,4b8dc <__sfvwrite_r+0x230>
   4b8d8:	902d883a 	mov	r22,r18
   4b8dc:	81000017 	ldw	r4,0(r16)
   4b8e0:	80800417 	ldw	r2,16(r16)
   4b8e4:	b02f883a 	mov	r23,r22
   4b8e8:	81c00517 	ldw	r7,20(r16)
   4b8ec:	1100032e 	bgeu	r2,r4,4b8fc <__sfvwrite_r+0x250>
   4b8f0:	80c00217 	ldw	r3,8(r16)
   4b8f4:	38c7883a 	add	r3,r7,r3
   4b8f8:	1d801816 	blt	r3,r22,4b95c <__sfvwrite_r+0x2b0>
   4b8fc:	b1c03e16 	blt	r22,r7,4b9f8 <__sfvwrite_r+0x34c>
   4b900:	80800917 	ldw	r2,36(r16)
   4b904:	81400717 	ldw	r5,28(r16)
   4b908:	e00d883a 	mov	r6,fp
   4b90c:	da000115 	stw	r8,4(sp)
   4b910:	a809883a 	mov	r4,r21
   4b914:	103ee83a 	callr	r2
   4b918:	102f883a 	mov	r23,r2
   4b91c:	da000117 	ldw	r8,4(sp)
   4b920:	00bfe00e 	bge	zero,r2,4b8a4 <__alt_data_end+0xfffcb8a4>
   4b924:	9de7c83a 	sub	r19,r19,r23
   4b928:	98001f26 	beq	r19,zero,4b9a8 <__sfvwrite_r+0x2fc>
   4b92c:	a0800217 	ldw	r2,8(r20)
   4b930:	e5f9883a 	add	fp,fp,r23
   4b934:	95e5c83a 	sub	r18,r18,r23
   4b938:	15efc83a 	sub	r23,r2,r23
   4b93c:	a5c00215 	stw	r23,8(r20)
   4b940:	b83f8726 	beq	r23,zero,4b760 <__alt_data_end+0xfffcb760>
   4b944:	903fe11e 	bne	r18,zero,4b8cc <__alt_data_end+0xfffcb8cc>
   4b948:	8f000017 	ldw	fp,0(r17)
   4b94c:	8c800117 	ldw	r18,4(r17)
   4b950:	0011883a 	mov	r8,zero
   4b954:	8c400204 	addi	r17,r17,8
   4b958:	003fdb06 	br	4b8c8 <__alt_data_end+0xfffcb8c8>
   4b95c:	180d883a 	mov	r6,r3
   4b960:	e00b883a 	mov	r5,fp
   4b964:	da000115 	stw	r8,4(sp)
   4b968:	d8c00015 	stw	r3,0(sp)
   4b96c:	004bc1c0 	call	4bc1c <memmove>
   4b970:	d8c00017 	ldw	r3,0(sp)
   4b974:	80800017 	ldw	r2,0(r16)
   4b978:	800b883a 	mov	r5,r16
   4b97c:	a809883a 	mov	r4,r21
   4b980:	10c5883a 	add	r2,r2,r3
   4b984:	80800015 	stw	r2,0(r16)
   4b988:	d8c00015 	stw	r3,0(sp)
   4b98c:	00470300 	call	47030 <_fflush_r>
   4b990:	d8c00017 	ldw	r3,0(sp)
   4b994:	da000117 	ldw	r8,4(sp)
   4b998:	103fc21e 	bne	r2,zero,4b8a4 <__alt_data_end+0xfffcb8a4>
   4b99c:	182f883a 	mov	r23,r3
   4b9a0:	9de7c83a 	sub	r19,r19,r23
   4b9a4:	983fe11e 	bne	r19,zero,4b92c <__alt_data_end+0xfffcb92c>
   4b9a8:	800b883a 	mov	r5,r16
   4b9ac:	a809883a 	mov	r4,r21
   4b9b0:	00470300 	call	47030 <_fflush_r>
   4b9b4:	103fbb1e 	bne	r2,zero,4b8a4 <__alt_data_end+0xfffcb8a4>
   4b9b8:	0011883a 	mov	r8,zero
   4b9bc:	003fdb06 	br	4b92c <__alt_data_end+0xfffcb92c>
   4b9c0:	94c0012e 	bgeu	r18,r19,4b9c8 <__sfvwrite_r+0x31c>
   4b9c4:	9027883a 	mov	r19,r18
   4b9c8:	980d883a 	mov	r6,r19
   4b9cc:	e00b883a 	mov	r5,fp
   4b9d0:	004bc1c0 	call	4bc1c <memmove>
   4b9d4:	80800217 	ldw	r2,8(r16)
   4b9d8:	80c00017 	ldw	r3,0(r16)
   4b9dc:	14c5c83a 	sub	r2,r2,r19
   4b9e0:	1cc7883a 	add	r3,r3,r19
   4b9e4:	80800215 	stw	r2,8(r16)
   4b9e8:	80c00015 	stw	r3,0(r16)
   4b9ec:	10004326 	beq	r2,zero,4bafc <__sfvwrite_r+0x450>
   4b9f0:	9805883a 	mov	r2,r19
   4b9f4:	003f8606 	br	4b810 <__alt_data_end+0xfffcb810>
   4b9f8:	b00d883a 	mov	r6,r22
   4b9fc:	e00b883a 	mov	r5,fp
   4ba00:	da000115 	stw	r8,4(sp)
   4ba04:	004bc1c0 	call	4bc1c <memmove>
   4ba08:	80800217 	ldw	r2,8(r16)
   4ba0c:	80c00017 	ldw	r3,0(r16)
   4ba10:	da000117 	ldw	r8,4(sp)
   4ba14:	1585c83a 	sub	r2,r2,r22
   4ba18:	1dad883a 	add	r22,r3,r22
   4ba1c:	80800215 	stw	r2,8(r16)
   4ba20:	85800015 	stw	r22,0(r16)
   4ba24:	003fbf06 	br	4b924 <__alt_data_end+0xfffcb924>
   4ba28:	81000017 	ldw	r4,0(r16)
   4ba2c:	9027883a 	mov	r19,r18
   4ba30:	902f883a 	mov	r23,r18
   4ba34:	003f6c06 	br	4b7e8 <__alt_data_end+0xfffcb7e8>
   4ba38:	900d883a 	mov	r6,r18
   4ba3c:	01400284 	movi	r5,10
   4ba40:	e009883a 	mov	r4,fp
   4ba44:	00484bc0 	call	484bc <memchr>
   4ba48:	10003e26 	beq	r2,zero,4bb44 <__sfvwrite_r+0x498>
   4ba4c:	10800044 	addi	r2,r2,1
   4ba50:	1727c83a 	sub	r19,r2,fp
   4ba54:	02000044 	movi	r8,1
   4ba58:	003f9d06 	br	4b8d0 <__alt_data_end+0xfffcb8d0>
   4ba5c:	80800517 	ldw	r2,20(r16)
   4ba60:	81400417 	ldw	r5,16(r16)
   4ba64:	81c00017 	ldw	r7,0(r16)
   4ba68:	10a7883a 	add	r19,r2,r2
   4ba6c:	9885883a 	add	r2,r19,r2
   4ba70:	1026d7fa 	srli	r19,r2,31
   4ba74:	396dc83a 	sub	r22,r7,r5
   4ba78:	b1000044 	addi	r4,r22,1
   4ba7c:	9885883a 	add	r2,r19,r2
   4ba80:	1027d07a 	srai	r19,r2,1
   4ba84:	2485883a 	add	r2,r4,r18
   4ba88:	980d883a 	mov	r6,r19
   4ba8c:	9880022e 	bgeu	r19,r2,4ba98 <__sfvwrite_r+0x3ec>
   4ba90:	1027883a 	mov	r19,r2
   4ba94:	100d883a 	mov	r6,r2
   4ba98:	18c1000c 	andi	r3,r3,1024
   4ba9c:	18001c26 	beq	r3,zero,4bb10 <__sfvwrite_r+0x464>
   4baa0:	300b883a 	mov	r5,r6
   4baa4:	a809883a 	mov	r4,r21
   4baa8:	0047cb00 	call	47cb0 <_malloc_r>
   4baac:	102f883a 	mov	r23,r2
   4bab0:	10002926 	beq	r2,zero,4bb58 <__sfvwrite_r+0x4ac>
   4bab4:	81400417 	ldw	r5,16(r16)
   4bab8:	b00d883a 	mov	r6,r22
   4babc:	1009883a 	mov	r4,r2
   4bac0:	00485a00 	call	485a0 <memcpy>
   4bac4:	8080030b 	ldhu	r2,12(r16)
   4bac8:	00fedfc4 	movi	r3,-1153
   4bacc:	10c4703a 	and	r2,r2,r3
   4bad0:	10802014 	ori	r2,r2,128
   4bad4:	8080030d 	sth	r2,12(r16)
   4bad8:	bd89883a 	add	r4,r23,r22
   4badc:	9d8fc83a 	sub	r7,r19,r22
   4bae0:	85c00415 	stw	r23,16(r16)
   4bae4:	84c00515 	stw	r19,20(r16)
   4bae8:	81000015 	stw	r4,0(r16)
   4baec:	9027883a 	mov	r19,r18
   4baf0:	81c00215 	stw	r7,8(r16)
   4baf4:	902f883a 	mov	r23,r18
   4baf8:	003f3b06 	br	4b7e8 <__alt_data_end+0xfffcb7e8>
   4bafc:	800b883a 	mov	r5,r16
   4bb00:	a809883a 	mov	r4,r21
   4bb04:	00470300 	call	47030 <_fflush_r>
   4bb08:	103fb926 	beq	r2,zero,4b9f0 <__alt_data_end+0xfffcb9f0>
   4bb0c:	003f6506 	br	4b8a4 <__alt_data_end+0xfffcb8a4>
   4bb10:	a809883a 	mov	r4,r21
   4bb14:	004bdd80 	call	4bdd8 <_realloc_r>
   4bb18:	102f883a 	mov	r23,r2
   4bb1c:	103fee1e 	bne	r2,zero,4bad8 <__alt_data_end+0xfffcbad8>
   4bb20:	81400417 	ldw	r5,16(r16)
   4bb24:	a809883a 	mov	r4,r21
   4bb28:	00475800 	call	47580 <_free_r>
   4bb2c:	8080030b 	ldhu	r2,12(r16)
   4bb30:	00ffdfc4 	movi	r3,-129
   4bb34:	1884703a 	and	r2,r3,r2
   4bb38:	00c00304 	movi	r3,12
   4bb3c:	a8c00015 	stw	r3,0(r21)
   4bb40:	003f5906 	br	4b8a8 <__alt_data_end+0xfffcb8a8>
   4bb44:	94c00044 	addi	r19,r18,1
   4bb48:	02000044 	movi	r8,1
   4bb4c:	003f6006 	br	4b8d0 <__alt_data_end+0xfffcb8d0>
   4bb50:	00bfffc4 	movi	r2,-1
   4bb54:	003f0306 	br	4b764 <__alt_data_end+0xfffcb764>
   4bb58:	00800304 	movi	r2,12
   4bb5c:	a8800015 	stw	r2,0(r21)
   4bb60:	8080030b 	ldhu	r2,12(r16)
   4bb64:	003f5006 	br	4b8a8 <__alt_data_end+0xfffcb8a8>

0004bb68 <_isatty_r>:
   4bb68:	defffd04 	addi	sp,sp,-12
   4bb6c:	dc000015 	stw	r16,0(sp)
   4bb70:	04000174 	movhi	r16,5
   4bb74:	dc400115 	stw	r17,4(sp)
   4bb78:	84128a04 	addi	r16,r16,18984
   4bb7c:	2023883a 	mov	r17,r4
   4bb80:	2809883a 	mov	r4,r5
   4bb84:	dfc00215 	stw	ra,8(sp)
   4bb88:	80000015 	stw	zero,0(r16)
   4bb8c:	004e9cc0 	call	4e9cc <isatty>
   4bb90:	00ffffc4 	movi	r3,-1
   4bb94:	10c00526 	beq	r2,r3,4bbac <_isatty_r+0x44>
   4bb98:	dfc00217 	ldw	ra,8(sp)
   4bb9c:	dc400117 	ldw	r17,4(sp)
   4bba0:	dc000017 	ldw	r16,0(sp)
   4bba4:	dec00304 	addi	sp,sp,12
   4bba8:	f800283a 	ret
   4bbac:	80c00017 	ldw	r3,0(r16)
   4bbb0:	183ff926 	beq	r3,zero,4bb98 <__alt_data_end+0xfffcbb98>
   4bbb4:	88c00015 	stw	r3,0(r17)
   4bbb8:	003ff706 	br	4bb98 <__alt_data_end+0xfffcbb98>

0004bbbc <_lseek_r>:
   4bbbc:	defffd04 	addi	sp,sp,-12
   4bbc0:	2805883a 	mov	r2,r5
   4bbc4:	dc000015 	stw	r16,0(sp)
   4bbc8:	04000174 	movhi	r16,5
   4bbcc:	dc400115 	stw	r17,4(sp)
   4bbd0:	300b883a 	mov	r5,r6
   4bbd4:	84128a04 	addi	r16,r16,18984
   4bbd8:	2023883a 	mov	r17,r4
   4bbdc:	380d883a 	mov	r6,r7
   4bbe0:	1009883a 	mov	r4,r2
   4bbe4:	dfc00215 	stw	ra,8(sp)
   4bbe8:	80000015 	stw	zero,0(r16)
   4bbec:	004eb980 	call	4eb98 <lseek>
   4bbf0:	00ffffc4 	movi	r3,-1
   4bbf4:	10c00526 	beq	r2,r3,4bc0c <_lseek_r+0x50>
   4bbf8:	dfc00217 	ldw	ra,8(sp)
   4bbfc:	dc400117 	ldw	r17,4(sp)
   4bc00:	dc000017 	ldw	r16,0(sp)
   4bc04:	dec00304 	addi	sp,sp,12
   4bc08:	f800283a 	ret
   4bc0c:	80c00017 	ldw	r3,0(r16)
   4bc10:	183ff926 	beq	r3,zero,4bbf8 <__alt_data_end+0xfffcbbf8>
   4bc14:	88c00015 	stw	r3,0(r17)
   4bc18:	003ff706 	br	4bbf8 <__alt_data_end+0xfffcbbf8>

0004bc1c <memmove>:
   4bc1c:	2005883a 	mov	r2,r4
   4bc20:	29000b2e 	bgeu	r5,r4,4bc50 <memmove+0x34>
   4bc24:	298f883a 	add	r7,r5,r6
   4bc28:	21c0092e 	bgeu	r4,r7,4bc50 <memmove+0x34>
   4bc2c:	2187883a 	add	r3,r4,r6
   4bc30:	198bc83a 	sub	r5,r3,r6
   4bc34:	30004826 	beq	r6,zero,4bd58 <memmove+0x13c>
   4bc38:	39ffffc4 	addi	r7,r7,-1
   4bc3c:	39000003 	ldbu	r4,0(r7)
   4bc40:	18ffffc4 	addi	r3,r3,-1
   4bc44:	19000005 	stb	r4,0(r3)
   4bc48:	28fffb1e 	bne	r5,r3,4bc38 <__alt_data_end+0xfffcbc38>
   4bc4c:	f800283a 	ret
   4bc50:	00c003c4 	movi	r3,15
   4bc54:	1980412e 	bgeu	r3,r6,4bd5c <memmove+0x140>
   4bc58:	2886b03a 	or	r3,r5,r2
   4bc5c:	18c000cc 	andi	r3,r3,3
   4bc60:	1800401e 	bne	r3,zero,4bd64 <memmove+0x148>
   4bc64:	33fffc04 	addi	r15,r6,-16
   4bc68:	781ed13a 	srli	r15,r15,4
   4bc6c:	28c00104 	addi	r3,r5,4
   4bc70:	13400104 	addi	r13,r2,4
   4bc74:	781c913a 	slli	r14,r15,4
   4bc78:	2b000204 	addi	r12,r5,8
   4bc7c:	12c00204 	addi	r11,r2,8
   4bc80:	73800504 	addi	r14,r14,20
   4bc84:	2a800304 	addi	r10,r5,12
   4bc88:	12400304 	addi	r9,r2,12
   4bc8c:	2b9d883a 	add	r14,r5,r14
   4bc90:	2811883a 	mov	r8,r5
   4bc94:	100f883a 	mov	r7,r2
   4bc98:	41000017 	ldw	r4,0(r8)
   4bc9c:	39c00404 	addi	r7,r7,16
   4bca0:	18c00404 	addi	r3,r3,16
   4bca4:	393ffc15 	stw	r4,-16(r7)
   4bca8:	193ffc17 	ldw	r4,-16(r3)
   4bcac:	6b400404 	addi	r13,r13,16
   4bcb0:	5ac00404 	addi	r11,r11,16
   4bcb4:	693ffc15 	stw	r4,-16(r13)
   4bcb8:	61000017 	ldw	r4,0(r12)
   4bcbc:	4a400404 	addi	r9,r9,16
   4bcc0:	42000404 	addi	r8,r8,16
   4bcc4:	593ffc15 	stw	r4,-16(r11)
   4bcc8:	51000017 	ldw	r4,0(r10)
   4bccc:	63000404 	addi	r12,r12,16
   4bcd0:	52800404 	addi	r10,r10,16
   4bcd4:	493ffc15 	stw	r4,-16(r9)
   4bcd8:	1bbfef1e 	bne	r3,r14,4bc98 <__alt_data_end+0xfffcbc98>
   4bcdc:	79000044 	addi	r4,r15,1
   4bce0:	2008913a 	slli	r4,r4,4
   4bce4:	328003cc 	andi	r10,r6,15
   4bce8:	02c000c4 	movi	r11,3
   4bcec:	1107883a 	add	r3,r2,r4
   4bcf0:	290b883a 	add	r5,r5,r4
   4bcf4:	5a801e2e 	bgeu	r11,r10,4bd70 <memmove+0x154>
   4bcf8:	1813883a 	mov	r9,r3
   4bcfc:	2811883a 	mov	r8,r5
   4bd00:	500f883a 	mov	r7,r10
   4bd04:	41000017 	ldw	r4,0(r8)
   4bd08:	4a400104 	addi	r9,r9,4
   4bd0c:	39ffff04 	addi	r7,r7,-4
   4bd10:	493fff15 	stw	r4,-4(r9)
   4bd14:	42000104 	addi	r8,r8,4
   4bd18:	59fffa36 	bltu	r11,r7,4bd04 <__alt_data_end+0xfffcbd04>
   4bd1c:	513fff04 	addi	r4,r10,-4
   4bd20:	2008d0ba 	srli	r4,r4,2
   4bd24:	318000cc 	andi	r6,r6,3
   4bd28:	21000044 	addi	r4,r4,1
   4bd2c:	2109883a 	add	r4,r4,r4
   4bd30:	2109883a 	add	r4,r4,r4
   4bd34:	1907883a 	add	r3,r3,r4
   4bd38:	290b883a 	add	r5,r5,r4
   4bd3c:	30000b26 	beq	r6,zero,4bd6c <memmove+0x150>
   4bd40:	198d883a 	add	r6,r3,r6
   4bd44:	29c00003 	ldbu	r7,0(r5)
   4bd48:	18c00044 	addi	r3,r3,1
   4bd4c:	29400044 	addi	r5,r5,1
   4bd50:	19ffffc5 	stb	r7,-1(r3)
   4bd54:	19bffb1e 	bne	r3,r6,4bd44 <__alt_data_end+0xfffcbd44>
   4bd58:	f800283a 	ret
   4bd5c:	1007883a 	mov	r3,r2
   4bd60:	003ff606 	br	4bd3c <__alt_data_end+0xfffcbd3c>
   4bd64:	1007883a 	mov	r3,r2
   4bd68:	003ff506 	br	4bd40 <__alt_data_end+0xfffcbd40>
   4bd6c:	f800283a 	ret
   4bd70:	500d883a 	mov	r6,r10
   4bd74:	003ff106 	br	4bd3c <__alt_data_end+0xfffcbd3c>

0004bd78 <_read_r>:
   4bd78:	defffd04 	addi	sp,sp,-12
   4bd7c:	2805883a 	mov	r2,r5
   4bd80:	dc000015 	stw	r16,0(sp)
   4bd84:	04000174 	movhi	r16,5
   4bd88:	dc400115 	stw	r17,4(sp)
   4bd8c:	300b883a 	mov	r5,r6
   4bd90:	84128a04 	addi	r16,r16,18984
   4bd94:	2023883a 	mov	r17,r4
   4bd98:	380d883a 	mov	r6,r7
   4bd9c:	1009883a 	mov	r4,r2
   4bda0:	dfc00215 	stw	ra,8(sp)
   4bda4:	80000015 	stw	zero,0(r16)
   4bda8:	004ed6c0 	call	4ed6c <read>
   4bdac:	00ffffc4 	movi	r3,-1
   4bdb0:	10c00526 	beq	r2,r3,4bdc8 <_read_r+0x50>
   4bdb4:	dfc00217 	ldw	ra,8(sp)
   4bdb8:	dc400117 	ldw	r17,4(sp)
   4bdbc:	dc000017 	ldw	r16,0(sp)
   4bdc0:	dec00304 	addi	sp,sp,12
   4bdc4:	f800283a 	ret
   4bdc8:	80c00017 	ldw	r3,0(r16)
   4bdcc:	183ff926 	beq	r3,zero,4bdb4 <__alt_data_end+0xfffcbdb4>
   4bdd0:	88c00015 	stw	r3,0(r17)
   4bdd4:	003ff706 	br	4bdb4 <__alt_data_end+0xfffcbdb4>

0004bdd8 <_realloc_r>:
   4bdd8:	defff604 	addi	sp,sp,-40
   4bddc:	dc800215 	stw	r18,8(sp)
   4bde0:	dfc00915 	stw	ra,36(sp)
   4bde4:	df000815 	stw	fp,32(sp)
   4bde8:	ddc00715 	stw	r23,28(sp)
   4bdec:	dd800615 	stw	r22,24(sp)
   4bdf0:	dd400515 	stw	r21,20(sp)
   4bdf4:	dd000415 	stw	r20,16(sp)
   4bdf8:	dcc00315 	stw	r19,12(sp)
   4bdfc:	dc400115 	stw	r17,4(sp)
   4be00:	dc000015 	stw	r16,0(sp)
   4be04:	3025883a 	mov	r18,r6
   4be08:	2800b726 	beq	r5,zero,4c0e8 <_realloc_r+0x310>
   4be0c:	282b883a 	mov	r21,r5
   4be10:	2029883a 	mov	r20,r4
   4be14:	004ece80 	call	4ece8 <__malloc_lock>
   4be18:	a8bfff17 	ldw	r2,-4(r21)
   4be1c:	043fff04 	movi	r16,-4
   4be20:	90c002c4 	addi	r3,r18,11
   4be24:	01000584 	movi	r4,22
   4be28:	acfffe04 	addi	r19,r21,-8
   4be2c:	1420703a 	and	r16,r2,r16
   4be30:	20c0332e 	bgeu	r4,r3,4bf00 <_realloc_r+0x128>
   4be34:	047ffe04 	movi	r17,-8
   4be38:	1c62703a 	and	r17,r3,r17
   4be3c:	8807883a 	mov	r3,r17
   4be40:	88005816 	blt	r17,zero,4bfa4 <_realloc_r+0x1cc>
   4be44:	8c805736 	bltu	r17,r18,4bfa4 <_realloc_r+0x1cc>
   4be48:	80c0300e 	bge	r16,r3,4bf0c <_realloc_r+0x134>
   4be4c:	07000174 	movhi	fp,5
   4be50:	e7060904 	addi	fp,fp,6180
   4be54:	e1c00217 	ldw	r7,8(fp)
   4be58:	9c09883a 	add	r4,r19,r16
   4be5c:	22000117 	ldw	r8,4(r4)
   4be60:	21c06326 	beq	r4,r7,4bff0 <_realloc_r+0x218>
   4be64:	017fff84 	movi	r5,-2
   4be68:	414a703a 	and	r5,r8,r5
   4be6c:	214b883a 	add	r5,r4,r5
   4be70:	29800117 	ldw	r6,4(r5)
   4be74:	3180004c 	andi	r6,r6,1
   4be78:	30003f26 	beq	r6,zero,4bf78 <_realloc_r+0x1a0>
   4be7c:	1080004c 	andi	r2,r2,1
   4be80:	10008326 	beq	r2,zero,4c090 <_realloc_r+0x2b8>
   4be84:	900b883a 	mov	r5,r18
   4be88:	a009883a 	mov	r4,r20
   4be8c:	0047cb00 	call	47cb0 <_malloc_r>
   4be90:	1025883a 	mov	r18,r2
   4be94:	10011e26 	beq	r2,zero,4c310 <_realloc_r+0x538>
   4be98:	a93fff17 	ldw	r4,-4(r21)
   4be9c:	10fffe04 	addi	r3,r2,-8
   4bea0:	00bfff84 	movi	r2,-2
   4bea4:	2084703a 	and	r2,r4,r2
   4bea8:	9885883a 	add	r2,r19,r2
   4beac:	1880ee26 	beq	r3,r2,4c268 <_realloc_r+0x490>
   4beb0:	81bfff04 	addi	r6,r16,-4
   4beb4:	00800904 	movi	r2,36
   4beb8:	1180b836 	bltu	r2,r6,4c19c <_realloc_r+0x3c4>
   4bebc:	00c004c4 	movi	r3,19
   4bec0:	19809636 	bltu	r3,r6,4c11c <_realloc_r+0x344>
   4bec4:	9005883a 	mov	r2,r18
   4bec8:	a807883a 	mov	r3,r21
   4becc:	19000017 	ldw	r4,0(r3)
   4bed0:	11000015 	stw	r4,0(r2)
   4bed4:	19000117 	ldw	r4,4(r3)
   4bed8:	11000115 	stw	r4,4(r2)
   4bedc:	18c00217 	ldw	r3,8(r3)
   4bee0:	10c00215 	stw	r3,8(r2)
   4bee4:	a80b883a 	mov	r5,r21
   4bee8:	a009883a 	mov	r4,r20
   4beec:	00475800 	call	47580 <_free_r>
   4bef0:	a009883a 	mov	r4,r20
   4bef4:	004ed0c0 	call	4ed0c <__malloc_unlock>
   4bef8:	9005883a 	mov	r2,r18
   4befc:	00001206 	br	4bf48 <_realloc_r+0x170>
   4bf00:	00c00404 	movi	r3,16
   4bf04:	1823883a 	mov	r17,r3
   4bf08:	003fce06 	br	4be44 <__alt_data_end+0xfffcbe44>
   4bf0c:	a825883a 	mov	r18,r21
   4bf10:	8445c83a 	sub	r2,r16,r17
   4bf14:	00c003c4 	movi	r3,15
   4bf18:	18802636 	bltu	r3,r2,4bfb4 <_realloc_r+0x1dc>
   4bf1c:	99800117 	ldw	r6,4(r19)
   4bf20:	9c07883a 	add	r3,r19,r16
   4bf24:	3180004c 	andi	r6,r6,1
   4bf28:	3420b03a 	or	r16,r6,r16
   4bf2c:	9c000115 	stw	r16,4(r19)
   4bf30:	18800117 	ldw	r2,4(r3)
   4bf34:	10800054 	ori	r2,r2,1
   4bf38:	18800115 	stw	r2,4(r3)
   4bf3c:	a009883a 	mov	r4,r20
   4bf40:	004ed0c0 	call	4ed0c <__malloc_unlock>
   4bf44:	9005883a 	mov	r2,r18
   4bf48:	dfc00917 	ldw	ra,36(sp)
   4bf4c:	df000817 	ldw	fp,32(sp)
   4bf50:	ddc00717 	ldw	r23,28(sp)
   4bf54:	dd800617 	ldw	r22,24(sp)
   4bf58:	dd400517 	ldw	r21,20(sp)
   4bf5c:	dd000417 	ldw	r20,16(sp)
   4bf60:	dcc00317 	ldw	r19,12(sp)
   4bf64:	dc800217 	ldw	r18,8(sp)
   4bf68:	dc400117 	ldw	r17,4(sp)
   4bf6c:	dc000017 	ldw	r16,0(sp)
   4bf70:	dec00a04 	addi	sp,sp,40
   4bf74:	f800283a 	ret
   4bf78:	017fff04 	movi	r5,-4
   4bf7c:	414a703a 	and	r5,r8,r5
   4bf80:	814d883a 	add	r6,r16,r5
   4bf84:	30c01f16 	blt	r6,r3,4c004 <_realloc_r+0x22c>
   4bf88:	20800317 	ldw	r2,12(r4)
   4bf8c:	20c00217 	ldw	r3,8(r4)
   4bf90:	a825883a 	mov	r18,r21
   4bf94:	3021883a 	mov	r16,r6
   4bf98:	18800315 	stw	r2,12(r3)
   4bf9c:	10c00215 	stw	r3,8(r2)
   4bfa0:	003fdb06 	br	4bf10 <__alt_data_end+0xfffcbf10>
   4bfa4:	00800304 	movi	r2,12
   4bfa8:	a0800015 	stw	r2,0(r20)
   4bfac:	0005883a 	mov	r2,zero
   4bfb0:	003fe506 	br	4bf48 <__alt_data_end+0xfffcbf48>
   4bfb4:	98c00117 	ldw	r3,4(r19)
   4bfb8:	9c4b883a 	add	r5,r19,r17
   4bfbc:	11000054 	ori	r4,r2,1
   4bfc0:	18c0004c 	andi	r3,r3,1
   4bfc4:	1c62b03a 	or	r17,r3,r17
   4bfc8:	9c400115 	stw	r17,4(r19)
   4bfcc:	29000115 	stw	r4,4(r5)
   4bfd0:	2885883a 	add	r2,r5,r2
   4bfd4:	10c00117 	ldw	r3,4(r2)
   4bfd8:	29400204 	addi	r5,r5,8
   4bfdc:	a009883a 	mov	r4,r20
   4bfe0:	18c00054 	ori	r3,r3,1
   4bfe4:	10c00115 	stw	r3,4(r2)
   4bfe8:	00475800 	call	47580 <_free_r>
   4bfec:	003fd306 	br	4bf3c <__alt_data_end+0xfffcbf3c>
   4bff0:	017fff04 	movi	r5,-4
   4bff4:	414a703a 	and	r5,r8,r5
   4bff8:	89800404 	addi	r6,r17,16
   4bffc:	8151883a 	add	r8,r16,r5
   4c000:	4180590e 	bge	r8,r6,4c168 <_realloc_r+0x390>
   4c004:	1080004c 	andi	r2,r2,1
   4c008:	103f9e1e 	bne	r2,zero,4be84 <__alt_data_end+0xfffcbe84>
   4c00c:	adbffe17 	ldw	r22,-8(r21)
   4c010:	00bfff04 	movi	r2,-4
   4c014:	9dadc83a 	sub	r22,r19,r22
   4c018:	b1800117 	ldw	r6,4(r22)
   4c01c:	3084703a 	and	r2,r6,r2
   4c020:	20002026 	beq	r4,zero,4c0a4 <_realloc_r+0x2cc>
   4c024:	80af883a 	add	r23,r16,r2
   4c028:	b96f883a 	add	r23,r23,r5
   4c02c:	21c05f26 	beq	r4,r7,4c1ac <_realloc_r+0x3d4>
   4c030:	b8c01c16 	blt	r23,r3,4c0a4 <_realloc_r+0x2cc>
   4c034:	20800317 	ldw	r2,12(r4)
   4c038:	20c00217 	ldw	r3,8(r4)
   4c03c:	81bfff04 	addi	r6,r16,-4
   4c040:	01000904 	movi	r4,36
   4c044:	18800315 	stw	r2,12(r3)
   4c048:	10c00215 	stw	r3,8(r2)
   4c04c:	b0c00217 	ldw	r3,8(r22)
   4c050:	b0800317 	ldw	r2,12(r22)
   4c054:	b4800204 	addi	r18,r22,8
   4c058:	18800315 	stw	r2,12(r3)
   4c05c:	10c00215 	stw	r3,8(r2)
   4c060:	21801b36 	bltu	r4,r6,4c0d0 <_realloc_r+0x2f8>
   4c064:	008004c4 	movi	r2,19
   4c068:	1180352e 	bgeu	r2,r6,4c140 <_realloc_r+0x368>
   4c06c:	a8800017 	ldw	r2,0(r21)
   4c070:	b0800215 	stw	r2,8(r22)
   4c074:	a8800117 	ldw	r2,4(r21)
   4c078:	b0800315 	stw	r2,12(r22)
   4c07c:	008006c4 	movi	r2,27
   4c080:	11807f36 	bltu	r2,r6,4c280 <_realloc_r+0x4a8>
   4c084:	b0800404 	addi	r2,r22,16
   4c088:	ad400204 	addi	r21,r21,8
   4c08c:	00002d06 	br	4c144 <_realloc_r+0x36c>
   4c090:	adbffe17 	ldw	r22,-8(r21)
   4c094:	00bfff04 	movi	r2,-4
   4c098:	9dadc83a 	sub	r22,r19,r22
   4c09c:	b1000117 	ldw	r4,4(r22)
   4c0a0:	2084703a 	and	r2,r4,r2
   4c0a4:	b03f7726 	beq	r22,zero,4be84 <__alt_data_end+0xfffcbe84>
   4c0a8:	80af883a 	add	r23,r16,r2
   4c0ac:	b8ff7516 	blt	r23,r3,4be84 <__alt_data_end+0xfffcbe84>
   4c0b0:	b0800317 	ldw	r2,12(r22)
   4c0b4:	b0c00217 	ldw	r3,8(r22)
   4c0b8:	81bfff04 	addi	r6,r16,-4
   4c0bc:	01000904 	movi	r4,36
   4c0c0:	18800315 	stw	r2,12(r3)
   4c0c4:	10c00215 	stw	r3,8(r2)
   4c0c8:	b4800204 	addi	r18,r22,8
   4c0cc:	21bfe52e 	bgeu	r4,r6,4c064 <__alt_data_end+0xfffcc064>
   4c0d0:	a80b883a 	mov	r5,r21
   4c0d4:	9009883a 	mov	r4,r18
   4c0d8:	004bc1c0 	call	4bc1c <memmove>
   4c0dc:	b821883a 	mov	r16,r23
   4c0e0:	b027883a 	mov	r19,r22
   4c0e4:	003f8a06 	br	4bf10 <__alt_data_end+0xfffcbf10>
   4c0e8:	300b883a 	mov	r5,r6
   4c0ec:	dfc00917 	ldw	ra,36(sp)
   4c0f0:	df000817 	ldw	fp,32(sp)
   4c0f4:	ddc00717 	ldw	r23,28(sp)
   4c0f8:	dd800617 	ldw	r22,24(sp)
   4c0fc:	dd400517 	ldw	r21,20(sp)
   4c100:	dd000417 	ldw	r20,16(sp)
   4c104:	dcc00317 	ldw	r19,12(sp)
   4c108:	dc800217 	ldw	r18,8(sp)
   4c10c:	dc400117 	ldw	r17,4(sp)
   4c110:	dc000017 	ldw	r16,0(sp)
   4c114:	dec00a04 	addi	sp,sp,40
   4c118:	0047cb01 	jmpi	47cb0 <_malloc_r>
   4c11c:	a8c00017 	ldw	r3,0(r21)
   4c120:	90c00015 	stw	r3,0(r18)
   4c124:	a8c00117 	ldw	r3,4(r21)
   4c128:	90c00115 	stw	r3,4(r18)
   4c12c:	00c006c4 	movi	r3,27
   4c130:	19804536 	bltu	r3,r6,4c248 <_realloc_r+0x470>
   4c134:	90800204 	addi	r2,r18,8
   4c138:	a8c00204 	addi	r3,r21,8
   4c13c:	003f6306 	br	4becc <__alt_data_end+0xfffcbecc>
   4c140:	9005883a 	mov	r2,r18
   4c144:	a8c00017 	ldw	r3,0(r21)
   4c148:	b821883a 	mov	r16,r23
   4c14c:	b027883a 	mov	r19,r22
   4c150:	10c00015 	stw	r3,0(r2)
   4c154:	a8c00117 	ldw	r3,4(r21)
   4c158:	10c00115 	stw	r3,4(r2)
   4c15c:	a8c00217 	ldw	r3,8(r21)
   4c160:	10c00215 	stw	r3,8(r2)
   4c164:	003f6a06 	br	4bf10 <__alt_data_end+0xfffcbf10>
   4c168:	9c67883a 	add	r19,r19,r17
   4c16c:	4445c83a 	sub	r2,r8,r17
   4c170:	e4c00215 	stw	r19,8(fp)
   4c174:	10800054 	ori	r2,r2,1
   4c178:	98800115 	stw	r2,4(r19)
   4c17c:	a8bfff17 	ldw	r2,-4(r21)
   4c180:	a009883a 	mov	r4,r20
   4c184:	1080004c 	andi	r2,r2,1
   4c188:	1462b03a 	or	r17,r2,r17
   4c18c:	ac7fff15 	stw	r17,-4(r21)
   4c190:	004ed0c0 	call	4ed0c <__malloc_unlock>
   4c194:	a805883a 	mov	r2,r21
   4c198:	003f6b06 	br	4bf48 <__alt_data_end+0xfffcbf48>
   4c19c:	a80b883a 	mov	r5,r21
   4c1a0:	9009883a 	mov	r4,r18
   4c1a4:	004bc1c0 	call	4bc1c <memmove>
   4c1a8:	003f4e06 	br	4bee4 <__alt_data_end+0xfffcbee4>
   4c1ac:	89000404 	addi	r4,r17,16
   4c1b0:	b93fbc16 	blt	r23,r4,4c0a4 <__alt_data_end+0xfffcc0a4>
   4c1b4:	b0800317 	ldw	r2,12(r22)
   4c1b8:	b0c00217 	ldw	r3,8(r22)
   4c1bc:	81bfff04 	addi	r6,r16,-4
   4c1c0:	01000904 	movi	r4,36
   4c1c4:	18800315 	stw	r2,12(r3)
   4c1c8:	10c00215 	stw	r3,8(r2)
   4c1cc:	b4800204 	addi	r18,r22,8
   4c1d0:	21804336 	bltu	r4,r6,4c2e0 <_realloc_r+0x508>
   4c1d4:	008004c4 	movi	r2,19
   4c1d8:	11803f2e 	bgeu	r2,r6,4c2d8 <_realloc_r+0x500>
   4c1dc:	a8800017 	ldw	r2,0(r21)
   4c1e0:	b0800215 	stw	r2,8(r22)
   4c1e4:	a8800117 	ldw	r2,4(r21)
   4c1e8:	b0800315 	stw	r2,12(r22)
   4c1ec:	008006c4 	movi	r2,27
   4c1f0:	11803f36 	bltu	r2,r6,4c2f0 <_realloc_r+0x518>
   4c1f4:	b0800404 	addi	r2,r22,16
   4c1f8:	ad400204 	addi	r21,r21,8
   4c1fc:	a8c00017 	ldw	r3,0(r21)
   4c200:	10c00015 	stw	r3,0(r2)
   4c204:	a8c00117 	ldw	r3,4(r21)
   4c208:	10c00115 	stw	r3,4(r2)
   4c20c:	a8c00217 	ldw	r3,8(r21)
   4c210:	10c00215 	stw	r3,8(r2)
   4c214:	b447883a 	add	r3,r22,r17
   4c218:	bc45c83a 	sub	r2,r23,r17
   4c21c:	e0c00215 	stw	r3,8(fp)
   4c220:	10800054 	ori	r2,r2,1
   4c224:	18800115 	stw	r2,4(r3)
   4c228:	b0800117 	ldw	r2,4(r22)
   4c22c:	a009883a 	mov	r4,r20
   4c230:	1080004c 	andi	r2,r2,1
   4c234:	1462b03a 	or	r17,r2,r17
   4c238:	b4400115 	stw	r17,4(r22)
   4c23c:	004ed0c0 	call	4ed0c <__malloc_unlock>
   4c240:	9005883a 	mov	r2,r18
   4c244:	003f4006 	br	4bf48 <__alt_data_end+0xfffcbf48>
   4c248:	a8c00217 	ldw	r3,8(r21)
   4c24c:	90c00215 	stw	r3,8(r18)
   4c250:	a8c00317 	ldw	r3,12(r21)
   4c254:	90c00315 	stw	r3,12(r18)
   4c258:	30801126 	beq	r6,r2,4c2a0 <_realloc_r+0x4c8>
   4c25c:	90800404 	addi	r2,r18,16
   4c260:	a8c00404 	addi	r3,r21,16
   4c264:	003f1906 	br	4becc <__alt_data_end+0xfffcbecc>
   4c268:	90ffff17 	ldw	r3,-4(r18)
   4c26c:	00bfff04 	movi	r2,-4
   4c270:	a825883a 	mov	r18,r21
   4c274:	1884703a 	and	r2,r3,r2
   4c278:	80a1883a 	add	r16,r16,r2
   4c27c:	003f2406 	br	4bf10 <__alt_data_end+0xfffcbf10>
   4c280:	a8800217 	ldw	r2,8(r21)
   4c284:	b0800415 	stw	r2,16(r22)
   4c288:	a8800317 	ldw	r2,12(r21)
   4c28c:	b0800515 	stw	r2,20(r22)
   4c290:	31000a26 	beq	r6,r4,4c2bc <_realloc_r+0x4e4>
   4c294:	b0800604 	addi	r2,r22,24
   4c298:	ad400404 	addi	r21,r21,16
   4c29c:	003fa906 	br	4c144 <__alt_data_end+0xfffcc144>
   4c2a0:	a9000417 	ldw	r4,16(r21)
   4c2a4:	90800604 	addi	r2,r18,24
   4c2a8:	a8c00604 	addi	r3,r21,24
   4c2ac:	91000415 	stw	r4,16(r18)
   4c2b0:	a9000517 	ldw	r4,20(r21)
   4c2b4:	91000515 	stw	r4,20(r18)
   4c2b8:	003f0406 	br	4becc <__alt_data_end+0xfffcbecc>
   4c2bc:	a8c00417 	ldw	r3,16(r21)
   4c2c0:	ad400604 	addi	r21,r21,24
   4c2c4:	b0800804 	addi	r2,r22,32
   4c2c8:	b0c00615 	stw	r3,24(r22)
   4c2cc:	a8ffff17 	ldw	r3,-4(r21)
   4c2d0:	b0c00715 	stw	r3,28(r22)
   4c2d4:	003f9b06 	br	4c144 <__alt_data_end+0xfffcc144>
   4c2d8:	9005883a 	mov	r2,r18
   4c2dc:	003fc706 	br	4c1fc <__alt_data_end+0xfffcc1fc>
   4c2e0:	a80b883a 	mov	r5,r21
   4c2e4:	9009883a 	mov	r4,r18
   4c2e8:	004bc1c0 	call	4bc1c <memmove>
   4c2ec:	003fc906 	br	4c214 <__alt_data_end+0xfffcc214>
   4c2f0:	a8800217 	ldw	r2,8(r21)
   4c2f4:	b0800415 	stw	r2,16(r22)
   4c2f8:	a8800317 	ldw	r2,12(r21)
   4c2fc:	b0800515 	stw	r2,20(r22)
   4c300:	31000726 	beq	r6,r4,4c320 <_realloc_r+0x548>
   4c304:	b0800604 	addi	r2,r22,24
   4c308:	ad400404 	addi	r21,r21,16
   4c30c:	003fbb06 	br	4c1fc <__alt_data_end+0xfffcc1fc>
   4c310:	a009883a 	mov	r4,r20
   4c314:	004ed0c0 	call	4ed0c <__malloc_unlock>
   4c318:	0005883a 	mov	r2,zero
   4c31c:	003f0a06 	br	4bf48 <__alt_data_end+0xfffcbf48>
   4c320:	a8c00417 	ldw	r3,16(r21)
   4c324:	ad400604 	addi	r21,r21,24
   4c328:	b0800804 	addi	r2,r22,32
   4c32c:	b0c00615 	stw	r3,24(r22)
   4c330:	a8ffff17 	ldw	r3,-4(r21)
   4c334:	b0c00715 	stw	r3,28(r22)
   4c338:	003fb006 	br	4c1fc <__alt_data_end+0xfffcc1fc>

0004c33c <__swbuf_r>:
   4c33c:	defffb04 	addi	sp,sp,-20
   4c340:	dcc00315 	stw	r19,12(sp)
   4c344:	dc800215 	stw	r18,8(sp)
   4c348:	dc000015 	stw	r16,0(sp)
   4c34c:	dfc00415 	stw	ra,16(sp)
   4c350:	dc400115 	stw	r17,4(sp)
   4c354:	2025883a 	mov	r18,r4
   4c358:	2827883a 	mov	r19,r5
   4c35c:	3021883a 	mov	r16,r6
   4c360:	20000226 	beq	r4,zero,4c36c <__swbuf_r+0x30>
   4c364:	20800e17 	ldw	r2,56(r4)
   4c368:	10004226 	beq	r2,zero,4c474 <__swbuf_r+0x138>
   4c36c:	80800617 	ldw	r2,24(r16)
   4c370:	8100030b 	ldhu	r4,12(r16)
   4c374:	80800215 	stw	r2,8(r16)
   4c378:	2080020c 	andi	r2,r4,8
   4c37c:	10003626 	beq	r2,zero,4c458 <__swbuf_r+0x11c>
   4c380:	80c00417 	ldw	r3,16(r16)
   4c384:	18003426 	beq	r3,zero,4c458 <__swbuf_r+0x11c>
   4c388:	2088000c 	andi	r2,r4,8192
   4c38c:	9c403fcc 	andi	r17,r19,255
   4c390:	10001a26 	beq	r2,zero,4c3fc <__swbuf_r+0xc0>
   4c394:	80800017 	ldw	r2,0(r16)
   4c398:	81000517 	ldw	r4,20(r16)
   4c39c:	10c7c83a 	sub	r3,r2,r3
   4c3a0:	1900200e 	bge	r3,r4,4c424 <__swbuf_r+0xe8>
   4c3a4:	18c00044 	addi	r3,r3,1
   4c3a8:	81000217 	ldw	r4,8(r16)
   4c3ac:	11400044 	addi	r5,r2,1
   4c3b0:	81400015 	stw	r5,0(r16)
   4c3b4:	213fffc4 	addi	r4,r4,-1
   4c3b8:	81000215 	stw	r4,8(r16)
   4c3bc:	14c00005 	stb	r19,0(r2)
   4c3c0:	80800517 	ldw	r2,20(r16)
   4c3c4:	10c01e26 	beq	r2,r3,4c440 <__swbuf_r+0x104>
   4c3c8:	8080030b 	ldhu	r2,12(r16)
   4c3cc:	1080004c 	andi	r2,r2,1
   4c3d0:	10000226 	beq	r2,zero,4c3dc <__swbuf_r+0xa0>
   4c3d4:	00800284 	movi	r2,10
   4c3d8:	88801926 	beq	r17,r2,4c440 <__swbuf_r+0x104>
   4c3dc:	8805883a 	mov	r2,r17
   4c3e0:	dfc00417 	ldw	ra,16(sp)
   4c3e4:	dcc00317 	ldw	r19,12(sp)
   4c3e8:	dc800217 	ldw	r18,8(sp)
   4c3ec:	dc400117 	ldw	r17,4(sp)
   4c3f0:	dc000017 	ldw	r16,0(sp)
   4c3f4:	dec00504 	addi	sp,sp,20
   4c3f8:	f800283a 	ret
   4c3fc:	81401917 	ldw	r5,100(r16)
   4c400:	00b7ffc4 	movi	r2,-8193
   4c404:	21080014 	ori	r4,r4,8192
   4c408:	2884703a 	and	r2,r5,r2
   4c40c:	80801915 	stw	r2,100(r16)
   4c410:	80800017 	ldw	r2,0(r16)
   4c414:	8100030d 	sth	r4,12(r16)
   4c418:	81000517 	ldw	r4,20(r16)
   4c41c:	10c7c83a 	sub	r3,r2,r3
   4c420:	193fe016 	blt	r3,r4,4c3a4 <__alt_data_end+0xfffcc3a4>
   4c424:	800b883a 	mov	r5,r16
   4c428:	9009883a 	mov	r4,r18
   4c42c:	00470300 	call	47030 <_fflush_r>
   4c430:	1000071e 	bne	r2,zero,4c450 <__swbuf_r+0x114>
   4c434:	80800017 	ldw	r2,0(r16)
   4c438:	00c00044 	movi	r3,1
   4c43c:	003fda06 	br	4c3a8 <__alt_data_end+0xfffcc3a8>
   4c440:	800b883a 	mov	r5,r16
   4c444:	9009883a 	mov	r4,r18
   4c448:	00470300 	call	47030 <_fflush_r>
   4c44c:	103fe326 	beq	r2,zero,4c3dc <__alt_data_end+0xfffcc3dc>
   4c450:	00bfffc4 	movi	r2,-1
   4c454:	003fe206 	br	4c3e0 <__alt_data_end+0xfffcc3e0>
   4c458:	800b883a 	mov	r5,r16
   4c45c:	9009883a 	mov	r4,r18
   4c460:	00454380 	call	45438 <__swsetup_r>
   4c464:	103ffa1e 	bne	r2,zero,4c450 <__alt_data_end+0xfffcc450>
   4c468:	8100030b 	ldhu	r4,12(r16)
   4c46c:	80c00417 	ldw	r3,16(r16)
   4c470:	003fc506 	br	4c388 <__alt_data_end+0xfffcc388>
   4c474:	004740c0 	call	4740c <__sinit>
   4c478:	003fbc06 	br	4c36c <__alt_data_end+0xfffcc36c>

0004c47c <__swbuf>:
   4c47c:	00800174 	movhi	r2,5
   4c480:	108b8e04 	addi	r2,r2,11832
   4c484:	280d883a 	mov	r6,r5
   4c488:	200b883a 	mov	r5,r4
   4c48c:	11000017 	ldw	r4,0(r2)
   4c490:	004c33c1 	jmpi	4c33c <__swbuf_r>

0004c494 <_wcrtomb_r>:
   4c494:	defff604 	addi	sp,sp,-40
   4c498:	00800174 	movhi	r2,5
   4c49c:	dc800815 	stw	r18,32(sp)
   4c4a0:	dc400715 	stw	r17,28(sp)
   4c4a4:	dc000615 	stw	r16,24(sp)
   4c4a8:	108b9204 	addi	r2,r2,11848
   4c4ac:	dfc00915 	stw	ra,36(sp)
   4c4b0:	2021883a 	mov	r16,r4
   4c4b4:	3823883a 	mov	r17,r7
   4c4b8:	14800017 	ldw	r18,0(r2)
   4c4bc:	28001426 	beq	r5,zero,4c510 <_wcrtomb_r+0x7c>
   4c4c0:	d9400415 	stw	r5,16(sp)
   4c4c4:	d9800515 	stw	r6,20(sp)
   4c4c8:	0047a940 	call	47a94 <__locale_charset>
   4c4cc:	d9800517 	ldw	r6,20(sp)
   4c4d0:	d9400417 	ldw	r5,16(sp)
   4c4d4:	100f883a 	mov	r7,r2
   4c4d8:	dc400015 	stw	r17,0(sp)
   4c4dc:	8009883a 	mov	r4,r16
   4c4e0:	903ee83a 	callr	r18
   4c4e4:	00ffffc4 	movi	r3,-1
   4c4e8:	10c0031e 	bne	r2,r3,4c4f8 <_wcrtomb_r+0x64>
   4c4ec:	88000015 	stw	zero,0(r17)
   4c4f0:	00c02284 	movi	r3,138
   4c4f4:	80c00015 	stw	r3,0(r16)
   4c4f8:	dfc00917 	ldw	ra,36(sp)
   4c4fc:	dc800817 	ldw	r18,32(sp)
   4c500:	dc400717 	ldw	r17,28(sp)
   4c504:	dc000617 	ldw	r16,24(sp)
   4c508:	dec00a04 	addi	sp,sp,40
   4c50c:	f800283a 	ret
   4c510:	0047a940 	call	47a94 <__locale_charset>
   4c514:	100f883a 	mov	r7,r2
   4c518:	dc400015 	stw	r17,0(sp)
   4c51c:	000d883a 	mov	r6,zero
   4c520:	d9400104 	addi	r5,sp,4
   4c524:	8009883a 	mov	r4,r16
   4c528:	903ee83a 	callr	r18
   4c52c:	003fed06 	br	4c4e4 <__alt_data_end+0xfffcc4e4>

0004c530 <wcrtomb>:
   4c530:	defff604 	addi	sp,sp,-40
   4c534:	00800174 	movhi	r2,5
   4c538:	dc800615 	stw	r18,24(sp)
   4c53c:	dc400515 	stw	r17,20(sp)
   4c540:	108b8e04 	addi	r2,r2,11832
   4c544:	dfc00915 	stw	ra,36(sp)
   4c548:	dd000815 	stw	r20,32(sp)
   4c54c:	dcc00715 	stw	r19,28(sp)
   4c550:	dc000415 	stw	r16,16(sp)
   4c554:	3025883a 	mov	r18,r6
   4c558:	14400017 	ldw	r17,0(r2)
   4c55c:	20001926 	beq	r4,zero,4c5c4 <wcrtomb+0x94>
   4c560:	00800174 	movhi	r2,5
   4c564:	108b9204 	addi	r2,r2,11848
   4c568:	15000017 	ldw	r20,0(r2)
   4c56c:	2021883a 	mov	r16,r4
   4c570:	2827883a 	mov	r19,r5
   4c574:	0047a940 	call	47a94 <__locale_charset>
   4c578:	100f883a 	mov	r7,r2
   4c57c:	dc800015 	stw	r18,0(sp)
   4c580:	980d883a 	mov	r6,r19
   4c584:	800b883a 	mov	r5,r16
   4c588:	8809883a 	mov	r4,r17
   4c58c:	a03ee83a 	callr	r20
   4c590:	00ffffc4 	movi	r3,-1
   4c594:	10c0031e 	bne	r2,r3,4c5a4 <wcrtomb+0x74>
   4c598:	90000015 	stw	zero,0(r18)
   4c59c:	00c02284 	movi	r3,138
   4c5a0:	88c00015 	stw	r3,0(r17)
   4c5a4:	dfc00917 	ldw	ra,36(sp)
   4c5a8:	dd000817 	ldw	r20,32(sp)
   4c5ac:	dcc00717 	ldw	r19,28(sp)
   4c5b0:	dc800617 	ldw	r18,24(sp)
   4c5b4:	dc400517 	ldw	r17,20(sp)
   4c5b8:	dc000417 	ldw	r16,16(sp)
   4c5bc:	dec00a04 	addi	sp,sp,40
   4c5c0:	f800283a 	ret
   4c5c4:	00800174 	movhi	r2,5
   4c5c8:	108b9204 	addi	r2,r2,11848
   4c5cc:	14000017 	ldw	r16,0(r2)
   4c5d0:	0047a940 	call	47a94 <__locale_charset>
   4c5d4:	100f883a 	mov	r7,r2
   4c5d8:	dc800015 	stw	r18,0(sp)
   4c5dc:	000d883a 	mov	r6,zero
   4c5e0:	d9400104 	addi	r5,sp,4
   4c5e4:	8809883a 	mov	r4,r17
   4c5e8:	803ee83a 	callr	r16
   4c5ec:	003fe806 	br	4c590 <__alt_data_end+0xfffcc590>

0004c5f0 <__ascii_wctomb>:
   4c5f0:	28000526 	beq	r5,zero,4c608 <__ascii_wctomb+0x18>
   4c5f4:	00803fc4 	movi	r2,255
   4c5f8:	11800536 	bltu	r2,r6,4c610 <__ascii_wctomb+0x20>
   4c5fc:	29800005 	stb	r6,0(r5)
   4c600:	00800044 	movi	r2,1
   4c604:	f800283a 	ret
   4c608:	0005883a 	mov	r2,zero
   4c60c:	f800283a 	ret
   4c610:	00802284 	movi	r2,138
   4c614:	20800015 	stw	r2,0(r4)
   4c618:	00bfffc4 	movi	r2,-1
   4c61c:	f800283a 	ret

0004c620 <_wctomb_r>:
   4c620:	00800174 	movhi	r2,5
   4c624:	defff904 	addi	sp,sp,-28
   4c628:	108b9204 	addi	r2,r2,11848
   4c62c:	dfc00615 	stw	ra,24(sp)
   4c630:	dc400515 	stw	r17,20(sp)
   4c634:	dc000415 	stw	r16,16(sp)
   4c638:	3823883a 	mov	r17,r7
   4c63c:	14000017 	ldw	r16,0(r2)
   4c640:	d9000115 	stw	r4,4(sp)
   4c644:	d9400215 	stw	r5,8(sp)
   4c648:	d9800315 	stw	r6,12(sp)
   4c64c:	0047a940 	call	47a94 <__locale_charset>
   4c650:	d9800317 	ldw	r6,12(sp)
   4c654:	d9400217 	ldw	r5,8(sp)
   4c658:	d9000117 	ldw	r4,4(sp)
   4c65c:	100f883a 	mov	r7,r2
   4c660:	dc400015 	stw	r17,0(sp)
   4c664:	803ee83a 	callr	r16
   4c668:	dfc00617 	ldw	ra,24(sp)
   4c66c:	dc400517 	ldw	r17,20(sp)
   4c670:	dc000417 	ldw	r16,16(sp)
   4c674:	dec00704 	addi	sp,sp,28
   4c678:	f800283a 	ret

0004c67c <__udivdi3>:
   4c67c:	defff504 	addi	sp,sp,-44
   4c680:	dcc00415 	stw	r19,16(sp)
   4c684:	dc000115 	stw	r16,4(sp)
   4c688:	dfc00a15 	stw	ra,40(sp)
   4c68c:	df000915 	stw	fp,36(sp)
   4c690:	ddc00815 	stw	r23,32(sp)
   4c694:	dd800715 	stw	r22,28(sp)
   4c698:	dd400615 	stw	r21,24(sp)
   4c69c:	dd000515 	stw	r20,20(sp)
   4c6a0:	dc800315 	stw	r18,12(sp)
   4c6a4:	dc400215 	stw	r17,8(sp)
   4c6a8:	2027883a 	mov	r19,r4
   4c6ac:	2821883a 	mov	r16,r5
   4c6b0:	3800411e 	bne	r7,zero,4c7b8 <__udivdi3+0x13c>
   4c6b4:	3023883a 	mov	r17,r6
   4c6b8:	2025883a 	mov	r18,r4
   4c6bc:	2980522e 	bgeu	r5,r6,4c808 <__udivdi3+0x18c>
   4c6c0:	00bfffd4 	movui	r2,65535
   4c6c4:	282d883a 	mov	r22,r5
   4c6c8:	1180a836 	bltu	r2,r6,4c96c <__udivdi3+0x2f0>
   4c6cc:	00803fc4 	movi	r2,255
   4c6d0:	1185803a 	cmpltu	r2,r2,r6
   4c6d4:	100490fa 	slli	r2,r2,3
   4c6d8:	3086d83a 	srl	r3,r6,r2
   4c6dc:	01000174 	movhi	r4,5
   4c6e0:	2103fb04 	addi	r4,r4,4076
   4c6e4:	20c7883a 	add	r3,r4,r3
   4c6e8:	18c00003 	ldbu	r3,0(r3)
   4c6ec:	1885883a 	add	r2,r3,r2
   4c6f0:	00c00804 	movi	r3,32
   4c6f4:	1887c83a 	sub	r3,r3,r2
   4c6f8:	18000526 	beq	r3,zero,4c710 <__udivdi3+0x94>
   4c6fc:	80e0983a 	sll	r16,r16,r3
   4c700:	9884d83a 	srl	r2,r19,r2
   4c704:	30e2983a 	sll	r17,r6,r3
   4c708:	98e4983a 	sll	r18,r19,r3
   4c70c:	142cb03a 	or	r22,r2,r16
   4c710:	882ad43a 	srli	r21,r17,16
   4c714:	b009883a 	mov	r4,r22
   4c718:	8d3fffcc 	andi	r20,r17,65535
   4c71c:	a80b883a 	mov	r5,r21
   4c720:	0040bdc0 	call	40bdc <__umodsi3>
   4c724:	b009883a 	mov	r4,r22
   4c728:	a80b883a 	mov	r5,r21
   4c72c:	1027883a 	mov	r19,r2
   4c730:	0040b780 	call	40b78 <__udivsi3>
   4c734:	102d883a 	mov	r22,r2
   4c738:	9826943a 	slli	r19,r19,16
   4c73c:	9004d43a 	srli	r2,r18,16
   4c740:	a5a1383a 	mul	r16,r20,r22
   4c744:	14c4b03a 	or	r2,r2,r19
   4c748:	1400052e 	bgeu	r2,r16,4c760 <__udivdi3+0xe4>
   4c74c:	1445883a 	add	r2,r2,r17
   4c750:	b0ffffc4 	addi	r3,r22,-1
   4c754:	14400136 	bltu	r2,r17,4c75c <__udivdi3+0xe0>
   4c758:	14012336 	bltu	r2,r16,4cbe8 <__udivdi3+0x56c>
   4c75c:	182d883a 	mov	r22,r3
   4c760:	1421c83a 	sub	r16,r2,r16
   4c764:	a80b883a 	mov	r5,r21
   4c768:	8009883a 	mov	r4,r16
   4c76c:	0040bdc0 	call	40bdc <__umodsi3>
   4c770:	1027883a 	mov	r19,r2
   4c774:	a80b883a 	mov	r5,r21
   4c778:	8009883a 	mov	r4,r16
   4c77c:	0040b780 	call	40b78 <__udivsi3>
   4c780:	9826943a 	slli	r19,r19,16
   4c784:	a0a9383a 	mul	r20,r20,r2
   4c788:	94bfffcc 	andi	r18,r18,65535
   4c78c:	94e4b03a 	or	r18,r18,r19
   4c790:	9500052e 	bgeu	r18,r20,4c7a8 <__udivdi3+0x12c>
   4c794:	8ca5883a 	add	r18,r17,r18
   4c798:	10ffffc4 	addi	r3,r2,-1
   4c79c:	9440f136 	bltu	r18,r17,4cb64 <__udivdi3+0x4e8>
   4c7a0:	9500f02e 	bgeu	r18,r20,4cb64 <__udivdi3+0x4e8>
   4c7a4:	10bfff84 	addi	r2,r2,-2
   4c7a8:	b00c943a 	slli	r6,r22,16
   4c7ac:	0007883a 	mov	r3,zero
   4c7b0:	3084b03a 	or	r2,r6,r2
   4c7b4:	00005906 	br	4c91c <__udivdi3+0x2a0>
   4c7b8:	29c05636 	bltu	r5,r7,4c914 <__udivdi3+0x298>
   4c7bc:	00bfffd4 	movui	r2,65535
   4c7c0:	11c0622e 	bgeu	r2,r7,4c94c <__udivdi3+0x2d0>
   4c7c4:	00804034 	movhi	r2,256
   4c7c8:	10bfffc4 	addi	r2,r2,-1
   4c7cc:	11c0ee36 	bltu	r2,r7,4cb88 <__udivdi3+0x50c>
   4c7d0:	00800404 	movi	r2,16
   4c7d4:	3886d83a 	srl	r3,r7,r2
   4c7d8:	01000174 	movhi	r4,5
   4c7dc:	2103fb04 	addi	r4,r4,4076
   4c7e0:	20c7883a 	add	r3,r4,r3
   4c7e4:	18c00003 	ldbu	r3,0(r3)
   4c7e8:	05400804 	movi	r21,32
   4c7ec:	1885883a 	add	r2,r3,r2
   4c7f0:	a8abc83a 	sub	r21,r21,r2
   4c7f4:	a800621e 	bne	r21,zero,4c980 <__udivdi3+0x304>
   4c7f8:	3c00e936 	bltu	r7,r16,4cba0 <__udivdi3+0x524>
   4c7fc:	9985403a 	cmpgeu	r2,r19,r6
   4c800:	0007883a 	mov	r3,zero
   4c804:	00004506 	br	4c91c <__udivdi3+0x2a0>
   4c808:	3000041e 	bne	r6,zero,4c81c <__udivdi3+0x1a0>
   4c80c:	000b883a 	mov	r5,zero
   4c810:	01000044 	movi	r4,1
   4c814:	0040b780 	call	40b78 <__udivsi3>
   4c818:	1023883a 	mov	r17,r2
   4c81c:	00bfffd4 	movui	r2,65535
   4c820:	14404e2e 	bgeu	r2,r17,4c95c <__udivdi3+0x2e0>
   4c824:	00804034 	movhi	r2,256
   4c828:	10bfffc4 	addi	r2,r2,-1
   4c82c:	1440d836 	bltu	r2,r17,4cb90 <__udivdi3+0x514>
   4c830:	00800404 	movi	r2,16
   4c834:	8886d83a 	srl	r3,r17,r2
   4c838:	01000174 	movhi	r4,5
   4c83c:	2103fb04 	addi	r4,r4,4076
   4c840:	20c7883a 	add	r3,r4,r3
   4c844:	18c00003 	ldbu	r3,0(r3)
   4c848:	1885883a 	add	r2,r3,r2
   4c84c:	00c00804 	movi	r3,32
   4c850:	1887c83a 	sub	r3,r3,r2
   4c854:	18008f1e 	bne	r3,zero,4ca94 <__udivdi3+0x418>
   4c858:	882ad43a 	srli	r21,r17,16
   4c85c:	8461c83a 	sub	r16,r16,r17
   4c860:	8d3fffcc 	andi	r20,r17,65535
   4c864:	00c00044 	movi	r3,1
   4c868:	8009883a 	mov	r4,r16
   4c86c:	a80b883a 	mov	r5,r21
   4c870:	d8c00015 	stw	r3,0(sp)
   4c874:	0040bdc0 	call	40bdc <__umodsi3>
   4c878:	8009883a 	mov	r4,r16
   4c87c:	a80b883a 	mov	r5,r21
   4c880:	1027883a 	mov	r19,r2
   4c884:	0040b780 	call	40b78 <__udivsi3>
   4c888:	9826943a 	slli	r19,r19,16
   4c88c:	9008d43a 	srli	r4,r18,16
   4c890:	1521383a 	mul	r16,r2,r20
   4c894:	102d883a 	mov	r22,r2
   4c898:	24c8b03a 	or	r4,r4,r19
   4c89c:	d8c00017 	ldw	r3,0(sp)
   4c8a0:	2400052e 	bgeu	r4,r16,4c8b8 <__udivdi3+0x23c>
   4c8a4:	2449883a 	add	r4,r4,r17
   4c8a8:	b0bfffc4 	addi	r2,r22,-1
   4c8ac:	24400136 	bltu	r4,r17,4c8b4 <__udivdi3+0x238>
   4c8b0:	2400ca36 	bltu	r4,r16,4cbdc <__udivdi3+0x560>
   4c8b4:	102d883a 	mov	r22,r2
   4c8b8:	2421c83a 	sub	r16,r4,r16
   4c8bc:	a80b883a 	mov	r5,r21
   4c8c0:	8009883a 	mov	r4,r16
   4c8c4:	d8c00015 	stw	r3,0(sp)
   4c8c8:	0040bdc0 	call	40bdc <__umodsi3>
   4c8cc:	1027883a 	mov	r19,r2
   4c8d0:	a80b883a 	mov	r5,r21
   4c8d4:	8009883a 	mov	r4,r16
   4c8d8:	0040b780 	call	40b78 <__udivsi3>
   4c8dc:	9826943a 	slli	r19,r19,16
   4c8e0:	1529383a 	mul	r20,r2,r20
   4c8e4:	94bfffcc 	andi	r18,r18,65535
   4c8e8:	94e4b03a 	or	r18,r18,r19
   4c8ec:	d8c00017 	ldw	r3,0(sp)
   4c8f0:	9500052e 	bgeu	r18,r20,4c908 <__udivdi3+0x28c>
   4c8f4:	8ca5883a 	add	r18,r17,r18
   4c8f8:	113fffc4 	addi	r4,r2,-1
   4c8fc:	94409736 	bltu	r18,r17,4cb5c <__udivdi3+0x4e0>
   4c900:	9500962e 	bgeu	r18,r20,4cb5c <__udivdi3+0x4e0>
   4c904:	10bfff84 	addi	r2,r2,-2
   4c908:	b00c943a 	slli	r6,r22,16
   4c90c:	3084b03a 	or	r2,r6,r2
   4c910:	00000206 	br	4c91c <__udivdi3+0x2a0>
   4c914:	0007883a 	mov	r3,zero
   4c918:	0005883a 	mov	r2,zero
   4c91c:	dfc00a17 	ldw	ra,40(sp)
   4c920:	df000917 	ldw	fp,36(sp)
   4c924:	ddc00817 	ldw	r23,32(sp)
   4c928:	dd800717 	ldw	r22,28(sp)
   4c92c:	dd400617 	ldw	r21,24(sp)
   4c930:	dd000517 	ldw	r20,20(sp)
   4c934:	dcc00417 	ldw	r19,16(sp)
   4c938:	dc800317 	ldw	r18,12(sp)
   4c93c:	dc400217 	ldw	r17,8(sp)
   4c940:	dc000117 	ldw	r16,4(sp)
   4c944:	dec00b04 	addi	sp,sp,44
   4c948:	f800283a 	ret
   4c94c:	00803fc4 	movi	r2,255
   4c950:	11c5803a 	cmpltu	r2,r2,r7
   4c954:	100490fa 	slli	r2,r2,3
   4c958:	003f9e06 	br	4c7d4 <__alt_data_end+0xfffcc7d4>
   4c95c:	00803fc4 	movi	r2,255
   4c960:	1445803a 	cmpltu	r2,r2,r17
   4c964:	100490fa 	slli	r2,r2,3
   4c968:	003fb206 	br	4c834 <__alt_data_end+0xfffcc834>
   4c96c:	00804034 	movhi	r2,256
   4c970:	10bfffc4 	addi	r2,r2,-1
   4c974:	11808836 	bltu	r2,r6,4cb98 <__udivdi3+0x51c>
   4c978:	00800404 	movi	r2,16
   4c97c:	003f5606 	br	4c6d8 <__alt_data_end+0xfffcc6d8>
   4c980:	30aed83a 	srl	r23,r6,r2
   4c984:	3d4e983a 	sll	r7,r7,r21
   4c988:	80acd83a 	srl	r22,r16,r2
   4c98c:	9884d83a 	srl	r2,r19,r2
   4c990:	3deeb03a 	or	r23,r7,r23
   4c994:	b824d43a 	srli	r18,r23,16
   4c998:	8560983a 	sll	r16,r16,r21
   4c99c:	b009883a 	mov	r4,r22
   4c9a0:	900b883a 	mov	r5,r18
   4c9a4:	3568983a 	sll	r20,r6,r21
   4c9a8:	1420b03a 	or	r16,r2,r16
   4c9ac:	0040bdc0 	call	40bdc <__umodsi3>
   4c9b0:	b009883a 	mov	r4,r22
   4c9b4:	900b883a 	mov	r5,r18
   4c9b8:	1023883a 	mov	r17,r2
   4c9bc:	0040b780 	call	40b78 <__udivsi3>
   4c9c0:	8808943a 	slli	r4,r17,16
   4c9c4:	bf3fffcc 	andi	fp,r23,65535
   4c9c8:	8006d43a 	srli	r3,r16,16
   4c9cc:	e0a3383a 	mul	r17,fp,r2
   4c9d0:	100d883a 	mov	r6,r2
   4c9d4:	1906b03a 	or	r3,r3,r4
   4c9d8:	1c40042e 	bgeu	r3,r17,4c9ec <__udivdi3+0x370>
   4c9dc:	1dc7883a 	add	r3,r3,r23
   4c9e0:	10bfffc4 	addi	r2,r2,-1
   4c9e4:	1dc0752e 	bgeu	r3,r23,4cbbc <__udivdi3+0x540>
   4c9e8:	100d883a 	mov	r6,r2
   4c9ec:	1c63c83a 	sub	r17,r3,r17
   4c9f0:	900b883a 	mov	r5,r18
   4c9f4:	8809883a 	mov	r4,r17
   4c9f8:	d9800015 	stw	r6,0(sp)
   4c9fc:	0040bdc0 	call	40bdc <__umodsi3>
   4ca00:	102d883a 	mov	r22,r2
   4ca04:	8809883a 	mov	r4,r17
   4ca08:	900b883a 	mov	r5,r18
   4ca0c:	0040b780 	call	40b78 <__udivsi3>
   4ca10:	b02c943a 	slli	r22,r22,16
   4ca14:	e089383a 	mul	r4,fp,r2
   4ca18:	843fffcc 	andi	r16,r16,65535
   4ca1c:	85a0b03a 	or	r16,r16,r22
   4ca20:	d9800017 	ldw	r6,0(sp)
   4ca24:	8100042e 	bgeu	r16,r4,4ca38 <__udivdi3+0x3bc>
   4ca28:	85e1883a 	add	r16,r16,r23
   4ca2c:	10ffffc4 	addi	r3,r2,-1
   4ca30:	85c05e2e 	bgeu	r16,r23,4cbac <__udivdi3+0x530>
   4ca34:	1805883a 	mov	r2,r3
   4ca38:	300c943a 	slli	r6,r6,16
   4ca3c:	a17fffcc 	andi	r5,r20,65535
   4ca40:	a028d43a 	srli	r20,r20,16
   4ca44:	3084b03a 	or	r2,r6,r2
   4ca48:	10ffffcc 	andi	r3,r2,65535
   4ca4c:	100cd43a 	srli	r6,r2,16
   4ca50:	194f383a 	mul	r7,r3,r5
   4ca54:	1d07383a 	mul	r3,r3,r20
   4ca58:	314b383a 	mul	r5,r6,r5
   4ca5c:	3810d43a 	srli	r8,r7,16
   4ca60:	8121c83a 	sub	r16,r16,r4
   4ca64:	1947883a 	add	r3,r3,r5
   4ca68:	40c7883a 	add	r3,r8,r3
   4ca6c:	350d383a 	mul	r6,r6,r20
   4ca70:	1940022e 	bgeu	r3,r5,4ca7c <__udivdi3+0x400>
   4ca74:	01000074 	movhi	r4,1
   4ca78:	310d883a 	add	r6,r6,r4
   4ca7c:	1828d43a 	srli	r20,r3,16
   4ca80:	a18d883a 	add	r6,r20,r6
   4ca84:	81803e36 	bltu	r16,r6,4cb80 <__udivdi3+0x504>
   4ca88:	81803826 	beq	r16,r6,4cb6c <__udivdi3+0x4f0>
   4ca8c:	0007883a 	mov	r3,zero
   4ca90:	003fa206 	br	4c91c <__alt_data_end+0xfffcc91c>
   4ca94:	88e2983a 	sll	r17,r17,r3
   4ca98:	80a8d83a 	srl	r20,r16,r2
   4ca9c:	80e0983a 	sll	r16,r16,r3
   4caa0:	882ad43a 	srli	r21,r17,16
   4caa4:	9884d83a 	srl	r2,r19,r2
   4caa8:	a009883a 	mov	r4,r20
   4caac:	a80b883a 	mov	r5,r21
   4cab0:	142eb03a 	or	r23,r2,r16
   4cab4:	98e4983a 	sll	r18,r19,r3
   4cab8:	0040bdc0 	call	40bdc <__umodsi3>
   4cabc:	a009883a 	mov	r4,r20
   4cac0:	a80b883a 	mov	r5,r21
   4cac4:	1021883a 	mov	r16,r2
   4cac8:	0040b780 	call	40b78 <__udivsi3>
   4cacc:	1039883a 	mov	fp,r2
   4cad0:	8d3fffcc 	andi	r20,r17,65535
   4cad4:	8020943a 	slli	r16,r16,16
   4cad8:	b804d43a 	srli	r2,r23,16
   4cadc:	a72d383a 	mul	r22,r20,fp
   4cae0:	1404b03a 	or	r2,r2,r16
   4cae4:	1580062e 	bgeu	r2,r22,4cb00 <__udivdi3+0x484>
   4cae8:	1445883a 	add	r2,r2,r17
   4caec:	e0ffffc4 	addi	r3,fp,-1
   4caf0:	14403836 	bltu	r2,r17,4cbd4 <__udivdi3+0x558>
   4caf4:	1580372e 	bgeu	r2,r22,4cbd4 <__udivdi3+0x558>
   4caf8:	e73fff84 	addi	fp,fp,-2
   4cafc:	1445883a 	add	r2,r2,r17
   4cb00:	15adc83a 	sub	r22,r2,r22
   4cb04:	a80b883a 	mov	r5,r21
   4cb08:	b009883a 	mov	r4,r22
   4cb0c:	0040bdc0 	call	40bdc <__umodsi3>
   4cb10:	1027883a 	mov	r19,r2
   4cb14:	b009883a 	mov	r4,r22
   4cb18:	a80b883a 	mov	r5,r21
   4cb1c:	0040b780 	call	40b78 <__udivsi3>
   4cb20:	9826943a 	slli	r19,r19,16
   4cb24:	a0a1383a 	mul	r16,r20,r2
   4cb28:	b93fffcc 	andi	r4,r23,65535
   4cb2c:	24c8b03a 	or	r4,r4,r19
   4cb30:	2400062e 	bgeu	r4,r16,4cb4c <__udivdi3+0x4d0>
   4cb34:	2449883a 	add	r4,r4,r17
   4cb38:	10ffffc4 	addi	r3,r2,-1
   4cb3c:	24402336 	bltu	r4,r17,4cbcc <__udivdi3+0x550>
   4cb40:	2400222e 	bgeu	r4,r16,4cbcc <__udivdi3+0x550>
   4cb44:	10bfff84 	addi	r2,r2,-2
   4cb48:	2449883a 	add	r4,r4,r17
   4cb4c:	e038943a 	slli	fp,fp,16
   4cb50:	2421c83a 	sub	r16,r4,r16
   4cb54:	e086b03a 	or	r3,fp,r2
   4cb58:	003f4306 	br	4c868 <__alt_data_end+0xfffcc868>
   4cb5c:	2005883a 	mov	r2,r4
   4cb60:	003f6906 	br	4c908 <__alt_data_end+0xfffcc908>
   4cb64:	1805883a 	mov	r2,r3
   4cb68:	003f0f06 	br	4c7a8 <__alt_data_end+0xfffcc7a8>
   4cb6c:	1806943a 	slli	r3,r3,16
   4cb70:	9d66983a 	sll	r19,r19,r21
   4cb74:	39ffffcc 	andi	r7,r7,65535
   4cb78:	19c7883a 	add	r3,r3,r7
   4cb7c:	98ffc32e 	bgeu	r19,r3,4ca8c <__alt_data_end+0xfffcca8c>
   4cb80:	10bfffc4 	addi	r2,r2,-1
   4cb84:	003fc106 	br	4ca8c <__alt_data_end+0xfffcca8c>
   4cb88:	00800604 	movi	r2,24
   4cb8c:	003f1106 	br	4c7d4 <__alt_data_end+0xfffcc7d4>
   4cb90:	00800604 	movi	r2,24
   4cb94:	003f2706 	br	4c834 <__alt_data_end+0xfffcc834>
   4cb98:	00800604 	movi	r2,24
   4cb9c:	003ece06 	br	4c6d8 <__alt_data_end+0xfffcc6d8>
   4cba0:	0007883a 	mov	r3,zero
   4cba4:	00800044 	movi	r2,1
   4cba8:	003f5c06 	br	4c91c <__alt_data_end+0xfffcc91c>
   4cbac:	813fa12e 	bgeu	r16,r4,4ca34 <__alt_data_end+0xfffcca34>
   4cbb0:	10bfff84 	addi	r2,r2,-2
   4cbb4:	85e1883a 	add	r16,r16,r23
   4cbb8:	003f9f06 	br	4ca38 <__alt_data_end+0xfffcca38>
   4cbbc:	1c7f8a2e 	bgeu	r3,r17,4c9e8 <__alt_data_end+0xfffcc9e8>
   4cbc0:	31bfff84 	addi	r6,r6,-2
   4cbc4:	1dc7883a 	add	r3,r3,r23
   4cbc8:	003f8806 	br	4c9ec <__alt_data_end+0xfffcc9ec>
   4cbcc:	1805883a 	mov	r2,r3
   4cbd0:	003fde06 	br	4cb4c <__alt_data_end+0xfffccb4c>
   4cbd4:	1839883a 	mov	fp,r3
   4cbd8:	003fc906 	br	4cb00 <__alt_data_end+0xfffccb00>
   4cbdc:	b5bfff84 	addi	r22,r22,-2
   4cbe0:	2449883a 	add	r4,r4,r17
   4cbe4:	003f3406 	br	4c8b8 <__alt_data_end+0xfffcc8b8>
   4cbe8:	b5bfff84 	addi	r22,r22,-2
   4cbec:	1445883a 	add	r2,r2,r17
   4cbf0:	003edb06 	br	4c760 <__alt_data_end+0xfffcc760>

0004cbf4 <__umoddi3>:
   4cbf4:	defff404 	addi	sp,sp,-48
   4cbf8:	df000a15 	stw	fp,40(sp)
   4cbfc:	dc400315 	stw	r17,12(sp)
   4cc00:	dc000215 	stw	r16,8(sp)
   4cc04:	dfc00b15 	stw	ra,44(sp)
   4cc08:	ddc00915 	stw	r23,36(sp)
   4cc0c:	dd800815 	stw	r22,32(sp)
   4cc10:	dd400715 	stw	r21,28(sp)
   4cc14:	dd000615 	stw	r20,24(sp)
   4cc18:	dcc00515 	stw	r19,20(sp)
   4cc1c:	dc800415 	stw	r18,16(sp)
   4cc20:	2021883a 	mov	r16,r4
   4cc24:	2823883a 	mov	r17,r5
   4cc28:	2839883a 	mov	fp,r5
   4cc2c:	38003c1e 	bne	r7,zero,4cd20 <__umoddi3+0x12c>
   4cc30:	3027883a 	mov	r19,r6
   4cc34:	2029883a 	mov	r20,r4
   4cc38:	2980512e 	bgeu	r5,r6,4cd80 <__umoddi3+0x18c>
   4cc3c:	00bfffd4 	movui	r2,65535
   4cc40:	11809a36 	bltu	r2,r6,4ceac <__umoddi3+0x2b8>
   4cc44:	01003fc4 	movi	r4,255
   4cc48:	2189803a 	cmpltu	r4,r4,r6
   4cc4c:	200890fa 	slli	r4,r4,3
   4cc50:	3104d83a 	srl	r2,r6,r4
   4cc54:	00c00174 	movhi	r3,5
   4cc58:	18c3fb04 	addi	r3,r3,4076
   4cc5c:	1885883a 	add	r2,r3,r2
   4cc60:	10c00003 	ldbu	r3,0(r2)
   4cc64:	00800804 	movi	r2,32
   4cc68:	1909883a 	add	r4,r3,r4
   4cc6c:	1125c83a 	sub	r18,r2,r4
   4cc70:	90000526 	beq	r18,zero,4cc88 <__umoddi3+0x94>
   4cc74:	8ca2983a 	sll	r17,r17,r18
   4cc78:	8108d83a 	srl	r4,r16,r4
   4cc7c:	34a6983a 	sll	r19,r6,r18
   4cc80:	84a8983a 	sll	r20,r16,r18
   4cc84:	2478b03a 	or	fp,r4,r17
   4cc88:	982ed43a 	srli	r23,r19,16
   4cc8c:	e009883a 	mov	r4,fp
   4cc90:	9dbfffcc 	andi	r22,r19,65535
   4cc94:	b80b883a 	mov	r5,r23
   4cc98:	0040bdc0 	call	40bdc <__umodsi3>
   4cc9c:	e009883a 	mov	r4,fp
   4cca0:	b80b883a 	mov	r5,r23
   4cca4:	102b883a 	mov	r21,r2
   4cca8:	0040b780 	call	40b78 <__udivsi3>
   4ccac:	a806943a 	slli	r3,r21,16
   4ccb0:	a008d43a 	srli	r4,r20,16
   4ccb4:	b085383a 	mul	r2,r22,r2
   4ccb8:	20c8b03a 	or	r4,r4,r3
   4ccbc:	2080032e 	bgeu	r4,r2,4cccc <__umoddi3+0xd8>
   4ccc0:	24c9883a 	add	r4,r4,r19
   4ccc4:	24c00136 	bltu	r4,r19,4cccc <__umoddi3+0xd8>
   4ccc8:	20811036 	bltu	r4,r2,4d10c <__umoddi3+0x518>
   4cccc:	20abc83a 	sub	r21,r4,r2
   4ccd0:	b80b883a 	mov	r5,r23
   4ccd4:	a809883a 	mov	r4,r21
   4ccd8:	0040bdc0 	call	40bdc <__umodsi3>
   4ccdc:	1023883a 	mov	r17,r2
   4cce0:	b80b883a 	mov	r5,r23
   4cce4:	a809883a 	mov	r4,r21
   4cce8:	0040b780 	call	40b78 <__udivsi3>
   4ccec:	8822943a 	slli	r17,r17,16
   4ccf0:	b085383a 	mul	r2,r22,r2
   4ccf4:	a0ffffcc 	andi	r3,r20,65535
   4ccf8:	1c46b03a 	or	r3,r3,r17
   4ccfc:	1880042e 	bgeu	r3,r2,4cd10 <__umoddi3+0x11c>
   4cd00:	1cc7883a 	add	r3,r3,r19
   4cd04:	1cc00236 	bltu	r3,r19,4cd10 <__umoddi3+0x11c>
   4cd08:	1880012e 	bgeu	r3,r2,4cd10 <__umoddi3+0x11c>
   4cd0c:	1cc7883a 	add	r3,r3,r19
   4cd10:	1885c83a 	sub	r2,r3,r2
   4cd14:	1484d83a 	srl	r2,r2,r18
   4cd18:	0007883a 	mov	r3,zero
   4cd1c:	00004f06 	br	4ce5c <__umoddi3+0x268>
   4cd20:	29c04c36 	bltu	r5,r7,4ce54 <__umoddi3+0x260>
   4cd24:	00bfffd4 	movui	r2,65535
   4cd28:	11c0582e 	bgeu	r2,r7,4ce8c <__umoddi3+0x298>
   4cd2c:	00804034 	movhi	r2,256
   4cd30:	10bfffc4 	addi	r2,r2,-1
   4cd34:	11c0e736 	bltu	r2,r7,4d0d4 <__umoddi3+0x4e0>
   4cd38:	01000404 	movi	r4,16
   4cd3c:	3904d83a 	srl	r2,r7,r4
   4cd40:	00c00174 	movhi	r3,5
   4cd44:	18c3fb04 	addi	r3,r3,4076
   4cd48:	1885883a 	add	r2,r3,r2
   4cd4c:	14c00003 	ldbu	r19,0(r2)
   4cd50:	00c00804 	movi	r3,32
   4cd54:	9927883a 	add	r19,r19,r4
   4cd58:	1ce9c83a 	sub	r20,r3,r19
   4cd5c:	a000581e 	bne	r20,zero,4cec0 <__umoddi3+0x2cc>
   4cd60:	3c400136 	bltu	r7,r17,4cd68 <__umoddi3+0x174>
   4cd64:	8180eb36 	bltu	r16,r6,4d114 <__umoddi3+0x520>
   4cd68:	8185c83a 	sub	r2,r16,r6
   4cd6c:	89e3c83a 	sub	r17,r17,r7
   4cd70:	8089803a 	cmpltu	r4,r16,r2
   4cd74:	8939c83a 	sub	fp,r17,r4
   4cd78:	e007883a 	mov	r3,fp
   4cd7c:	00003706 	br	4ce5c <__umoddi3+0x268>
   4cd80:	3000041e 	bne	r6,zero,4cd94 <__umoddi3+0x1a0>
   4cd84:	000b883a 	mov	r5,zero
   4cd88:	01000044 	movi	r4,1
   4cd8c:	0040b780 	call	40b78 <__udivsi3>
   4cd90:	1027883a 	mov	r19,r2
   4cd94:	00bfffd4 	movui	r2,65535
   4cd98:	14c0402e 	bgeu	r2,r19,4ce9c <__umoddi3+0x2a8>
   4cd9c:	00804034 	movhi	r2,256
   4cda0:	10bfffc4 	addi	r2,r2,-1
   4cda4:	14c0cd36 	bltu	r2,r19,4d0dc <__umoddi3+0x4e8>
   4cda8:	00800404 	movi	r2,16
   4cdac:	9886d83a 	srl	r3,r19,r2
   4cdb0:	01000174 	movhi	r4,5
   4cdb4:	2103fb04 	addi	r4,r4,4076
   4cdb8:	20c7883a 	add	r3,r4,r3
   4cdbc:	18c00003 	ldbu	r3,0(r3)
   4cdc0:	1887883a 	add	r3,r3,r2
   4cdc4:	00800804 	movi	r2,32
   4cdc8:	10e5c83a 	sub	r18,r2,r3
   4cdcc:	9000901e 	bne	r18,zero,4d010 <__umoddi3+0x41c>
   4cdd0:	982cd43a 	srli	r22,r19,16
   4cdd4:	8ce3c83a 	sub	r17,r17,r19
   4cdd8:	9d7fffcc 	andi	r21,r19,65535
   4cddc:	b00b883a 	mov	r5,r22
   4cde0:	8809883a 	mov	r4,r17
   4cde4:	0040bdc0 	call	40bdc <__umodsi3>
   4cde8:	8809883a 	mov	r4,r17
   4cdec:	b00b883a 	mov	r5,r22
   4cdf0:	1021883a 	mov	r16,r2
   4cdf4:	0040b780 	call	40b78 <__udivsi3>
   4cdf8:	8006943a 	slli	r3,r16,16
   4cdfc:	a008d43a 	srli	r4,r20,16
   4ce00:	1545383a 	mul	r2,r2,r21
   4ce04:	20c8b03a 	or	r4,r4,r3
   4ce08:	2080042e 	bgeu	r4,r2,4ce1c <__umoddi3+0x228>
   4ce0c:	24c9883a 	add	r4,r4,r19
   4ce10:	24c00236 	bltu	r4,r19,4ce1c <__umoddi3+0x228>
   4ce14:	2080012e 	bgeu	r4,r2,4ce1c <__umoddi3+0x228>
   4ce18:	24c9883a 	add	r4,r4,r19
   4ce1c:	20a1c83a 	sub	r16,r4,r2
   4ce20:	b00b883a 	mov	r5,r22
   4ce24:	8009883a 	mov	r4,r16
   4ce28:	0040bdc0 	call	40bdc <__umodsi3>
   4ce2c:	1023883a 	mov	r17,r2
   4ce30:	b00b883a 	mov	r5,r22
   4ce34:	8009883a 	mov	r4,r16
   4ce38:	0040b780 	call	40b78 <__udivsi3>
   4ce3c:	8822943a 	slli	r17,r17,16
   4ce40:	1545383a 	mul	r2,r2,r21
   4ce44:	a53fffcc 	andi	r20,r20,65535
   4ce48:	a446b03a 	or	r3,r20,r17
   4ce4c:	18bfb02e 	bgeu	r3,r2,4cd10 <__alt_data_end+0xfffccd10>
   4ce50:	003fab06 	br	4cd00 <__alt_data_end+0xfffccd00>
   4ce54:	2005883a 	mov	r2,r4
   4ce58:	2807883a 	mov	r3,r5
   4ce5c:	dfc00b17 	ldw	ra,44(sp)
   4ce60:	df000a17 	ldw	fp,40(sp)
   4ce64:	ddc00917 	ldw	r23,36(sp)
   4ce68:	dd800817 	ldw	r22,32(sp)
   4ce6c:	dd400717 	ldw	r21,28(sp)
   4ce70:	dd000617 	ldw	r20,24(sp)
   4ce74:	dcc00517 	ldw	r19,20(sp)
   4ce78:	dc800417 	ldw	r18,16(sp)
   4ce7c:	dc400317 	ldw	r17,12(sp)
   4ce80:	dc000217 	ldw	r16,8(sp)
   4ce84:	dec00c04 	addi	sp,sp,48
   4ce88:	f800283a 	ret
   4ce8c:	04c03fc4 	movi	r19,255
   4ce90:	99c9803a 	cmpltu	r4,r19,r7
   4ce94:	200890fa 	slli	r4,r4,3
   4ce98:	003fa806 	br	4cd3c <__alt_data_end+0xfffccd3c>
   4ce9c:	00803fc4 	movi	r2,255
   4cea0:	14c5803a 	cmpltu	r2,r2,r19
   4cea4:	100490fa 	slli	r2,r2,3
   4cea8:	003fc006 	br	4cdac <__alt_data_end+0xfffccdac>
   4ceac:	00804034 	movhi	r2,256
   4ceb0:	10bfffc4 	addi	r2,r2,-1
   4ceb4:	11808b36 	bltu	r2,r6,4d0e4 <__umoddi3+0x4f0>
   4ceb8:	01000404 	movi	r4,16
   4cebc:	003f6406 	br	4cc50 <__alt_data_end+0xfffccc50>
   4cec0:	34c4d83a 	srl	r2,r6,r19
   4cec4:	3d0e983a 	sll	r7,r7,r20
   4cec8:	8cf8d83a 	srl	fp,r17,r19
   4cecc:	8d10983a 	sll	r8,r17,r20
   4ced0:	38aab03a 	or	r21,r7,r2
   4ced4:	a82cd43a 	srli	r22,r21,16
   4ced8:	84e2d83a 	srl	r17,r16,r19
   4cedc:	e009883a 	mov	r4,fp
   4cee0:	b00b883a 	mov	r5,r22
   4cee4:	8a22b03a 	or	r17,r17,r8
   4cee8:	3524983a 	sll	r18,r6,r20
   4ceec:	0040bdc0 	call	40bdc <__umodsi3>
   4cef0:	e009883a 	mov	r4,fp
   4cef4:	b00b883a 	mov	r5,r22
   4cef8:	102f883a 	mov	r23,r2
   4cefc:	0040b780 	call	40b78 <__udivsi3>
   4cf00:	100d883a 	mov	r6,r2
   4cf04:	b808943a 	slli	r4,r23,16
   4cf08:	aa3fffcc 	andi	r8,r21,65535
   4cf0c:	8804d43a 	srli	r2,r17,16
   4cf10:	41af383a 	mul	r23,r8,r6
   4cf14:	8520983a 	sll	r16,r16,r20
   4cf18:	1104b03a 	or	r2,r2,r4
   4cf1c:	15c0042e 	bgeu	r2,r23,4cf30 <__umoddi3+0x33c>
   4cf20:	1545883a 	add	r2,r2,r21
   4cf24:	30ffffc4 	addi	r3,r6,-1
   4cf28:	1540742e 	bgeu	r2,r21,4d0fc <__umoddi3+0x508>
   4cf2c:	180d883a 	mov	r6,r3
   4cf30:	15efc83a 	sub	r23,r2,r23
   4cf34:	b00b883a 	mov	r5,r22
   4cf38:	b809883a 	mov	r4,r23
   4cf3c:	d9800115 	stw	r6,4(sp)
   4cf40:	da000015 	stw	r8,0(sp)
   4cf44:	0040bdc0 	call	40bdc <__umodsi3>
   4cf48:	b00b883a 	mov	r5,r22
   4cf4c:	b809883a 	mov	r4,r23
   4cf50:	1039883a 	mov	fp,r2
   4cf54:	0040b780 	call	40b78 <__udivsi3>
   4cf58:	da000017 	ldw	r8,0(sp)
   4cf5c:	e038943a 	slli	fp,fp,16
   4cf60:	100b883a 	mov	r5,r2
   4cf64:	4089383a 	mul	r4,r8,r2
   4cf68:	8a3fffcc 	andi	r8,r17,65535
   4cf6c:	4710b03a 	or	r8,r8,fp
   4cf70:	d9800117 	ldw	r6,4(sp)
   4cf74:	4100042e 	bgeu	r8,r4,4cf88 <__umoddi3+0x394>
   4cf78:	4551883a 	add	r8,r8,r21
   4cf7c:	10bfffc4 	addi	r2,r2,-1
   4cf80:	45405a2e 	bgeu	r8,r21,4d0ec <__umoddi3+0x4f8>
   4cf84:	100b883a 	mov	r5,r2
   4cf88:	300c943a 	slli	r6,r6,16
   4cf8c:	91ffffcc 	andi	r7,r18,65535
   4cf90:	9004d43a 	srli	r2,r18,16
   4cf94:	314cb03a 	or	r6,r6,r5
   4cf98:	317fffcc 	andi	r5,r6,65535
   4cf9c:	300cd43a 	srli	r6,r6,16
   4cfa0:	29d3383a 	mul	r9,r5,r7
   4cfa4:	288b383a 	mul	r5,r5,r2
   4cfa8:	31cf383a 	mul	r7,r6,r7
   4cfac:	4806d43a 	srli	r3,r9,16
   4cfb0:	4111c83a 	sub	r8,r8,r4
   4cfb4:	29cb883a 	add	r5,r5,r7
   4cfb8:	194b883a 	add	r5,r3,r5
   4cfbc:	3085383a 	mul	r2,r6,r2
   4cfc0:	29c0022e 	bgeu	r5,r7,4cfcc <__umoddi3+0x3d8>
   4cfc4:	00c00074 	movhi	r3,1
   4cfc8:	10c5883a 	add	r2,r2,r3
   4cfcc:	2808d43a 	srli	r4,r5,16
   4cfd0:	280a943a 	slli	r5,r5,16
   4cfd4:	4a7fffcc 	andi	r9,r9,65535
   4cfd8:	2085883a 	add	r2,r4,r2
   4cfdc:	2a4b883a 	add	r5,r5,r9
   4cfe0:	40803636 	bltu	r8,r2,4d0bc <__umoddi3+0x4c8>
   4cfe4:	40804d26 	beq	r8,r2,4d11c <__umoddi3+0x528>
   4cfe8:	4089c83a 	sub	r4,r8,r2
   4cfec:	280f883a 	mov	r7,r5
   4cff0:	81cfc83a 	sub	r7,r16,r7
   4cff4:	81c7803a 	cmpltu	r3,r16,r7
   4cff8:	20c7c83a 	sub	r3,r4,r3
   4cffc:	1cc4983a 	sll	r2,r3,r19
   4d000:	3d0ed83a 	srl	r7,r7,r20
   4d004:	1d06d83a 	srl	r3,r3,r20
   4d008:	11c4b03a 	or	r2,r2,r7
   4d00c:	003f9306 	br	4ce5c <__alt_data_end+0xfffcce5c>
   4d010:	9ca6983a 	sll	r19,r19,r18
   4d014:	88e8d83a 	srl	r20,r17,r3
   4d018:	80c4d83a 	srl	r2,r16,r3
   4d01c:	982cd43a 	srli	r22,r19,16
   4d020:	8ca2983a 	sll	r17,r17,r18
   4d024:	a009883a 	mov	r4,r20
   4d028:	b00b883a 	mov	r5,r22
   4d02c:	1478b03a 	or	fp,r2,r17
   4d030:	0040bdc0 	call	40bdc <__umodsi3>
   4d034:	a009883a 	mov	r4,r20
   4d038:	b00b883a 	mov	r5,r22
   4d03c:	1023883a 	mov	r17,r2
   4d040:	0040b780 	call	40b78 <__udivsi3>
   4d044:	9d7fffcc 	andi	r21,r19,65535
   4d048:	880a943a 	slli	r5,r17,16
   4d04c:	e008d43a 	srli	r4,fp,16
   4d050:	a885383a 	mul	r2,r21,r2
   4d054:	84a8983a 	sll	r20,r16,r18
   4d058:	2148b03a 	or	r4,r4,r5
   4d05c:	2080042e 	bgeu	r4,r2,4d070 <__umoddi3+0x47c>
   4d060:	24c9883a 	add	r4,r4,r19
   4d064:	24c00236 	bltu	r4,r19,4d070 <__umoddi3+0x47c>
   4d068:	2080012e 	bgeu	r4,r2,4d070 <__umoddi3+0x47c>
   4d06c:	24c9883a 	add	r4,r4,r19
   4d070:	20a3c83a 	sub	r17,r4,r2
   4d074:	b00b883a 	mov	r5,r22
   4d078:	8809883a 	mov	r4,r17
   4d07c:	0040bdc0 	call	40bdc <__umodsi3>
   4d080:	102f883a 	mov	r23,r2
   4d084:	8809883a 	mov	r4,r17
   4d088:	b00b883a 	mov	r5,r22
   4d08c:	0040b780 	call	40b78 <__udivsi3>
   4d090:	b82e943a 	slli	r23,r23,16
   4d094:	a885383a 	mul	r2,r21,r2
   4d098:	e13fffcc 	andi	r4,fp,65535
   4d09c:	25c8b03a 	or	r4,r4,r23
   4d0a0:	2080042e 	bgeu	r4,r2,4d0b4 <__umoddi3+0x4c0>
   4d0a4:	24c9883a 	add	r4,r4,r19
   4d0a8:	24c00236 	bltu	r4,r19,4d0b4 <__umoddi3+0x4c0>
   4d0ac:	2080012e 	bgeu	r4,r2,4d0b4 <__umoddi3+0x4c0>
   4d0b0:	24c9883a 	add	r4,r4,r19
   4d0b4:	20a3c83a 	sub	r17,r4,r2
   4d0b8:	003f4806 	br	4cddc <__alt_data_end+0xfffccddc>
   4d0bc:	2c8fc83a 	sub	r7,r5,r18
   4d0c0:	1545c83a 	sub	r2,r2,r21
   4d0c4:	29cb803a 	cmpltu	r5,r5,r7
   4d0c8:	1145c83a 	sub	r2,r2,r5
   4d0cc:	4089c83a 	sub	r4,r8,r2
   4d0d0:	003fc706 	br	4cff0 <__alt_data_end+0xfffccff0>
   4d0d4:	01000604 	movi	r4,24
   4d0d8:	003f1806 	br	4cd3c <__alt_data_end+0xfffccd3c>
   4d0dc:	00800604 	movi	r2,24
   4d0e0:	003f3206 	br	4cdac <__alt_data_end+0xfffccdac>
   4d0e4:	01000604 	movi	r4,24
   4d0e8:	003ed906 	br	4cc50 <__alt_data_end+0xfffccc50>
   4d0ec:	413fa52e 	bgeu	r8,r4,4cf84 <__alt_data_end+0xfffccf84>
   4d0f0:	297fff84 	addi	r5,r5,-2
   4d0f4:	4551883a 	add	r8,r8,r21
   4d0f8:	003fa306 	br	4cf88 <__alt_data_end+0xfffccf88>
   4d0fc:	15ff8b2e 	bgeu	r2,r23,4cf2c <__alt_data_end+0xfffccf2c>
   4d100:	31bfff84 	addi	r6,r6,-2
   4d104:	1545883a 	add	r2,r2,r21
   4d108:	003f8906 	br	4cf30 <__alt_data_end+0xfffccf30>
   4d10c:	24c9883a 	add	r4,r4,r19
   4d110:	003eee06 	br	4cccc <__alt_data_end+0xfffccccc>
   4d114:	8005883a 	mov	r2,r16
   4d118:	003f1706 	br	4cd78 <__alt_data_end+0xfffccd78>
   4d11c:	817fe736 	bltu	r16,r5,4d0bc <__alt_data_end+0xfffcd0bc>
   4d120:	280f883a 	mov	r7,r5
   4d124:	0009883a 	mov	r4,zero
   4d128:	003fb106 	br	4cff0 <__alt_data_end+0xfffccff0>

0004d12c <__divdf3>:
   4d12c:	defff204 	addi	sp,sp,-56
   4d130:	dd400915 	stw	r21,36(sp)
   4d134:	282ad53a 	srli	r21,r5,20
   4d138:	dd000815 	stw	r20,32(sp)
   4d13c:	2828d7fa 	srli	r20,r5,31
   4d140:	dc000415 	stw	r16,16(sp)
   4d144:	04000434 	movhi	r16,16
   4d148:	df000c15 	stw	fp,48(sp)
   4d14c:	843fffc4 	addi	r16,r16,-1
   4d150:	dfc00d15 	stw	ra,52(sp)
   4d154:	ddc00b15 	stw	r23,44(sp)
   4d158:	dd800a15 	stw	r22,40(sp)
   4d15c:	dcc00715 	stw	r19,28(sp)
   4d160:	dc800615 	stw	r18,24(sp)
   4d164:	dc400515 	stw	r17,20(sp)
   4d168:	ad41ffcc 	andi	r21,r21,2047
   4d16c:	2c20703a 	and	r16,r5,r16
   4d170:	a7003fcc 	andi	fp,r20,255
   4d174:	a8006126 	beq	r21,zero,4d2fc <__divdf3+0x1d0>
   4d178:	0081ffc4 	movi	r2,2047
   4d17c:	2025883a 	mov	r18,r4
   4d180:	a8803726 	beq	r21,r2,4d260 <__divdf3+0x134>
   4d184:	80800434 	orhi	r2,r16,16
   4d188:	100490fa 	slli	r2,r2,3
   4d18c:	2020d77a 	srli	r16,r4,29
   4d190:	202490fa 	slli	r18,r4,3
   4d194:	ad7f0044 	addi	r21,r21,-1023
   4d198:	80a0b03a 	or	r16,r16,r2
   4d19c:	0027883a 	mov	r19,zero
   4d1a0:	0013883a 	mov	r9,zero
   4d1a4:	3804d53a 	srli	r2,r7,20
   4d1a8:	382cd7fa 	srli	r22,r7,31
   4d1ac:	04400434 	movhi	r17,16
   4d1b0:	8c7fffc4 	addi	r17,r17,-1
   4d1b4:	1081ffcc 	andi	r2,r2,2047
   4d1b8:	3011883a 	mov	r8,r6
   4d1bc:	3c62703a 	and	r17,r7,r17
   4d1c0:	b5c03fcc 	andi	r23,r22,255
   4d1c4:	10006c26 	beq	r2,zero,4d378 <__divdf3+0x24c>
   4d1c8:	00c1ffc4 	movi	r3,2047
   4d1cc:	10c06426 	beq	r2,r3,4d360 <__divdf3+0x234>
   4d1d0:	88c00434 	orhi	r3,r17,16
   4d1d4:	180690fa 	slli	r3,r3,3
   4d1d8:	3022d77a 	srli	r17,r6,29
   4d1dc:	301090fa 	slli	r8,r6,3
   4d1e0:	10bf0044 	addi	r2,r2,-1023
   4d1e4:	88e2b03a 	or	r17,r17,r3
   4d1e8:	000f883a 	mov	r7,zero
   4d1ec:	a58cf03a 	xor	r6,r20,r22
   4d1f0:	3cc8b03a 	or	r4,r7,r19
   4d1f4:	a8abc83a 	sub	r21,r21,r2
   4d1f8:	008003c4 	movi	r2,15
   4d1fc:	3007883a 	mov	r3,r6
   4d200:	34c03fcc 	andi	r19,r6,255
   4d204:	11009036 	bltu	r2,r4,4d448 <__divdf3+0x31c>
   4d208:	200890ba 	slli	r4,r4,2
   4d20c:	00800174 	movhi	r2,5
   4d210:	10b48804 	addi	r2,r2,-11744
   4d214:	2089883a 	add	r4,r4,r2
   4d218:	20800017 	ldw	r2,0(r4)
   4d21c:	1000683a 	jmp	r2
   4d220:	0004d448 	cmpgei	zero,zero,4945
   4d224:	0004d298 	cmpnei	zero,zero,4938
   4d228:	0004d438 	rdprs	zero,zero,4944
   4d22c:	0004d28c 	andi	zero,zero,4938
   4d230:	0004d438 	rdprs	zero,zero,4944
   4d234:	0004d40c 	andi	zero,zero,4944
   4d238:	0004d438 	rdprs	zero,zero,4944
   4d23c:	0004d28c 	andi	zero,zero,4938
   4d240:	0004d298 	cmpnei	zero,zero,4938
   4d244:	0004d298 	cmpnei	zero,zero,4938
   4d248:	0004d40c 	andi	zero,zero,4944
   4d24c:	0004d28c 	andi	zero,zero,4938
   4d250:	0004d27c 	xorhi	zero,zero,4937
   4d254:	0004d27c 	xorhi	zero,zero,4937
   4d258:	0004d27c 	xorhi	zero,zero,4937
   4d25c:	0004d72c 	andhi	zero,zero,4956
   4d260:	2404b03a 	or	r2,r4,r16
   4d264:	1000661e 	bne	r2,zero,4d400 <__divdf3+0x2d4>
   4d268:	04c00204 	movi	r19,8
   4d26c:	0021883a 	mov	r16,zero
   4d270:	0025883a 	mov	r18,zero
   4d274:	02400084 	movi	r9,2
   4d278:	003fca06 	br	4d1a4 <__alt_data_end+0xfffcd1a4>
   4d27c:	8023883a 	mov	r17,r16
   4d280:	9011883a 	mov	r8,r18
   4d284:	e02f883a 	mov	r23,fp
   4d288:	480f883a 	mov	r7,r9
   4d28c:	00800084 	movi	r2,2
   4d290:	3881311e 	bne	r7,r2,4d758 <__divdf3+0x62c>
   4d294:	b827883a 	mov	r19,r23
   4d298:	98c0004c 	andi	r3,r19,1
   4d29c:	0081ffc4 	movi	r2,2047
   4d2a0:	000b883a 	mov	r5,zero
   4d2a4:	0025883a 	mov	r18,zero
   4d2a8:	1004953a 	slli	r2,r2,20
   4d2ac:	18c03fcc 	andi	r3,r3,255
   4d2b0:	04400434 	movhi	r17,16
   4d2b4:	8c7fffc4 	addi	r17,r17,-1
   4d2b8:	180697fa 	slli	r3,r3,31
   4d2bc:	2c4a703a 	and	r5,r5,r17
   4d2c0:	288ab03a 	or	r5,r5,r2
   4d2c4:	28c6b03a 	or	r3,r5,r3
   4d2c8:	9005883a 	mov	r2,r18
   4d2cc:	dfc00d17 	ldw	ra,52(sp)
   4d2d0:	df000c17 	ldw	fp,48(sp)
   4d2d4:	ddc00b17 	ldw	r23,44(sp)
   4d2d8:	dd800a17 	ldw	r22,40(sp)
   4d2dc:	dd400917 	ldw	r21,36(sp)
   4d2e0:	dd000817 	ldw	r20,32(sp)
   4d2e4:	dcc00717 	ldw	r19,28(sp)
   4d2e8:	dc800617 	ldw	r18,24(sp)
   4d2ec:	dc400517 	ldw	r17,20(sp)
   4d2f0:	dc000417 	ldw	r16,16(sp)
   4d2f4:	dec00e04 	addi	sp,sp,56
   4d2f8:	f800283a 	ret
   4d2fc:	2404b03a 	or	r2,r4,r16
   4d300:	2027883a 	mov	r19,r4
   4d304:	10003926 	beq	r2,zero,4d3ec <__divdf3+0x2c0>
   4d308:	80012e26 	beq	r16,zero,4d7c4 <__divdf3+0x698>
   4d30c:	8009883a 	mov	r4,r16
   4d310:	d9800315 	stw	r6,12(sp)
   4d314:	d9c00215 	stw	r7,8(sp)
   4d318:	00430980 	call	43098 <__clzsi2>
   4d31c:	d9800317 	ldw	r6,12(sp)
   4d320:	d9c00217 	ldw	r7,8(sp)
   4d324:	113ffd44 	addi	r4,r2,-11
   4d328:	00c00704 	movi	r3,28
   4d32c:	19012116 	blt	r3,r4,4d7b4 <__divdf3+0x688>
   4d330:	00c00744 	movi	r3,29
   4d334:	147ffe04 	addi	r17,r2,-8
   4d338:	1907c83a 	sub	r3,r3,r4
   4d33c:	8460983a 	sll	r16,r16,r17
   4d340:	98c6d83a 	srl	r3,r19,r3
   4d344:	9c64983a 	sll	r18,r19,r17
   4d348:	1c20b03a 	or	r16,r3,r16
   4d34c:	1080fcc4 	addi	r2,r2,1011
   4d350:	00abc83a 	sub	r21,zero,r2
   4d354:	0027883a 	mov	r19,zero
   4d358:	0013883a 	mov	r9,zero
   4d35c:	003f9106 	br	4d1a4 <__alt_data_end+0xfffcd1a4>
   4d360:	3446b03a 	or	r3,r6,r17
   4d364:	18001f1e 	bne	r3,zero,4d3e4 <__divdf3+0x2b8>
   4d368:	0023883a 	mov	r17,zero
   4d36c:	0011883a 	mov	r8,zero
   4d370:	01c00084 	movi	r7,2
   4d374:	003f9d06 	br	4d1ec <__alt_data_end+0xfffcd1ec>
   4d378:	3446b03a 	or	r3,r6,r17
   4d37c:	18001526 	beq	r3,zero,4d3d4 <__divdf3+0x2a8>
   4d380:	88011b26 	beq	r17,zero,4d7f0 <__divdf3+0x6c4>
   4d384:	8809883a 	mov	r4,r17
   4d388:	d9800315 	stw	r6,12(sp)
   4d38c:	da400115 	stw	r9,4(sp)
   4d390:	00430980 	call	43098 <__clzsi2>
   4d394:	d9800317 	ldw	r6,12(sp)
   4d398:	da400117 	ldw	r9,4(sp)
   4d39c:	113ffd44 	addi	r4,r2,-11
   4d3a0:	00c00704 	movi	r3,28
   4d3a4:	19010e16 	blt	r3,r4,4d7e0 <__divdf3+0x6b4>
   4d3a8:	00c00744 	movi	r3,29
   4d3ac:	123ffe04 	addi	r8,r2,-8
   4d3b0:	1907c83a 	sub	r3,r3,r4
   4d3b4:	8a22983a 	sll	r17,r17,r8
   4d3b8:	30c6d83a 	srl	r3,r6,r3
   4d3bc:	3210983a 	sll	r8,r6,r8
   4d3c0:	1c62b03a 	or	r17,r3,r17
   4d3c4:	1080fcc4 	addi	r2,r2,1011
   4d3c8:	0085c83a 	sub	r2,zero,r2
   4d3cc:	000f883a 	mov	r7,zero
   4d3d0:	003f8606 	br	4d1ec <__alt_data_end+0xfffcd1ec>
   4d3d4:	0023883a 	mov	r17,zero
   4d3d8:	0011883a 	mov	r8,zero
   4d3dc:	01c00044 	movi	r7,1
   4d3e0:	003f8206 	br	4d1ec <__alt_data_end+0xfffcd1ec>
   4d3e4:	01c000c4 	movi	r7,3
   4d3e8:	003f8006 	br	4d1ec <__alt_data_end+0xfffcd1ec>
   4d3ec:	04c00104 	movi	r19,4
   4d3f0:	0021883a 	mov	r16,zero
   4d3f4:	0025883a 	mov	r18,zero
   4d3f8:	02400044 	movi	r9,1
   4d3fc:	003f6906 	br	4d1a4 <__alt_data_end+0xfffcd1a4>
   4d400:	04c00304 	movi	r19,12
   4d404:	024000c4 	movi	r9,3
   4d408:	003f6606 	br	4d1a4 <__alt_data_end+0xfffcd1a4>
   4d40c:	01400434 	movhi	r5,16
   4d410:	0007883a 	mov	r3,zero
   4d414:	297fffc4 	addi	r5,r5,-1
   4d418:	04bfffc4 	movi	r18,-1
   4d41c:	0081ffc4 	movi	r2,2047
   4d420:	003fa106 	br	4d2a8 <__alt_data_end+0xfffcd2a8>
   4d424:	00c00044 	movi	r3,1
   4d428:	1887c83a 	sub	r3,r3,r2
   4d42c:	01000e04 	movi	r4,56
   4d430:	20c1210e 	bge	r4,r3,4d8b8 <__divdf3+0x78c>
   4d434:	98c0004c 	andi	r3,r19,1
   4d438:	0005883a 	mov	r2,zero
   4d43c:	000b883a 	mov	r5,zero
   4d440:	0025883a 	mov	r18,zero
   4d444:	003f9806 	br	4d2a8 <__alt_data_end+0xfffcd2a8>
   4d448:	8c00fd36 	bltu	r17,r16,4d840 <__divdf3+0x714>
   4d44c:	8440fb26 	beq	r16,r17,4d83c <__divdf3+0x710>
   4d450:	8007883a 	mov	r3,r16
   4d454:	ad7fffc4 	addi	r21,r21,-1
   4d458:	0021883a 	mov	r16,zero
   4d45c:	4004d63a 	srli	r2,r8,24
   4d460:	8822923a 	slli	r17,r17,8
   4d464:	1809883a 	mov	r4,r3
   4d468:	402c923a 	slli	r22,r8,8
   4d46c:	88b8b03a 	or	fp,r17,r2
   4d470:	e028d43a 	srli	r20,fp,16
   4d474:	d8c00015 	stw	r3,0(sp)
   4d478:	e5ffffcc 	andi	r23,fp,65535
   4d47c:	a00b883a 	mov	r5,r20
   4d480:	0040b780 	call	40b78 <__udivsi3>
   4d484:	d8c00017 	ldw	r3,0(sp)
   4d488:	a00b883a 	mov	r5,r20
   4d48c:	d8800315 	stw	r2,12(sp)
   4d490:	1809883a 	mov	r4,r3
   4d494:	0040bdc0 	call	40bdc <__umodsi3>
   4d498:	d9800317 	ldw	r6,12(sp)
   4d49c:	1006943a 	slli	r3,r2,16
   4d4a0:	9004d43a 	srli	r2,r18,16
   4d4a4:	b9a3383a 	mul	r17,r23,r6
   4d4a8:	10c4b03a 	or	r2,r2,r3
   4d4ac:	1440062e 	bgeu	r2,r17,4d4c8 <__divdf3+0x39c>
   4d4b0:	1705883a 	add	r2,r2,fp
   4d4b4:	30ffffc4 	addi	r3,r6,-1
   4d4b8:	1700ee36 	bltu	r2,fp,4d874 <__divdf3+0x748>
   4d4bc:	1440ed2e 	bgeu	r2,r17,4d874 <__divdf3+0x748>
   4d4c0:	31bfff84 	addi	r6,r6,-2
   4d4c4:	1705883a 	add	r2,r2,fp
   4d4c8:	1463c83a 	sub	r17,r2,r17
   4d4cc:	a00b883a 	mov	r5,r20
   4d4d0:	8809883a 	mov	r4,r17
   4d4d4:	d9800315 	stw	r6,12(sp)
   4d4d8:	0040b780 	call	40b78 <__udivsi3>
   4d4dc:	a00b883a 	mov	r5,r20
   4d4e0:	8809883a 	mov	r4,r17
   4d4e4:	d8800215 	stw	r2,8(sp)
   4d4e8:	0040bdc0 	call	40bdc <__umodsi3>
   4d4ec:	d9c00217 	ldw	r7,8(sp)
   4d4f0:	1004943a 	slli	r2,r2,16
   4d4f4:	94bfffcc 	andi	r18,r18,65535
   4d4f8:	b9d1383a 	mul	r8,r23,r7
   4d4fc:	90a4b03a 	or	r18,r18,r2
   4d500:	d9800317 	ldw	r6,12(sp)
   4d504:	9200062e 	bgeu	r18,r8,4d520 <__divdf3+0x3f4>
   4d508:	9725883a 	add	r18,r18,fp
   4d50c:	38bfffc4 	addi	r2,r7,-1
   4d510:	9700d636 	bltu	r18,fp,4d86c <__divdf3+0x740>
   4d514:	9200d52e 	bgeu	r18,r8,4d86c <__divdf3+0x740>
   4d518:	39ffff84 	addi	r7,r7,-2
   4d51c:	9725883a 	add	r18,r18,fp
   4d520:	3004943a 	slli	r2,r6,16
   4d524:	b012d43a 	srli	r9,r22,16
   4d528:	b1bfffcc 	andi	r6,r22,65535
   4d52c:	11e2b03a 	or	r17,r2,r7
   4d530:	8806d43a 	srli	r3,r17,16
   4d534:	893fffcc 	andi	r4,r17,65535
   4d538:	218b383a 	mul	r5,r4,r6
   4d53c:	30c5383a 	mul	r2,r6,r3
   4d540:	2249383a 	mul	r4,r4,r9
   4d544:	280ed43a 	srli	r7,r5,16
   4d548:	9225c83a 	sub	r18,r18,r8
   4d54c:	2089883a 	add	r4,r4,r2
   4d550:	3909883a 	add	r4,r7,r4
   4d554:	1a47383a 	mul	r3,r3,r9
   4d558:	2080022e 	bgeu	r4,r2,4d564 <__divdf3+0x438>
   4d55c:	00800074 	movhi	r2,1
   4d560:	1887883a 	add	r3,r3,r2
   4d564:	2004d43a 	srli	r2,r4,16
   4d568:	2008943a 	slli	r4,r4,16
   4d56c:	297fffcc 	andi	r5,r5,65535
   4d570:	10c7883a 	add	r3,r2,r3
   4d574:	2149883a 	add	r4,r4,r5
   4d578:	90c0a536 	bltu	r18,r3,4d810 <__divdf3+0x6e4>
   4d57c:	90c0bf26 	beq	r18,r3,4d87c <__divdf3+0x750>
   4d580:	90c7c83a 	sub	r3,r18,r3
   4d584:	810fc83a 	sub	r7,r16,r4
   4d588:	81e5803a 	cmpltu	r18,r16,r7
   4d58c:	1ca5c83a 	sub	r18,r3,r18
   4d590:	e480c126 	beq	fp,r18,4d898 <__divdf3+0x76c>
   4d594:	a00b883a 	mov	r5,r20
   4d598:	9009883a 	mov	r4,r18
   4d59c:	d9800315 	stw	r6,12(sp)
   4d5a0:	d9c00215 	stw	r7,8(sp)
   4d5a4:	da400115 	stw	r9,4(sp)
   4d5a8:	0040b780 	call	40b78 <__udivsi3>
   4d5ac:	a00b883a 	mov	r5,r20
   4d5b0:	9009883a 	mov	r4,r18
   4d5b4:	d8800015 	stw	r2,0(sp)
   4d5b8:	0040bdc0 	call	40bdc <__umodsi3>
   4d5bc:	d9c00217 	ldw	r7,8(sp)
   4d5c0:	da000017 	ldw	r8,0(sp)
   4d5c4:	1006943a 	slli	r3,r2,16
   4d5c8:	3804d43a 	srli	r2,r7,16
   4d5cc:	ba21383a 	mul	r16,r23,r8
   4d5d0:	d9800317 	ldw	r6,12(sp)
   4d5d4:	10c4b03a 	or	r2,r2,r3
   4d5d8:	da400117 	ldw	r9,4(sp)
   4d5dc:	1400062e 	bgeu	r2,r16,4d5f8 <__divdf3+0x4cc>
   4d5e0:	1705883a 	add	r2,r2,fp
   4d5e4:	40ffffc4 	addi	r3,r8,-1
   4d5e8:	1700ad36 	bltu	r2,fp,4d8a0 <__divdf3+0x774>
   4d5ec:	1400ac2e 	bgeu	r2,r16,4d8a0 <__divdf3+0x774>
   4d5f0:	423fff84 	addi	r8,r8,-2
   4d5f4:	1705883a 	add	r2,r2,fp
   4d5f8:	1421c83a 	sub	r16,r2,r16
   4d5fc:	a00b883a 	mov	r5,r20
   4d600:	8009883a 	mov	r4,r16
   4d604:	d9800315 	stw	r6,12(sp)
   4d608:	d9c00215 	stw	r7,8(sp)
   4d60c:	da000015 	stw	r8,0(sp)
   4d610:	da400115 	stw	r9,4(sp)
   4d614:	0040b780 	call	40b78 <__udivsi3>
   4d618:	8009883a 	mov	r4,r16
   4d61c:	a00b883a 	mov	r5,r20
   4d620:	1025883a 	mov	r18,r2
   4d624:	0040bdc0 	call	40bdc <__umodsi3>
   4d628:	d9c00217 	ldw	r7,8(sp)
   4d62c:	1004943a 	slli	r2,r2,16
   4d630:	bcaf383a 	mul	r23,r23,r18
   4d634:	393fffcc 	andi	r4,r7,65535
   4d638:	2088b03a 	or	r4,r4,r2
   4d63c:	d9800317 	ldw	r6,12(sp)
   4d640:	da000017 	ldw	r8,0(sp)
   4d644:	da400117 	ldw	r9,4(sp)
   4d648:	25c0062e 	bgeu	r4,r23,4d664 <__divdf3+0x538>
   4d64c:	2709883a 	add	r4,r4,fp
   4d650:	90bfffc4 	addi	r2,r18,-1
   4d654:	27009436 	bltu	r4,fp,4d8a8 <__divdf3+0x77c>
   4d658:	25c0932e 	bgeu	r4,r23,4d8a8 <__divdf3+0x77c>
   4d65c:	94bfff84 	addi	r18,r18,-2
   4d660:	2709883a 	add	r4,r4,fp
   4d664:	4004943a 	slli	r2,r8,16
   4d668:	25efc83a 	sub	r23,r4,r23
   4d66c:	1490b03a 	or	r8,r2,r18
   4d670:	4008d43a 	srli	r4,r8,16
   4d674:	40ffffcc 	andi	r3,r8,65535
   4d678:	30c5383a 	mul	r2,r6,r3
   4d67c:	1a47383a 	mul	r3,r3,r9
   4d680:	310d383a 	mul	r6,r6,r4
   4d684:	100ad43a 	srli	r5,r2,16
   4d688:	4913383a 	mul	r9,r9,r4
   4d68c:	1987883a 	add	r3,r3,r6
   4d690:	28c7883a 	add	r3,r5,r3
   4d694:	1980022e 	bgeu	r3,r6,4d6a0 <__divdf3+0x574>
   4d698:	01000074 	movhi	r4,1
   4d69c:	4913883a 	add	r9,r9,r4
   4d6a0:	1808d43a 	srli	r4,r3,16
   4d6a4:	1806943a 	slli	r3,r3,16
   4d6a8:	10bfffcc 	andi	r2,r2,65535
   4d6ac:	2253883a 	add	r9,r4,r9
   4d6b0:	1887883a 	add	r3,r3,r2
   4d6b4:	ba403836 	bltu	r23,r9,4d798 <__divdf3+0x66c>
   4d6b8:	ba403626 	beq	r23,r9,4d794 <__divdf3+0x668>
   4d6bc:	42000054 	ori	r8,r8,1
   4d6c0:	a880ffc4 	addi	r2,r21,1023
   4d6c4:	00bf570e 	bge	zero,r2,4d424 <__alt_data_end+0xfffcd424>
   4d6c8:	40c001cc 	andi	r3,r8,7
   4d6cc:	18000726 	beq	r3,zero,4d6ec <__divdf3+0x5c0>
   4d6d0:	40c003cc 	andi	r3,r8,15
   4d6d4:	01000104 	movi	r4,4
   4d6d8:	19000426 	beq	r3,r4,4d6ec <__divdf3+0x5c0>
   4d6dc:	4107883a 	add	r3,r8,r4
   4d6e0:	1a11803a 	cmpltu	r8,r3,r8
   4d6e4:	8a23883a 	add	r17,r17,r8
   4d6e8:	1811883a 	mov	r8,r3
   4d6ec:	88c0402c 	andhi	r3,r17,256
   4d6f0:	18000426 	beq	r3,zero,4d704 <__divdf3+0x5d8>
   4d6f4:	00ffc034 	movhi	r3,65280
   4d6f8:	18ffffc4 	addi	r3,r3,-1
   4d6fc:	a8810004 	addi	r2,r21,1024
   4d700:	88e2703a 	and	r17,r17,r3
   4d704:	00c1ff84 	movi	r3,2046
   4d708:	18bee316 	blt	r3,r2,4d298 <__alt_data_end+0xfffcd298>
   4d70c:	8824977a 	slli	r18,r17,29
   4d710:	4010d0fa 	srli	r8,r8,3
   4d714:	8822927a 	slli	r17,r17,9
   4d718:	1081ffcc 	andi	r2,r2,2047
   4d71c:	9224b03a 	or	r18,r18,r8
   4d720:	880ad33a 	srli	r5,r17,12
   4d724:	98c0004c 	andi	r3,r19,1
   4d728:	003edf06 	br	4d2a8 <__alt_data_end+0xfffcd2a8>
   4d72c:	8080022c 	andhi	r2,r16,8
   4d730:	10001226 	beq	r2,zero,4d77c <__divdf3+0x650>
   4d734:	8880022c 	andhi	r2,r17,8
   4d738:	1000101e 	bne	r2,zero,4d77c <__divdf3+0x650>
   4d73c:	00800434 	movhi	r2,16
   4d740:	89400234 	orhi	r5,r17,8
   4d744:	10bfffc4 	addi	r2,r2,-1
   4d748:	b007883a 	mov	r3,r22
   4d74c:	288a703a 	and	r5,r5,r2
   4d750:	4025883a 	mov	r18,r8
   4d754:	003f3106 	br	4d41c <__alt_data_end+0xfffcd41c>
   4d758:	008000c4 	movi	r2,3
   4d75c:	3880a626 	beq	r7,r2,4d9f8 <__divdf3+0x8cc>
   4d760:	00800044 	movi	r2,1
   4d764:	3880521e 	bne	r7,r2,4d8b0 <__divdf3+0x784>
   4d768:	b807883a 	mov	r3,r23
   4d76c:	0005883a 	mov	r2,zero
   4d770:	000b883a 	mov	r5,zero
   4d774:	0025883a 	mov	r18,zero
   4d778:	003ecb06 	br	4d2a8 <__alt_data_end+0xfffcd2a8>
   4d77c:	00800434 	movhi	r2,16
   4d780:	81400234 	orhi	r5,r16,8
   4d784:	10bfffc4 	addi	r2,r2,-1
   4d788:	a007883a 	mov	r3,r20
   4d78c:	288a703a 	and	r5,r5,r2
   4d790:	003f2206 	br	4d41c <__alt_data_end+0xfffcd41c>
   4d794:	183fca26 	beq	r3,zero,4d6c0 <__alt_data_end+0xfffcd6c0>
   4d798:	e5ef883a 	add	r23,fp,r23
   4d79c:	40bfffc4 	addi	r2,r8,-1
   4d7a0:	bf00392e 	bgeu	r23,fp,4d888 <__divdf3+0x75c>
   4d7a4:	1011883a 	mov	r8,r2
   4d7a8:	ba7fc41e 	bne	r23,r9,4d6bc <__alt_data_end+0xfffcd6bc>
   4d7ac:	b0ffc31e 	bne	r22,r3,4d6bc <__alt_data_end+0xfffcd6bc>
   4d7b0:	003fc306 	br	4d6c0 <__alt_data_end+0xfffcd6c0>
   4d7b4:	143ff604 	addi	r16,r2,-40
   4d7b8:	9c20983a 	sll	r16,r19,r16
   4d7bc:	0025883a 	mov	r18,zero
   4d7c0:	003ee206 	br	4d34c <__alt_data_end+0xfffcd34c>
   4d7c4:	d9800315 	stw	r6,12(sp)
   4d7c8:	d9c00215 	stw	r7,8(sp)
   4d7cc:	00430980 	call	43098 <__clzsi2>
   4d7d0:	10800804 	addi	r2,r2,32
   4d7d4:	d9c00217 	ldw	r7,8(sp)
   4d7d8:	d9800317 	ldw	r6,12(sp)
   4d7dc:	003ed106 	br	4d324 <__alt_data_end+0xfffcd324>
   4d7e0:	147ff604 	addi	r17,r2,-40
   4d7e4:	3462983a 	sll	r17,r6,r17
   4d7e8:	0011883a 	mov	r8,zero
   4d7ec:	003ef506 	br	4d3c4 <__alt_data_end+0xfffcd3c4>
   4d7f0:	3009883a 	mov	r4,r6
   4d7f4:	d9800315 	stw	r6,12(sp)
   4d7f8:	da400115 	stw	r9,4(sp)
   4d7fc:	00430980 	call	43098 <__clzsi2>
   4d800:	10800804 	addi	r2,r2,32
   4d804:	da400117 	ldw	r9,4(sp)
   4d808:	d9800317 	ldw	r6,12(sp)
   4d80c:	003ee306 	br	4d39c <__alt_data_end+0xfffcd39c>
   4d810:	85a1883a 	add	r16,r16,r22
   4d814:	8585803a 	cmpltu	r2,r16,r22
   4d818:	1705883a 	add	r2,r2,fp
   4d81c:	14a5883a 	add	r18,r2,r18
   4d820:	88bfffc4 	addi	r2,r17,-1
   4d824:	e4800c2e 	bgeu	fp,r18,4d858 <__divdf3+0x72c>
   4d828:	90c03e36 	bltu	r18,r3,4d924 <__divdf3+0x7f8>
   4d82c:	1c806926 	beq	r3,r18,4d9d4 <__divdf3+0x8a8>
   4d830:	90c7c83a 	sub	r3,r18,r3
   4d834:	1023883a 	mov	r17,r2
   4d838:	003f5206 	br	4d584 <__alt_data_end+0xfffcd584>
   4d83c:	923f0436 	bltu	r18,r8,4d450 <__alt_data_end+0xfffcd450>
   4d840:	800897fa 	slli	r4,r16,31
   4d844:	9004d07a 	srli	r2,r18,1
   4d848:	8006d07a 	srli	r3,r16,1
   4d84c:	902097fa 	slli	r16,r18,31
   4d850:	20a4b03a 	or	r18,r4,r2
   4d854:	003f0106 	br	4d45c <__alt_data_end+0xfffcd45c>
   4d858:	e4bff51e 	bne	fp,r18,4d830 <__alt_data_end+0xfffcd830>
   4d85c:	85bff22e 	bgeu	r16,r22,4d828 <__alt_data_end+0xfffcd828>
   4d860:	e0c7c83a 	sub	r3,fp,r3
   4d864:	1023883a 	mov	r17,r2
   4d868:	003f4606 	br	4d584 <__alt_data_end+0xfffcd584>
   4d86c:	100f883a 	mov	r7,r2
   4d870:	003f2b06 	br	4d520 <__alt_data_end+0xfffcd520>
   4d874:	180d883a 	mov	r6,r3
   4d878:	003f1306 	br	4d4c8 <__alt_data_end+0xfffcd4c8>
   4d87c:	813fe436 	bltu	r16,r4,4d810 <__alt_data_end+0xfffcd810>
   4d880:	0007883a 	mov	r3,zero
   4d884:	003f3f06 	br	4d584 <__alt_data_end+0xfffcd584>
   4d888:	ba402c36 	bltu	r23,r9,4d93c <__divdf3+0x810>
   4d88c:	4dc05426 	beq	r9,r23,4d9e0 <__divdf3+0x8b4>
   4d890:	1011883a 	mov	r8,r2
   4d894:	003f8906 	br	4d6bc <__alt_data_end+0xfffcd6bc>
   4d898:	023fffc4 	movi	r8,-1
   4d89c:	003f8806 	br	4d6c0 <__alt_data_end+0xfffcd6c0>
   4d8a0:	1811883a 	mov	r8,r3
   4d8a4:	003f5406 	br	4d5f8 <__alt_data_end+0xfffcd5f8>
   4d8a8:	1025883a 	mov	r18,r2
   4d8ac:	003f6d06 	br	4d664 <__alt_data_end+0xfffcd664>
   4d8b0:	b827883a 	mov	r19,r23
   4d8b4:	003f8206 	br	4d6c0 <__alt_data_end+0xfffcd6c0>
   4d8b8:	010007c4 	movi	r4,31
   4d8bc:	20c02616 	blt	r4,r3,4d958 <__divdf3+0x82c>
   4d8c0:	00800804 	movi	r2,32
   4d8c4:	10c5c83a 	sub	r2,r2,r3
   4d8c8:	888a983a 	sll	r5,r17,r2
   4d8cc:	40c8d83a 	srl	r4,r8,r3
   4d8d0:	4084983a 	sll	r2,r8,r2
   4d8d4:	88e2d83a 	srl	r17,r17,r3
   4d8d8:	2906b03a 	or	r3,r5,r4
   4d8dc:	1004c03a 	cmpne	r2,r2,zero
   4d8e0:	1886b03a 	or	r3,r3,r2
   4d8e4:	188001cc 	andi	r2,r3,7
   4d8e8:	10000726 	beq	r2,zero,4d908 <__divdf3+0x7dc>
   4d8ec:	188003cc 	andi	r2,r3,15
   4d8f0:	01000104 	movi	r4,4
   4d8f4:	11000426 	beq	r2,r4,4d908 <__divdf3+0x7dc>
   4d8f8:	1805883a 	mov	r2,r3
   4d8fc:	10c00104 	addi	r3,r2,4
   4d900:	1885803a 	cmpltu	r2,r3,r2
   4d904:	88a3883a 	add	r17,r17,r2
   4d908:	8880202c 	andhi	r2,r17,128
   4d90c:	10002726 	beq	r2,zero,4d9ac <__divdf3+0x880>
   4d910:	98c0004c 	andi	r3,r19,1
   4d914:	00800044 	movi	r2,1
   4d918:	000b883a 	mov	r5,zero
   4d91c:	0025883a 	mov	r18,zero
   4d920:	003e6106 	br	4d2a8 <__alt_data_end+0xfffcd2a8>
   4d924:	85a1883a 	add	r16,r16,r22
   4d928:	8585803a 	cmpltu	r2,r16,r22
   4d92c:	1705883a 	add	r2,r2,fp
   4d930:	14a5883a 	add	r18,r2,r18
   4d934:	8c7fff84 	addi	r17,r17,-2
   4d938:	003f1106 	br	4d580 <__alt_data_end+0xfffcd580>
   4d93c:	b589883a 	add	r4,r22,r22
   4d940:	25ad803a 	cmpltu	r22,r4,r22
   4d944:	b739883a 	add	fp,r22,fp
   4d948:	40bfff84 	addi	r2,r8,-2
   4d94c:	bf2f883a 	add	r23,r23,fp
   4d950:	202d883a 	mov	r22,r4
   4d954:	003f9306 	br	4d7a4 <__alt_data_end+0xfffcd7a4>
   4d958:	013ff844 	movi	r4,-31
   4d95c:	2085c83a 	sub	r2,r4,r2
   4d960:	8888d83a 	srl	r4,r17,r2
   4d964:	00800804 	movi	r2,32
   4d968:	18802126 	beq	r3,r2,4d9f0 <__divdf3+0x8c4>
   4d96c:	00801004 	movi	r2,64
   4d970:	10c5c83a 	sub	r2,r2,r3
   4d974:	8884983a 	sll	r2,r17,r2
   4d978:	1204b03a 	or	r2,r2,r8
   4d97c:	1004c03a 	cmpne	r2,r2,zero
   4d980:	2084b03a 	or	r2,r4,r2
   4d984:	144001cc 	andi	r17,r2,7
   4d988:	88000d1e 	bne	r17,zero,4d9c0 <__divdf3+0x894>
   4d98c:	000b883a 	mov	r5,zero
   4d990:	1024d0fa 	srli	r18,r2,3
   4d994:	98c0004c 	andi	r3,r19,1
   4d998:	0005883a 	mov	r2,zero
   4d99c:	9464b03a 	or	r18,r18,r17
   4d9a0:	003e4106 	br	4d2a8 <__alt_data_end+0xfffcd2a8>
   4d9a4:	1007883a 	mov	r3,r2
   4d9a8:	0023883a 	mov	r17,zero
   4d9ac:	880a927a 	slli	r5,r17,9
   4d9b0:	1805883a 	mov	r2,r3
   4d9b4:	8822977a 	slli	r17,r17,29
   4d9b8:	280ad33a 	srli	r5,r5,12
   4d9bc:	003ff406 	br	4d990 <__alt_data_end+0xfffcd990>
   4d9c0:	10c003cc 	andi	r3,r2,15
   4d9c4:	01000104 	movi	r4,4
   4d9c8:	193ff626 	beq	r3,r4,4d9a4 <__alt_data_end+0xfffcd9a4>
   4d9cc:	0023883a 	mov	r17,zero
   4d9d0:	003fca06 	br	4d8fc <__alt_data_end+0xfffcd8fc>
   4d9d4:	813fd336 	bltu	r16,r4,4d924 <__alt_data_end+0xfffcd924>
   4d9d8:	1023883a 	mov	r17,r2
   4d9dc:	003fa806 	br	4d880 <__alt_data_end+0xfffcd880>
   4d9e0:	b0ffd636 	bltu	r22,r3,4d93c <__alt_data_end+0xfffcd93c>
   4d9e4:	1011883a 	mov	r8,r2
   4d9e8:	b0ff341e 	bne	r22,r3,4d6bc <__alt_data_end+0xfffcd6bc>
   4d9ec:	003f3406 	br	4d6c0 <__alt_data_end+0xfffcd6c0>
   4d9f0:	0005883a 	mov	r2,zero
   4d9f4:	003fe006 	br	4d978 <__alt_data_end+0xfffcd978>
   4d9f8:	00800434 	movhi	r2,16
   4d9fc:	89400234 	orhi	r5,r17,8
   4da00:	10bfffc4 	addi	r2,r2,-1
   4da04:	b807883a 	mov	r3,r23
   4da08:	288a703a 	and	r5,r5,r2
   4da0c:	4025883a 	mov	r18,r8
   4da10:	003e8206 	br	4d41c <__alt_data_end+0xfffcd41c>

0004da14 <__eqdf2>:
   4da14:	2804d53a 	srli	r2,r5,20
   4da18:	3806d53a 	srli	r3,r7,20
   4da1c:	02000434 	movhi	r8,16
   4da20:	423fffc4 	addi	r8,r8,-1
   4da24:	1081ffcc 	andi	r2,r2,2047
   4da28:	0281ffc4 	movi	r10,2047
   4da2c:	2a12703a 	and	r9,r5,r8
   4da30:	18c1ffcc 	andi	r3,r3,2047
   4da34:	3a10703a 	and	r8,r7,r8
   4da38:	280ad7fa 	srli	r5,r5,31
   4da3c:	380ed7fa 	srli	r7,r7,31
   4da40:	12801026 	beq	r2,r10,4da84 <__eqdf2+0x70>
   4da44:	0281ffc4 	movi	r10,2047
   4da48:	1a800a26 	beq	r3,r10,4da74 <__eqdf2+0x60>
   4da4c:	10c00226 	beq	r2,r3,4da58 <__eqdf2+0x44>
   4da50:	00800044 	movi	r2,1
   4da54:	f800283a 	ret
   4da58:	4a3ffd1e 	bne	r9,r8,4da50 <__alt_data_end+0xfffcda50>
   4da5c:	21bffc1e 	bne	r4,r6,4da50 <__alt_data_end+0xfffcda50>
   4da60:	29c00c26 	beq	r5,r7,4da94 <__eqdf2+0x80>
   4da64:	103ffa1e 	bne	r2,zero,4da50 <__alt_data_end+0xfffcda50>
   4da68:	2244b03a 	or	r2,r4,r9
   4da6c:	1004c03a 	cmpne	r2,r2,zero
   4da70:	f800283a 	ret
   4da74:	3214b03a 	or	r10,r6,r8
   4da78:	503ff426 	beq	r10,zero,4da4c <__alt_data_end+0xfffcda4c>
   4da7c:	00800044 	movi	r2,1
   4da80:	f800283a 	ret
   4da84:	2254b03a 	or	r10,r4,r9
   4da88:	503fee26 	beq	r10,zero,4da44 <__alt_data_end+0xfffcda44>
   4da8c:	00800044 	movi	r2,1
   4da90:	f800283a 	ret
   4da94:	0005883a 	mov	r2,zero
   4da98:	f800283a 	ret

0004da9c <__gedf2>:
   4da9c:	2804d53a 	srli	r2,r5,20
   4daa0:	3806d53a 	srli	r3,r7,20
   4daa4:	02000434 	movhi	r8,16
   4daa8:	423fffc4 	addi	r8,r8,-1
   4daac:	1081ffcc 	andi	r2,r2,2047
   4dab0:	0241ffc4 	movi	r9,2047
   4dab4:	2a14703a 	and	r10,r5,r8
   4dab8:	18c1ffcc 	andi	r3,r3,2047
   4dabc:	3a10703a 	and	r8,r7,r8
   4dac0:	280ad7fa 	srli	r5,r5,31
   4dac4:	380ed7fa 	srli	r7,r7,31
   4dac8:	12401d26 	beq	r2,r9,4db40 <__gedf2+0xa4>
   4dacc:	0241ffc4 	movi	r9,2047
   4dad0:	1a401226 	beq	r3,r9,4db1c <__gedf2+0x80>
   4dad4:	1000081e 	bne	r2,zero,4daf8 <__gedf2+0x5c>
   4dad8:	2296b03a 	or	r11,r4,r10
   4dadc:	5813003a 	cmpeq	r9,r11,zero
   4dae0:	1800091e 	bne	r3,zero,4db08 <__gedf2+0x6c>
   4dae4:	3218b03a 	or	r12,r6,r8
   4dae8:	6000071e 	bne	r12,zero,4db08 <__gedf2+0x6c>
   4daec:	0005883a 	mov	r2,zero
   4daf0:	5800101e 	bne	r11,zero,4db34 <__gedf2+0x98>
   4daf4:	f800283a 	ret
   4daf8:	18000c1e 	bne	r3,zero,4db2c <__gedf2+0x90>
   4dafc:	3212b03a 	or	r9,r6,r8
   4db00:	48000c26 	beq	r9,zero,4db34 <__gedf2+0x98>
   4db04:	0013883a 	mov	r9,zero
   4db08:	39c03fcc 	andi	r7,r7,255
   4db0c:	48000826 	beq	r9,zero,4db30 <__gedf2+0x94>
   4db10:	38000926 	beq	r7,zero,4db38 <__gedf2+0x9c>
   4db14:	00800044 	movi	r2,1
   4db18:	f800283a 	ret
   4db1c:	3212b03a 	or	r9,r6,r8
   4db20:	483fec26 	beq	r9,zero,4dad4 <__alt_data_end+0xfffcdad4>
   4db24:	00bfff84 	movi	r2,-2
   4db28:	f800283a 	ret
   4db2c:	39c03fcc 	andi	r7,r7,255
   4db30:	29c00626 	beq	r5,r7,4db4c <__gedf2+0xb0>
   4db34:	283ff726 	beq	r5,zero,4db14 <__alt_data_end+0xfffcdb14>
   4db38:	00bfffc4 	movi	r2,-1
   4db3c:	f800283a 	ret
   4db40:	2292b03a 	or	r9,r4,r10
   4db44:	483fe126 	beq	r9,zero,4dacc <__alt_data_end+0xfffcdacc>
   4db48:	003ff606 	br	4db24 <__alt_data_end+0xfffcdb24>
   4db4c:	18bff916 	blt	r3,r2,4db34 <__alt_data_end+0xfffcdb34>
   4db50:	10c00316 	blt	r2,r3,4db60 <__gedf2+0xc4>
   4db54:	42bff736 	bltu	r8,r10,4db34 <__alt_data_end+0xfffcdb34>
   4db58:	52000326 	beq	r10,r8,4db68 <__gedf2+0xcc>
   4db5c:	5200042e 	bgeu	r10,r8,4db70 <__gedf2+0xd4>
   4db60:	283fec1e 	bne	r5,zero,4db14 <__alt_data_end+0xfffcdb14>
   4db64:	003ff406 	br	4db38 <__alt_data_end+0xfffcdb38>
   4db68:	313ff236 	bltu	r6,r4,4db34 <__alt_data_end+0xfffcdb34>
   4db6c:	21bffc36 	bltu	r4,r6,4db60 <__alt_data_end+0xfffcdb60>
   4db70:	0005883a 	mov	r2,zero
   4db74:	f800283a 	ret

0004db78 <__ledf2>:
   4db78:	2804d53a 	srli	r2,r5,20
   4db7c:	3810d53a 	srli	r8,r7,20
   4db80:	00c00434 	movhi	r3,16
   4db84:	18ffffc4 	addi	r3,r3,-1
   4db88:	1081ffcc 	andi	r2,r2,2047
   4db8c:	0241ffc4 	movi	r9,2047
   4db90:	28d4703a 	and	r10,r5,r3
   4db94:	4201ffcc 	andi	r8,r8,2047
   4db98:	38c6703a 	and	r3,r7,r3
   4db9c:	280ad7fa 	srli	r5,r5,31
   4dba0:	380ed7fa 	srli	r7,r7,31
   4dba4:	12401f26 	beq	r2,r9,4dc24 <__ledf2+0xac>
   4dba8:	0241ffc4 	movi	r9,2047
   4dbac:	42401426 	beq	r8,r9,4dc00 <__ledf2+0x88>
   4dbb0:	1000091e 	bne	r2,zero,4dbd8 <__ledf2+0x60>
   4dbb4:	2296b03a 	or	r11,r4,r10
   4dbb8:	5813003a 	cmpeq	r9,r11,zero
   4dbbc:	29403fcc 	andi	r5,r5,255
   4dbc0:	40000a1e 	bne	r8,zero,4dbec <__ledf2+0x74>
   4dbc4:	30d8b03a 	or	r12,r6,r3
   4dbc8:	6000081e 	bne	r12,zero,4dbec <__ledf2+0x74>
   4dbcc:	0005883a 	mov	r2,zero
   4dbd0:	5800111e 	bne	r11,zero,4dc18 <__ledf2+0xa0>
   4dbd4:	f800283a 	ret
   4dbd8:	29403fcc 	andi	r5,r5,255
   4dbdc:	40000c1e 	bne	r8,zero,4dc10 <__ledf2+0x98>
   4dbe0:	30d2b03a 	or	r9,r6,r3
   4dbe4:	48000c26 	beq	r9,zero,4dc18 <__ledf2+0xa0>
   4dbe8:	0013883a 	mov	r9,zero
   4dbec:	39c03fcc 	andi	r7,r7,255
   4dbf0:	48000826 	beq	r9,zero,4dc14 <__ledf2+0x9c>
   4dbf4:	38001126 	beq	r7,zero,4dc3c <__ledf2+0xc4>
   4dbf8:	00800044 	movi	r2,1
   4dbfc:	f800283a 	ret
   4dc00:	30d2b03a 	or	r9,r6,r3
   4dc04:	483fea26 	beq	r9,zero,4dbb0 <__alt_data_end+0xfffcdbb0>
   4dc08:	00800084 	movi	r2,2
   4dc0c:	f800283a 	ret
   4dc10:	39c03fcc 	andi	r7,r7,255
   4dc14:	39400726 	beq	r7,r5,4dc34 <__ledf2+0xbc>
   4dc18:	2800081e 	bne	r5,zero,4dc3c <__ledf2+0xc4>
   4dc1c:	00800044 	movi	r2,1
   4dc20:	f800283a 	ret
   4dc24:	2292b03a 	or	r9,r4,r10
   4dc28:	483fdf26 	beq	r9,zero,4dba8 <__alt_data_end+0xfffcdba8>
   4dc2c:	00800084 	movi	r2,2
   4dc30:	f800283a 	ret
   4dc34:	4080030e 	bge	r8,r2,4dc44 <__ledf2+0xcc>
   4dc38:	383fef26 	beq	r7,zero,4dbf8 <__alt_data_end+0xfffcdbf8>
   4dc3c:	00bfffc4 	movi	r2,-1
   4dc40:	f800283a 	ret
   4dc44:	123feb16 	blt	r2,r8,4dbf4 <__alt_data_end+0xfffcdbf4>
   4dc48:	1abff336 	bltu	r3,r10,4dc18 <__alt_data_end+0xfffcdc18>
   4dc4c:	50c00326 	beq	r10,r3,4dc5c <__ledf2+0xe4>
   4dc50:	50c0042e 	bgeu	r10,r3,4dc64 <__ledf2+0xec>
   4dc54:	283fe81e 	bne	r5,zero,4dbf8 <__alt_data_end+0xfffcdbf8>
   4dc58:	003ff806 	br	4dc3c <__alt_data_end+0xfffcdc3c>
   4dc5c:	313fee36 	bltu	r6,r4,4dc18 <__alt_data_end+0xfffcdc18>
   4dc60:	21bffc36 	bltu	r4,r6,4dc54 <__alt_data_end+0xfffcdc54>
   4dc64:	0005883a 	mov	r2,zero
   4dc68:	f800283a 	ret

0004dc6c <__subdf3>:
   4dc6c:	02000434 	movhi	r8,16
   4dc70:	423fffc4 	addi	r8,r8,-1
   4dc74:	defffb04 	addi	sp,sp,-20
   4dc78:	2a14703a 	and	r10,r5,r8
   4dc7c:	3812d53a 	srli	r9,r7,20
   4dc80:	3a10703a 	and	r8,r7,r8
   4dc84:	2006d77a 	srli	r3,r4,29
   4dc88:	3004d77a 	srli	r2,r6,29
   4dc8c:	dc000015 	stw	r16,0(sp)
   4dc90:	501490fa 	slli	r10,r10,3
   4dc94:	2820d53a 	srli	r16,r5,20
   4dc98:	401090fa 	slli	r8,r8,3
   4dc9c:	dc800215 	stw	r18,8(sp)
   4dca0:	dc400115 	stw	r17,4(sp)
   4dca4:	dfc00415 	stw	ra,16(sp)
   4dca8:	202290fa 	slli	r17,r4,3
   4dcac:	dcc00315 	stw	r19,12(sp)
   4dcb0:	4a41ffcc 	andi	r9,r9,2047
   4dcb4:	0101ffc4 	movi	r4,2047
   4dcb8:	2824d7fa 	srli	r18,r5,31
   4dcbc:	8401ffcc 	andi	r16,r16,2047
   4dcc0:	50c6b03a 	or	r3,r10,r3
   4dcc4:	380ed7fa 	srli	r7,r7,31
   4dcc8:	408ab03a 	or	r5,r8,r2
   4dccc:	300c90fa 	slli	r6,r6,3
   4dcd0:	49009626 	beq	r9,r4,4df2c <__subdf3+0x2c0>
   4dcd4:	39c0005c 	xori	r7,r7,1
   4dcd8:	8245c83a 	sub	r2,r16,r9
   4dcdc:	3c807426 	beq	r7,r18,4deb0 <__subdf3+0x244>
   4dce0:	0080af0e 	bge	zero,r2,4dfa0 <__subdf3+0x334>
   4dce4:	48002a1e 	bne	r9,zero,4dd90 <__subdf3+0x124>
   4dce8:	2988b03a 	or	r4,r5,r6
   4dcec:	20009a1e 	bne	r4,zero,4df58 <__subdf3+0x2ec>
   4dcf0:	888001cc 	andi	r2,r17,7
   4dcf4:	10000726 	beq	r2,zero,4dd14 <__subdf3+0xa8>
   4dcf8:	888003cc 	andi	r2,r17,15
   4dcfc:	01000104 	movi	r4,4
   4dd00:	11000426 	beq	r2,r4,4dd14 <__subdf3+0xa8>
   4dd04:	890b883a 	add	r5,r17,r4
   4dd08:	2c63803a 	cmpltu	r17,r5,r17
   4dd0c:	1c47883a 	add	r3,r3,r17
   4dd10:	2823883a 	mov	r17,r5
   4dd14:	1880202c 	andhi	r2,r3,128
   4dd18:	10005926 	beq	r2,zero,4de80 <__subdf3+0x214>
   4dd1c:	84000044 	addi	r16,r16,1
   4dd20:	0081ffc4 	movi	r2,2047
   4dd24:	8080be26 	beq	r16,r2,4e020 <__subdf3+0x3b4>
   4dd28:	017fe034 	movhi	r5,65408
   4dd2c:	297fffc4 	addi	r5,r5,-1
   4dd30:	1946703a 	and	r3,r3,r5
   4dd34:	1804977a 	slli	r2,r3,29
   4dd38:	1806927a 	slli	r3,r3,9
   4dd3c:	8822d0fa 	srli	r17,r17,3
   4dd40:	8401ffcc 	andi	r16,r16,2047
   4dd44:	180ad33a 	srli	r5,r3,12
   4dd48:	9100004c 	andi	r4,r18,1
   4dd4c:	1444b03a 	or	r2,r2,r17
   4dd50:	80c1ffcc 	andi	r3,r16,2047
   4dd54:	1820953a 	slli	r16,r3,20
   4dd58:	20c03fcc 	andi	r3,r4,255
   4dd5c:	180897fa 	slli	r4,r3,31
   4dd60:	00c00434 	movhi	r3,16
   4dd64:	18ffffc4 	addi	r3,r3,-1
   4dd68:	28c6703a 	and	r3,r5,r3
   4dd6c:	1c06b03a 	or	r3,r3,r16
   4dd70:	1906b03a 	or	r3,r3,r4
   4dd74:	dfc00417 	ldw	ra,16(sp)
   4dd78:	dcc00317 	ldw	r19,12(sp)
   4dd7c:	dc800217 	ldw	r18,8(sp)
   4dd80:	dc400117 	ldw	r17,4(sp)
   4dd84:	dc000017 	ldw	r16,0(sp)
   4dd88:	dec00504 	addi	sp,sp,20
   4dd8c:	f800283a 	ret
   4dd90:	0101ffc4 	movi	r4,2047
   4dd94:	813fd626 	beq	r16,r4,4dcf0 <__alt_data_end+0xfffcdcf0>
   4dd98:	29402034 	orhi	r5,r5,128
   4dd9c:	01000e04 	movi	r4,56
   4dda0:	2080a316 	blt	r4,r2,4e030 <__subdf3+0x3c4>
   4dda4:	010007c4 	movi	r4,31
   4dda8:	2080c616 	blt	r4,r2,4e0c4 <__subdf3+0x458>
   4ddac:	01000804 	movi	r4,32
   4ddb0:	2089c83a 	sub	r4,r4,r2
   4ddb4:	2910983a 	sll	r8,r5,r4
   4ddb8:	308ed83a 	srl	r7,r6,r2
   4ddbc:	3108983a 	sll	r4,r6,r4
   4ddc0:	2884d83a 	srl	r2,r5,r2
   4ddc4:	41ccb03a 	or	r6,r8,r7
   4ddc8:	2008c03a 	cmpne	r4,r4,zero
   4ddcc:	310cb03a 	or	r6,r6,r4
   4ddd0:	898dc83a 	sub	r6,r17,r6
   4ddd4:	89a3803a 	cmpltu	r17,r17,r6
   4ddd8:	1887c83a 	sub	r3,r3,r2
   4dddc:	1c47c83a 	sub	r3,r3,r17
   4dde0:	3023883a 	mov	r17,r6
   4dde4:	1880202c 	andhi	r2,r3,128
   4dde8:	10002326 	beq	r2,zero,4de78 <__subdf3+0x20c>
   4ddec:	04c02034 	movhi	r19,128
   4ddf0:	9cffffc4 	addi	r19,r19,-1
   4ddf4:	1ce6703a 	and	r19,r3,r19
   4ddf8:	98007a26 	beq	r19,zero,4dfe4 <__subdf3+0x378>
   4ddfc:	9809883a 	mov	r4,r19
   4de00:	00430980 	call	43098 <__clzsi2>
   4de04:	113ffe04 	addi	r4,r2,-8
   4de08:	00c007c4 	movi	r3,31
   4de0c:	19007b16 	blt	r3,r4,4dffc <__subdf3+0x390>
   4de10:	00800804 	movi	r2,32
   4de14:	1105c83a 	sub	r2,r2,r4
   4de18:	8884d83a 	srl	r2,r17,r2
   4de1c:	9906983a 	sll	r3,r19,r4
   4de20:	8922983a 	sll	r17,r17,r4
   4de24:	10c4b03a 	or	r2,r2,r3
   4de28:	24007816 	blt	r4,r16,4e00c <__subdf3+0x3a0>
   4de2c:	2421c83a 	sub	r16,r4,r16
   4de30:	80c00044 	addi	r3,r16,1
   4de34:	010007c4 	movi	r4,31
   4de38:	20c09516 	blt	r4,r3,4e090 <__subdf3+0x424>
   4de3c:	01400804 	movi	r5,32
   4de40:	28cbc83a 	sub	r5,r5,r3
   4de44:	88c8d83a 	srl	r4,r17,r3
   4de48:	8962983a 	sll	r17,r17,r5
   4de4c:	114a983a 	sll	r5,r2,r5
   4de50:	10c6d83a 	srl	r3,r2,r3
   4de54:	8804c03a 	cmpne	r2,r17,zero
   4de58:	290ab03a 	or	r5,r5,r4
   4de5c:	28a2b03a 	or	r17,r5,r2
   4de60:	0021883a 	mov	r16,zero
   4de64:	003fa206 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4de68:	2090b03a 	or	r8,r4,r2
   4de6c:	40018e26 	beq	r8,zero,4e4a8 <__subdf3+0x83c>
   4de70:	1007883a 	mov	r3,r2
   4de74:	2023883a 	mov	r17,r4
   4de78:	888001cc 	andi	r2,r17,7
   4de7c:	103f9e1e 	bne	r2,zero,4dcf8 <__alt_data_end+0xfffcdcf8>
   4de80:	1804977a 	slli	r2,r3,29
   4de84:	8822d0fa 	srli	r17,r17,3
   4de88:	1810d0fa 	srli	r8,r3,3
   4de8c:	9100004c 	andi	r4,r18,1
   4de90:	1444b03a 	or	r2,r2,r17
   4de94:	00c1ffc4 	movi	r3,2047
   4de98:	80c02826 	beq	r16,r3,4df3c <__subdf3+0x2d0>
   4de9c:	01400434 	movhi	r5,16
   4dea0:	297fffc4 	addi	r5,r5,-1
   4dea4:	80e0703a 	and	r16,r16,r3
   4dea8:	414a703a 	and	r5,r8,r5
   4deac:	003fa806 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4deb0:	0080630e 	bge	zero,r2,4e040 <__subdf3+0x3d4>
   4deb4:	48003026 	beq	r9,zero,4df78 <__subdf3+0x30c>
   4deb8:	0101ffc4 	movi	r4,2047
   4debc:	813f8c26 	beq	r16,r4,4dcf0 <__alt_data_end+0xfffcdcf0>
   4dec0:	29402034 	orhi	r5,r5,128
   4dec4:	01000e04 	movi	r4,56
   4dec8:	2080a90e 	bge	r4,r2,4e170 <__subdf3+0x504>
   4decc:	298cb03a 	or	r6,r5,r6
   4ded0:	3012c03a 	cmpne	r9,r6,zero
   4ded4:	0005883a 	mov	r2,zero
   4ded8:	4c53883a 	add	r9,r9,r17
   4dedc:	4c63803a 	cmpltu	r17,r9,r17
   4dee0:	10c7883a 	add	r3,r2,r3
   4dee4:	88c7883a 	add	r3,r17,r3
   4dee8:	4823883a 	mov	r17,r9
   4deec:	1880202c 	andhi	r2,r3,128
   4def0:	1000d026 	beq	r2,zero,4e234 <__subdf3+0x5c8>
   4def4:	84000044 	addi	r16,r16,1
   4def8:	0081ffc4 	movi	r2,2047
   4defc:	8080fe26 	beq	r16,r2,4e2f8 <__subdf3+0x68c>
   4df00:	00bfe034 	movhi	r2,65408
   4df04:	10bfffc4 	addi	r2,r2,-1
   4df08:	1886703a 	and	r3,r3,r2
   4df0c:	880ad07a 	srli	r5,r17,1
   4df10:	180497fa 	slli	r2,r3,31
   4df14:	8900004c 	andi	r4,r17,1
   4df18:	2922b03a 	or	r17,r5,r4
   4df1c:	1806d07a 	srli	r3,r3,1
   4df20:	1462b03a 	or	r17,r2,r17
   4df24:	3825883a 	mov	r18,r7
   4df28:	003f7106 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4df2c:	2984b03a 	or	r2,r5,r6
   4df30:	103f6826 	beq	r2,zero,4dcd4 <__alt_data_end+0xfffcdcd4>
   4df34:	39c03fcc 	andi	r7,r7,255
   4df38:	003f6706 	br	4dcd8 <__alt_data_end+0xfffcdcd8>
   4df3c:	4086b03a 	or	r3,r8,r2
   4df40:	18015226 	beq	r3,zero,4e48c <__subdf3+0x820>
   4df44:	00c00434 	movhi	r3,16
   4df48:	41400234 	orhi	r5,r8,8
   4df4c:	18ffffc4 	addi	r3,r3,-1
   4df50:	28ca703a 	and	r5,r5,r3
   4df54:	003f7e06 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4df58:	10bfffc4 	addi	r2,r2,-1
   4df5c:	1000491e 	bne	r2,zero,4e084 <__subdf3+0x418>
   4df60:	898fc83a 	sub	r7,r17,r6
   4df64:	89e3803a 	cmpltu	r17,r17,r7
   4df68:	1947c83a 	sub	r3,r3,r5
   4df6c:	1c47c83a 	sub	r3,r3,r17
   4df70:	3823883a 	mov	r17,r7
   4df74:	003f9b06 	br	4dde4 <__alt_data_end+0xfffcdde4>
   4df78:	2988b03a 	or	r4,r5,r6
   4df7c:	203f5c26 	beq	r4,zero,4dcf0 <__alt_data_end+0xfffcdcf0>
   4df80:	10bfffc4 	addi	r2,r2,-1
   4df84:	1000931e 	bne	r2,zero,4e1d4 <__subdf3+0x568>
   4df88:	898d883a 	add	r6,r17,r6
   4df8c:	3463803a 	cmpltu	r17,r6,r17
   4df90:	1947883a 	add	r3,r3,r5
   4df94:	88c7883a 	add	r3,r17,r3
   4df98:	3023883a 	mov	r17,r6
   4df9c:	003fd306 	br	4deec <__alt_data_end+0xfffcdeec>
   4dfa0:	1000541e 	bne	r2,zero,4e0f4 <__subdf3+0x488>
   4dfa4:	80800044 	addi	r2,r16,1
   4dfa8:	1081ffcc 	andi	r2,r2,2047
   4dfac:	01000044 	movi	r4,1
   4dfb0:	2080a20e 	bge	r4,r2,4e23c <__subdf3+0x5d0>
   4dfb4:	8989c83a 	sub	r4,r17,r6
   4dfb8:	8905803a 	cmpltu	r2,r17,r4
   4dfbc:	1967c83a 	sub	r19,r3,r5
   4dfc0:	98a7c83a 	sub	r19,r19,r2
   4dfc4:	9880202c 	andhi	r2,r19,128
   4dfc8:	10006326 	beq	r2,zero,4e158 <__subdf3+0x4ec>
   4dfcc:	3463c83a 	sub	r17,r6,r17
   4dfd0:	28c7c83a 	sub	r3,r5,r3
   4dfd4:	344d803a 	cmpltu	r6,r6,r17
   4dfd8:	19a7c83a 	sub	r19,r3,r6
   4dfdc:	3825883a 	mov	r18,r7
   4dfe0:	983f861e 	bne	r19,zero,4ddfc <__alt_data_end+0xfffcddfc>
   4dfe4:	8809883a 	mov	r4,r17
   4dfe8:	00430980 	call	43098 <__clzsi2>
   4dfec:	10800804 	addi	r2,r2,32
   4dff0:	113ffe04 	addi	r4,r2,-8
   4dff4:	00c007c4 	movi	r3,31
   4dff8:	193f850e 	bge	r3,r4,4de10 <__alt_data_end+0xfffcde10>
   4dffc:	10bff604 	addi	r2,r2,-40
   4e000:	8884983a 	sll	r2,r17,r2
   4e004:	0023883a 	mov	r17,zero
   4e008:	243f880e 	bge	r4,r16,4de2c <__alt_data_end+0xfffcde2c>
   4e00c:	00ffe034 	movhi	r3,65408
   4e010:	18ffffc4 	addi	r3,r3,-1
   4e014:	8121c83a 	sub	r16,r16,r4
   4e018:	10c6703a 	and	r3,r2,r3
   4e01c:	003f3406 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e020:	9100004c 	andi	r4,r18,1
   4e024:	000b883a 	mov	r5,zero
   4e028:	0005883a 	mov	r2,zero
   4e02c:	003f4806 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4e030:	298cb03a 	or	r6,r5,r6
   4e034:	300cc03a 	cmpne	r6,r6,zero
   4e038:	0005883a 	mov	r2,zero
   4e03c:	003f6406 	br	4ddd0 <__alt_data_end+0xfffcddd0>
   4e040:	10009a1e 	bne	r2,zero,4e2ac <__subdf3+0x640>
   4e044:	82400044 	addi	r9,r16,1
   4e048:	4881ffcc 	andi	r2,r9,2047
   4e04c:	02800044 	movi	r10,1
   4e050:	5080670e 	bge	r10,r2,4e1f0 <__subdf3+0x584>
   4e054:	0081ffc4 	movi	r2,2047
   4e058:	4880af26 	beq	r9,r2,4e318 <__subdf3+0x6ac>
   4e05c:	898d883a 	add	r6,r17,r6
   4e060:	1945883a 	add	r2,r3,r5
   4e064:	3447803a 	cmpltu	r3,r6,r17
   4e068:	1887883a 	add	r3,r3,r2
   4e06c:	182297fa 	slli	r17,r3,31
   4e070:	300cd07a 	srli	r6,r6,1
   4e074:	1806d07a 	srli	r3,r3,1
   4e078:	4821883a 	mov	r16,r9
   4e07c:	89a2b03a 	or	r17,r17,r6
   4e080:	003f1b06 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e084:	0101ffc4 	movi	r4,2047
   4e088:	813f441e 	bne	r16,r4,4dd9c <__alt_data_end+0xfffcdd9c>
   4e08c:	003f1806 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e090:	843ff844 	addi	r16,r16,-31
   4e094:	01400804 	movi	r5,32
   4e098:	1408d83a 	srl	r4,r2,r16
   4e09c:	19405026 	beq	r3,r5,4e1e0 <__subdf3+0x574>
   4e0a0:	01401004 	movi	r5,64
   4e0a4:	28c7c83a 	sub	r3,r5,r3
   4e0a8:	10c4983a 	sll	r2,r2,r3
   4e0ac:	88a2b03a 	or	r17,r17,r2
   4e0b0:	8822c03a 	cmpne	r17,r17,zero
   4e0b4:	2462b03a 	or	r17,r4,r17
   4e0b8:	0007883a 	mov	r3,zero
   4e0bc:	0021883a 	mov	r16,zero
   4e0c0:	003f6d06 	br	4de78 <__alt_data_end+0xfffcde78>
   4e0c4:	11fff804 	addi	r7,r2,-32
   4e0c8:	01000804 	movi	r4,32
   4e0cc:	29ced83a 	srl	r7,r5,r7
   4e0d0:	11004526 	beq	r2,r4,4e1e8 <__subdf3+0x57c>
   4e0d4:	01001004 	movi	r4,64
   4e0d8:	2089c83a 	sub	r4,r4,r2
   4e0dc:	2904983a 	sll	r2,r5,r4
   4e0e0:	118cb03a 	or	r6,r2,r6
   4e0e4:	300cc03a 	cmpne	r6,r6,zero
   4e0e8:	398cb03a 	or	r6,r7,r6
   4e0ec:	0005883a 	mov	r2,zero
   4e0f0:	003f3706 	br	4ddd0 <__alt_data_end+0xfffcddd0>
   4e0f4:	80002a26 	beq	r16,zero,4e1a0 <__subdf3+0x534>
   4e0f8:	0101ffc4 	movi	r4,2047
   4e0fc:	49006626 	beq	r9,r4,4e298 <__subdf3+0x62c>
   4e100:	0085c83a 	sub	r2,zero,r2
   4e104:	18c02034 	orhi	r3,r3,128
   4e108:	01000e04 	movi	r4,56
   4e10c:	20807e16 	blt	r4,r2,4e308 <__subdf3+0x69c>
   4e110:	010007c4 	movi	r4,31
   4e114:	2080e716 	blt	r4,r2,4e4b4 <__subdf3+0x848>
   4e118:	01000804 	movi	r4,32
   4e11c:	2089c83a 	sub	r4,r4,r2
   4e120:	1914983a 	sll	r10,r3,r4
   4e124:	8890d83a 	srl	r8,r17,r2
   4e128:	8908983a 	sll	r4,r17,r4
   4e12c:	1884d83a 	srl	r2,r3,r2
   4e130:	5222b03a 	or	r17,r10,r8
   4e134:	2006c03a 	cmpne	r3,r4,zero
   4e138:	88e2b03a 	or	r17,r17,r3
   4e13c:	3463c83a 	sub	r17,r6,r17
   4e140:	2885c83a 	sub	r2,r5,r2
   4e144:	344d803a 	cmpltu	r6,r6,r17
   4e148:	1187c83a 	sub	r3,r2,r6
   4e14c:	4821883a 	mov	r16,r9
   4e150:	3825883a 	mov	r18,r7
   4e154:	003f2306 	br	4dde4 <__alt_data_end+0xfffcdde4>
   4e158:	24d0b03a 	or	r8,r4,r19
   4e15c:	40001b1e 	bne	r8,zero,4e1cc <__subdf3+0x560>
   4e160:	0005883a 	mov	r2,zero
   4e164:	0009883a 	mov	r4,zero
   4e168:	0021883a 	mov	r16,zero
   4e16c:	003f4906 	br	4de94 <__alt_data_end+0xfffcde94>
   4e170:	010007c4 	movi	r4,31
   4e174:	20803a16 	blt	r4,r2,4e260 <__subdf3+0x5f4>
   4e178:	01000804 	movi	r4,32
   4e17c:	2089c83a 	sub	r4,r4,r2
   4e180:	2912983a 	sll	r9,r5,r4
   4e184:	3090d83a 	srl	r8,r6,r2
   4e188:	3108983a 	sll	r4,r6,r4
   4e18c:	2884d83a 	srl	r2,r5,r2
   4e190:	4a12b03a 	or	r9,r9,r8
   4e194:	2008c03a 	cmpne	r4,r4,zero
   4e198:	4912b03a 	or	r9,r9,r4
   4e19c:	003f4e06 	br	4ded8 <__alt_data_end+0xfffcded8>
   4e1a0:	1c48b03a 	or	r4,r3,r17
   4e1a4:	20003c26 	beq	r4,zero,4e298 <__subdf3+0x62c>
   4e1a8:	0084303a 	nor	r2,zero,r2
   4e1ac:	1000381e 	bne	r2,zero,4e290 <__subdf3+0x624>
   4e1b0:	3463c83a 	sub	r17,r6,r17
   4e1b4:	28c5c83a 	sub	r2,r5,r3
   4e1b8:	344d803a 	cmpltu	r6,r6,r17
   4e1bc:	1187c83a 	sub	r3,r2,r6
   4e1c0:	4821883a 	mov	r16,r9
   4e1c4:	3825883a 	mov	r18,r7
   4e1c8:	003f0606 	br	4dde4 <__alt_data_end+0xfffcdde4>
   4e1cc:	2023883a 	mov	r17,r4
   4e1d0:	003f0906 	br	4ddf8 <__alt_data_end+0xfffcddf8>
   4e1d4:	0101ffc4 	movi	r4,2047
   4e1d8:	813f3a1e 	bne	r16,r4,4dec4 <__alt_data_end+0xfffcdec4>
   4e1dc:	003ec406 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e1e0:	0005883a 	mov	r2,zero
   4e1e4:	003fb106 	br	4e0ac <__alt_data_end+0xfffce0ac>
   4e1e8:	0005883a 	mov	r2,zero
   4e1ec:	003fbc06 	br	4e0e0 <__alt_data_end+0xfffce0e0>
   4e1f0:	1c44b03a 	or	r2,r3,r17
   4e1f4:	80008e1e 	bne	r16,zero,4e430 <__subdf3+0x7c4>
   4e1f8:	1000c826 	beq	r2,zero,4e51c <__subdf3+0x8b0>
   4e1fc:	2984b03a 	or	r2,r5,r6
   4e200:	103ebb26 	beq	r2,zero,4dcf0 <__alt_data_end+0xfffcdcf0>
   4e204:	8989883a 	add	r4,r17,r6
   4e208:	1945883a 	add	r2,r3,r5
   4e20c:	2447803a 	cmpltu	r3,r4,r17
   4e210:	1887883a 	add	r3,r3,r2
   4e214:	1880202c 	andhi	r2,r3,128
   4e218:	2023883a 	mov	r17,r4
   4e21c:	103f1626 	beq	r2,zero,4de78 <__alt_data_end+0xfffcde78>
   4e220:	00bfe034 	movhi	r2,65408
   4e224:	10bfffc4 	addi	r2,r2,-1
   4e228:	5021883a 	mov	r16,r10
   4e22c:	1886703a 	and	r3,r3,r2
   4e230:	003eaf06 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e234:	3825883a 	mov	r18,r7
   4e238:	003f0f06 	br	4de78 <__alt_data_end+0xfffcde78>
   4e23c:	1c44b03a 	or	r2,r3,r17
   4e240:	8000251e 	bne	r16,zero,4e2d8 <__subdf3+0x66c>
   4e244:	1000661e 	bne	r2,zero,4e3e0 <__subdf3+0x774>
   4e248:	2990b03a 	or	r8,r5,r6
   4e24c:	40009626 	beq	r8,zero,4e4a8 <__subdf3+0x83c>
   4e250:	2807883a 	mov	r3,r5
   4e254:	3023883a 	mov	r17,r6
   4e258:	3825883a 	mov	r18,r7
   4e25c:	003ea406 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e260:	127ff804 	addi	r9,r2,-32
   4e264:	01000804 	movi	r4,32
   4e268:	2a52d83a 	srl	r9,r5,r9
   4e26c:	11008c26 	beq	r2,r4,4e4a0 <__subdf3+0x834>
   4e270:	01001004 	movi	r4,64
   4e274:	2085c83a 	sub	r2,r4,r2
   4e278:	2884983a 	sll	r2,r5,r2
   4e27c:	118cb03a 	or	r6,r2,r6
   4e280:	300cc03a 	cmpne	r6,r6,zero
   4e284:	4992b03a 	or	r9,r9,r6
   4e288:	0005883a 	mov	r2,zero
   4e28c:	003f1206 	br	4ded8 <__alt_data_end+0xfffcded8>
   4e290:	0101ffc4 	movi	r4,2047
   4e294:	493f9c1e 	bne	r9,r4,4e108 <__alt_data_end+0xfffce108>
   4e298:	2807883a 	mov	r3,r5
   4e29c:	3023883a 	mov	r17,r6
   4e2a0:	4821883a 	mov	r16,r9
   4e2a4:	3825883a 	mov	r18,r7
   4e2a8:	003e9106 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e2ac:	80001f1e 	bne	r16,zero,4e32c <__subdf3+0x6c0>
   4e2b0:	1c48b03a 	or	r4,r3,r17
   4e2b4:	20005a26 	beq	r4,zero,4e420 <__subdf3+0x7b4>
   4e2b8:	0084303a 	nor	r2,zero,r2
   4e2bc:	1000561e 	bne	r2,zero,4e418 <__subdf3+0x7ac>
   4e2c0:	89a3883a 	add	r17,r17,r6
   4e2c4:	1945883a 	add	r2,r3,r5
   4e2c8:	898d803a 	cmpltu	r6,r17,r6
   4e2cc:	3087883a 	add	r3,r6,r2
   4e2d0:	4821883a 	mov	r16,r9
   4e2d4:	003f0506 	br	4deec <__alt_data_end+0xfffcdeec>
   4e2d8:	10002b1e 	bne	r2,zero,4e388 <__subdf3+0x71c>
   4e2dc:	2984b03a 	or	r2,r5,r6
   4e2e0:	10008026 	beq	r2,zero,4e4e4 <__subdf3+0x878>
   4e2e4:	2807883a 	mov	r3,r5
   4e2e8:	3023883a 	mov	r17,r6
   4e2ec:	3825883a 	mov	r18,r7
   4e2f0:	0401ffc4 	movi	r16,2047
   4e2f4:	003e7e06 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e2f8:	3809883a 	mov	r4,r7
   4e2fc:	0011883a 	mov	r8,zero
   4e300:	0005883a 	mov	r2,zero
   4e304:	003ee306 	br	4de94 <__alt_data_end+0xfffcde94>
   4e308:	1c62b03a 	or	r17,r3,r17
   4e30c:	8822c03a 	cmpne	r17,r17,zero
   4e310:	0005883a 	mov	r2,zero
   4e314:	003f8906 	br	4e13c <__alt_data_end+0xfffce13c>
   4e318:	3809883a 	mov	r4,r7
   4e31c:	4821883a 	mov	r16,r9
   4e320:	0011883a 	mov	r8,zero
   4e324:	0005883a 	mov	r2,zero
   4e328:	003eda06 	br	4de94 <__alt_data_end+0xfffcde94>
   4e32c:	0101ffc4 	movi	r4,2047
   4e330:	49003b26 	beq	r9,r4,4e420 <__subdf3+0x7b4>
   4e334:	0085c83a 	sub	r2,zero,r2
   4e338:	18c02034 	orhi	r3,r3,128
   4e33c:	01000e04 	movi	r4,56
   4e340:	20806e16 	blt	r4,r2,4e4fc <__subdf3+0x890>
   4e344:	010007c4 	movi	r4,31
   4e348:	20807716 	blt	r4,r2,4e528 <__subdf3+0x8bc>
   4e34c:	01000804 	movi	r4,32
   4e350:	2089c83a 	sub	r4,r4,r2
   4e354:	1914983a 	sll	r10,r3,r4
   4e358:	8890d83a 	srl	r8,r17,r2
   4e35c:	8908983a 	sll	r4,r17,r4
   4e360:	1884d83a 	srl	r2,r3,r2
   4e364:	5222b03a 	or	r17,r10,r8
   4e368:	2006c03a 	cmpne	r3,r4,zero
   4e36c:	88e2b03a 	or	r17,r17,r3
   4e370:	89a3883a 	add	r17,r17,r6
   4e374:	1145883a 	add	r2,r2,r5
   4e378:	898d803a 	cmpltu	r6,r17,r6
   4e37c:	3087883a 	add	r3,r6,r2
   4e380:	4821883a 	mov	r16,r9
   4e384:	003ed906 	br	4deec <__alt_data_end+0xfffcdeec>
   4e388:	2984b03a 	or	r2,r5,r6
   4e38c:	10004226 	beq	r2,zero,4e498 <__subdf3+0x82c>
   4e390:	1808d0fa 	srli	r4,r3,3
   4e394:	8822d0fa 	srli	r17,r17,3
   4e398:	1806977a 	slli	r3,r3,29
   4e39c:	2080022c 	andhi	r2,r4,8
   4e3a0:	1c62b03a 	or	r17,r3,r17
   4e3a4:	10000826 	beq	r2,zero,4e3c8 <__subdf3+0x75c>
   4e3a8:	2812d0fa 	srli	r9,r5,3
   4e3ac:	4880022c 	andhi	r2,r9,8
   4e3b0:	1000051e 	bne	r2,zero,4e3c8 <__subdf3+0x75c>
   4e3b4:	300cd0fa 	srli	r6,r6,3
   4e3b8:	2804977a 	slli	r2,r5,29
   4e3bc:	4809883a 	mov	r4,r9
   4e3c0:	3825883a 	mov	r18,r7
   4e3c4:	11a2b03a 	or	r17,r2,r6
   4e3c8:	8806d77a 	srli	r3,r17,29
   4e3cc:	200890fa 	slli	r4,r4,3
   4e3d0:	882290fa 	slli	r17,r17,3
   4e3d4:	0401ffc4 	movi	r16,2047
   4e3d8:	1906b03a 	or	r3,r3,r4
   4e3dc:	003e4406 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e3e0:	2984b03a 	or	r2,r5,r6
   4e3e4:	103e4226 	beq	r2,zero,4dcf0 <__alt_data_end+0xfffcdcf0>
   4e3e8:	8989c83a 	sub	r4,r17,r6
   4e3ec:	8911803a 	cmpltu	r8,r17,r4
   4e3f0:	1945c83a 	sub	r2,r3,r5
   4e3f4:	1205c83a 	sub	r2,r2,r8
   4e3f8:	1200202c 	andhi	r8,r2,128
   4e3fc:	403e9a26 	beq	r8,zero,4de68 <__alt_data_end+0xfffcde68>
   4e400:	3463c83a 	sub	r17,r6,r17
   4e404:	28c5c83a 	sub	r2,r5,r3
   4e408:	344d803a 	cmpltu	r6,r6,r17
   4e40c:	1187c83a 	sub	r3,r2,r6
   4e410:	3825883a 	mov	r18,r7
   4e414:	003e3606 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e418:	0101ffc4 	movi	r4,2047
   4e41c:	493fc71e 	bne	r9,r4,4e33c <__alt_data_end+0xfffce33c>
   4e420:	2807883a 	mov	r3,r5
   4e424:	3023883a 	mov	r17,r6
   4e428:	4821883a 	mov	r16,r9
   4e42c:	003e3006 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e430:	10003626 	beq	r2,zero,4e50c <__subdf3+0x8a0>
   4e434:	2984b03a 	or	r2,r5,r6
   4e438:	10001726 	beq	r2,zero,4e498 <__subdf3+0x82c>
   4e43c:	1808d0fa 	srli	r4,r3,3
   4e440:	8822d0fa 	srli	r17,r17,3
   4e444:	1806977a 	slli	r3,r3,29
   4e448:	2080022c 	andhi	r2,r4,8
   4e44c:	1c62b03a 	or	r17,r3,r17
   4e450:	10000726 	beq	r2,zero,4e470 <__subdf3+0x804>
   4e454:	2812d0fa 	srli	r9,r5,3
   4e458:	4880022c 	andhi	r2,r9,8
   4e45c:	1000041e 	bne	r2,zero,4e470 <__subdf3+0x804>
   4e460:	300cd0fa 	srli	r6,r6,3
   4e464:	2804977a 	slli	r2,r5,29
   4e468:	4809883a 	mov	r4,r9
   4e46c:	11a2b03a 	or	r17,r2,r6
   4e470:	8806d77a 	srli	r3,r17,29
   4e474:	200890fa 	slli	r4,r4,3
   4e478:	882290fa 	slli	r17,r17,3
   4e47c:	3825883a 	mov	r18,r7
   4e480:	1906b03a 	or	r3,r3,r4
   4e484:	0401ffc4 	movi	r16,2047
   4e488:	003e1906 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e48c:	000b883a 	mov	r5,zero
   4e490:	0005883a 	mov	r2,zero
   4e494:	003e2e06 	br	4dd50 <__alt_data_end+0xfffcdd50>
   4e498:	0401ffc4 	movi	r16,2047
   4e49c:	003e1406 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e4a0:	0005883a 	mov	r2,zero
   4e4a4:	003f7506 	br	4e27c <__alt_data_end+0xfffce27c>
   4e4a8:	0005883a 	mov	r2,zero
   4e4ac:	0009883a 	mov	r4,zero
   4e4b0:	003e7806 	br	4de94 <__alt_data_end+0xfffcde94>
   4e4b4:	123ff804 	addi	r8,r2,-32
   4e4b8:	01000804 	movi	r4,32
   4e4bc:	1a10d83a 	srl	r8,r3,r8
   4e4c0:	11002526 	beq	r2,r4,4e558 <__subdf3+0x8ec>
   4e4c4:	01001004 	movi	r4,64
   4e4c8:	2085c83a 	sub	r2,r4,r2
   4e4cc:	1884983a 	sll	r2,r3,r2
   4e4d0:	1444b03a 	or	r2,r2,r17
   4e4d4:	1004c03a 	cmpne	r2,r2,zero
   4e4d8:	40a2b03a 	or	r17,r8,r2
   4e4dc:	0005883a 	mov	r2,zero
   4e4e0:	003f1606 	br	4e13c <__alt_data_end+0xfffce13c>
   4e4e4:	02000434 	movhi	r8,16
   4e4e8:	0009883a 	mov	r4,zero
   4e4ec:	423fffc4 	addi	r8,r8,-1
   4e4f0:	00bfffc4 	movi	r2,-1
   4e4f4:	0401ffc4 	movi	r16,2047
   4e4f8:	003e6606 	br	4de94 <__alt_data_end+0xfffcde94>
   4e4fc:	1c62b03a 	or	r17,r3,r17
   4e500:	8822c03a 	cmpne	r17,r17,zero
   4e504:	0005883a 	mov	r2,zero
   4e508:	003f9906 	br	4e370 <__alt_data_end+0xfffce370>
   4e50c:	2807883a 	mov	r3,r5
   4e510:	3023883a 	mov	r17,r6
   4e514:	0401ffc4 	movi	r16,2047
   4e518:	003df506 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e51c:	2807883a 	mov	r3,r5
   4e520:	3023883a 	mov	r17,r6
   4e524:	003df206 	br	4dcf0 <__alt_data_end+0xfffcdcf0>
   4e528:	123ff804 	addi	r8,r2,-32
   4e52c:	01000804 	movi	r4,32
   4e530:	1a10d83a 	srl	r8,r3,r8
   4e534:	11000a26 	beq	r2,r4,4e560 <__subdf3+0x8f4>
   4e538:	01001004 	movi	r4,64
   4e53c:	2085c83a 	sub	r2,r4,r2
   4e540:	1884983a 	sll	r2,r3,r2
   4e544:	1444b03a 	or	r2,r2,r17
   4e548:	1004c03a 	cmpne	r2,r2,zero
   4e54c:	40a2b03a 	or	r17,r8,r2
   4e550:	0005883a 	mov	r2,zero
   4e554:	003f8606 	br	4e370 <__alt_data_end+0xfffce370>
   4e558:	0005883a 	mov	r2,zero
   4e55c:	003fdc06 	br	4e4d0 <__alt_data_end+0xfffce4d0>
   4e560:	0005883a 	mov	r2,zero
   4e564:	003ff706 	br	4e544 <__alt_data_end+0xfffce544>

0004e568 <__fixdfsi>:
   4e568:	280cd53a 	srli	r6,r5,20
   4e56c:	00c00434 	movhi	r3,16
   4e570:	18ffffc4 	addi	r3,r3,-1
   4e574:	3181ffcc 	andi	r6,r6,2047
   4e578:	01c0ff84 	movi	r7,1022
   4e57c:	28c6703a 	and	r3,r5,r3
   4e580:	280ad7fa 	srli	r5,r5,31
   4e584:	3980120e 	bge	r7,r6,4e5d0 <__fixdfsi+0x68>
   4e588:	00810744 	movi	r2,1053
   4e58c:	11800c16 	blt	r2,r6,4e5c0 <__fixdfsi+0x58>
   4e590:	00810cc4 	movi	r2,1075
   4e594:	1185c83a 	sub	r2,r2,r6
   4e598:	01c007c4 	movi	r7,31
   4e59c:	18c00434 	orhi	r3,r3,16
   4e5a0:	38800d16 	blt	r7,r2,4e5d8 <__fixdfsi+0x70>
   4e5a4:	31befb44 	addi	r6,r6,-1043
   4e5a8:	2084d83a 	srl	r2,r4,r2
   4e5ac:	1986983a 	sll	r3,r3,r6
   4e5b0:	1884b03a 	or	r2,r3,r2
   4e5b4:	28000726 	beq	r5,zero,4e5d4 <__fixdfsi+0x6c>
   4e5b8:	0085c83a 	sub	r2,zero,r2
   4e5bc:	f800283a 	ret
   4e5c0:	00a00034 	movhi	r2,32768
   4e5c4:	10bfffc4 	addi	r2,r2,-1
   4e5c8:	2885883a 	add	r2,r5,r2
   4e5cc:	f800283a 	ret
   4e5d0:	0005883a 	mov	r2,zero
   4e5d4:	f800283a 	ret
   4e5d8:	008104c4 	movi	r2,1043
   4e5dc:	1185c83a 	sub	r2,r2,r6
   4e5e0:	1884d83a 	srl	r2,r3,r2
   4e5e4:	003ff306 	br	4e5b4 <__alt_data_end+0xfffce5b4>

0004e5e8 <__floatsidf>:
   4e5e8:	defffd04 	addi	sp,sp,-12
   4e5ec:	dfc00215 	stw	ra,8(sp)
   4e5f0:	dc400115 	stw	r17,4(sp)
   4e5f4:	dc000015 	stw	r16,0(sp)
   4e5f8:	20002b26 	beq	r4,zero,4e6a8 <__floatsidf+0xc0>
   4e5fc:	2023883a 	mov	r17,r4
   4e600:	2020d7fa 	srli	r16,r4,31
   4e604:	20002d16 	blt	r4,zero,4e6bc <__floatsidf+0xd4>
   4e608:	8809883a 	mov	r4,r17
   4e60c:	00430980 	call	43098 <__clzsi2>
   4e610:	01410784 	movi	r5,1054
   4e614:	288bc83a 	sub	r5,r5,r2
   4e618:	01010cc4 	movi	r4,1075
   4e61c:	2149c83a 	sub	r4,r4,r5
   4e620:	00c007c4 	movi	r3,31
   4e624:	1900160e 	bge	r3,r4,4e680 <__floatsidf+0x98>
   4e628:	00c104c4 	movi	r3,1043
   4e62c:	1947c83a 	sub	r3,r3,r5
   4e630:	88c6983a 	sll	r3,r17,r3
   4e634:	00800434 	movhi	r2,16
   4e638:	10bfffc4 	addi	r2,r2,-1
   4e63c:	1886703a 	and	r3,r3,r2
   4e640:	2941ffcc 	andi	r5,r5,2047
   4e644:	800d883a 	mov	r6,r16
   4e648:	0005883a 	mov	r2,zero
   4e64c:	280a953a 	slli	r5,r5,20
   4e650:	31803fcc 	andi	r6,r6,255
   4e654:	01000434 	movhi	r4,16
   4e658:	300c97fa 	slli	r6,r6,31
   4e65c:	213fffc4 	addi	r4,r4,-1
   4e660:	1906703a 	and	r3,r3,r4
   4e664:	1946b03a 	or	r3,r3,r5
   4e668:	1986b03a 	or	r3,r3,r6
   4e66c:	dfc00217 	ldw	ra,8(sp)
   4e670:	dc400117 	ldw	r17,4(sp)
   4e674:	dc000017 	ldw	r16,0(sp)
   4e678:	dec00304 	addi	sp,sp,12
   4e67c:	f800283a 	ret
   4e680:	00c002c4 	movi	r3,11
   4e684:	1887c83a 	sub	r3,r3,r2
   4e688:	88c6d83a 	srl	r3,r17,r3
   4e68c:	8904983a 	sll	r2,r17,r4
   4e690:	01000434 	movhi	r4,16
   4e694:	213fffc4 	addi	r4,r4,-1
   4e698:	2941ffcc 	andi	r5,r5,2047
   4e69c:	1906703a 	and	r3,r3,r4
   4e6a0:	800d883a 	mov	r6,r16
   4e6a4:	003fe906 	br	4e64c <__alt_data_end+0xfffce64c>
   4e6a8:	000d883a 	mov	r6,zero
   4e6ac:	000b883a 	mov	r5,zero
   4e6b0:	0007883a 	mov	r3,zero
   4e6b4:	0005883a 	mov	r2,zero
   4e6b8:	003fe406 	br	4e64c <__alt_data_end+0xfffce64c>
   4e6bc:	0123c83a 	sub	r17,zero,r4
   4e6c0:	003fd106 	br	4e608 <__alt_data_end+0xfffce608>

0004e6c4 <__floatunsidf>:
   4e6c4:	defffe04 	addi	sp,sp,-8
   4e6c8:	dc000015 	stw	r16,0(sp)
   4e6cc:	dfc00115 	stw	ra,4(sp)
   4e6d0:	2021883a 	mov	r16,r4
   4e6d4:	20002226 	beq	r4,zero,4e760 <__floatunsidf+0x9c>
   4e6d8:	00430980 	call	43098 <__clzsi2>
   4e6dc:	01010784 	movi	r4,1054
   4e6e0:	2089c83a 	sub	r4,r4,r2
   4e6e4:	01810cc4 	movi	r6,1075
   4e6e8:	310dc83a 	sub	r6,r6,r4
   4e6ec:	00c007c4 	movi	r3,31
   4e6f0:	1980120e 	bge	r3,r6,4e73c <__floatunsidf+0x78>
   4e6f4:	00c104c4 	movi	r3,1043
   4e6f8:	1907c83a 	sub	r3,r3,r4
   4e6fc:	80ca983a 	sll	r5,r16,r3
   4e700:	00800434 	movhi	r2,16
   4e704:	10bfffc4 	addi	r2,r2,-1
   4e708:	2101ffcc 	andi	r4,r4,2047
   4e70c:	0021883a 	mov	r16,zero
   4e710:	288a703a 	and	r5,r5,r2
   4e714:	2008953a 	slli	r4,r4,20
   4e718:	00c00434 	movhi	r3,16
   4e71c:	18ffffc4 	addi	r3,r3,-1
   4e720:	28c6703a 	and	r3,r5,r3
   4e724:	8005883a 	mov	r2,r16
   4e728:	1906b03a 	or	r3,r3,r4
   4e72c:	dfc00117 	ldw	ra,4(sp)
   4e730:	dc000017 	ldw	r16,0(sp)
   4e734:	dec00204 	addi	sp,sp,8
   4e738:	f800283a 	ret
   4e73c:	00c002c4 	movi	r3,11
   4e740:	188bc83a 	sub	r5,r3,r2
   4e744:	814ad83a 	srl	r5,r16,r5
   4e748:	00c00434 	movhi	r3,16
   4e74c:	18ffffc4 	addi	r3,r3,-1
   4e750:	81a0983a 	sll	r16,r16,r6
   4e754:	2101ffcc 	andi	r4,r4,2047
   4e758:	28ca703a 	and	r5,r5,r3
   4e75c:	003fed06 	br	4e714 <__alt_data_end+0xfffce714>
   4e760:	0009883a 	mov	r4,zero
   4e764:	000b883a 	mov	r5,zero
   4e768:	003fea06 	br	4e714 <__alt_data_end+0xfffce714>

0004e76c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e76c:	defffe04 	addi	sp,sp,-8
   4e770:	dfc00115 	stw	ra,4(sp)
   4e774:	df000015 	stw	fp,0(sp)
   4e778:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e77c:	d0a00b17 	ldw	r2,-32724(gp)
   4e780:	10000326 	beq	r2,zero,4e790 <alt_get_errno+0x24>
   4e784:	d0a00b17 	ldw	r2,-32724(gp)
   4e788:	103ee83a 	callr	r2
   4e78c:	00000106 	br	4e794 <alt_get_errno+0x28>
   4e790:	d0a6fd04 	addi	r2,gp,-25612
}
   4e794:	e037883a 	mov	sp,fp
   4e798:	dfc00117 	ldw	ra,4(sp)
   4e79c:	df000017 	ldw	fp,0(sp)
   4e7a0:	dec00204 	addi	sp,sp,8
   4e7a4:	f800283a 	ret

0004e7a8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4e7a8:	defffb04 	addi	sp,sp,-20
   4e7ac:	dfc00415 	stw	ra,16(sp)
   4e7b0:	df000315 	stw	fp,12(sp)
   4e7b4:	df000304 	addi	fp,sp,12
   4e7b8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4e7bc:	e0bfff17 	ldw	r2,-4(fp)
   4e7c0:	10000616 	blt	r2,zero,4e7dc <close+0x34>
   4e7c4:	e0bfff17 	ldw	r2,-4(fp)
   4e7c8:	10c00324 	muli	r3,r2,12
   4e7cc:	00800174 	movhi	r2,5
   4e7d0:	10871504 	addi	r2,r2,7252
   4e7d4:	1885883a 	add	r2,r3,r2
   4e7d8:	00000106 	br	4e7e0 <close+0x38>
   4e7dc:	0005883a 	mov	r2,zero
   4e7e0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4e7e4:	e0bffd17 	ldw	r2,-12(fp)
   4e7e8:	10001926 	beq	r2,zero,4e850 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4e7ec:	e0bffd17 	ldw	r2,-12(fp)
   4e7f0:	10800017 	ldw	r2,0(r2)
   4e7f4:	10800417 	ldw	r2,16(r2)
   4e7f8:	10000626 	beq	r2,zero,4e814 <close+0x6c>
   4e7fc:	e0bffd17 	ldw	r2,-12(fp)
   4e800:	10800017 	ldw	r2,0(r2)
   4e804:	10800417 	ldw	r2,16(r2)
   4e808:	e13ffd17 	ldw	r4,-12(fp)
   4e80c:	103ee83a 	callr	r2
   4e810:	00000106 	br	4e818 <close+0x70>
   4e814:	0005883a 	mov	r2,zero
   4e818:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4e81c:	e13fff17 	ldw	r4,-4(fp)
   4e820:	004ee680 	call	4ee68 <alt_release_fd>
    if (rval < 0)
   4e824:	e0bffe17 	ldw	r2,-8(fp)
   4e828:	1000070e 	bge	r2,zero,4e848 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4e82c:	004e76c0 	call	4e76c <alt_get_errno>
   4e830:	1007883a 	mov	r3,r2
   4e834:	e0bffe17 	ldw	r2,-8(fp)
   4e838:	0085c83a 	sub	r2,zero,r2
   4e83c:	18800015 	stw	r2,0(r3)
      return -1;
   4e840:	00bfffc4 	movi	r2,-1
   4e844:	00000706 	br	4e864 <close+0xbc>
    }
    return 0;
   4e848:	0005883a 	mov	r2,zero
   4e84c:	00000506 	br	4e864 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e850:	004e76c0 	call	4e76c <alt_get_errno>
   4e854:	1007883a 	mov	r3,r2
   4e858:	00801444 	movi	r2,81
   4e85c:	18800015 	stw	r2,0(r3)
    return -1;
   4e860:	00bfffc4 	movi	r2,-1
  }
}
   4e864:	e037883a 	mov	sp,fp
   4e868:	dfc00117 	ldw	ra,4(sp)
   4e86c:	df000017 	ldw	fp,0(sp)
   4e870:	dec00204 	addi	sp,sp,8
   4e874:	f800283a 	ret

0004e878 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4e878:	defffc04 	addi	sp,sp,-16
   4e87c:	df000315 	stw	fp,12(sp)
   4e880:	df000304 	addi	fp,sp,12
   4e884:	e13ffd15 	stw	r4,-12(fp)
   4e888:	e17ffe15 	stw	r5,-8(fp)
   4e88c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4e890:	e0bfff17 	ldw	r2,-4(fp)
}
   4e894:	e037883a 	mov	sp,fp
   4e898:	df000017 	ldw	fp,0(sp)
   4e89c:	dec00104 	addi	sp,sp,4
   4e8a0:	f800283a 	ret

0004e8a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e8a4:	defffe04 	addi	sp,sp,-8
   4e8a8:	dfc00115 	stw	ra,4(sp)
   4e8ac:	df000015 	stw	fp,0(sp)
   4e8b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e8b4:	d0a00b17 	ldw	r2,-32724(gp)
   4e8b8:	10000326 	beq	r2,zero,4e8c8 <alt_get_errno+0x24>
   4e8bc:	d0a00b17 	ldw	r2,-32724(gp)
   4e8c0:	103ee83a 	callr	r2
   4e8c4:	00000106 	br	4e8cc <alt_get_errno+0x28>
   4e8c8:	d0a6fd04 	addi	r2,gp,-25612
}
   4e8cc:	e037883a 	mov	sp,fp
   4e8d0:	dfc00117 	ldw	ra,4(sp)
   4e8d4:	df000017 	ldw	fp,0(sp)
   4e8d8:	dec00204 	addi	sp,sp,8
   4e8dc:	f800283a 	ret

0004e8e0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4e8e0:	defffb04 	addi	sp,sp,-20
   4e8e4:	dfc00415 	stw	ra,16(sp)
   4e8e8:	df000315 	stw	fp,12(sp)
   4e8ec:	df000304 	addi	fp,sp,12
   4e8f0:	e13ffe15 	stw	r4,-8(fp)
   4e8f4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e8f8:	e0bffe17 	ldw	r2,-8(fp)
   4e8fc:	10000616 	blt	r2,zero,4e918 <fstat+0x38>
   4e900:	e0bffe17 	ldw	r2,-8(fp)
   4e904:	10c00324 	muli	r3,r2,12
   4e908:	00800174 	movhi	r2,5
   4e90c:	10871504 	addi	r2,r2,7252
   4e910:	1885883a 	add	r2,r3,r2
   4e914:	00000106 	br	4e91c <fstat+0x3c>
   4e918:	0005883a 	mov	r2,zero
   4e91c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4e920:	e0bffd17 	ldw	r2,-12(fp)
   4e924:	10001026 	beq	r2,zero,4e968 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4e928:	e0bffd17 	ldw	r2,-12(fp)
   4e92c:	10800017 	ldw	r2,0(r2)
   4e930:	10800817 	ldw	r2,32(r2)
   4e934:	10000726 	beq	r2,zero,4e954 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4e938:	e0bffd17 	ldw	r2,-12(fp)
   4e93c:	10800017 	ldw	r2,0(r2)
   4e940:	10800817 	ldw	r2,32(r2)
   4e944:	e17fff17 	ldw	r5,-4(fp)
   4e948:	e13ffd17 	ldw	r4,-12(fp)
   4e94c:	103ee83a 	callr	r2
   4e950:	00000a06 	br	4e97c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4e954:	e0bfff17 	ldw	r2,-4(fp)
   4e958:	00c80004 	movi	r3,8192
   4e95c:	10c00115 	stw	r3,4(r2)
      return 0;
   4e960:	0005883a 	mov	r2,zero
   4e964:	00000506 	br	4e97c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e968:	004e8a40 	call	4e8a4 <alt_get_errno>
   4e96c:	1007883a 	mov	r3,r2
   4e970:	00801444 	movi	r2,81
   4e974:	18800015 	stw	r2,0(r3)
    return -1;
   4e978:	00bfffc4 	movi	r2,-1
  }
}
   4e97c:	e037883a 	mov	sp,fp
   4e980:	dfc00117 	ldw	ra,4(sp)
   4e984:	df000017 	ldw	fp,0(sp)
   4e988:	dec00204 	addi	sp,sp,8
   4e98c:	f800283a 	ret

0004e990 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e990:	defffe04 	addi	sp,sp,-8
   4e994:	dfc00115 	stw	ra,4(sp)
   4e998:	df000015 	stw	fp,0(sp)
   4e99c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e9a0:	d0a00b17 	ldw	r2,-32724(gp)
   4e9a4:	10000326 	beq	r2,zero,4e9b4 <alt_get_errno+0x24>
   4e9a8:	d0a00b17 	ldw	r2,-32724(gp)
   4e9ac:	103ee83a 	callr	r2
   4e9b0:	00000106 	br	4e9b8 <alt_get_errno+0x28>
   4e9b4:	d0a6fd04 	addi	r2,gp,-25612
}
   4e9b8:	e037883a 	mov	sp,fp
   4e9bc:	dfc00117 	ldw	ra,4(sp)
   4e9c0:	df000017 	ldw	fp,0(sp)
   4e9c4:	dec00204 	addi	sp,sp,8
   4e9c8:	f800283a 	ret

0004e9cc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4e9cc:	deffed04 	addi	sp,sp,-76
   4e9d0:	dfc01215 	stw	ra,72(sp)
   4e9d4:	df001115 	stw	fp,68(sp)
   4e9d8:	df001104 	addi	fp,sp,68
   4e9dc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e9e0:	e0bfff17 	ldw	r2,-4(fp)
   4e9e4:	10000616 	blt	r2,zero,4ea00 <isatty+0x34>
   4e9e8:	e0bfff17 	ldw	r2,-4(fp)
   4e9ec:	10c00324 	muli	r3,r2,12
   4e9f0:	00800174 	movhi	r2,5
   4e9f4:	10871504 	addi	r2,r2,7252
   4e9f8:	1885883a 	add	r2,r3,r2
   4e9fc:	00000106 	br	4ea04 <isatty+0x38>
   4ea00:	0005883a 	mov	r2,zero
   4ea04:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4ea08:	e0bfef17 	ldw	r2,-68(fp)
   4ea0c:	10000e26 	beq	r2,zero,4ea48 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4ea10:	e0bfef17 	ldw	r2,-68(fp)
   4ea14:	10800017 	ldw	r2,0(r2)
   4ea18:	10800817 	ldw	r2,32(r2)
   4ea1c:	1000021e 	bne	r2,zero,4ea28 <isatty+0x5c>
    {
      return 1;
   4ea20:	00800044 	movi	r2,1
   4ea24:	00000d06 	br	4ea5c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4ea28:	e0bff004 	addi	r2,fp,-64
   4ea2c:	100b883a 	mov	r5,r2
   4ea30:	e13fff17 	ldw	r4,-4(fp)
   4ea34:	004e8e00 	call	4e8e0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4ea38:	e0bff117 	ldw	r2,-60(fp)
   4ea3c:	10880020 	cmpeqi	r2,r2,8192
   4ea40:	10803fcc 	andi	r2,r2,255
   4ea44:	00000506 	br	4ea5c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4ea48:	004e9900 	call	4e990 <alt_get_errno>
   4ea4c:	1007883a 	mov	r3,r2
   4ea50:	00801444 	movi	r2,81
   4ea54:	18800015 	stw	r2,0(r3)
    return 0;
   4ea58:	0005883a 	mov	r2,zero
  }
}
   4ea5c:	e037883a 	mov	sp,fp
   4ea60:	dfc00117 	ldw	ra,4(sp)
   4ea64:	df000017 	ldw	fp,0(sp)
   4ea68:	dec00204 	addi	sp,sp,8
   4ea6c:	f800283a 	ret

0004ea70 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4ea70:	defffc04 	addi	sp,sp,-16
   4ea74:	df000315 	stw	fp,12(sp)
   4ea78:	df000304 	addi	fp,sp,12
   4ea7c:	e13ffd15 	stw	r4,-12(fp)
   4ea80:	e17ffe15 	stw	r5,-8(fp)
   4ea84:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4ea88:	e0fffe17 	ldw	r3,-8(fp)
   4ea8c:	e0bffd17 	ldw	r2,-12(fp)
   4ea90:	18800c26 	beq	r3,r2,4eac4 <alt_load_section+0x54>
  {
    while( to != end )
   4ea94:	00000806 	br	4eab8 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4ea98:	e0bffe17 	ldw	r2,-8(fp)
   4ea9c:	10c00104 	addi	r3,r2,4
   4eaa0:	e0fffe15 	stw	r3,-8(fp)
   4eaa4:	e0fffd17 	ldw	r3,-12(fp)
   4eaa8:	19000104 	addi	r4,r3,4
   4eaac:	e13ffd15 	stw	r4,-12(fp)
   4eab0:	18c00017 	ldw	r3,0(r3)
   4eab4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4eab8:	e0fffe17 	ldw	r3,-8(fp)
   4eabc:	e0bfff17 	ldw	r2,-4(fp)
   4eac0:	18bff51e 	bne	r3,r2,4ea98 <__alt_data_end+0xfffcea98>
    {
      *to++ = *from++;
    }
  }
}
   4eac4:	0001883a 	nop
   4eac8:	e037883a 	mov	sp,fp
   4eacc:	df000017 	ldw	fp,0(sp)
   4ead0:	dec00104 	addi	sp,sp,4
   4ead4:	f800283a 	ret

0004ead8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4ead8:	defffe04 	addi	sp,sp,-8
   4eadc:	dfc00115 	stw	ra,4(sp)
   4eae0:	df000015 	stw	fp,0(sp)
   4eae4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4eae8:	01800174 	movhi	r6,5
   4eaec:	318b9d04 	addi	r6,r6,11892
   4eaf0:	01400174 	movhi	r5,5
   4eaf4:	2944ba04 	addi	r5,r5,4840
   4eaf8:	01000174 	movhi	r4,5
   4eafc:	210b9d04 	addi	r4,r4,11892
   4eb00:	004ea700 	call	4ea70 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4eb04:	01800134 	movhi	r6,4
   4eb08:	31809104 	addi	r6,r6,580
   4eb0c:	01400134 	movhi	r5,4
   4eb10:	29400804 	addi	r5,r5,32
   4eb14:	01000134 	movhi	r4,4
   4eb18:	21000804 	addi	r4,r4,32
   4eb1c:	004ea700 	call	4ea70 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4eb20:	01800174 	movhi	r6,5
   4eb24:	3184ba04 	addi	r6,r6,4840
   4eb28:	01400174 	movhi	r5,5
   4eb2c:	2943eb04 	addi	r5,r5,4012
   4eb30:	01000174 	movhi	r4,5
   4eb34:	2103eb04 	addi	r4,r4,4012
   4eb38:	004ea700 	call	4ea70 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4eb3c:	004fe980 	call	4fe98 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4eb40:	00500800 	call	50080 <alt_icache_flush_all>
}
   4eb44:	0001883a 	nop
   4eb48:	e037883a 	mov	sp,fp
   4eb4c:	dfc00117 	ldw	ra,4(sp)
   4eb50:	df000017 	ldw	fp,0(sp)
   4eb54:	dec00204 	addi	sp,sp,8
   4eb58:	f800283a 	ret

0004eb5c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4eb5c:	defffe04 	addi	sp,sp,-8
   4eb60:	dfc00115 	stw	ra,4(sp)
   4eb64:	df000015 	stw	fp,0(sp)
   4eb68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4eb6c:	d0a00b17 	ldw	r2,-32724(gp)
   4eb70:	10000326 	beq	r2,zero,4eb80 <alt_get_errno+0x24>
   4eb74:	d0a00b17 	ldw	r2,-32724(gp)
   4eb78:	103ee83a 	callr	r2
   4eb7c:	00000106 	br	4eb84 <alt_get_errno+0x28>
   4eb80:	d0a6fd04 	addi	r2,gp,-25612
}
   4eb84:	e037883a 	mov	sp,fp
   4eb88:	dfc00117 	ldw	ra,4(sp)
   4eb8c:	df000017 	ldw	fp,0(sp)
   4eb90:	dec00204 	addi	sp,sp,8
   4eb94:	f800283a 	ret

0004eb98 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4eb98:	defff904 	addi	sp,sp,-28
   4eb9c:	dfc00615 	stw	ra,24(sp)
   4eba0:	df000515 	stw	fp,20(sp)
   4eba4:	df000504 	addi	fp,sp,20
   4eba8:	e13ffd15 	stw	r4,-12(fp)
   4ebac:	e17ffe15 	stw	r5,-8(fp)
   4ebb0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4ebb4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ebb8:	e0bffd17 	ldw	r2,-12(fp)
   4ebbc:	10000616 	blt	r2,zero,4ebd8 <lseek+0x40>
   4ebc0:	e0bffd17 	ldw	r2,-12(fp)
   4ebc4:	10c00324 	muli	r3,r2,12
   4ebc8:	00800174 	movhi	r2,5
   4ebcc:	10871504 	addi	r2,r2,7252
   4ebd0:	1885883a 	add	r2,r3,r2
   4ebd4:	00000106 	br	4ebdc <lseek+0x44>
   4ebd8:	0005883a 	mov	r2,zero
   4ebdc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4ebe0:	e0bffc17 	ldw	r2,-16(fp)
   4ebe4:	10001026 	beq	r2,zero,4ec28 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4ebe8:	e0bffc17 	ldw	r2,-16(fp)
   4ebec:	10800017 	ldw	r2,0(r2)
   4ebf0:	10800717 	ldw	r2,28(r2)
   4ebf4:	10000926 	beq	r2,zero,4ec1c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4ebf8:	e0bffc17 	ldw	r2,-16(fp)
   4ebfc:	10800017 	ldw	r2,0(r2)
   4ec00:	10800717 	ldw	r2,28(r2)
   4ec04:	e1bfff17 	ldw	r6,-4(fp)
   4ec08:	e17ffe17 	ldw	r5,-8(fp)
   4ec0c:	e13ffc17 	ldw	r4,-16(fp)
   4ec10:	103ee83a 	callr	r2
   4ec14:	e0bffb15 	stw	r2,-20(fp)
   4ec18:	00000506 	br	4ec30 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4ec1c:	00bfde84 	movi	r2,-134
   4ec20:	e0bffb15 	stw	r2,-20(fp)
   4ec24:	00000206 	br	4ec30 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4ec28:	00bfebc4 	movi	r2,-81
   4ec2c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4ec30:	e0bffb17 	ldw	r2,-20(fp)
   4ec34:	1000070e 	bge	r2,zero,4ec54 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4ec38:	004eb5c0 	call	4eb5c <alt_get_errno>
   4ec3c:	1007883a 	mov	r3,r2
   4ec40:	e0bffb17 	ldw	r2,-20(fp)
   4ec44:	0085c83a 	sub	r2,zero,r2
   4ec48:	18800015 	stw	r2,0(r3)
    rc = -1;
   4ec4c:	00bfffc4 	movi	r2,-1
   4ec50:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4ec54:	e0bffb17 	ldw	r2,-20(fp)
}
   4ec58:	e037883a 	mov	sp,fp
   4ec5c:	dfc00117 	ldw	ra,4(sp)
   4ec60:	df000017 	ldw	fp,0(sp)
   4ec64:	dec00204 	addi	sp,sp,8
   4ec68:	f800283a 	ret

0004ec6c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4ec6c:	defffd04 	addi	sp,sp,-12
   4ec70:	dfc00215 	stw	ra,8(sp)
   4ec74:	df000115 	stw	fp,4(sp)
   4ec78:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4ec7c:	0009883a 	mov	r4,zero
   4ec80:	004f0e40 	call	4f0e4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4ec84:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4ec88:	004f11c0 	call	4f11c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4ec8c:	01800174 	movhi	r6,5
   4ec90:	3184b004 	addi	r6,r6,4800
   4ec94:	01400174 	movhi	r5,5
   4ec98:	2944b004 	addi	r5,r5,4800
   4ec9c:	01000174 	movhi	r4,5
   4eca0:	2104b004 	addi	r4,r4,4800
   4eca4:	00504180 	call	50418 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4eca8:	004ffc00 	call	4ffc0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4ecac:	01000174 	movhi	r4,5
   4ecb0:	21000804 	addi	r4,r4,32
   4ecb4:	0050c180 	call	50c18 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4ecb8:	d0a6fe17 	ldw	r2,-25608(gp)
   4ecbc:	d0e6ff17 	ldw	r3,-25604(gp)
   4ecc0:	d1270017 	ldw	r4,-25600(gp)
   4ecc4:	200d883a 	mov	r6,r4
   4ecc8:	180b883a 	mov	r5,r3
   4eccc:	1009883a 	mov	r4,r2
   4ecd0:	00405d00 	call	405d0 <main>
   4ecd4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4ecd8:	01000044 	movi	r4,1
   4ecdc:	004e7a80 	call	4e7a8 <close>
  exit (result);
   4ece0:	e13fff17 	ldw	r4,-4(fp)
   4ece4:	0050c2c0 	call	50c2c <exit>

0004ece8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4ece8:	defffe04 	addi	sp,sp,-8
   4ecec:	df000115 	stw	fp,4(sp)
   4ecf0:	df000104 	addi	fp,sp,4
   4ecf4:	e13fff15 	stw	r4,-4(fp)
}
   4ecf8:	0001883a 	nop
   4ecfc:	e037883a 	mov	sp,fp
   4ed00:	df000017 	ldw	fp,0(sp)
   4ed04:	dec00104 	addi	sp,sp,4
   4ed08:	f800283a 	ret

0004ed0c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4ed0c:	defffe04 	addi	sp,sp,-8
   4ed10:	df000115 	stw	fp,4(sp)
   4ed14:	df000104 	addi	fp,sp,4
   4ed18:	e13fff15 	stw	r4,-4(fp)
}
   4ed1c:	0001883a 	nop
   4ed20:	e037883a 	mov	sp,fp
   4ed24:	df000017 	ldw	fp,0(sp)
   4ed28:	dec00104 	addi	sp,sp,4
   4ed2c:	f800283a 	ret

0004ed30 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ed30:	defffe04 	addi	sp,sp,-8
   4ed34:	dfc00115 	stw	ra,4(sp)
   4ed38:	df000015 	stw	fp,0(sp)
   4ed3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ed40:	d0a00b17 	ldw	r2,-32724(gp)
   4ed44:	10000326 	beq	r2,zero,4ed54 <alt_get_errno+0x24>
   4ed48:	d0a00b17 	ldw	r2,-32724(gp)
   4ed4c:	103ee83a 	callr	r2
   4ed50:	00000106 	br	4ed58 <alt_get_errno+0x28>
   4ed54:	d0a6fd04 	addi	r2,gp,-25612
}
   4ed58:	e037883a 	mov	sp,fp
   4ed5c:	dfc00117 	ldw	ra,4(sp)
   4ed60:	df000017 	ldw	fp,0(sp)
   4ed64:	dec00204 	addi	sp,sp,8
   4ed68:	f800283a 	ret

0004ed6c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4ed6c:	defff904 	addi	sp,sp,-28
   4ed70:	dfc00615 	stw	ra,24(sp)
   4ed74:	df000515 	stw	fp,20(sp)
   4ed78:	df000504 	addi	fp,sp,20
   4ed7c:	e13ffd15 	stw	r4,-12(fp)
   4ed80:	e17ffe15 	stw	r5,-8(fp)
   4ed84:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ed88:	e0bffd17 	ldw	r2,-12(fp)
   4ed8c:	10000616 	blt	r2,zero,4eda8 <read+0x3c>
   4ed90:	e0bffd17 	ldw	r2,-12(fp)
   4ed94:	10c00324 	muli	r3,r2,12
   4ed98:	00800174 	movhi	r2,5
   4ed9c:	10871504 	addi	r2,r2,7252
   4eda0:	1885883a 	add	r2,r3,r2
   4eda4:	00000106 	br	4edac <read+0x40>
   4eda8:	0005883a 	mov	r2,zero
   4edac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4edb0:	e0bffb17 	ldw	r2,-20(fp)
   4edb4:	10002226 	beq	r2,zero,4ee40 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4edb8:	e0bffb17 	ldw	r2,-20(fp)
   4edbc:	10800217 	ldw	r2,8(r2)
   4edc0:	108000cc 	andi	r2,r2,3
   4edc4:	10800060 	cmpeqi	r2,r2,1
   4edc8:	1000181e 	bne	r2,zero,4ee2c <read+0xc0>
        (fd->dev->read))
   4edcc:	e0bffb17 	ldw	r2,-20(fp)
   4edd0:	10800017 	ldw	r2,0(r2)
   4edd4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4edd8:	10001426 	beq	r2,zero,4ee2c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4eddc:	e0bffb17 	ldw	r2,-20(fp)
   4ede0:	10800017 	ldw	r2,0(r2)
   4ede4:	10800517 	ldw	r2,20(r2)
   4ede8:	e0ffff17 	ldw	r3,-4(fp)
   4edec:	180d883a 	mov	r6,r3
   4edf0:	e17ffe17 	ldw	r5,-8(fp)
   4edf4:	e13ffb17 	ldw	r4,-20(fp)
   4edf8:	103ee83a 	callr	r2
   4edfc:	e0bffc15 	stw	r2,-16(fp)
   4ee00:	e0bffc17 	ldw	r2,-16(fp)
   4ee04:	1000070e 	bge	r2,zero,4ee24 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4ee08:	004ed300 	call	4ed30 <alt_get_errno>
   4ee0c:	1007883a 	mov	r3,r2
   4ee10:	e0bffc17 	ldw	r2,-16(fp)
   4ee14:	0085c83a 	sub	r2,zero,r2
   4ee18:	18800015 	stw	r2,0(r3)
          return -1;
   4ee1c:	00bfffc4 	movi	r2,-1
   4ee20:	00000c06 	br	4ee54 <read+0xe8>
        }
        return rval;
   4ee24:	e0bffc17 	ldw	r2,-16(fp)
   4ee28:	00000a06 	br	4ee54 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4ee2c:	004ed300 	call	4ed30 <alt_get_errno>
   4ee30:	1007883a 	mov	r3,r2
   4ee34:	00800344 	movi	r2,13
   4ee38:	18800015 	stw	r2,0(r3)
   4ee3c:	00000406 	br	4ee50 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4ee40:	004ed300 	call	4ed30 <alt_get_errno>
   4ee44:	1007883a 	mov	r3,r2
   4ee48:	00801444 	movi	r2,81
   4ee4c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4ee50:	00bfffc4 	movi	r2,-1
}
   4ee54:	e037883a 	mov	sp,fp
   4ee58:	dfc00117 	ldw	ra,4(sp)
   4ee5c:	df000017 	ldw	fp,0(sp)
   4ee60:	dec00204 	addi	sp,sp,8
   4ee64:	f800283a 	ret

0004ee68 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4ee68:	defffe04 	addi	sp,sp,-8
   4ee6c:	df000115 	stw	fp,4(sp)
   4ee70:	df000104 	addi	fp,sp,4
   4ee74:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4ee78:	e0bfff17 	ldw	r2,-4(fp)
   4ee7c:	108000d0 	cmplti	r2,r2,3
   4ee80:	10000d1e 	bne	r2,zero,4eeb8 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   4ee84:	00800174 	movhi	r2,5
   4ee88:	10871504 	addi	r2,r2,7252
   4ee8c:	e0ffff17 	ldw	r3,-4(fp)
   4ee90:	18c00324 	muli	r3,r3,12
   4ee94:	10c5883a 	add	r2,r2,r3
   4ee98:	10800204 	addi	r2,r2,8
   4ee9c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4eea0:	00800174 	movhi	r2,5
   4eea4:	10871504 	addi	r2,r2,7252
   4eea8:	e0ffff17 	ldw	r3,-4(fp)
   4eeac:	18c00324 	muli	r3,r3,12
   4eeb0:	10c5883a 	add	r2,r2,r3
   4eeb4:	10000015 	stw	zero,0(r2)
  }
}
   4eeb8:	0001883a 	nop
   4eebc:	e037883a 	mov	sp,fp
   4eec0:	df000017 	ldw	fp,0(sp)
   4eec4:	dec00104 	addi	sp,sp,4
   4eec8:	f800283a 	ret

0004eecc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4eecc:	defff904 	addi	sp,sp,-28
   4eed0:	df000615 	stw	fp,24(sp)
   4eed4:	df000604 	addi	fp,sp,24
   4eed8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eedc:	0005303a 	rdctl	r2,status
   4eee0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eee4:	e0fffe17 	ldw	r3,-8(fp)
   4eee8:	00bfff84 	movi	r2,-2
   4eeec:	1884703a 	and	r2,r3,r2
   4eef0:	1001703a 	wrctl	status,r2
  
  return context;
   4eef4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4eef8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4eefc:	d0a00c17 	ldw	r2,-32720(gp)
   4ef00:	10c000c4 	addi	r3,r2,3
   4ef04:	00bfff04 	movi	r2,-4
   4ef08:	1884703a 	and	r2,r3,r2
   4ef0c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4ef10:	d0e00c17 	ldw	r3,-32720(gp)
   4ef14:	e0bfff17 	ldw	r2,-4(fp)
   4ef18:	1887883a 	add	r3,r3,r2
   4ef1c:	00800234 	movhi	r2,8
   4ef20:	10800004 	addi	r2,r2,0
   4ef24:	10c0062e 	bgeu	r2,r3,4ef40 <sbrk+0x74>
   4ef28:	e0bffb17 	ldw	r2,-20(fp)
   4ef2c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ef30:	e0bffa17 	ldw	r2,-24(fp)
   4ef34:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4ef38:	00bfffc4 	movi	r2,-1
   4ef3c:	00000b06 	br	4ef6c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4ef40:	d0a00c17 	ldw	r2,-32720(gp)
   4ef44:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4ef48:	d0e00c17 	ldw	r3,-32720(gp)
   4ef4c:	e0bfff17 	ldw	r2,-4(fp)
   4ef50:	1885883a 	add	r2,r3,r2
   4ef54:	d0a00c15 	stw	r2,-32720(gp)
   4ef58:	e0bffb17 	ldw	r2,-20(fp)
   4ef5c:	e0bffc15 	stw	r2,-16(fp)
   4ef60:	e0bffc17 	ldw	r2,-16(fp)
   4ef64:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4ef68:	e0bffd17 	ldw	r2,-12(fp)
} 
   4ef6c:	e037883a 	mov	sp,fp
   4ef70:	df000017 	ldw	fp,0(sp)
   4ef74:	dec00104 	addi	sp,sp,4
   4ef78:	f800283a 	ret

0004ef7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ef7c:	defffe04 	addi	sp,sp,-8
   4ef80:	dfc00115 	stw	ra,4(sp)
   4ef84:	df000015 	stw	fp,0(sp)
   4ef88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ef8c:	d0a00b17 	ldw	r2,-32724(gp)
   4ef90:	10000326 	beq	r2,zero,4efa0 <alt_get_errno+0x24>
   4ef94:	d0a00b17 	ldw	r2,-32724(gp)
   4ef98:	103ee83a 	callr	r2
   4ef9c:	00000106 	br	4efa4 <alt_get_errno+0x28>
   4efa0:	d0a6fd04 	addi	r2,gp,-25612
}
   4efa4:	e037883a 	mov	sp,fp
   4efa8:	dfc00117 	ldw	ra,4(sp)
   4efac:	df000017 	ldw	fp,0(sp)
   4efb0:	dec00204 	addi	sp,sp,8
   4efb4:	f800283a 	ret

0004efb8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4efb8:	defff904 	addi	sp,sp,-28
   4efbc:	dfc00615 	stw	ra,24(sp)
   4efc0:	df000515 	stw	fp,20(sp)
   4efc4:	df000504 	addi	fp,sp,20
   4efc8:	e13ffd15 	stw	r4,-12(fp)
   4efcc:	e17ffe15 	stw	r5,-8(fp)
   4efd0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4efd4:	e0bffd17 	ldw	r2,-12(fp)
   4efd8:	10000616 	blt	r2,zero,4eff4 <write+0x3c>
   4efdc:	e0bffd17 	ldw	r2,-12(fp)
   4efe0:	10c00324 	muli	r3,r2,12
   4efe4:	00800174 	movhi	r2,5
   4efe8:	10871504 	addi	r2,r2,7252
   4efec:	1885883a 	add	r2,r3,r2
   4eff0:	00000106 	br	4eff8 <write+0x40>
   4eff4:	0005883a 	mov	r2,zero
   4eff8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4effc:	e0bffb17 	ldw	r2,-20(fp)
   4f000:	10002126 	beq	r2,zero,4f088 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4f004:	e0bffb17 	ldw	r2,-20(fp)
   4f008:	10800217 	ldw	r2,8(r2)
   4f00c:	108000cc 	andi	r2,r2,3
   4f010:	10001826 	beq	r2,zero,4f074 <write+0xbc>
   4f014:	e0bffb17 	ldw	r2,-20(fp)
   4f018:	10800017 	ldw	r2,0(r2)
   4f01c:	10800617 	ldw	r2,24(r2)
   4f020:	10001426 	beq	r2,zero,4f074 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4f024:	e0bffb17 	ldw	r2,-20(fp)
   4f028:	10800017 	ldw	r2,0(r2)
   4f02c:	10800617 	ldw	r2,24(r2)
   4f030:	e0ffff17 	ldw	r3,-4(fp)
   4f034:	180d883a 	mov	r6,r3
   4f038:	e17ffe17 	ldw	r5,-8(fp)
   4f03c:	e13ffb17 	ldw	r4,-20(fp)
   4f040:	103ee83a 	callr	r2
   4f044:	e0bffc15 	stw	r2,-16(fp)
   4f048:	e0bffc17 	ldw	r2,-16(fp)
   4f04c:	1000070e 	bge	r2,zero,4f06c <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4f050:	004ef7c0 	call	4ef7c <alt_get_errno>
   4f054:	1007883a 	mov	r3,r2
   4f058:	e0bffc17 	ldw	r2,-16(fp)
   4f05c:	0085c83a 	sub	r2,zero,r2
   4f060:	18800015 	stw	r2,0(r3)
        return -1;
   4f064:	00bfffc4 	movi	r2,-1
   4f068:	00000c06 	br	4f09c <write+0xe4>
      }
      return rval;
   4f06c:	e0bffc17 	ldw	r2,-16(fp)
   4f070:	00000a06 	br	4f09c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4f074:	004ef7c0 	call	4ef7c <alt_get_errno>
   4f078:	1007883a 	mov	r3,r2
   4f07c:	00800344 	movi	r2,13
   4f080:	18800015 	stw	r2,0(r3)
   4f084:	00000406 	br	4f098 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4f088:	004ef7c0 	call	4ef7c <alt_get_errno>
   4f08c:	1007883a 	mov	r3,r2
   4f090:	00801444 	movi	r2,81
   4f094:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f098:	00bfffc4 	movi	r2,-1
}
   4f09c:	e037883a 	mov	sp,fp
   4f0a0:	dfc00117 	ldw	ra,4(sp)
   4f0a4:	df000017 	ldw	fp,0(sp)
   4f0a8:	dec00204 	addi	sp,sp,8
   4f0ac:	f800283a 	ret

0004f0b0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4f0b0:	defffd04 	addi	sp,sp,-12
   4f0b4:	dfc00215 	stw	ra,8(sp)
   4f0b8:	df000115 	stw	fp,4(sp)
   4f0bc:	df000104 	addi	fp,sp,4
   4f0c0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4f0c4:	d1600804 	addi	r5,gp,-32736
   4f0c8:	e13fff17 	ldw	r4,-4(fp)
   4f0cc:	004ff1c0 	call	4ff1c <alt_dev_llist_insert>
}
   4f0d0:	e037883a 	mov	sp,fp
   4f0d4:	dfc00117 	ldw	ra,4(sp)
   4f0d8:	df000017 	ldw	fp,0(sp)
   4f0dc:	dec00204 	addi	sp,sp,8
   4f0e0:	f800283a 	ret

0004f0e4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4f0e4:	defffd04 	addi	sp,sp,-12
   4f0e8:	dfc00215 	stw	ra,8(sp)
   4f0ec:	df000115 	stw	fp,4(sp)
   4f0f0:	df000104 	addi	fp,sp,4
   4f0f4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   4f0f8:	005088c0 	call	5088c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4f0fc:	00800044 	movi	r2,1
   4f100:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4f104:	0001883a 	nop
   4f108:	e037883a 	mov	sp,fp
   4f10c:	dfc00117 	ldw	ra,4(sp)
   4f110:	df000017 	ldw	fp,0(sp)
   4f114:	dec00204 	addi	sp,sp,8
   4f118:	f800283a 	ret

0004f11c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4f11c:	defffe04 	addi	sp,sp,-8
   4f120:	dfc00115 	stw	ra,4(sp)
   4f124:	df000015 	stw	fp,0(sp)
   4f128:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   4f12c:	000d883a 	mov	r6,zero
   4f130:	000b883a 	mov	r5,zero
   4f134:	01000174 	movhi	r4,5
   4f138:	21077f04 	addi	r4,r4,7676
   4f13c:	004f2d80 	call	4f2d8 <altera_avalon_jtag_uart_init>
   4f140:	01000174 	movhi	r4,5
   4f144:	21077504 	addi	r4,r4,7636
   4f148:	004f0b00 	call	4f0b0 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
   4f14c:	00c00044 	movi	r3,1
   4f150:	00800234 	movhi	r2,8
   4f154:	10841004 	addi	r2,r2,4160
   4f158:	10c00035 	stwio	r3,0(r2)
}
   4f15c:	0001883a 	nop
   4f160:	e037883a 	mov	sp,fp
   4f164:	dfc00117 	ldw	ra,4(sp)
   4f168:	df000017 	ldw	fp,0(sp)
   4f16c:	dec00204 	addi	sp,sp,8
   4f170:	f800283a 	ret

0004f174 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4f174:	defffa04 	addi	sp,sp,-24
   4f178:	dfc00515 	stw	ra,20(sp)
   4f17c:	df000415 	stw	fp,16(sp)
   4f180:	df000404 	addi	fp,sp,16
   4f184:	e13ffd15 	stw	r4,-12(fp)
   4f188:	e17ffe15 	stw	r5,-8(fp)
   4f18c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f190:	e0bffd17 	ldw	r2,-12(fp)
   4f194:	10800017 	ldw	r2,0(r2)
   4f198:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4f19c:	e0bffc17 	ldw	r2,-16(fp)
   4f1a0:	10c00a04 	addi	r3,r2,40
   4f1a4:	e0bffd17 	ldw	r2,-12(fp)
   4f1a8:	10800217 	ldw	r2,8(r2)
   4f1ac:	100f883a 	mov	r7,r2
   4f1b0:	e1bfff17 	ldw	r6,-4(fp)
   4f1b4:	e17ffe17 	ldw	r5,-8(fp)
   4f1b8:	1809883a 	mov	r4,r3
   4f1bc:	004f79c0 	call	4f79c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4f1c0:	e037883a 	mov	sp,fp
   4f1c4:	dfc00117 	ldw	ra,4(sp)
   4f1c8:	df000017 	ldw	fp,0(sp)
   4f1cc:	dec00204 	addi	sp,sp,8
   4f1d0:	f800283a 	ret

0004f1d4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4f1d4:	defffa04 	addi	sp,sp,-24
   4f1d8:	dfc00515 	stw	ra,20(sp)
   4f1dc:	df000415 	stw	fp,16(sp)
   4f1e0:	df000404 	addi	fp,sp,16
   4f1e4:	e13ffd15 	stw	r4,-12(fp)
   4f1e8:	e17ffe15 	stw	r5,-8(fp)
   4f1ec:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f1f0:	e0bffd17 	ldw	r2,-12(fp)
   4f1f4:	10800017 	ldw	r2,0(r2)
   4f1f8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4f1fc:	e0bffc17 	ldw	r2,-16(fp)
   4f200:	10c00a04 	addi	r3,r2,40
   4f204:	e0bffd17 	ldw	r2,-12(fp)
   4f208:	10800217 	ldw	r2,8(r2)
   4f20c:	100f883a 	mov	r7,r2
   4f210:	e1bfff17 	ldw	r6,-4(fp)
   4f214:	e17ffe17 	ldw	r5,-8(fp)
   4f218:	1809883a 	mov	r4,r3
   4f21c:	004f9b80 	call	4f9b8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4f220:	e037883a 	mov	sp,fp
   4f224:	dfc00117 	ldw	ra,4(sp)
   4f228:	df000017 	ldw	fp,0(sp)
   4f22c:	dec00204 	addi	sp,sp,8
   4f230:	f800283a 	ret

0004f234 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4f234:	defffc04 	addi	sp,sp,-16
   4f238:	dfc00315 	stw	ra,12(sp)
   4f23c:	df000215 	stw	fp,8(sp)
   4f240:	df000204 	addi	fp,sp,8
   4f244:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f248:	e0bfff17 	ldw	r2,-4(fp)
   4f24c:	10800017 	ldw	r2,0(r2)
   4f250:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4f254:	e0bffe17 	ldw	r2,-8(fp)
   4f258:	10c00a04 	addi	r3,r2,40
   4f25c:	e0bfff17 	ldw	r2,-4(fp)
   4f260:	10800217 	ldw	r2,8(r2)
   4f264:	100b883a 	mov	r5,r2
   4f268:	1809883a 	mov	r4,r3
   4f26c:	004f6440 	call	4f644 <altera_avalon_jtag_uart_close>
}
   4f270:	e037883a 	mov	sp,fp
   4f274:	dfc00117 	ldw	ra,4(sp)
   4f278:	df000017 	ldw	fp,0(sp)
   4f27c:	dec00204 	addi	sp,sp,8
   4f280:	f800283a 	ret

0004f284 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4f284:	defffa04 	addi	sp,sp,-24
   4f288:	dfc00515 	stw	ra,20(sp)
   4f28c:	df000415 	stw	fp,16(sp)
   4f290:	df000404 	addi	fp,sp,16
   4f294:	e13ffd15 	stw	r4,-12(fp)
   4f298:	e17ffe15 	stw	r5,-8(fp)
   4f29c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4f2a0:	e0bffd17 	ldw	r2,-12(fp)
   4f2a4:	10800017 	ldw	r2,0(r2)
   4f2a8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4f2ac:	e0bffc17 	ldw	r2,-16(fp)
   4f2b0:	10800a04 	addi	r2,r2,40
   4f2b4:	e1bfff17 	ldw	r6,-4(fp)
   4f2b8:	e17ffe17 	ldw	r5,-8(fp)
   4f2bc:	1009883a 	mov	r4,r2
   4f2c0:	004f6ac0 	call	4f6ac <altera_avalon_jtag_uart_ioctl>
}
   4f2c4:	e037883a 	mov	sp,fp
   4f2c8:	dfc00117 	ldw	ra,4(sp)
   4f2cc:	df000017 	ldw	fp,0(sp)
   4f2d0:	dec00204 	addi	sp,sp,8
   4f2d4:	f800283a 	ret

0004f2d8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4f2d8:	defffa04 	addi	sp,sp,-24
   4f2dc:	dfc00515 	stw	ra,20(sp)
   4f2e0:	df000415 	stw	fp,16(sp)
   4f2e4:	df000404 	addi	fp,sp,16
   4f2e8:	e13ffd15 	stw	r4,-12(fp)
   4f2ec:	e17ffe15 	stw	r5,-8(fp)
   4f2f0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f2f4:	e0bffd17 	ldw	r2,-12(fp)
   4f2f8:	00c00044 	movi	r3,1
   4f2fc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4f300:	e0bffd17 	ldw	r2,-12(fp)
   4f304:	10800017 	ldw	r2,0(r2)
   4f308:	10800104 	addi	r2,r2,4
   4f30c:	1007883a 	mov	r3,r2
   4f310:	e0bffd17 	ldw	r2,-12(fp)
   4f314:	10800817 	ldw	r2,32(r2)
   4f318:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4f31c:	e0bffe17 	ldw	r2,-8(fp)
   4f320:	e0ffff17 	ldw	r3,-4(fp)
   4f324:	d8000015 	stw	zero,0(sp)
   4f328:	e1fffd17 	ldw	r7,-12(fp)
   4f32c:	01800174 	movhi	r6,5
   4f330:	31bce604 	addi	r6,r6,-3176
   4f334:	180b883a 	mov	r5,r3
   4f338:	1009883a 	mov	r4,r2
   4f33c:	00500b40 	call	500b4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4f340:	e0bffd17 	ldw	r2,-12(fp)
   4f344:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4f348:	e0bffd17 	ldw	r2,-12(fp)
   4f34c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4f350:	d0e70217 	ldw	r3,-25592(gp)
   4f354:	e1fffd17 	ldw	r7,-12(fp)
   4f358:	01800174 	movhi	r6,5
   4f35c:	31bd6904 	addi	r6,r6,-2652
   4f360:	180b883a 	mov	r5,r3
   4f364:	1009883a 	mov	r4,r2
   4f368:	004fd6c0 	call	4fd6c <alt_alarm_start>
   4f36c:	1000040e 	bge	r2,zero,4f380 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4f370:	e0fffd17 	ldw	r3,-12(fp)
   4f374:	00a00034 	movhi	r2,32768
   4f378:	10bfffc4 	addi	r2,r2,-1
   4f37c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4f380:	0001883a 	nop
   4f384:	e037883a 	mov	sp,fp
   4f388:	dfc00117 	ldw	ra,4(sp)
   4f38c:	df000017 	ldw	fp,0(sp)
   4f390:	dec00204 	addi	sp,sp,8
   4f394:	f800283a 	ret

0004f398 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4f398:	defff804 	addi	sp,sp,-32
   4f39c:	df000715 	stw	fp,28(sp)
   4f3a0:	df000704 	addi	fp,sp,28
   4f3a4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4f3a8:	e0bfff17 	ldw	r2,-4(fp)
   4f3ac:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4f3b0:	e0bffb17 	ldw	r2,-20(fp)
   4f3b4:	10800017 	ldw	r2,0(r2)
   4f3b8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f3bc:	e0bffc17 	ldw	r2,-16(fp)
   4f3c0:	10800104 	addi	r2,r2,4
   4f3c4:	10800037 	ldwio	r2,0(r2)
   4f3c8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4f3cc:	e0bffd17 	ldw	r2,-12(fp)
   4f3d0:	1080c00c 	andi	r2,r2,768
   4f3d4:	10006d26 	beq	r2,zero,4f58c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4f3d8:	e0bffd17 	ldw	r2,-12(fp)
   4f3dc:	1080400c 	andi	r2,r2,256
   4f3e0:	10003526 	beq	r2,zero,4f4b8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4f3e4:	00800074 	movhi	r2,1
   4f3e8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f3ec:	e0bffb17 	ldw	r2,-20(fp)
   4f3f0:	10800a17 	ldw	r2,40(r2)
   4f3f4:	10800044 	addi	r2,r2,1
   4f3f8:	1081ffcc 	andi	r2,r2,2047
   4f3fc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4f400:	e0bffb17 	ldw	r2,-20(fp)
   4f404:	10c00b17 	ldw	r3,44(r2)
   4f408:	e0bffe17 	ldw	r2,-8(fp)
   4f40c:	18801526 	beq	r3,r2,4f464 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4f410:	e0bffc17 	ldw	r2,-16(fp)
   4f414:	10800037 	ldwio	r2,0(r2)
   4f418:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4f41c:	e0bff917 	ldw	r2,-28(fp)
   4f420:	10a0000c 	andi	r2,r2,32768
   4f424:	10001126 	beq	r2,zero,4f46c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4f428:	e0bffb17 	ldw	r2,-20(fp)
   4f42c:	10800a17 	ldw	r2,40(r2)
   4f430:	e0fff917 	ldw	r3,-28(fp)
   4f434:	1809883a 	mov	r4,r3
   4f438:	e0fffb17 	ldw	r3,-20(fp)
   4f43c:	1885883a 	add	r2,r3,r2
   4f440:	10800e04 	addi	r2,r2,56
   4f444:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f448:	e0bffb17 	ldw	r2,-20(fp)
   4f44c:	10800a17 	ldw	r2,40(r2)
   4f450:	10800044 	addi	r2,r2,1
   4f454:	10c1ffcc 	andi	r3,r2,2047
   4f458:	e0bffb17 	ldw	r2,-20(fp)
   4f45c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4f460:	003fe206 	br	4f3ec <__alt_data_end+0xfffcf3ec>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4f464:	0001883a 	nop
   4f468:	00000106 	br	4f470 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4f46c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4f470:	e0bff917 	ldw	r2,-28(fp)
   4f474:	10bfffec 	andhi	r2,r2,65535
   4f478:	10000f26 	beq	r2,zero,4f4b8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f47c:	e0bffb17 	ldw	r2,-20(fp)
   4f480:	10c00817 	ldw	r3,32(r2)
   4f484:	00bfff84 	movi	r2,-2
   4f488:	1886703a 	and	r3,r3,r2
   4f48c:	e0bffb17 	ldw	r2,-20(fp)
   4f490:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4f494:	e0bffc17 	ldw	r2,-16(fp)
   4f498:	10800104 	addi	r2,r2,4
   4f49c:	1007883a 	mov	r3,r2
   4f4a0:	e0bffb17 	ldw	r2,-20(fp)
   4f4a4:	10800817 	ldw	r2,32(r2)
   4f4a8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f4ac:	e0bffc17 	ldw	r2,-16(fp)
   4f4b0:	10800104 	addi	r2,r2,4
   4f4b4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4f4b8:	e0bffd17 	ldw	r2,-12(fp)
   4f4bc:	1080800c 	andi	r2,r2,512
   4f4c0:	103fbe26 	beq	r2,zero,4f3bc <__alt_data_end+0xfffcf3bc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4f4c4:	e0bffd17 	ldw	r2,-12(fp)
   4f4c8:	1004d43a 	srli	r2,r2,16
   4f4cc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4f4d0:	00001406 	br	4f524 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4f4d4:	e0bffc17 	ldw	r2,-16(fp)
   4f4d8:	e0fffb17 	ldw	r3,-20(fp)
   4f4dc:	18c00d17 	ldw	r3,52(r3)
   4f4e0:	e13ffb17 	ldw	r4,-20(fp)
   4f4e4:	20c7883a 	add	r3,r4,r3
   4f4e8:	18c20e04 	addi	r3,r3,2104
   4f4ec:	18c00003 	ldbu	r3,0(r3)
   4f4f0:	18c03fcc 	andi	r3,r3,255
   4f4f4:	18c0201c 	xori	r3,r3,128
   4f4f8:	18ffe004 	addi	r3,r3,-128
   4f4fc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f500:	e0bffb17 	ldw	r2,-20(fp)
   4f504:	10800d17 	ldw	r2,52(r2)
   4f508:	10800044 	addi	r2,r2,1
   4f50c:	10c1ffcc 	andi	r3,r2,2047
   4f510:	e0bffb17 	ldw	r2,-20(fp)
   4f514:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4f518:	e0bffa17 	ldw	r2,-24(fp)
   4f51c:	10bfffc4 	addi	r2,r2,-1
   4f520:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4f524:	e0bffa17 	ldw	r2,-24(fp)
   4f528:	10000526 	beq	r2,zero,4f540 <altera_avalon_jtag_uart_irq+0x1a8>
   4f52c:	e0bffb17 	ldw	r2,-20(fp)
   4f530:	10c00d17 	ldw	r3,52(r2)
   4f534:	e0bffb17 	ldw	r2,-20(fp)
   4f538:	10800c17 	ldw	r2,48(r2)
   4f53c:	18bfe51e 	bne	r3,r2,4f4d4 <__alt_data_end+0xfffcf4d4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4f540:	e0bffa17 	ldw	r2,-24(fp)
   4f544:	103f9d26 	beq	r2,zero,4f3bc <__alt_data_end+0xfffcf3bc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4f548:	e0bffb17 	ldw	r2,-20(fp)
   4f54c:	10c00817 	ldw	r3,32(r2)
   4f550:	00bfff44 	movi	r2,-3
   4f554:	1886703a 	and	r3,r3,r2
   4f558:	e0bffb17 	ldw	r2,-20(fp)
   4f55c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f560:	e0bffb17 	ldw	r2,-20(fp)
   4f564:	10800017 	ldw	r2,0(r2)
   4f568:	10800104 	addi	r2,r2,4
   4f56c:	1007883a 	mov	r3,r2
   4f570:	e0bffb17 	ldw	r2,-20(fp)
   4f574:	10800817 	ldw	r2,32(r2)
   4f578:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f57c:	e0bffc17 	ldw	r2,-16(fp)
   4f580:	10800104 	addi	r2,r2,4
   4f584:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4f588:	003f8c06 	br	4f3bc <__alt_data_end+0xfffcf3bc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4f58c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4f590:	0001883a 	nop
   4f594:	e037883a 	mov	sp,fp
   4f598:	df000017 	ldw	fp,0(sp)
   4f59c:	dec00104 	addi	sp,sp,4
   4f5a0:	f800283a 	ret

0004f5a4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4f5a4:	defff804 	addi	sp,sp,-32
   4f5a8:	df000715 	stw	fp,28(sp)
   4f5ac:	df000704 	addi	fp,sp,28
   4f5b0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4f5b4:	e0bffb17 	ldw	r2,-20(fp)
   4f5b8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4f5bc:	e0bff917 	ldw	r2,-28(fp)
   4f5c0:	10800017 	ldw	r2,0(r2)
   4f5c4:	10800104 	addi	r2,r2,4
   4f5c8:	10800037 	ldwio	r2,0(r2)
   4f5cc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4f5d0:	e0bffa17 	ldw	r2,-24(fp)
   4f5d4:	1081000c 	andi	r2,r2,1024
   4f5d8:	10000b26 	beq	r2,zero,4f608 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4f5dc:	e0bff917 	ldw	r2,-28(fp)
   4f5e0:	10800017 	ldw	r2,0(r2)
   4f5e4:	10800104 	addi	r2,r2,4
   4f5e8:	1007883a 	mov	r3,r2
   4f5ec:	e0bff917 	ldw	r2,-28(fp)
   4f5f0:	10800817 	ldw	r2,32(r2)
   4f5f4:	10810014 	ori	r2,r2,1024
   4f5f8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4f5fc:	e0bff917 	ldw	r2,-28(fp)
   4f600:	10000915 	stw	zero,36(r2)
   4f604:	00000a06 	br	4f630 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4f608:	e0bff917 	ldw	r2,-28(fp)
   4f60c:	10c00917 	ldw	r3,36(r2)
   4f610:	00a00034 	movhi	r2,32768
   4f614:	10bfff04 	addi	r2,r2,-4
   4f618:	10c00536 	bltu	r2,r3,4f630 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4f61c:	e0bff917 	ldw	r2,-28(fp)
   4f620:	10800917 	ldw	r2,36(r2)
   4f624:	10c00044 	addi	r3,r2,1
   4f628:	e0bff917 	ldw	r2,-28(fp)
   4f62c:	10c00915 	stw	r3,36(r2)
   4f630:	d0a70217 	ldw	r2,-25592(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4f634:	e037883a 	mov	sp,fp
   4f638:	df000017 	ldw	fp,0(sp)
   4f63c:	dec00104 	addi	sp,sp,4
   4f640:	f800283a 	ret

0004f644 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4f644:	defffd04 	addi	sp,sp,-12
   4f648:	df000215 	stw	fp,8(sp)
   4f64c:	df000204 	addi	fp,sp,8
   4f650:	e13ffe15 	stw	r4,-8(fp)
   4f654:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4f658:	00000506 	br	4f670 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4f65c:	e0bfff17 	ldw	r2,-4(fp)
   4f660:	1090000c 	andi	r2,r2,16384
   4f664:	10000226 	beq	r2,zero,4f670 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4f668:	00bffd44 	movi	r2,-11
   4f66c:	00000b06 	br	4f69c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4f670:	e0bffe17 	ldw	r2,-8(fp)
   4f674:	10c00d17 	ldw	r3,52(r2)
   4f678:	e0bffe17 	ldw	r2,-8(fp)
   4f67c:	10800c17 	ldw	r2,48(r2)
   4f680:	18800526 	beq	r3,r2,4f698 <altera_avalon_jtag_uart_close+0x54>
   4f684:	e0bffe17 	ldw	r2,-8(fp)
   4f688:	10c00917 	ldw	r3,36(r2)
   4f68c:	e0bffe17 	ldw	r2,-8(fp)
   4f690:	10800117 	ldw	r2,4(r2)
   4f694:	18bff136 	bltu	r3,r2,4f65c <__alt_data_end+0xfffcf65c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4f698:	0005883a 	mov	r2,zero
}
   4f69c:	e037883a 	mov	sp,fp
   4f6a0:	df000017 	ldw	fp,0(sp)
   4f6a4:	dec00104 	addi	sp,sp,4
   4f6a8:	f800283a 	ret

0004f6ac <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4f6ac:	defffa04 	addi	sp,sp,-24
   4f6b0:	df000515 	stw	fp,20(sp)
   4f6b4:	df000504 	addi	fp,sp,20
   4f6b8:	e13ffd15 	stw	r4,-12(fp)
   4f6bc:	e17ffe15 	stw	r5,-8(fp)
   4f6c0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4f6c4:	00bff9c4 	movi	r2,-25
   4f6c8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4f6cc:	e0bffe17 	ldw	r2,-8(fp)
   4f6d0:	10da8060 	cmpeqi	r3,r2,27137
   4f6d4:	1800031e 	bne	r3,zero,4f6e4 <altera_avalon_jtag_uart_ioctl+0x38>
   4f6d8:	109a80a0 	cmpeqi	r2,r2,27138
   4f6dc:	1000181e 	bne	r2,zero,4f740 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4f6e0:	00002906 	br	4f788 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4f6e4:	e0bffd17 	ldw	r2,-12(fp)
   4f6e8:	10c00117 	ldw	r3,4(r2)
   4f6ec:	00a00034 	movhi	r2,32768
   4f6f0:	10bfffc4 	addi	r2,r2,-1
   4f6f4:	18802126 	beq	r3,r2,4f77c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4f6f8:	e0bfff17 	ldw	r2,-4(fp)
   4f6fc:	10800017 	ldw	r2,0(r2)
   4f700:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4f704:	e0bffc17 	ldw	r2,-16(fp)
   4f708:	10800090 	cmplti	r2,r2,2
   4f70c:	1000061e 	bne	r2,zero,4f728 <altera_avalon_jtag_uart_ioctl+0x7c>
   4f710:	e0fffc17 	ldw	r3,-16(fp)
   4f714:	00a00034 	movhi	r2,32768
   4f718:	10bfffc4 	addi	r2,r2,-1
   4f71c:	18800226 	beq	r3,r2,4f728 <altera_avalon_jtag_uart_ioctl+0x7c>
   4f720:	e0bffc17 	ldw	r2,-16(fp)
   4f724:	00000206 	br	4f730 <altera_avalon_jtag_uart_ioctl+0x84>
   4f728:	00a00034 	movhi	r2,32768
   4f72c:	10bfff84 	addi	r2,r2,-2
   4f730:	e0fffd17 	ldw	r3,-12(fp)
   4f734:	18800115 	stw	r2,4(r3)
      rc = 0;
   4f738:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4f73c:	00000f06 	br	4f77c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4f740:	e0bffd17 	ldw	r2,-12(fp)
   4f744:	10c00117 	ldw	r3,4(r2)
   4f748:	00a00034 	movhi	r2,32768
   4f74c:	10bfffc4 	addi	r2,r2,-1
   4f750:	18800c26 	beq	r3,r2,4f784 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4f754:	e0bffd17 	ldw	r2,-12(fp)
   4f758:	10c00917 	ldw	r3,36(r2)
   4f75c:	e0bffd17 	ldw	r2,-12(fp)
   4f760:	10800117 	ldw	r2,4(r2)
   4f764:	1885803a 	cmpltu	r2,r3,r2
   4f768:	10c03fcc 	andi	r3,r2,255
   4f76c:	e0bfff17 	ldw	r2,-4(fp)
   4f770:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4f774:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4f778:	00000206 	br	4f784 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4f77c:	0001883a 	nop
   4f780:	00000106 	br	4f788 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4f784:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4f788:	e0bffb17 	ldw	r2,-20(fp)
}
   4f78c:	e037883a 	mov	sp,fp
   4f790:	df000017 	ldw	fp,0(sp)
   4f794:	dec00104 	addi	sp,sp,4
   4f798:	f800283a 	ret

0004f79c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4f79c:	defff304 	addi	sp,sp,-52
   4f7a0:	dfc00c15 	stw	ra,48(sp)
   4f7a4:	df000b15 	stw	fp,44(sp)
   4f7a8:	df000b04 	addi	fp,sp,44
   4f7ac:	e13ffc15 	stw	r4,-16(fp)
   4f7b0:	e17ffd15 	stw	r5,-12(fp)
   4f7b4:	e1bffe15 	stw	r6,-8(fp)
   4f7b8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4f7bc:	e0bffd17 	ldw	r2,-12(fp)
   4f7c0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f7c4:	00004706 	br	4f8e4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4f7c8:	e0bffc17 	ldw	r2,-16(fp)
   4f7cc:	10800a17 	ldw	r2,40(r2)
   4f7d0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4f7d4:	e0bffc17 	ldw	r2,-16(fp)
   4f7d8:	10800b17 	ldw	r2,44(r2)
   4f7dc:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4f7e0:	e0fff717 	ldw	r3,-36(fp)
   4f7e4:	e0bff817 	ldw	r2,-32(fp)
   4f7e8:	18800536 	bltu	r3,r2,4f800 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4f7ec:	e0fff717 	ldw	r3,-36(fp)
   4f7f0:	e0bff817 	ldw	r2,-32(fp)
   4f7f4:	1885c83a 	sub	r2,r3,r2
   4f7f8:	e0bff615 	stw	r2,-40(fp)
   4f7fc:	00000406 	br	4f810 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4f800:	00c20004 	movi	r3,2048
   4f804:	e0bff817 	ldw	r2,-32(fp)
   4f808:	1885c83a 	sub	r2,r3,r2
   4f80c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4f810:	e0bff617 	ldw	r2,-40(fp)
   4f814:	10001e26 	beq	r2,zero,4f890 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4f818:	e0fffe17 	ldw	r3,-8(fp)
   4f81c:	e0bff617 	ldw	r2,-40(fp)
   4f820:	1880022e 	bgeu	r3,r2,4f82c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4f824:	e0bffe17 	ldw	r2,-8(fp)
   4f828:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4f82c:	e0bffc17 	ldw	r2,-16(fp)
   4f830:	10c00e04 	addi	r3,r2,56
   4f834:	e0bff817 	ldw	r2,-32(fp)
   4f838:	1885883a 	add	r2,r3,r2
   4f83c:	e1bff617 	ldw	r6,-40(fp)
   4f840:	100b883a 	mov	r5,r2
   4f844:	e13ff517 	ldw	r4,-44(fp)
   4f848:	00485a00 	call	485a0 <memcpy>
      ptr   += n;
   4f84c:	e0fff517 	ldw	r3,-44(fp)
   4f850:	e0bff617 	ldw	r2,-40(fp)
   4f854:	1885883a 	add	r2,r3,r2
   4f858:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4f85c:	e0fffe17 	ldw	r3,-8(fp)
   4f860:	e0bff617 	ldw	r2,-40(fp)
   4f864:	1885c83a 	sub	r2,r3,r2
   4f868:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f86c:	e0fff817 	ldw	r3,-32(fp)
   4f870:	e0bff617 	ldw	r2,-40(fp)
   4f874:	1885883a 	add	r2,r3,r2
   4f878:	10c1ffcc 	andi	r3,r2,2047
   4f87c:	e0bffc17 	ldw	r2,-16(fp)
   4f880:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4f884:	e0bffe17 	ldw	r2,-8(fp)
   4f888:	00bfcf16 	blt	zero,r2,4f7c8 <__alt_data_end+0xfffcf7c8>
   4f88c:	00000106 	br	4f894 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4f890:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4f894:	e0fff517 	ldw	r3,-44(fp)
   4f898:	e0bffd17 	ldw	r2,-12(fp)
   4f89c:	1880141e 	bne	r3,r2,4f8f0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4f8a0:	e0bfff17 	ldw	r2,-4(fp)
   4f8a4:	1090000c 	andi	r2,r2,16384
   4f8a8:	1000131e 	bne	r2,zero,4f8f8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4f8ac:	0001883a 	nop
   4f8b0:	e0bffc17 	ldw	r2,-16(fp)
   4f8b4:	10c00a17 	ldw	r3,40(r2)
   4f8b8:	e0bff717 	ldw	r2,-36(fp)
   4f8bc:	1880051e 	bne	r3,r2,4f8d4 <altera_avalon_jtag_uart_read+0x138>
   4f8c0:	e0bffc17 	ldw	r2,-16(fp)
   4f8c4:	10c00917 	ldw	r3,36(r2)
   4f8c8:	e0bffc17 	ldw	r2,-16(fp)
   4f8cc:	10800117 	ldw	r2,4(r2)
   4f8d0:	18bff736 	bltu	r3,r2,4f8b0 <__alt_data_end+0xfffcf8b0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4f8d4:	e0bffc17 	ldw	r2,-16(fp)
   4f8d8:	10c00a17 	ldw	r3,40(r2)
   4f8dc:	e0bff717 	ldw	r2,-36(fp)
   4f8e0:	18800726 	beq	r3,r2,4f900 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f8e4:	e0bffe17 	ldw	r2,-8(fp)
   4f8e8:	00bfb716 	blt	zero,r2,4f7c8 <__alt_data_end+0xfffcf7c8>
   4f8ec:	00000506 	br	4f904 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4f8f0:	0001883a 	nop
   4f8f4:	00000306 	br	4f904 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4f8f8:	0001883a 	nop
   4f8fc:	00000106 	br	4f904 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4f900:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4f904:	e0fff517 	ldw	r3,-44(fp)
   4f908:	e0bffd17 	ldw	r2,-12(fp)
   4f90c:	18801826 	beq	r3,r2,4f970 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f910:	0005303a 	rdctl	r2,status
   4f914:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f918:	e0fffb17 	ldw	r3,-20(fp)
   4f91c:	00bfff84 	movi	r2,-2
   4f920:	1884703a 	and	r2,r3,r2
   4f924:	1001703a 	wrctl	status,r2
  
  return context;
   4f928:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4f92c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f930:	e0bffc17 	ldw	r2,-16(fp)
   4f934:	10800817 	ldw	r2,32(r2)
   4f938:	10c00054 	ori	r3,r2,1
   4f93c:	e0bffc17 	ldw	r2,-16(fp)
   4f940:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f944:	e0bffc17 	ldw	r2,-16(fp)
   4f948:	10800017 	ldw	r2,0(r2)
   4f94c:	10800104 	addi	r2,r2,4
   4f950:	1007883a 	mov	r3,r2
   4f954:	e0bffc17 	ldw	r2,-16(fp)
   4f958:	10800817 	ldw	r2,32(r2)
   4f95c:	18800035 	stwio	r2,0(r3)
   4f960:	e0bffa17 	ldw	r2,-24(fp)
   4f964:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f968:	e0bff917 	ldw	r2,-28(fp)
   4f96c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4f970:	e0fff517 	ldw	r3,-44(fp)
   4f974:	e0bffd17 	ldw	r2,-12(fp)
   4f978:	18800426 	beq	r3,r2,4f98c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4f97c:	e0fff517 	ldw	r3,-44(fp)
   4f980:	e0bffd17 	ldw	r2,-12(fp)
   4f984:	1885c83a 	sub	r2,r3,r2
   4f988:	00000606 	br	4f9a4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4f98c:	e0bfff17 	ldw	r2,-4(fp)
   4f990:	1090000c 	andi	r2,r2,16384
   4f994:	10000226 	beq	r2,zero,4f9a0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4f998:	00bffd44 	movi	r2,-11
   4f99c:	00000106 	br	4f9a4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4f9a0:	00bffec4 	movi	r2,-5
}
   4f9a4:	e037883a 	mov	sp,fp
   4f9a8:	dfc00117 	ldw	ra,4(sp)
   4f9ac:	df000017 	ldw	fp,0(sp)
   4f9b0:	dec00204 	addi	sp,sp,8
   4f9b4:	f800283a 	ret

0004f9b8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4f9b8:	defff304 	addi	sp,sp,-52
   4f9bc:	dfc00c15 	stw	ra,48(sp)
   4f9c0:	df000b15 	stw	fp,44(sp)
   4f9c4:	df000b04 	addi	fp,sp,44
   4f9c8:	e13ffc15 	stw	r4,-16(fp)
   4f9cc:	e17ffd15 	stw	r5,-12(fp)
   4f9d0:	e1bffe15 	stw	r6,-8(fp)
   4f9d4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4f9d8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4f9dc:	e0bffd17 	ldw	r2,-12(fp)
   4f9e0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4f9e4:	00003706 	br	4fac4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4f9e8:	e0bffc17 	ldw	r2,-16(fp)
   4f9ec:	10800c17 	ldw	r2,48(r2)
   4f9f0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4f9f4:	e0bffc17 	ldw	r2,-16(fp)
   4f9f8:	10800d17 	ldw	r2,52(r2)
   4f9fc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4fa00:	e0fff917 	ldw	r3,-28(fp)
   4fa04:	e0bff517 	ldw	r2,-44(fp)
   4fa08:	1880062e 	bgeu	r3,r2,4fa24 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4fa0c:	e0fff517 	ldw	r3,-44(fp)
   4fa10:	e0bff917 	ldw	r2,-28(fp)
   4fa14:	1885c83a 	sub	r2,r3,r2
   4fa18:	10bfffc4 	addi	r2,r2,-1
   4fa1c:	e0bff615 	stw	r2,-40(fp)
   4fa20:	00000b06 	br	4fa50 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4fa24:	e0bff517 	ldw	r2,-44(fp)
   4fa28:	10000526 	beq	r2,zero,4fa40 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4fa2c:	00c20004 	movi	r3,2048
   4fa30:	e0bff917 	ldw	r2,-28(fp)
   4fa34:	1885c83a 	sub	r2,r3,r2
   4fa38:	e0bff615 	stw	r2,-40(fp)
   4fa3c:	00000406 	br	4fa50 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4fa40:	00c1ffc4 	movi	r3,2047
   4fa44:	e0bff917 	ldw	r2,-28(fp)
   4fa48:	1885c83a 	sub	r2,r3,r2
   4fa4c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4fa50:	e0bff617 	ldw	r2,-40(fp)
   4fa54:	10001e26 	beq	r2,zero,4fad0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4fa58:	e0fffe17 	ldw	r3,-8(fp)
   4fa5c:	e0bff617 	ldw	r2,-40(fp)
   4fa60:	1880022e 	bgeu	r3,r2,4fa6c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4fa64:	e0bffe17 	ldw	r2,-8(fp)
   4fa68:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4fa6c:	e0bffc17 	ldw	r2,-16(fp)
   4fa70:	10c20e04 	addi	r3,r2,2104
   4fa74:	e0bff917 	ldw	r2,-28(fp)
   4fa78:	1885883a 	add	r2,r3,r2
   4fa7c:	e1bff617 	ldw	r6,-40(fp)
   4fa80:	e17ffd17 	ldw	r5,-12(fp)
   4fa84:	1009883a 	mov	r4,r2
   4fa88:	00485a00 	call	485a0 <memcpy>
      ptr   += n;
   4fa8c:	e0fffd17 	ldw	r3,-12(fp)
   4fa90:	e0bff617 	ldw	r2,-40(fp)
   4fa94:	1885883a 	add	r2,r3,r2
   4fa98:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4fa9c:	e0fffe17 	ldw	r3,-8(fp)
   4faa0:	e0bff617 	ldw	r2,-40(fp)
   4faa4:	1885c83a 	sub	r2,r3,r2
   4faa8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4faac:	e0fff917 	ldw	r3,-28(fp)
   4fab0:	e0bff617 	ldw	r2,-40(fp)
   4fab4:	1885883a 	add	r2,r3,r2
   4fab8:	10c1ffcc 	andi	r3,r2,2047
   4fabc:	e0bffc17 	ldw	r2,-16(fp)
   4fac0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4fac4:	e0bffe17 	ldw	r2,-8(fp)
   4fac8:	00bfc716 	blt	zero,r2,4f9e8 <__alt_data_end+0xfffcf9e8>
   4facc:	00000106 	br	4fad4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4fad0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4fad4:	0005303a 	rdctl	r2,status
   4fad8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fadc:	e0fffb17 	ldw	r3,-20(fp)
   4fae0:	00bfff84 	movi	r2,-2
   4fae4:	1884703a 	and	r2,r3,r2
   4fae8:	1001703a 	wrctl	status,r2
  
  return context;
   4faec:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4faf0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4faf4:	e0bffc17 	ldw	r2,-16(fp)
   4faf8:	10800817 	ldw	r2,32(r2)
   4fafc:	10c00094 	ori	r3,r2,2
   4fb00:	e0bffc17 	ldw	r2,-16(fp)
   4fb04:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4fb08:	e0bffc17 	ldw	r2,-16(fp)
   4fb0c:	10800017 	ldw	r2,0(r2)
   4fb10:	10800104 	addi	r2,r2,4
   4fb14:	1007883a 	mov	r3,r2
   4fb18:	e0bffc17 	ldw	r2,-16(fp)
   4fb1c:	10800817 	ldw	r2,32(r2)
   4fb20:	18800035 	stwio	r2,0(r3)
   4fb24:	e0bffa17 	ldw	r2,-24(fp)
   4fb28:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4fb2c:	e0bff817 	ldw	r2,-32(fp)
   4fb30:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4fb34:	e0bffe17 	ldw	r2,-8(fp)
   4fb38:	0080100e 	bge	zero,r2,4fb7c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4fb3c:	e0bfff17 	ldw	r2,-4(fp)
   4fb40:	1090000c 	andi	r2,r2,16384
   4fb44:	1000101e 	bne	r2,zero,4fb88 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4fb48:	0001883a 	nop
   4fb4c:	e0bffc17 	ldw	r2,-16(fp)
   4fb50:	10c00d17 	ldw	r3,52(r2)
   4fb54:	e0bff517 	ldw	r2,-44(fp)
   4fb58:	1880051e 	bne	r3,r2,4fb70 <altera_avalon_jtag_uart_write+0x1b8>
   4fb5c:	e0bffc17 	ldw	r2,-16(fp)
   4fb60:	10c00917 	ldw	r3,36(r2)
   4fb64:	e0bffc17 	ldw	r2,-16(fp)
   4fb68:	10800117 	ldw	r2,4(r2)
   4fb6c:	18bff736 	bltu	r3,r2,4fb4c <__alt_data_end+0xfffcfb4c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4fb70:	e0bffc17 	ldw	r2,-16(fp)
   4fb74:	10800917 	ldw	r2,36(r2)
   4fb78:	1000051e 	bne	r2,zero,4fb90 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4fb7c:	e0bffe17 	ldw	r2,-8(fp)
   4fb80:	00bfd016 	blt	zero,r2,4fac4 <__alt_data_end+0xfffcfac4>
   4fb84:	00000306 	br	4fb94 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4fb88:	0001883a 	nop
   4fb8c:	00000106 	br	4fb94 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4fb90:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4fb94:	e0fffd17 	ldw	r3,-12(fp)
   4fb98:	e0bff717 	ldw	r2,-36(fp)
   4fb9c:	18800426 	beq	r3,r2,4fbb0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4fba0:	e0fffd17 	ldw	r3,-12(fp)
   4fba4:	e0bff717 	ldw	r2,-36(fp)
   4fba8:	1885c83a 	sub	r2,r3,r2
   4fbac:	00000606 	br	4fbc8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4fbb0:	e0bfff17 	ldw	r2,-4(fp)
   4fbb4:	1090000c 	andi	r2,r2,16384
   4fbb8:	10000226 	beq	r2,zero,4fbc4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4fbbc:	00bffd44 	movi	r2,-11
   4fbc0:	00000106 	br	4fbc8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4fbc4:	00bffec4 	movi	r2,-5
}
   4fbc8:	e037883a 	mov	sp,fp
   4fbcc:	dfc00117 	ldw	ra,4(sp)
   4fbd0:	df000017 	ldw	fp,0(sp)
   4fbd4:	dec00204 	addi	sp,sp,8
   4fbd8:	f800283a 	ret

0004fbdc <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
   4fbdc:	defff904 	addi	sp,sp,-28
   4fbe0:	df000615 	stw	fp,24(sp)
   4fbe4:	df000604 	addi	fp,sp,24
   4fbe8:	e13ffe15 	stw	r4,-8(fp)
   4fbec:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
   4fbf0:	e03ffa15 	stw	zero,-24(fp)
   4fbf4:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
   4fbf8:	000b883a 	mov	r5,zero
   4fbfc:	e13ffe17 	ldw	r4,-8(fp)
   4fc00:	21400035 	stwio	r5,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
   4fc04:	e13fff17 	ldw	r4,-4(fp)
   4fc08:	2008913a 	slli	r4,r4,4
   4fc0c:	200b883a 	mov	r5,r4
   4fc10:	e13ffe17 	ldw	r4,-8(fp)
   4fc14:	2149883a 	add	r4,r4,r5
   4fc18:	21000037 	ldwio	r4,0(r4)
   4fc1c:	e13ffc15 	stw	r4,-16(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
   4fc20:	e13fff17 	ldw	r4,-4(fp)
   4fc24:	2008913a 	slli	r4,r4,4
   4fc28:	21000104 	addi	r4,r4,4
   4fc2c:	200b883a 	mov	r5,r4
   4fc30:	e13ffe17 	ldw	r4,-8(fp)
   4fc34:	2149883a 	add	r4,r4,r5
   4fc38:	21000037 	ldwio	r4,0(r4)
   4fc3c:	e13ffd15 	stw	r4,-12(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   4fc40:	e13ffd17 	ldw	r4,-12(fp)
   4fc44:	2011883a 	mov	r8,r4
   4fc48:	0013883a 	mov	r9,zero
   4fc4c:	4006983a 	sll	r3,r8,zero
   4fc50:	0005883a 	mov	r2,zero
           ((alt_u64)(((alt_u64) lo)                 ))  ;
   4fc54:	e13ffc17 	ldw	r4,-16(fp)
   4fc58:	200d883a 	mov	r6,r4
   4fc5c:	000f883a 	mov	r7,zero

  PERF_STOP_MEASURING(hw_base_address);
  lo = IORD(hw_base_address, ( which_section*4   ));
  hi = IORD(hw_base_address, ((which_section*4)+1));

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   4fc60:	1188b03a 	or	r4,r2,r6
   4fc64:	e13ffa15 	stw	r4,-24(fp)
   4fc68:	19c4b03a 	or	r2,r3,r7
   4fc6c:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
   4fc70:	e0bffa17 	ldw	r2,-24(fp)
   4fc74:	e0fffb17 	ldw	r3,-20(fp)
   4fc78:	1009883a 	mov	r4,r2
   4fc7c:	180b883a 	mov	r5,r3
}
   4fc80:	2005883a 	mov	r2,r4
   4fc84:	2807883a 	mov	r3,r5
   4fc88:	e037883a 	mov	sp,fp
   4fc8c:	df000017 	ldw	fp,0(sp)
   4fc90:	dec00104 	addi	sp,sp,4
   4fc94:	f800283a 	ret

0004fc98 <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
   4fc98:	defffd04 	addi	sp,sp,-12
   4fc9c:	dfc00215 	stw	ra,8(sp)
   4fca0:	df000115 	stw	fp,4(sp)
   4fca4:	df000104 	addi	fp,sp,4
   4fca8:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
   4fcac:	000b883a 	mov	r5,zero
   4fcb0:	e13fff17 	ldw	r4,-4(fp)
   4fcb4:	004fbdc0 	call	4fbdc <perf_get_section_time>
   4fcb8:	100b883a 	mov	r5,r2
   4fcbc:	180d883a 	mov	r6,r3
   4fcc0:	2807883a 	mov	r3,r5
   4fcc4:	3009883a 	mov	r4,r6
}
   4fcc8:	1805883a 	mov	r2,r3
   4fccc:	2007883a 	mov	r3,r4
   4fcd0:	e037883a 	mov	sp,fp
   4fcd4:	dfc00117 	ldw	ra,4(sp)
   4fcd8:	df000017 	ldw	fp,0(sp)
   4fcdc:	dec00204 	addi	sp,sp,8
   4fce0:	f800283a 	ret

0004fce4 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
   4fce4:	defffd04 	addi	sp,sp,-12
   4fce8:	df000215 	stw	fp,8(sp)
   4fcec:	df000204 	addi	fp,sp,8
   4fcf0:	e13ffe15 	stw	r4,-8(fp)
   4fcf4:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
   4fcf8:	e0bfff17 	ldw	r2,-4(fp)
   4fcfc:	1004913a 	slli	r2,r2,4
   4fd00:	10800204 	addi	r2,r2,8
   4fd04:	1007883a 	mov	r3,r2
   4fd08:	e0bffe17 	ldw	r2,-8(fp)
   4fd0c:	10c5883a 	add	r2,r2,r3
   4fd10:	10800037 	ldwio	r2,0(r2)
}
   4fd14:	e037883a 	mov	sp,fp
   4fd18:	df000017 	ldw	fp,0(sp)
   4fd1c:	dec00104 	addi	sp,sp,4
   4fd20:	f800283a 	ret

0004fd24 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
   4fd24:	deffff04 	addi	sp,sp,-4
   4fd28:	df000015 	stw	fp,0(sp)
   4fd2c:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
   4fd30:	00800234 	movhi	r2,8
   4fd34:	10841004 	addi	r2,r2,4160
#else
    return (void*)0;
#endif
}
   4fd38:	e037883a 	mov	sp,fp
   4fd3c:	df000017 	ldw	fp,0(sp)
   4fd40:	dec00104 	addi	sp,sp,4
   4fd44:	f800283a 	ret

0004fd48 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
   4fd48:	deffff04 	addi	sp,sp,-4
   4fd4c:	df000015 	stw	fp,0(sp)
   4fd50:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
   4fd54:	0080bef4 	movhi	r2,763
   4fd58:	10bc2004 	addi	r2,r2,-3968
}
   4fd5c:	e037883a 	mov	sp,fp
   4fd60:	df000017 	ldw	fp,0(sp)
   4fd64:	dec00104 	addi	sp,sp,4
   4fd68:	f800283a 	ret

0004fd6c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4fd6c:	defff504 	addi	sp,sp,-44
   4fd70:	df000a15 	stw	fp,40(sp)
   4fd74:	df000a04 	addi	fp,sp,40
   4fd78:	e13ffc15 	stw	r4,-16(fp)
   4fd7c:	e17ffd15 	stw	r5,-12(fp)
   4fd80:	e1bffe15 	stw	r6,-8(fp)
   4fd84:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4fd88:	e03ff615 	stw	zero,-40(fp)
   4fd8c:	d0a70217 	ldw	r2,-25592(gp)
  
  if (alt_ticks_per_second ())
   4fd90:	10003c26 	beq	r2,zero,4fe84 <alt_alarm_start+0x118>
  {
    if (alarm)
   4fd94:	e0bffc17 	ldw	r2,-16(fp)
   4fd98:	10003826 	beq	r2,zero,4fe7c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4fd9c:	e0bffc17 	ldw	r2,-16(fp)
   4fda0:	e0fffe17 	ldw	r3,-8(fp)
   4fda4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4fda8:	e0bffc17 	ldw	r2,-16(fp)
   4fdac:	e0ffff17 	ldw	r3,-4(fp)
   4fdb0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4fdb4:	0005303a 	rdctl	r2,status
   4fdb8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fdbc:	e0fff917 	ldw	r3,-28(fp)
   4fdc0:	00bfff84 	movi	r2,-2
   4fdc4:	1884703a 	and	r2,r3,r2
   4fdc8:	1001703a 	wrctl	status,r2
  
  return context;
   4fdcc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4fdd0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4fdd4:	d0a70317 	ldw	r2,-25588(gp)
      
      current_nticks = alt_nticks();
   4fdd8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4fddc:	e0fffd17 	ldw	r3,-12(fp)
   4fde0:	e0bff617 	ldw	r2,-40(fp)
   4fde4:	1885883a 	add	r2,r3,r2
   4fde8:	10c00044 	addi	r3,r2,1
   4fdec:	e0bffc17 	ldw	r2,-16(fp)
   4fdf0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4fdf4:	e0bffc17 	ldw	r2,-16(fp)
   4fdf8:	10c00217 	ldw	r3,8(r2)
   4fdfc:	e0bff617 	ldw	r2,-40(fp)
   4fe00:	1880042e 	bgeu	r3,r2,4fe14 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4fe04:	e0bffc17 	ldw	r2,-16(fp)
   4fe08:	00c00044 	movi	r3,1
   4fe0c:	10c00405 	stb	r3,16(r2)
   4fe10:	00000206 	br	4fe1c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4fe14:	e0bffc17 	ldw	r2,-16(fp)
   4fe18:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4fe1c:	e0bffc17 	ldw	r2,-16(fp)
   4fe20:	d0e00e04 	addi	r3,gp,-32712
   4fe24:	e0fffa15 	stw	r3,-24(fp)
   4fe28:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4fe2c:	e0bffb17 	ldw	r2,-20(fp)
   4fe30:	e0fffa17 	ldw	r3,-24(fp)
   4fe34:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4fe38:	e0bffa17 	ldw	r2,-24(fp)
   4fe3c:	10c00017 	ldw	r3,0(r2)
   4fe40:	e0bffb17 	ldw	r2,-20(fp)
   4fe44:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4fe48:	e0bffa17 	ldw	r2,-24(fp)
   4fe4c:	10800017 	ldw	r2,0(r2)
   4fe50:	e0fffb17 	ldw	r3,-20(fp)
   4fe54:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4fe58:	e0bffa17 	ldw	r2,-24(fp)
   4fe5c:	e0fffb17 	ldw	r3,-20(fp)
   4fe60:	10c00015 	stw	r3,0(r2)
   4fe64:	e0bff817 	ldw	r2,-32(fp)
   4fe68:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4fe6c:	e0bff717 	ldw	r2,-36(fp)
   4fe70:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4fe74:	0005883a 	mov	r2,zero
   4fe78:	00000306 	br	4fe88 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4fe7c:	00bffa84 	movi	r2,-22
   4fe80:	00000106 	br	4fe88 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4fe84:	00bfde84 	movi	r2,-134
  }
}
   4fe88:	e037883a 	mov	sp,fp
   4fe8c:	df000017 	ldw	fp,0(sp)
   4fe90:	dec00104 	addi	sp,sp,4
   4fe94:	f800283a 	ret

0004fe98 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4fe98:	defffe04 	addi	sp,sp,-8
   4fe9c:	df000115 	stw	fp,4(sp)
   4fea0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4fea4:	e03fff15 	stw	zero,-4(fp)
   4fea8:	00000506 	br	4fec0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4feac:	e0bfff17 	ldw	r2,-4(fp)
   4feb0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4feb4:	e0bfff17 	ldw	r2,-4(fp)
   4feb8:	10800804 	addi	r2,r2,32
   4febc:	e0bfff15 	stw	r2,-4(fp)
   4fec0:	e0bfff17 	ldw	r2,-4(fp)
   4fec4:	10820030 	cmpltui	r2,r2,2048
   4fec8:	103ff81e 	bne	r2,zero,4feac <__alt_data_end+0xfffcfeac>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4fecc:	0001883a 	nop
   4fed0:	e037883a 	mov	sp,fp
   4fed4:	df000017 	ldw	fp,0(sp)
   4fed8:	dec00104 	addi	sp,sp,4
   4fedc:	f800283a 	ret

0004fee0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fee0:	defffe04 	addi	sp,sp,-8
   4fee4:	dfc00115 	stw	ra,4(sp)
   4fee8:	df000015 	stw	fp,0(sp)
   4feec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fef0:	d0a00b17 	ldw	r2,-32724(gp)
   4fef4:	10000326 	beq	r2,zero,4ff04 <alt_get_errno+0x24>
   4fef8:	d0a00b17 	ldw	r2,-32724(gp)
   4fefc:	103ee83a 	callr	r2
   4ff00:	00000106 	br	4ff08 <alt_get_errno+0x28>
   4ff04:	d0a6fd04 	addi	r2,gp,-25612
}
   4ff08:	e037883a 	mov	sp,fp
   4ff0c:	dfc00117 	ldw	ra,4(sp)
   4ff10:	df000017 	ldw	fp,0(sp)
   4ff14:	dec00204 	addi	sp,sp,8
   4ff18:	f800283a 	ret

0004ff1c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4ff1c:	defffa04 	addi	sp,sp,-24
   4ff20:	dfc00515 	stw	ra,20(sp)
   4ff24:	df000415 	stw	fp,16(sp)
   4ff28:	df000404 	addi	fp,sp,16
   4ff2c:	e13ffe15 	stw	r4,-8(fp)
   4ff30:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4ff34:	e0bffe17 	ldw	r2,-8(fp)
   4ff38:	10000326 	beq	r2,zero,4ff48 <alt_dev_llist_insert+0x2c>
   4ff3c:	e0bffe17 	ldw	r2,-8(fp)
   4ff40:	10800217 	ldw	r2,8(r2)
   4ff44:	1000061e 	bne	r2,zero,4ff60 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4ff48:	004fee00 	call	4fee0 <alt_get_errno>
   4ff4c:	1007883a 	mov	r3,r2
   4ff50:	00800584 	movi	r2,22
   4ff54:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4ff58:	00bffa84 	movi	r2,-22
   4ff5c:	00001306 	br	4ffac <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4ff60:	e0bffe17 	ldw	r2,-8(fp)
   4ff64:	e0ffff17 	ldw	r3,-4(fp)
   4ff68:	e0fffc15 	stw	r3,-16(fp)
   4ff6c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4ff70:	e0bffd17 	ldw	r2,-12(fp)
   4ff74:	e0fffc17 	ldw	r3,-16(fp)
   4ff78:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4ff7c:	e0bffc17 	ldw	r2,-16(fp)
   4ff80:	10c00017 	ldw	r3,0(r2)
   4ff84:	e0bffd17 	ldw	r2,-12(fp)
   4ff88:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4ff8c:	e0bffc17 	ldw	r2,-16(fp)
   4ff90:	10800017 	ldw	r2,0(r2)
   4ff94:	e0fffd17 	ldw	r3,-12(fp)
   4ff98:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4ff9c:	e0bffc17 	ldw	r2,-16(fp)
   4ffa0:	e0fffd17 	ldw	r3,-12(fp)
   4ffa4:	10c00015 	stw	r3,0(r2)

  return 0;  
   4ffa8:	0005883a 	mov	r2,zero
}
   4ffac:	e037883a 	mov	sp,fp
   4ffb0:	dfc00117 	ldw	ra,4(sp)
   4ffb4:	df000017 	ldw	fp,0(sp)
   4ffb8:	dec00204 	addi	sp,sp,8
   4ffbc:	f800283a 	ret

0004ffc0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4ffc0:	defffd04 	addi	sp,sp,-12
   4ffc4:	dfc00215 	stw	ra,8(sp)
   4ffc8:	df000115 	stw	fp,4(sp)
   4ffcc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ffd0:	00800174 	movhi	r2,5
   4ffd4:	1083ea04 	addi	r2,r2,4008
   4ffd8:	e0bfff15 	stw	r2,-4(fp)
   4ffdc:	00000606 	br	4fff8 <_do_ctors+0x38>
        (*ctor) (); 
   4ffe0:	e0bfff17 	ldw	r2,-4(fp)
   4ffe4:	10800017 	ldw	r2,0(r2)
   4ffe8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ffec:	e0bfff17 	ldw	r2,-4(fp)
   4fff0:	10bfff04 	addi	r2,r2,-4
   4fff4:	e0bfff15 	stw	r2,-4(fp)
   4fff8:	e0ffff17 	ldw	r3,-4(fp)
   4fffc:	00800174 	movhi	r2,5
   50000:	1083eb04 	addi	r2,r2,4012
   50004:	18bff62e 	bgeu	r3,r2,4ffe0 <__alt_data_end+0xfffcffe0>
        (*ctor) (); 
}
   50008:	0001883a 	nop
   5000c:	e037883a 	mov	sp,fp
   50010:	dfc00117 	ldw	ra,4(sp)
   50014:	df000017 	ldw	fp,0(sp)
   50018:	dec00204 	addi	sp,sp,8
   5001c:	f800283a 	ret

00050020 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   50020:	defffd04 	addi	sp,sp,-12
   50024:	dfc00215 	stw	ra,8(sp)
   50028:	df000115 	stw	fp,4(sp)
   5002c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   50030:	00800174 	movhi	r2,5
   50034:	1083ea04 	addi	r2,r2,4008
   50038:	e0bfff15 	stw	r2,-4(fp)
   5003c:	00000606 	br	50058 <_do_dtors+0x38>
        (*dtor) (); 
   50040:	e0bfff17 	ldw	r2,-4(fp)
   50044:	10800017 	ldw	r2,0(r2)
   50048:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   5004c:	e0bfff17 	ldw	r2,-4(fp)
   50050:	10bfff04 	addi	r2,r2,-4
   50054:	e0bfff15 	stw	r2,-4(fp)
   50058:	e0ffff17 	ldw	r3,-4(fp)
   5005c:	00800174 	movhi	r2,5
   50060:	1083eb04 	addi	r2,r2,4012
   50064:	18bff62e 	bgeu	r3,r2,50040 <__alt_data_end+0xfffd0040>
        (*dtor) (); 
}
   50068:	0001883a 	nop
   5006c:	e037883a 	mov	sp,fp
   50070:	dfc00117 	ldw	ra,4(sp)
   50074:	df000017 	ldw	fp,0(sp)
   50078:	dec00204 	addi	sp,sp,8
   5007c:	f800283a 	ret

00050080 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   50080:	defffe04 	addi	sp,sp,-8
   50084:	dfc00115 	stw	ra,4(sp)
   50088:	df000015 	stw	fp,0(sp)
   5008c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   50090:	01440004 	movi	r5,4096
   50094:	0009883a 	mov	r4,zero
   50098:	0050aec0 	call	50aec <alt_icache_flush>
#endif
}
   5009c:	0001883a 	nop
   500a0:	e037883a 	mov	sp,fp
   500a4:	dfc00117 	ldw	ra,4(sp)
   500a8:	df000017 	ldw	fp,0(sp)
   500ac:	dec00204 	addi	sp,sp,8
   500b0:	f800283a 	ret

000500b4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   500b4:	defff904 	addi	sp,sp,-28
   500b8:	dfc00615 	stw	ra,24(sp)
   500bc:	df000515 	stw	fp,20(sp)
   500c0:	df000504 	addi	fp,sp,20
   500c4:	e13ffc15 	stw	r4,-16(fp)
   500c8:	e17ffd15 	stw	r5,-12(fp)
   500cc:	e1bffe15 	stw	r6,-8(fp)
   500d0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   500d4:	e0800217 	ldw	r2,8(fp)
   500d8:	d8800015 	stw	r2,0(sp)
   500dc:	e1ffff17 	ldw	r7,-4(fp)
   500e0:	e1bffe17 	ldw	r6,-8(fp)
   500e4:	e17ffd17 	ldw	r5,-12(fp)
   500e8:	e13ffc17 	ldw	r4,-16(fp)
   500ec:	00502640 	call	50264 <alt_iic_isr_register>
}  
   500f0:	e037883a 	mov	sp,fp
   500f4:	dfc00117 	ldw	ra,4(sp)
   500f8:	df000017 	ldw	fp,0(sp)
   500fc:	dec00204 	addi	sp,sp,8
   50100:	f800283a 	ret

00050104 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   50104:	defff904 	addi	sp,sp,-28
   50108:	df000615 	stw	fp,24(sp)
   5010c:	df000604 	addi	fp,sp,24
   50110:	e13ffe15 	stw	r4,-8(fp)
   50114:	e17fff15 	stw	r5,-4(fp)
   50118:	e0bfff17 	ldw	r2,-4(fp)
   5011c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50120:	0005303a 	rdctl	r2,status
   50124:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50128:	e0fffb17 	ldw	r3,-20(fp)
   5012c:	00bfff84 	movi	r2,-2
   50130:	1884703a 	and	r2,r3,r2
   50134:	1001703a 	wrctl	status,r2
  
  return context;
   50138:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   5013c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   50140:	00c00044 	movi	r3,1
   50144:	e0bffa17 	ldw	r2,-24(fp)
   50148:	1884983a 	sll	r2,r3,r2
   5014c:	1007883a 	mov	r3,r2
   50150:	d0a70117 	ldw	r2,-25596(gp)
   50154:	1884b03a 	or	r2,r3,r2
   50158:	d0a70115 	stw	r2,-25596(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   5015c:	d0a70117 	ldw	r2,-25596(gp)
   50160:	100170fa 	wrctl	ienable,r2
   50164:	e0bffc17 	ldw	r2,-16(fp)
   50168:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   5016c:	e0bffd17 	ldw	r2,-12(fp)
   50170:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   50174:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   50178:	0001883a 	nop
}
   5017c:	e037883a 	mov	sp,fp
   50180:	df000017 	ldw	fp,0(sp)
   50184:	dec00104 	addi	sp,sp,4
   50188:	f800283a 	ret

0005018c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   5018c:	defff904 	addi	sp,sp,-28
   50190:	df000615 	stw	fp,24(sp)
   50194:	df000604 	addi	fp,sp,24
   50198:	e13ffe15 	stw	r4,-8(fp)
   5019c:	e17fff15 	stw	r5,-4(fp)
   501a0:	e0bfff17 	ldw	r2,-4(fp)
   501a4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   501a8:	0005303a 	rdctl	r2,status
   501ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   501b0:	e0fffb17 	ldw	r3,-20(fp)
   501b4:	00bfff84 	movi	r2,-2
   501b8:	1884703a 	and	r2,r3,r2
   501bc:	1001703a 	wrctl	status,r2
  
  return context;
   501c0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   501c4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   501c8:	00c00044 	movi	r3,1
   501cc:	e0bffa17 	ldw	r2,-24(fp)
   501d0:	1884983a 	sll	r2,r3,r2
   501d4:	0084303a 	nor	r2,zero,r2
   501d8:	1007883a 	mov	r3,r2
   501dc:	d0a70117 	ldw	r2,-25596(gp)
   501e0:	1884703a 	and	r2,r3,r2
   501e4:	d0a70115 	stw	r2,-25596(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   501e8:	d0a70117 	ldw	r2,-25596(gp)
   501ec:	100170fa 	wrctl	ienable,r2
   501f0:	e0bffc17 	ldw	r2,-16(fp)
   501f4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   501f8:	e0bffd17 	ldw	r2,-12(fp)
   501fc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   50200:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   50204:	0001883a 	nop
}
   50208:	e037883a 	mov	sp,fp
   5020c:	df000017 	ldw	fp,0(sp)
   50210:	dec00104 	addi	sp,sp,4
   50214:	f800283a 	ret

00050218 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   50218:	defffc04 	addi	sp,sp,-16
   5021c:	df000315 	stw	fp,12(sp)
   50220:	df000304 	addi	fp,sp,12
   50224:	e13ffe15 	stw	r4,-8(fp)
   50228:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   5022c:	000530fa 	rdctl	r2,ienable
   50230:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   50234:	00c00044 	movi	r3,1
   50238:	e0bfff17 	ldw	r2,-4(fp)
   5023c:	1884983a 	sll	r2,r3,r2
   50240:	1007883a 	mov	r3,r2
   50244:	e0bffd17 	ldw	r2,-12(fp)
   50248:	1884703a 	and	r2,r3,r2
   5024c:	1004c03a 	cmpne	r2,r2,zero
   50250:	10803fcc 	andi	r2,r2,255
}
   50254:	e037883a 	mov	sp,fp
   50258:	df000017 	ldw	fp,0(sp)
   5025c:	dec00104 	addi	sp,sp,4
   50260:	f800283a 	ret

00050264 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   50264:	defff504 	addi	sp,sp,-44
   50268:	dfc00a15 	stw	ra,40(sp)
   5026c:	df000915 	stw	fp,36(sp)
   50270:	df000904 	addi	fp,sp,36
   50274:	e13ffc15 	stw	r4,-16(fp)
   50278:	e17ffd15 	stw	r5,-12(fp)
   5027c:	e1bffe15 	stw	r6,-8(fp)
   50280:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   50284:	00bffa84 	movi	r2,-22
   50288:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   5028c:	e0bffd17 	ldw	r2,-12(fp)
   50290:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   50294:	e0bff817 	ldw	r2,-32(fp)
   50298:	10800808 	cmpgei	r2,r2,32
   5029c:	1000271e 	bne	r2,zero,5033c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   502a0:	0005303a 	rdctl	r2,status
   502a4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   502a8:	e0fffb17 	ldw	r3,-20(fp)
   502ac:	00bfff84 	movi	r2,-2
   502b0:	1884703a 	and	r2,r3,r2
   502b4:	1001703a 	wrctl	status,r2
  
  return context;
   502b8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   502bc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   502c0:	00800174 	movhi	r2,5
   502c4:	10929c04 	addi	r2,r2,19056
   502c8:	e0fff817 	ldw	r3,-32(fp)
   502cc:	180690fa 	slli	r3,r3,3
   502d0:	10c5883a 	add	r2,r2,r3
   502d4:	e0fffe17 	ldw	r3,-8(fp)
   502d8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   502dc:	00800174 	movhi	r2,5
   502e0:	10929c04 	addi	r2,r2,19056
   502e4:	e0fff817 	ldw	r3,-32(fp)
   502e8:	180690fa 	slli	r3,r3,3
   502ec:	10c5883a 	add	r2,r2,r3
   502f0:	10800104 	addi	r2,r2,4
   502f4:	e0ffff17 	ldw	r3,-4(fp)
   502f8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   502fc:	e0bffe17 	ldw	r2,-8(fp)
   50300:	10000526 	beq	r2,zero,50318 <alt_iic_isr_register+0xb4>
   50304:	e0bff817 	ldw	r2,-32(fp)
   50308:	100b883a 	mov	r5,r2
   5030c:	e13ffc17 	ldw	r4,-16(fp)
   50310:	00501040 	call	50104 <alt_ic_irq_enable>
   50314:	00000406 	br	50328 <alt_iic_isr_register+0xc4>
   50318:	e0bff817 	ldw	r2,-32(fp)
   5031c:	100b883a 	mov	r5,r2
   50320:	e13ffc17 	ldw	r4,-16(fp)
   50324:	005018c0 	call	5018c <alt_ic_irq_disable>
   50328:	e0bff715 	stw	r2,-36(fp)
   5032c:	e0bffa17 	ldw	r2,-24(fp)
   50330:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50334:	e0bff917 	ldw	r2,-28(fp)
   50338:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   5033c:	e0bff717 	ldw	r2,-36(fp)
}
   50340:	e037883a 	mov	sp,fp
   50344:	dfc00117 	ldw	ra,4(sp)
   50348:	df000017 	ldw	fp,0(sp)
   5034c:	dec00204 	addi	sp,sp,8
   50350:	f800283a 	ret

00050354 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   50354:	defff904 	addi	sp,sp,-28
   50358:	dfc00615 	stw	ra,24(sp)
   5035c:	df000515 	stw	fp,20(sp)
   50360:	df000504 	addi	fp,sp,20
   50364:	e13ffc15 	stw	r4,-16(fp)
   50368:	e17ffd15 	stw	r5,-12(fp)
   5036c:	e1bffe15 	stw	r6,-8(fp)
   50370:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   50374:	e1bfff17 	ldw	r6,-4(fp)
   50378:	e17ffe17 	ldw	r5,-8(fp)
   5037c:	e13ffd17 	ldw	r4,-12(fp)
   50380:	00505940 	call	50594 <open>
   50384:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   50388:	e0bffb17 	ldw	r2,-20(fp)
   5038c:	10001c16 	blt	r2,zero,50400 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   50390:	00800174 	movhi	r2,5
   50394:	10871504 	addi	r2,r2,7252
   50398:	e0fffb17 	ldw	r3,-20(fp)
   5039c:	18c00324 	muli	r3,r3,12
   503a0:	10c5883a 	add	r2,r2,r3
   503a4:	10c00017 	ldw	r3,0(r2)
   503a8:	e0bffc17 	ldw	r2,-16(fp)
   503ac:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   503b0:	00800174 	movhi	r2,5
   503b4:	10871504 	addi	r2,r2,7252
   503b8:	e0fffb17 	ldw	r3,-20(fp)
   503bc:	18c00324 	muli	r3,r3,12
   503c0:	10c5883a 	add	r2,r2,r3
   503c4:	10800104 	addi	r2,r2,4
   503c8:	10c00017 	ldw	r3,0(r2)
   503cc:	e0bffc17 	ldw	r2,-16(fp)
   503d0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   503d4:	00800174 	movhi	r2,5
   503d8:	10871504 	addi	r2,r2,7252
   503dc:	e0fffb17 	ldw	r3,-20(fp)
   503e0:	18c00324 	muli	r3,r3,12
   503e4:	10c5883a 	add	r2,r2,r3
   503e8:	10800204 	addi	r2,r2,8
   503ec:	10c00017 	ldw	r3,0(r2)
   503f0:	e0bffc17 	ldw	r2,-16(fp)
   503f4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   503f8:	e13ffb17 	ldw	r4,-20(fp)
   503fc:	004ee680 	call	4ee68 <alt_release_fd>
  }
} 
   50400:	0001883a 	nop
   50404:	e037883a 	mov	sp,fp
   50408:	dfc00117 	ldw	ra,4(sp)
   5040c:	df000017 	ldw	fp,0(sp)
   50410:	dec00204 	addi	sp,sp,8
   50414:	f800283a 	ret

00050418 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   50418:	defffb04 	addi	sp,sp,-20
   5041c:	dfc00415 	stw	ra,16(sp)
   50420:	df000315 	stw	fp,12(sp)
   50424:	df000304 	addi	fp,sp,12
   50428:	e13ffd15 	stw	r4,-12(fp)
   5042c:	e17ffe15 	stw	r5,-8(fp)
   50430:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   50434:	01c07fc4 	movi	r7,511
   50438:	01800044 	movi	r6,1
   5043c:	e17ffd17 	ldw	r5,-12(fp)
   50440:	01000174 	movhi	r4,5
   50444:	21071804 	addi	r4,r4,7264
   50448:	00503540 	call	50354 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   5044c:	01c07fc4 	movi	r7,511
   50450:	000d883a 	mov	r6,zero
   50454:	e17ffe17 	ldw	r5,-8(fp)
   50458:	01000174 	movhi	r4,5
   5045c:	21071504 	addi	r4,r4,7252
   50460:	00503540 	call	50354 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   50464:	01c07fc4 	movi	r7,511
   50468:	01800044 	movi	r6,1
   5046c:	e17fff17 	ldw	r5,-4(fp)
   50470:	01000174 	movhi	r4,5
   50474:	21071b04 	addi	r4,r4,7276
   50478:	00503540 	call	50354 <alt_open_fd>
}  
   5047c:	0001883a 	nop
   50480:	e037883a 	mov	sp,fp
   50484:	dfc00117 	ldw	ra,4(sp)
   50488:	df000017 	ldw	fp,0(sp)
   5048c:	dec00204 	addi	sp,sp,8
   50490:	f800283a 	ret

00050494 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50494:	defffe04 	addi	sp,sp,-8
   50498:	dfc00115 	stw	ra,4(sp)
   5049c:	df000015 	stw	fp,0(sp)
   504a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   504a4:	d0a00b17 	ldw	r2,-32724(gp)
   504a8:	10000326 	beq	r2,zero,504b8 <alt_get_errno+0x24>
   504ac:	d0a00b17 	ldw	r2,-32724(gp)
   504b0:	103ee83a 	callr	r2
   504b4:	00000106 	br	504bc <alt_get_errno+0x28>
   504b8:	d0a6fd04 	addi	r2,gp,-25612
}
   504bc:	e037883a 	mov	sp,fp
   504c0:	dfc00117 	ldw	ra,4(sp)
   504c4:	df000017 	ldw	fp,0(sp)
   504c8:	dec00204 	addi	sp,sp,8
   504cc:	f800283a 	ret

000504d0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   504d0:	defffd04 	addi	sp,sp,-12
   504d4:	df000215 	stw	fp,8(sp)
   504d8:	df000204 	addi	fp,sp,8
   504dc:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   504e0:	e0bfff17 	ldw	r2,-4(fp)
   504e4:	10800217 	ldw	r2,8(r2)
   504e8:	10d00034 	orhi	r3,r2,16384
   504ec:	e0bfff17 	ldw	r2,-4(fp)
   504f0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   504f4:	e03ffe15 	stw	zero,-8(fp)
   504f8:	00001d06 	br	50570 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   504fc:	00800174 	movhi	r2,5
   50500:	10871504 	addi	r2,r2,7252
   50504:	e0fffe17 	ldw	r3,-8(fp)
   50508:	18c00324 	muli	r3,r3,12
   5050c:	10c5883a 	add	r2,r2,r3
   50510:	10c00017 	ldw	r3,0(r2)
   50514:	e0bfff17 	ldw	r2,-4(fp)
   50518:	10800017 	ldw	r2,0(r2)
   5051c:	1880111e 	bne	r3,r2,50564 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   50520:	00800174 	movhi	r2,5
   50524:	10871504 	addi	r2,r2,7252
   50528:	e0fffe17 	ldw	r3,-8(fp)
   5052c:	18c00324 	muli	r3,r3,12
   50530:	10c5883a 	add	r2,r2,r3
   50534:	10800204 	addi	r2,r2,8
   50538:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   5053c:	1000090e 	bge	r2,zero,50564 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   50540:	e0bffe17 	ldw	r2,-8(fp)
   50544:	10c00324 	muli	r3,r2,12
   50548:	00800174 	movhi	r2,5
   5054c:	10871504 	addi	r2,r2,7252
   50550:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   50554:	e0bfff17 	ldw	r2,-4(fp)
   50558:	18800226 	beq	r3,r2,50564 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   5055c:	00bffcc4 	movi	r2,-13
   50560:	00000806 	br	50584 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   50564:	e0bffe17 	ldw	r2,-8(fp)
   50568:	10800044 	addi	r2,r2,1
   5056c:	e0bffe15 	stw	r2,-8(fp)
   50570:	d0a00a17 	ldw	r2,-32728(gp)
   50574:	1007883a 	mov	r3,r2
   50578:	e0bffe17 	ldw	r2,-8(fp)
   5057c:	18bfdf2e 	bgeu	r3,r2,504fc <__alt_data_end+0xfffd04fc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   50580:	0005883a 	mov	r2,zero
}
   50584:	e037883a 	mov	sp,fp
   50588:	df000017 	ldw	fp,0(sp)
   5058c:	dec00104 	addi	sp,sp,4
   50590:	f800283a 	ret

00050594 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   50594:	defff604 	addi	sp,sp,-40
   50598:	dfc00915 	stw	ra,36(sp)
   5059c:	df000815 	stw	fp,32(sp)
   505a0:	df000804 	addi	fp,sp,32
   505a4:	e13ffd15 	stw	r4,-12(fp)
   505a8:	e17ffe15 	stw	r5,-8(fp)
   505ac:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   505b0:	00bfffc4 	movi	r2,-1
   505b4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   505b8:	00bffb44 	movi	r2,-19
   505bc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   505c0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   505c4:	d1600804 	addi	r5,gp,-32736
   505c8:	e13ffd17 	ldw	r4,-12(fp)
   505cc:	00508b00 	call	508b0 <alt_find_dev>
   505d0:	e0bff815 	stw	r2,-32(fp)
   505d4:	e0bff817 	ldw	r2,-32(fp)
   505d8:	1000051e 	bne	r2,zero,505f0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   505dc:	e13ffd17 	ldw	r4,-12(fp)
   505e0:	00509400 	call	50940 <alt_find_file>
   505e4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   505e8:	00800044 	movi	r2,1
   505ec:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   505f0:	e0bff817 	ldw	r2,-32(fp)
   505f4:	10002926 	beq	r2,zero,5069c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   505f8:	e13ff817 	ldw	r4,-32(fp)
   505fc:	0050a480 	call	50a48 <alt_get_fd>
   50600:	e0bff915 	stw	r2,-28(fp)
   50604:	e0bff917 	ldw	r2,-28(fp)
   50608:	1000030e 	bge	r2,zero,50618 <open+0x84>
    {
      status = index;
   5060c:	e0bff917 	ldw	r2,-28(fp)
   50610:	e0bffa15 	stw	r2,-24(fp)
   50614:	00002306 	br	506a4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   50618:	e0bff917 	ldw	r2,-28(fp)
   5061c:	10c00324 	muli	r3,r2,12
   50620:	00800174 	movhi	r2,5
   50624:	10871504 	addi	r2,r2,7252
   50628:	1885883a 	add	r2,r3,r2
   5062c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   50630:	e0fffe17 	ldw	r3,-8(fp)
   50634:	00900034 	movhi	r2,16384
   50638:	10bfffc4 	addi	r2,r2,-1
   5063c:	1886703a 	and	r3,r3,r2
   50640:	e0bffc17 	ldw	r2,-16(fp)
   50644:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   50648:	e0bffb17 	ldw	r2,-20(fp)
   5064c:	1000051e 	bne	r2,zero,50664 <open+0xd0>
   50650:	e13ffc17 	ldw	r4,-16(fp)
   50654:	00504d00 	call	504d0 <alt_file_locked>
   50658:	e0bffa15 	stw	r2,-24(fp)
   5065c:	e0bffa17 	ldw	r2,-24(fp)
   50660:	10001016 	blt	r2,zero,506a4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   50664:	e0bff817 	ldw	r2,-32(fp)
   50668:	10800317 	ldw	r2,12(r2)
   5066c:	10000826 	beq	r2,zero,50690 <open+0xfc>
   50670:	e0bff817 	ldw	r2,-32(fp)
   50674:	10800317 	ldw	r2,12(r2)
   50678:	e1ffff17 	ldw	r7,-4(fp)
   5067c:	e1bffe17 	ldw	r6,-8(fp)
   50680:	e17ffd17 	ldw	r5,-12(fp)
   50684:	e13ffc17 	ldw	r4,-16(fp)
   50688:	103ee83a 	callr	r2
   5068c:	00000106 	br	50694 <open+0x100>
   50690:	0005883a 	mov	r2,zero
   50694:	e0bffa15 	stw	r2,-24(fp)
   50698:	00000206 	br	506a4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   5069c:	00bffb44 	movi	r2,-19
   506a0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   506a4:	e0bffa17 	ldw	r2,-24(fp)
   506a8:	1000090e 	bge	r2,zero,506d0 <open+0x13c>
  {
    alt_release_fd (index);  
   506ac:	e13ff917 	ldw	r4,-28(fp)
   506b0:	004ee680 	call	4ee68 <alt_release_fd>
    ALT_ERRNO = -status;
   506b4:	00504940 	call	50494 <alt_get_errno>
   506b8:	1007883a 	mov	r3,r2
   506bc:	e0bffa17 	ldw	r2,-24(fp)
   506c0:	0085c83a 	sub	r2,zero,r2
   506c4:	18800015 	stw	r2,0(r3)
    return -1;
   506c8:	00bfffc4 	movi	r2,-1
   506cc:	00000106 	br	506d4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   506d0:	e0bff917 	ldw	r2,-28(fp)
}
   506d4:	e037883a 	mov	sp,fp
   506d8:	dfc00117 	ldw	ra,4(sp)
   506dc:	df000017 	ldw	fp,0(sp)
   506e0:	dec00204 	addi	sp,sp,8
   506e4:	f800283a 	ret

000506e8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   506e8:	defffa04 	addi	sp,sp,-24
   506ec:	df000515 	stw	fp,20(sp)
   506f0:	df000504 	addi	fp,sp,20
   506f4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   506f8:	0005303a 	rdctl	r2,status
   506fc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50700:	e0fffc17 	ldw	r3,-16(fp)
   50704:	00bfff84 	movi	r2,-2
   50708:	1884703a 	and	r2,r3,r2
   5070c:	1001703a 	wrctl	status,r2
  
  return context;
   50710:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   50714:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   50718:	e0bfff17 	ldw	r2,-4(fp)
   5071c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   50720:	e0bffd17 	ldw	r2,-12(fp)
   50724:	10800017 	ldw	r2,0(r2)
   50728:	e0fffd17 	ldw	r3,-12(fp)
   5072c:	18c00117 	ldw	r3,4(r3)
   50730:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   50734:	e0bffd17 	ldw	r2,-12(fp)
   50738:	10800117 	ldw	r2,4(r2)
   5073c:	e0fffd17 	ldw	r3,-12(fp)
   50740:	18c00017 	ldw	r3,0(r3)
   50744:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   50748:	e0bffd17 	ldw	r2,-12(fp)
   5074c:	e0fffd17 	ldw	r3,-12(fp)
   50750:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   50754:	e0bffd17 	ldw	r2,-12(fp)
   50758:	e0fffd17 	ldw	r3,-12(fp)
   5075c:	10c00015 	stw	r3,0(r2)
   50760:	e0bffb17 	ldw	r2,-20(fp)
   50764:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50768:	e0bffe17 	ldw	r2,-8(fp)
   5076c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   50770:	0001883a 	nop
   50774:	e037883a 	mov	sp,fp
   50778:	df000017 	ldw	fp,0(sp)
   5077c:	dec00104 	addi	sp,sp,4
   50780:	f800283a 	ret

00050784 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   50784:	defffb04 	addi	sp,sp,-20
   50788:	dfc00415 	stw	ra,16(sp)
   5078c:	df000315 	stw	fp,12(sp)
   50790:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   50794:	d0a00e17 	ldw	r2,-32712(gp)
   50798:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   5079c:	d0a70317 	ldw	r2,-25588(gp)
   507a0:	10800044 	addi	r2,r2,1
   507a4:	d0a70315 	stw	r2,-25588(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   507a8:	00002e06 	br	50864 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   507ac:	e0bffd17 	ldw	r2,-12(fp)
   507b0:	10800017 	ldw	r2,0(r2)
   507b4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   507b8:	e0bffd17 	ldw	r2,-12(fp)
   507bc:	10800403 	ldbu	r2,16(r2)
   507c0:	10803fcc 	andi	r2,r2,255
   507c4:	10000426 	beq	r2,zero,507d8 <alt_tick+0x54>
   507c8:	d0a70317 	ldw	r2,-25588(gp)
   507cc:	1000021e 	bne	r2,zero,507d8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   507d0:	e0bffd17 	ldw	r2,-12(fp)
   507d4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   507d8:	e0bffd17 	ldw	r2,-12(fp)
   507dc:	10800217 	ldw	r2,8(r2)
   507e0:	d0e70317 	ldw	r3,-25588(gp)
   507e4:	18801d36 	bltu	r3,r2,5085c <alt_tick+0xd8>
   507e8:	e0bffd17 	ldw	r2,-12(fp)
   507ec:	10800403 	ldbu	r2,16(r2)
   507f0:	10803fcc 	andi	r2,r2,255
   507f4:	1000191e 	bne	r2,zero,5085c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   507f8:	e0bffd17 	ldw	r2,-12(fp)
   507fc:	10800317 	ldw	r2,12(r2)
   50800:	e0fffd17 	ldw	r3,-12(fp)
   50804:	18c00517 	ldw	r3,20(r3)
   50808:	1809883a 	mov	r4,r3
   5080c:	103ee83a 	callr	r2
   50810:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   50814:	e0bfff17 	ldw	r2,-4(fp)
   50818:	1000031e 	bne	r2,zero,50828 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   5081c:	e13ffd17 	ldw	r4,-12(fp)
   50820:	00506e80 	call	506e8 <alt_alarm_stop>
   50824:	00000d06 	br	5085c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   50828:	e0bffd17 	ldw	r2,-12(fp)
   5082c:	10c00217 	ldw	r3,8(r2)
   50830:	e0bfff17 	ldw	r2,-4(fp)
   50834:	1887883a 	add	r3,r3,r2
   50838:	e0bffd17 	ldw	r2,-12(fp)
   5083c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   50840:	e0bffd17 	ldw	r2,-12(fp)
   50844:	10c00217 	ldw	r3,8(r2)
   50848:	d0a70317 	ldw	r2,-25588(gp)
   5084c:	1880032e 	bgeu	r3,r2,5085c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   50850:	e0bffd17 	ldw	r2,-12(fp)
   50854:	00c00044 	movi	r3,1
   50858:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   5085c:	e0bffe17 	ldw	r2,-8(fp)
   50860:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   50864:	e0fffd17 	ldw	r3,-12(fp)
   50868:	d0a00e04 	addi	r2,gp,-32712
   5086c:	18bfcf1e 	bne	r3,r2,507ac <__alt_data_end+0xfffd07ac>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   50870:	0001883a 	nop
}
   50874:	0001883a 	nop
   50878:	e037883a 	mov	sp,fp
   5087c:	dfc00117 	ldw	ra,4(sp)
   50880:	df000017 	ldw	fp,0(sp)
   50884:	dec00204 	addi	sp,sp,8
   50888:	f800283a 	ret

0005088c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   5088c:	deffff04 	addi	sp,sp,-4
   50890:	df000015 	stw	fp,0(sp)
   50894:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   50898:	000170fa 	wrctl	ienable,zero
}
   5089c:	0001883a 	nop
   508a0:	e037883a 	mov	sp,fp
   508a4:	df000017 	ldw	fp,0(sp)
   508a8:	dec00104 	addi	sp,sp,4
   508ac:	f800283a 	ret

000508b0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   508b0:	defffa04 	addi	sp,sp,-24
   508b4:	dfc00515 	stw	ra,20(sp)
   508b8:	df000415 	stw	fp,16(sp)
   508bc:	df000404 	addi	fp,sp,16
   508c0:	e13ffe15 	stw	r4,-8(fp)
   508c4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   508c8:	e0bfff17 	ldw	r2,-4(fp)
   508cc:	10800017 	ldw	r2,0(r2)
   508d0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   508d4:	e13ffe17 	ldw	r4,-8(fp)
   508d8:	0049aec0 	call	49aec <strlen>
   508dc:	10800044 	addi	r2,r2,1
   508e0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   508e4:	00000d06 	br	5091c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   508e8:	e0bffc17 	ldw	r2,-16(fp)
   508ec:	10800217 	ldw	r2,8(r2)
   508f0:	e0fffd17 	ldw	r3,-12(fp)
   508f4:	180d883a 	mov	r6,r3
   508f8:	e17ffe17 	ldw	r5,-8(fp)
   508fc:	1009883a 	mov	r4,r2
   50900:	0050c640 	call	50c64 <memcmp>
   50904:	1000021e 	bne	r2,zero,50910 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   50908:	e0bffc17 	ldw	r2,-16(fp)
   5090c:	00000706 	br	5092c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   50910:	e0bffc17 	ldw	r2,-16(fp)
   50914:	10800017 	ldw	r2,0(r2)
   50918:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   5091c:	e0fffc17 	ldw	r3,-16(fp)
   50920:	e0bfff17 	ldw	r2,-4(fp)
   50924:	18bff01e 	bne	r3,r2,508e8 <__alt_data_end+0xfffd08e8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   50928:	0005883a 	mov	r2,zero
}
   5092c:	e037883a 	mov	sp,fp
   50930:	dfc00117 	ldw	ra,4(sp)
   50934:	df000017 	ldw	fp,0(sp)
   50938:	dec00204 	addi	sp,sp,8
   5093c:	f800283a 	ret

00050940 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   50940:	defffb04 	addi	sp,sp,-20
   50944:	dfc00415 	stw	ra,16(sp)
   50948:	df000315 	stw	fp,12(sp)
   5094c:	df000304 	addi	fp,sp,12
   50950:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   50954:	d0a00617 	ldw	r2,-32744(gp)
   50958:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   5095c:	00003106 	br	50a24 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   50960:	e0bffd17 	ldw	r2,-12(fp)
   50964:	10800217 	ldw	r2,8(r2)
   50968:	1009883a 	mov	r4,r2
   5096c:	0049aec0 	call	49aec <strlen>
   50970:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   50974:	e0bffd17 	ldw	r2,-12(fp)
   50978:	10c00217 	ldw	r3,8(r2)
   5097c:	e0bffe17 	ldw	r2,-8(fp)
   50980:	10bfffc4 	addi	r2,r2,-1
   50984:	1885883a 	add	r2,r3,r2
   50988:	10800003 	ldbu	r2,0(r2)
   5098c:	10803fcc 	andi	r2,r2,255
   50990:	1080201c 	xori	r2,r2,128
   50994:	10bfe004 	addi	r2,r2,-128
   50998:	10800bd8 	cmpnei	r2,r2,47
   5099c:	1000031e 	bne	r2,zero,509ac <alt_find_file+0x6c>
    {
      len -= 1;
   509a0:	e0bffe17 	ldw	r2,-8(fp)
   509a4:	10bfffc4 	addi	r2,r2,-1
   509a8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   509ac:	e0bffe17 	ldw	r2,-8(fp)
   509b0:	e0ffff17 	ldw	r3,-4(fp)
   509b4:	1885883a 	add	r2,r3,r2
   509b8:	10800003 	ldbu	r2,0(r2)
   509bc:	10803fcc 	andi	r2,r2,255
   509c0:	1080201c 	xori	r2,r2,128
   509c4:	10bfe004 	addi	r2,r2,-128
   509c8:	10800be0 	cmpeqi	r2,r2,47
   509cc:	1000081e 	bne	r2,zero,509f0 <alt_find_file+0xb0>
   509d0:	e0bffe17 	ldw	r2,-8(fp)
   509d4:	e0ffff17 	ldw	r3,-4(fp)
   509d8:	1885883a 	add	r2,r3,r2
   509dc:	10800003 	ldbu	r2,0(r2)
   509e0:	10803fcc 	andi	r2,r2,255
   509e4:	1080201c 	xori	r2,r2,128
   509e8:	10bfe004 	addi	r2,r2,-128
   509ec:	10000a1e 	bne	r2,zero,50a18 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   509f0:	e0bffd17 	ldw	r2,-12(fp)
   509f4:	10800217 	ldw	r2,8(r2)
   509f8:	e0fffe17 	ldw	r3,-8(fp)
   509fc:	180d883a 	mov	r6,r3
   50a00:	e17fff17 	ldw	r5,-4(fp)
   50a04:	1009883a 	mov	r4,r2
   50a08:	0050c640 	call	50c64 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   50a0c:	1000021e 	bne	r2,zero,50a18 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   50a10:	e0bffd17 	ldw	r2,-12(fp)
   50a14:	00000706 	br	50a34 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   50a18:	e0bffd17 	ldw	r2,-12(fp)
   50a1c:	10800017 	ldw	r2,0(r2)
   50a20:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   50a24:	e0fffd17 	ldw	r3,-12(fp)
   50a28:	d0a00604 	addi	r2,gp,-32744
   50a2c:	18bfcc1e 	bne	r3,r2,50960 <__alt_data_end+0xfffd0960>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   50a30:	0005883a 	mov	r2,zero
}
   50a34:	e037883a 	mov	sp,fp
   50a38:	dfc00117 	ldw	ra,4(sp)
   50a3c:	df000017 	ldw	fp,0(sp)
   50a40:	dec00204 	addi	sp,sp,8
   50a44:	f800283a 	ret

00050a48 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   50a48:	defffc04 	addi	sp,sp,-16
   50a4c:	df000315 	stw	fp,12(sp)
   50a50:	df000304 	addi	fp,sp,12
   50a54:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   50a58:	00bffa04 	movi	r2,-24
   50a5c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   50a60:	e03ffd15 	stw	zero,-12(fp)
   50a64:	00001906 	br	50acc <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   50a68:	00800174 	movhi	r2,5
   50a6c:	10871504 	addi	r2,r2,7252
   50a70:	e0fffd17 	ldw	r3,-12(fp)
   50a74:	18c00324 	muli	r3,r3,12
   50a78:	10c5883a 	add	r2,r2,r3
   50a7c:	10800017 	ldw	r2,0(r2)
   50a80:	10000f1e 	bne	r2,zero,50ac0 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   50a84:	00800174 	movhi	r2,5
   50a88:	10871504 	addi	r2,r2,7252
   50a8c:	e0fffd17 	ldw	r3,-12(fp)
   50a90:	18c00324 	muli	r3,r3,12
   50a94:	10c5883a 	add	r2,r2,r3
   50a98:	e0ffff17 	ldw	r3,-4(fp)
   50a9c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   50aa0:	d0e00a17 	ldw	r3,-32728(gp)
   50aa4:	e0bffd17 	ldw	r2,-12(fp)
   50aa8:	1880020e 	bge	r3,r2,50ab4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   50aac:	e0bffd17 	ldw	r2,-12(fp)
   50ab0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   50ab4:	e0bffd17 	ldw	r2,-12(fp)
   50ab8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   50abc:	00000606 	br	50ad8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   50ac0:	e0bffd17 	ldw	r2,-12(fp)
   50ac4:	10800044 	addi	r2,r2,1
   50ac8:	e0bffd15 	stw	r2,-12(fp)
   50acc:	e0bffd17 	ldw	r2,-12(fp)
   50ad0:	10800810 	cmplti	r2,r2,32
   50ad4:	103fe41e 	bne	r2,zero,50a68 <__alt_data_end+0xfffd0a68>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   50ad8:	e0bffe17 	ldw	r2,-8(fp)
}
   50adc:	e037883a 	mov	sp,fp
   50ae0:	df000017 	ldw	fp,0(sp)
   50ae4:	dec00104 	addi	sp,sp,4
   50ae8:	f800283a 	ret

00050aec <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   50aec:	defffb04 	addi	sp,sp,-20
   50af0:	df000415 	stw	fp,16(sp)
   50af4:	df000404 	addi	fp,sp,16
   50af8:	e13ffe15 	stw	r4,-8(fp)
   50afc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   50b00:	e0bfff17 	ldw	r2,-4(fp)
   50b04:	10840070 	cmpltui	r2,r2,4097
   50b08:	1000021e 	bne	r2,zero,50b14 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   50b0c:	00840004 	movi	r2,4096
   50b10:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   50b14:	e0fffe17 	ldw	r3,-8(fp)
   50b18:	e0bfff17 	ldw	r2,-4(fp)
   50b1c:	1885883a 	add	r2,r3,r2
   50b20:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   50b24:	e0bffe17 	ldw	r2,-8(fp)
   50b28:	e0bffc15 	stw	r2,-16(fp)
   50b2c:	00000506 	br	50b44 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   50b30:	e0bffc17 	ldw	r2,-16(fp)
   50b34:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   50b38:	e0bffc17 	ldw	r2,-16(fp)
   50b3c:	10800804 	addi	r2,r2,32
   50b40:	e0bffc15 	stw	r2,-16(fp)
   50b44:	e0fffc17 	ldw	r3,-16(fp)
   50b48:	e0bffd17 	ldw	r2,-12(fp)
   50b4c:	18bff836 	bltu	r3,r2,50b30 <__alt_data_end+0xfffd0b30>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   50b50:	e0bffe17 	ldw	r2,-8(fp)
   50b54:	108007cc 	andi	r2,r2,31
   50b58:	10000226 	beq	r2,zero,50b64 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   50b5c:	e0bffc17 	ldw	r2,-16(fp)
   50b60:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   50b64:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   50b68:	0001883a 	nop
   50b6c:	e037883a 	mov	sp,fp
   50b70:	df000017 	ldw	fp,0(sp)
   50b74:	dec00104 	addi	sp,sp,4
   50b78:	f800283a 	ret

00050b7c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   50b7c:	defffe04 	addi	sp,sp,-8
   50b80:	df000115 	stw	fp,4(sp)
   50b84:	df000104 	addi	fp,sp,4
   50b88:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   50b8c:	e0bfff17 	ldw	r2,-4(fp)
   50b90:	10bffe84 	addi	r2,r2,-6
   50b94:	10c00428 	cmpgeui	r3,r2,16
   50b98:	18001a1e 	bne	r3,zero,50c04 <alt_exception_cause_generated_bad_addr+0x88>
   50b9c:	100690ba 	slli	r3,r2,2
   50ba0:	00800174 	movhi	r2,5
   50ba4:	1082ed04 	addi	r2,r2,2996
   50ba8:	1885883a 	add	r2,r3,r2
   50bac:	10800017 	ldw	r2,0(r2)
   50bb0:	1000683a 	jmp	r2
   50bb4:	00050bf4 	movhi	zero,5167
   50bb8:	00050bf4 	movhi	zero,5167
   50bbc:	00050c04 	movi	zero,5168
   50bc0:	00050c04 	movi	zero,5168
   50bc4:	00050c04 	movi	zero,5168
   50bc8:	00050bf4 	movhi	zero,5167
   50bcc:	00050bfc 	xorhi	zero,zero,5167
   50bd0:	00050c04 	movi	zero,5168
   50bd4:	00050bf4 	movhi	zero,5167
   50bd8:	00050bf4 	movhi	zero,5167
   50bdc:	00050c04 	movi	zero,5168
   50be0:	00050bf4 	movhi	zero,5167
   50be4:	00050bfc 	xorhi	zero,zero,5167
   50be8:	00050c04 	movi	zero,5168
   50bec:	00050c04 	movi	zero,5168
   50bf0:	00050bf4 	movhi	zero,5167
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   50bf4:	00800044 	movi	r2,1
   50bf8:	00000306 	br	50c08 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   50bfc:	0005883a 	mov	r2,zero
   50c00:	00000106 	br	50c08 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   50c04:	0005883a 	mov	r2,zero
  }
}
   50c08:	e037883a 	mov	sp,fp
   50c0c:	df000017 	ldw	fp,0(sp)
   50c10:	dec00104 	addi	sp,sp,4
   50c14:	f800283a 	ret

00050c18 <atexit>:
   50c18:	200b883a 	mov	r5,r4
   50c1c:	000f883a 	mov	r7,zero
   50c20:	000d883a 	mov	r6,zero
   50c24:	0009883a 	mov	r4,zero
   50c28:	0050ce01 	jmpi	50ce0 <__register_exitproc>

00050c2c <exit>:
   50c2c:	defffe04 	addi	sp,sp,-8
   50c30:	000b883a 	mov	r5,zero
   50c34:	dc000015 	stw	r16,0(sp)
   50c38:	dfc00115 	stw	ra,4(sp)
   50c3c:	2021883a 	mov	r16,r4
   50c40:	0050df80 	call	50df8 <__call_exitprocs>
   50c44:	00800174 	movhi	r2,5
   50c48:	108b8d04 	addi	r2,r2,11828
   50c4c:	11000017 	ldw	r4,0(r2)
   50c50:	20800f17 	ldw	r2,60(r4)
   50c54:	10000126 	beq	r2,zero,50c5c <exit+0x30>
   50c58:	103ee83a 	callr	r2
   50c5c:	8009883a 	mov	r4,r16
   50c60:	0050f780 	call	50f78 <_exit>

00050c64 <memcmp>:
   50c64:	01c000c4 	movi	r7,3
   50c68:	3980192e 	bgeu	r7,r6,50cd0 <memcmp+0x6c>
   50c6c:	2144b03a 	or	r2,r4,r5
   50c70:	11c4703a 	and	r2,r2,r7
   50c74:	10000f26 	beq	r2,zero,50cb4 <memcmp+0x50>
   50c78:	20800003 	ldbu	r2,0(r4)
   50c7c:	28c00003 	ldbu	r3,0(r5)
   50c80:	10c0151e 	bne	r2,r3,50cd8 <memcmp+0x74>
   50c84:	31bfff84 	addi	r6,r6,-2
   50c88:	01ffffc4 	movi	r7,-1
   50c8c:	00000406 	br	50ca0 <memcmp+0x3c>
   50c90:	20800003 	ldbu	r2,0(r4)
   50c94:	28c00003 	ldbu	r3,0(r5)
   50c98:	31bfffc4 	addi	r6,r6,-1
   50c9c:	10c00e1e 	bne	r2,r3,50cd8 <memcmp+0x74>
   50ca0:	21000044 	addi	r4,r4,1
   50ca4:	29400044 	addi	r5,r5,1
   50ca8:	31fff91e 	bne	r6,r7,50c90 <__alt_data_end+0xfffd0c90>
   50cac:	0005883a 	mov	r2,zero
   50cb0:	f800283a 	ret
   50cb4:	20c00017 	ldw	r3,0(r4)
   50cb8:	28800017 	ldw	r2,0(r5)
   50cbc:	18bfee1e 	bne	r3,r2,50c78 <__alt_data_end+0xfffd0c78>
   50cc0:	31bfff04 	addi	r6,r6,-4
   50cc4:	21000104 	addi	r4,r4,4
   50cc8:	29400104 	addi	r5,r5,4
   50ccc:	39bff936 	bltu	r7,r6,50cb4 <__alt_data_end+0xfffd0cb4>
   50cd0:	303fe91e 	bne	r6,zero,50c78 <__alt_data_end+0xfffd0c78>
   50cd4:	003ff506 	br	50cac <__alt_data_end+0xfffd0cac>
   50cd8:	10c5c83a 	sub	r2,r2,r3
   50cdc:	f800283a 	ret

00050ce0 <__register_exitproc>:
   50ce0:	defffa04 	addi	sp,sp,-24
   50ce4:	dc000315 	stw	r16,12(sp)
   50ce8:	04000174 	movhi	r16,5
   50cec:	840b8d04 	addi	r16,r16,11828
   50cf0:	80c00017 	ldw	r3,0(r16)
   50cf4:	dc400415 	stw	r17,16(sp)
   50cf8:	dfc00515 	stw	ra,20(sp)
   50cfc:	18805217 	ldw	r2,328(r3)
   50d00:	2023883a 	mov	r17,r4
   50d04:	10003726 	beq	r2,zero,50de4 <__register_exitproc+0x104>
   50d08:	10c00117 	ldw	r3,4(r2)
   50d0c:	010007c4 	movi	r4,31
   50d10:	20c00e16 	blt	r4,r3,50d4c <__register_exitproc+0x6c>
   50d14:	1a000044 	addi	r8,r3,1
   50d18:	8800221e 	bne	r17,zero,50da4 <__register_exitproc+0xc4>
   50d1c:	18c00084 	addi	r3,r3,2
   50d20:	18c7883a 	add	r3,r3,r3
   50d24:	18c7883a 	add	r3,r3,r3
   50d28:	12000115 	stw	r8,4(r2)
   50d2c:	10c7883a 	add	r3,r2,r3
   50d30:	19400015 	stw	r5,0(r3)
   50d34:	0005883a 	mov	r2,zero
   50d38:	dfc00517 	ldw	ra,20(sp)
   50d3c:	dc400417 	ldw	r17,16(sp)
   50d40:	dc000317 	ldw	r16,12(sp)
   50d44:	dec00604 	addi	sp,sp,24
   50d48:	f800283a 	ret
   50d4c:	00800034 	movhi	r2,0
   50d50:	10800004 	addi	r2,r2,0
   50d54:	10002626 	beq	r2,zero,50df0 <__register_exitproc+0x110>
   50d58:	01006404 	movi	r4,400
   50d5c:	d9400015 	stw	r5,0(sp)
   50d60:	d9800115 	stw	r6,4(sp)
   50d64:	d9c00215 	stw	r7,8(sp)
   50d68:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   50d6c:	d9400017 	ldw	r5,0(sp)
   50d70:	d9800117 	ldw	r6,4(sp)
   50d74:	d9c00217 	ldw	r7,8(sp)
   50d78:	10001d26 	beq	r2,zero,50df0 <__register_exitproc+0x110>
   50d7c:	81000017 	ldw	r4,0(r16)
   50d80:	10000115 	stw	zero,4(r2)
   50d84:	02000044 	movi	r8,1
   50d88:	22405217 	ldw	r9,328(r4)
   50d8c:	0007883a 	mov	r3,zero
   50d90:	12400015 	stw	r9,0(r2)
   50d94:	20805215 	stw	r2,328(r4)
   50d98:	10006215 	stw	zero,392(r2)
   50d9c:	10006315 	stw	zero,396(r2)
   50da0:	883fde26 	beq	r17,zero,50d1c <__alt_data_end+0xfffd0d1c>
   50da4:	18c9883a 	add	r4,r3,r3
   50da8:	2109883a 	add	r4,r4,r4
   50dac:	1109883a 	add	r4,r2,r4
   50db0:	21802215 	stw	r6,136(r4)
   50db4:	01800044 	movi	r6,1
   50db8:	12406217 	ldw	r9,392(r2)
   50dbc:	30cc983a 	sll	r6,r6,r3
   50dc0:	4992b03a 	or	r9,r9,r6
   50dc4:	12406215 	stw	r9,392(r2)
   50dc8:	21c04215 	stw	r7,264(r4)
   50dcc:	01000084 	movi	r4,2
   50dd0:	893fd21e 	bne	r17,r4,50d1c <__alt_data_end+0xfffd0d1c>
   50dd4:	11006317 	ldw	r4,396(r2)
   50dd8:	218cb03a 	or	r6,r4,r6
   50ddc:	11806315 	stw	r6,396(r2)
   50de0:	003fce06 	br	50d1c <__alt_data_end+0xfffd0d1c>
   50de4:	18805304 	addi	r2,r3,332
   50de8:	18805215 	stw	r2,328(r3)
   50dec:	003fc606 	br	50d08 <__alt_data_end+0xfffd0d08>
   50df0:	00bfffc4 	movi	r2,-1
   50df4:	003fd006 	br	50d38 <__alt_data_end+0xfffd0d38>

00050df8 <__call_exitprocs>:
   50df8:	defff504 	addi	sp,sp,-44
   50dfc:	df000915 	stw	fp,36(sp)
   50e00:	dd400615 	stw	r21,24(sp)
   50e04:	dc800315 	stw	r18,12(sp)
   50e08:	dfc00a15 	stw	ra,40(sp)
   50e0c:	ddc00815 	stw	r23,32(sp)
   50e10:	dd800715 	stw	r22,28(sp)
   50e14:	dd000515 	stw	r20,20(sp)
   50e18:	dcc00415 	stw	r19,16(sp)
   50e1c:	dc400215 	stw	r17,8(sp)
   50e20:	dc000115 	stw	r16,4(sp)
   50e24:	d9000015 	stw	r4,0(sp)
   50e28:	2839883a 	mov	fp,r5
   50e2c:	04800044 	movi	r18,1
   50e30:	057fffc4 	movi	r21,-1
   50e34:	00800174 	movhi	r2,5
   50e38:	108b8d04 	addi	r2,r2,11828
   50e3c:	12000017 	ldw	r8,0(r2)
   50e40:	45005217 	ldw	r20,328(r8)
   50e44:	44c05204 	addi	r19,r8,328
   50e48:	a0001c26 	beq	r20,zero,50ebc <__call_exitprocs+0xc4>
   50e4c:	a0800117 	ldw	r2,4(r20)
   50e50:	15ffffc4 	addi	r23,r2,-1
   50e54:	b8000d16 	blt	r23,zero,50e8c <__call_exitprocs+0x94>
   50e58:	14000044 	addi	r16,r2,1
   50e5c:	8421883a 	add	r16,r16,r16
   50e60:	8421883a 	add	r16,r16,r16
   50e64:	84402004 	addi	r17,r16,128
   50e68:	a463883a 	add	r17,r20,r17
   50e6c:	a421883a 	add	r16,r20,r16
   50e70:	e0001e26 	beq	fp,zero,50eec <__call_exitprocs+0xf4>
   50e74:	80804017 	ldw	r2,256(r16)
   50e78:	e0801c26 	beq	fp,r2,50eec <__call_exitprocs+0xf4>
   50e7c:	bdffffc4 	addi	r23,r23,-1
   50e80:	843fff04 	addi	r16,r16,-4
   50e84:	8c7fff04 	addi	r17,r17,-4
   50e88:	bd7ff91e 	bne	r23,r21,50e70 <__alt_data_end+0xfffd0e70>
   50e8c:	00800034 	movhi	r2,0
   50e90:	10800004 	addi	r2,r2,0
   50e94:	10000926 	beq	r2,zero,50ebc <__call_exitprocs+0xc4>
   50e98:	a0800117 	ldw	r2,4(r20)
   50e9c:	1000301e 	bne	r2,zero,50f60 <__call_exitprocs+0x168>
   50ea0:	a0800017 	ldw	r2,0(r20)
   50ea4:	10003226 	beq	r2,zero,50f70 <__call_exitprocs+0x178>
   50ea8:	a009883a 	mov	r4,r20
   50eac:	98800015 	stw	r2,0(r19)
   50eb0:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   50eb4:	9d000017 	ldw	r20,0(r19)
   50eb8:	a03fe41e 	bne	r20,zero,50e4c <__alt_data_end+0xfffd0e4c>
   50ebc:	dfc00a17 	ldw	ra,40(sp)
   50ec0:	df000917 	ldw	fp,36(sp)
   50ec4:	ddc00817 	ldw	r23,32(sp)
   50ec8:	dd800717 	ldw	r22,28(sp)
   50ecc:	dd400617 	ldw	r21,24(sp)
   50ed0:	dd000517 	ldw	r20,20(sp)
   50ed4:	dcc00417 	ldw	r19,16(sp)
   50ed8:	dc800317 	ldw	r18,12(sp)
   50edc:	dc400217 	ldw	r17,8(sp)
   50ee0:	dc000117 	ldw	r16,4(sp)
   50ee4:	dec00b04 	addi	sp,sp,44
   50ee8:	f800283a 	ret
   50eec:	a0800117 	ldw	r2,4(r20)
   50ef0:	80c00017 	ldw	r3,0(r16)
   50ef4:	10bfffc4 	addi	r2,r2,-1
   50ef8:	15c01426 	beq	r2,r23,50f4c <__call_exitprocs+0x154>
   50efc:	80000015 	stw	zero,0(r16)
   50f00:	183fde26 	beq	r3,zero,50e7c <__alt_data_end+0xfffd0e7c>
   50f04:	95c8983a 	sll	r4,r18,r23
   50f08:	a0806217 	ldw	r2,392(r20)
   50f0c:	a5800117 	ldw	r22,4(r20)
   50f10:	2084703a 	and	r2,r4,r2
   50f14:	10000b26 	beq	r2,zero,50f44 <__call_exitprocs+0x14c>
   50f18:	a0806317 	ldw	r2,396(r20)
   50f1c:	2088703a 	and	r4,r4,r2
   50f20:	20000c1e 	bne	r4,zero,50f54 <__call_exitprocs+0x15c>
   50f24:	89400017 	ldw	r5,0(r17)
   50f28:	d9000017 	ldw	r4,0(sp)
   50f2c:	183ee83a 	callr	r3
   50f30:	a0800117 	ldw	r2,4(r20)
   50f34:	15bfbf1e 	bne	r2,r22,50e34 <__alt_data_end+0xfffd0e34>
   50f38:	98800017 	ldw	r2,0(r19)
   50f3c:	153fcf26 	beq	r2,r20,50e7c <__alt_data_end+0xfffd0e7c>
   50f40:	003fbc06 	br	50e34 <__alt_data_end+0xfffd0e34>
   50f44:	183ee83a 	callr	r3
   50f48:	003ff906 	br	50f30 <__alt_data_end+0xfffd0f30>
   50f4c:	a5c00115 	stw	r23,4(r20)
   50f50:	003feb06 	br	50f00 <__alt_data_end+0xfffd0f00>
   50f54:	89000017 	ldw	r4,0(r17)
   50f58:	183ee83a 	callr	r3
   50f5c:	003ff406 	br	50f30 <__alt_data_end+0xfffd0f30>
   50f60:	a0800017 	ldw	r2,0(r20)
   50f64:	a027883a 	mov	r19,r20
   50f68:	1029883a 	mov	r20,r2
   50f6c:	003fb606 	br	50e48 <__alt_data_end+0xfffd0e48>
   50f70:	0005883a 	mov	r2,zero
   50f74:	003ffb06 	br	50f64 <__alt_data_end+0xfffd0f64>

00050f78 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   50f78:	defffd04 	addi	sp,sp,-12
   50f7c:	df000215 	stw	fp,8(sp)
   50f80:	df000204 	addi	fp,sp,8
   50f84:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   50f88:	0001883a 	nop
   50f8c:	e0bfff17 	ldw	r2,-4(fp)
   50f90:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   50f94:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   50f98:	10000226 	beq	r2,zero,50fa4 <_exit+0x2c>
    ALT_SIM_FAIL();
   50f9c:	002af070 	cmpltui	zero,zero,43969
   50fa0:	00000106 	br	50fa8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   50fa4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   50fa8:	003fff06 	br	50fa8 <__alt_data_end+0xfffd0fa8>
